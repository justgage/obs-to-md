Compiling 2 files (.ex)
\n\n LOOK HERE! : [%{extn: "md", file_name: "Journal VS Zettelkasten"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Folders V.S Tagging V.S Graphs V.S. MOCs"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Zettelkasten solves never reviewing notes"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922143823"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922144739"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922152141"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922152512"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Essentialism Visual Guide"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Essentialism, focusing energy"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 17"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Basecamp's notification system"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 39"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201012150328"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Never Interupt a programmer (image)"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201009143823"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Untitled recording.webm"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Speare--overview"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Speare--to-a-document"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Speare--revisions"}]
\n\n LOOK HERE! : [%{extn: "gif", file_name: "Speare--drag-to-insert"}]
\n\n LOOK HERE! : [%{extn: "gif", file_name: "Speare--sentence-splititng"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 4"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 5"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 6"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "BC4"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "BC4-MyPlace"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Folders"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Tagging"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Graph of Notes"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201026113815"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201007090920"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "CopyPasta"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201012151608"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 2"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Zettelkasten-items"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Zattelkasten-Boxes"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Litteriture Notes"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Reference Notes"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201020083722"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201020084234"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Twist topic flow"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200925153903"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200925155049"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Screen Recording 2020-10-21 at 01.40.13 PM.gif"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201021133903"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201021134328"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201021134412"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Obsidian -- markdown preview"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Obsidian--reference"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Obsidian--global-graph-view"}]
\n\n LOOK HERE! : [%{extn: "gif", file_name: "Obsidian--local-graph-view"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Obsidian--quick-switcher"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "How Andy's working notes works"}]
\n\n LOOK HERE! : [%{extn: "gif", file_name: "Andy's working notes -- pile up animation"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "BookStackRankOnStrategy"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201020092052"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Two Orthogonal Lines"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 19"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 42"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 18"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Orthogonal"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Github Projects"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Simplicity freaking matters"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "boyfriend-meme-HEY"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "chatroom-hamster-wheel"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 21"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923060038"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923060531"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923060549"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923062424"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923062534"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923062710"}]
\n\n LOOK HERE! : [%{extn: "gif", file_name: "1_YlhUzT9my2GmkaT_ma8qaQ"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 16"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 14"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Conversation-Overrun"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 22"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201020092456"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201020092443"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Kanban cards have to be defined heavily"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163419"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163424"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163430"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163434"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163442"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163448"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163455"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163504"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163510"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163518"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163522"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163529"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163537"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163547"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163552"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200922163558"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 27"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 28"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Slack-VS-Basecamp-DataStructure"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201009143823"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Data Availability"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Data Discoverability"}]
\n\n LOOK HERE! : [
  %{
    extn: "md",
    file_name: "Slack makes information Available but not Discoverable"
  }
]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20200923095224"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Nested Fixed Scope and Variable"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201019153417"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201019152445"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Pasted image 20201019152812"}]
\n\n LOOK HERE! : [%{extn: "md", file_name: "Screen Recording 2020-10-19 at 03.30.08 PM.gif"}]
\n\n LOOK HERE! : [
  %{
    extn: "md",
    file_name: " This is really easy in ReasonML. So long as the compiler errors make sense.\n3. Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.\n4. Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.\n5. No Imports! This takes a bit to get used to, and _can_ lead to some confusion initially, but with some good tooling this could be a huge strength. \n6. Less bugs in production!\n7. Expressing things via types like `Author(id) "
  }
]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Slack-Unthreaded-thread"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Twist Example"}]
\n\n LOOK HERE! : [%{extn: "png", file_name: "Basecamp Example"}]

10:45:07.116 [debug] l:len=

10:45:07.117 [debug] l:buf empty

10:45:07.117 [debug] l:len=

10:45:07.117 [debug] l:buf=239:<h1>quadrant 4</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.117 [debug] l:len=2

10:45:07.117 [debug] l:buf=39:<h1>quadrant 4</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.117 [debug] l:len=23

10:45:07.117 [debug] l:buf=9:<h1>quadrant 4</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.117 [debug] l:len=

10:45:07.117 [debug] l:buf empty

10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf=1085:<p>Carnegie Mellon stops teaching OO in favor of FP</p>
<blockquote>
<p>Our goal at Carnegie is provide students with an education, not training. There are plenty of opportunities for them to learn the old ways, and to pick up industry practices on the fly. My department head recently had a meeting with the (very many) Carnegie alums working as developers at Facebook, and they overwhelmingly said that one of the three most important courses for them was my course on functional programming. The reason? Because they learned there how to think abstractly, and learned what the code “should be”, and then used this as a model for working with the code “as it is”. They cited their ability as giving them an overwhelming advantage over the other developers with whom they work. So, no, I have no regrets, and I firmly believe we are doing the right thing by our students.</p>
</blockquote>
<p><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a>, <a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></p>


10:45:07.118 [debug] l:len=1

10:45:07.118 [debug] l:buf=085:<p>Carnegie Mellon stops teaching OO in favor of FP</p>
<blockquote>
<p>Our goal at Carnegie is provide students with an education, not training. There are plenty of opportunities for them to learn the old ways, and to pick up industry practices on the fly. My department head recently had a meeting with the (very many) Carnegie alums working as developers at Facebook, and they overwhelmingly said that one of the three most important courses for them was my course on functional programming. The reason? Because they learned there how to think abstractly, and learned what the code “should be”, and then used this as a model for working with the code “as it is”. They cited their ability as giving them an overwhelming advantage over the other developers with whom they work. So, no, I have no regrets, and I firmly believe we are doing the right thing by our students.</p>
</blockquote>
<p><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a>, <a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></p>


10:45:07.118 [debug] l:len=10

10:45:07.118 [debug] l:buf=85:<p>Carnegie Mellon stops teaching OO in favor of FP</p>
<blockquote>
<p>Our goal at Carnegie is provide students with an education, not training. There are plenty of opportunities for them to learn the old ways, and to pick up industry practices on the fly. My department head recently had a meeting with the (very many) Carnegie alums working as developers at Facebook, and they overwhelmingly said that one of the three most important courses for them was my course on functional programming. The reason? Because they learned there how to think abstractly, and learned what the code “should be”, and then used this as a model for working with the code “as it is”. They cited their ability as giving them an overwhelming advantage over the other developers with whom they work. So, no, I have no regrets, and I firmly believe we are doing the right thing by our students.</p>
</blockquote>
<p><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a>, <a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></p>


10:45:07.118 [debug] l:len=108

10:45:07.118 [debug] l:buf=5:<p>Carnegie Mellon stops teaching OO in favor of FP</p>
<blockquote>
<p>Our goal at Carnegie is provide students with an education, not training. There are plenty of opportunities for them to learn the old ways, and to pick up industry practices on the fly. My department head recently had a meeting with the (very many) Carnegie alums working as developers at Facebook, and they overwhelmingly said that one of the three most important courses for them was my course on functional programming. The reason? Because they learned there how to think abstractly, and learned what the code “should be”, and then used this as a model for working with the code “as it is”. They cited their ability as giving them an overwhelming advantage over the other developers with whom they work. So, no, I have no regrets, and I firmly believe we are doing the right thing by our students.</p>
</blockquote>
<p><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a>, <a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></p>


10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf empty

10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf=244:<h1>Obsidian--local-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.118 [debug] l:len=2

10:45:07.118 [debug] l:buf=44:<h1>Obsidian--local-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.118 [debug] l:len=24

10:45:07.118 [debug] l:buf=4:<h1>Obsidian--local-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf empty

10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf=235:<h1>Habits MOC - Unifying Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.118 [debug] l:len=2

10:45:07.118 [debug] l:buf=35:<h1>Habits MOC - Unifying Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.118 [debug] l:len=23

10:45:07.118 [debug] l:buf=5:<h1>Habits MOC - Unifying Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.118 [debug] l:len=

10:45:07.118 [debug] l:buf empty

10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf=711:<h1>Products that don't take a stand</h1>
<p>In product development you have to take a stand or else you'll just except every little customer request and you'll eventually just be a <a href="http://localhost:5000/jack-of-all-trades,-master-of-none" rel="noopener noreferrer">jack of all trades, master of none</a>.</p>
<p>A great example of this is <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a>, they are 100% driven by what their customers require. Their product becomes overly <a href="http://localhost:5000/complexity" rel="noopener noreferrer">complex</a> because of <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that this causes.</p>


10:45:07.119 [debug] l:len=7

10:45:07.119 [debug] l:buf=11:<h1>Products that don't take a stand</h1>
<p>In product development you have to take a stand or else you'll just except every little customer request and you'll eventually just be a <a href="http://localhost:5000/jack-of-all-trades,-master-of-none" rel="noopener noreferrer">jack of all trades, master of none</a>.</p>
<p>A great example of this is <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a>, they are 100% driven by what their customers require. Their product becomes overly <a href="http://localhost:5000/complexity" rel="noopener noreferrer">complex</a> because of <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that this causes.</p>


10:45:07.119 [debug] l:len=71

10:45:07.119 [debug] l:buf=1:<h1>Products that don't take a stand</h1>
<p>In product development you have to take a stand or else you'll just except every little customer request and you'll eventually just be a <a href="http://localhost:5000/jack-of-all-trades,-master-of-none" rel="noopener noreferrer">jack of all trades, master of none</a>.</p>
<p>A great example of this is <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a>, they are 100% driven by what their customers require. Their product becomes overly <a href="http://localhost:5000/complexity" rel="noopener noreferrer">complex</a> because of <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that this causes.</p>


10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf empty

10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf=292:<h1>Christ can be the mediator</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.119 [debug] l:len=2

10:45:07.119 [debug] l:buf=92:<h1>Christ can be the mediator</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.119 [debug] l:len=29

10:45:07.119 [debug] l:buf=2:<h1>Christ can be the mediator</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf empty

10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf=225:<h1>Waterfall</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.119 [debug] l:len=2

10:45:07.119 [debug] l:buf=25:<h1>Waterfall</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.119 [debug] l:len=22

10:45:07.119 [debug] l:buf=5:<h1>Waterfall</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.119 [debug] l:len=

10:45:07.119 [debug] l:buf empty

10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf=2295:<h1>99 bottles notes and quotes</h1>
<blockquote>
<p>"good code not only works, but is also simple, understandable, expressive and changeable."</p>
</blockquote>
<blockquote>
<p>"good code can also be defined simply, and somewhat circularly, as that which provides the <strong>highest value for the lowest cost"</strong></p>
</blockquote>
<blockquote>
<p>"Code that is easy to understand and a pleasure to extend naturally feels simple and elegant."</p>
</blockquote>
<blockquote>
<p>"In his paper, McCabe describes his Cyclomatic Complexity metric, an algorithm that counts the number of <strong>unique execution paths through a body of source code. "</strong></p>
</blockquote>
<blockquote>
<p>"A method with many deeply nested conditionals would score very high, while a method with no conditionals at all would score 0."</p>
</blockquote>
<blockquote>
<p>"Cyclomatic complexity does not predict application development time nor does it measure programmer productivity. <strong>Its desire to identify code that is difficult to test or maintain aims it directly at code quality."</strong></p>
</blockquote>
<blockquote>
<p>"Speculatively General is the second longest solution, and has the second highest Flog and Worst Bit scores. Its length and complexity reflect an attempt to arrange the code such that certain imagined changes will be easy, i.e. to guess the future. <strong>These guesses are unlikely to pay off and relative to the other solutions, Speculatively General is both longer and more complex than necessary."</strong></p>
</blockquote>
<blockquote>
<p>"Shameless Green is defined as the solution which quickly reaches green while prioritizing understandability over changeability. It uses tests to drive comprehension, and patiently accumulates concrete examples while awaiting insight into underlying abstractions. It doesn’t dispute that DRY is good, rather it believes that it is cheaper to manage temporary duplication than to recover from incorrect abstractions."</p>
</blockquote>
<blockquote>
<p>"The challenge comes when a change request arrives. Code that’s good enough when nothing ever changes may well be code that’s not good enough when things do."</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
</ul>


10:45:07.120 [debug] l:len=2

10:45:07.120 [debug] l:buf=295:<h1>99 bottles notes and quotes</h1>
<blockquote>
<p>"good code not only works, but is also simple, understandable, expressive and changeable."</p>
</blockquote>
<blockquote>
<p>"good code can also be defined simply, and somewhat circularly, as that which provides the <strong>highest value for the lowest cost"</strong></p>
</blockquote>
<blockquote>
<p>"Code that is easy to understand and a pleasure to extend naturally feels simple and elegant."</p>
</blockquote>
<blockquote>
<p>"In his paper, McCabe describes his Cyclomatic Complexity metric, an algorithm that counts the number of <strong>unique execution paths through a body of source code. "</strong></p>
</blockquote>
<blockquote>
<p>"A method with many deeply nested conditionals would score very high, while a method with no conditionals at all would score 0."</p>
</blockquote>
<blockquote>
<p>"Cyclomatic complexity does not predict application development time nor does it measure programmer productivity. <strong>Its desire to identify code that is difficult to test or maintain aims it directly at code quality."</strong></p>
</blockquote>
<blockquote>
<p>"Speculatively General is the second longest solution, and has the second highest Flog and Worst Bit scores. Its length and complexity reflect an attempt to arrange the code such that certain imagined changes will be easy, i.e. to guess the future. <strong>These guesses are unlikely to pay off and relative to the other solutions, Speculatively General is both longer and more complex than necessary."</strong></p>
</blockquote>
<blockquote>
<p>"Shameless Green is defined as the solution which quickly reaches green while prioritizing understandability over changeability. It uses tests to drive comprehension, and patiently accumulates concrete examples while awaiting insight into underlying abstractions. It doesn’t dispute that DRY is good, rather it believes that it is cheaper to manage temporary duplication than to recover from incorrect abstractions."</p>
</blockquote>
<blockquote>
<p>"The challenge comes when a change request arrives. Code that’s good enough when nothing ever changes may well be code that’s not good enough when things do."</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
</ul>


10:45:07.120 [debug] l:len=22

10:45:07.120 [debug] l:buf=95:<h1>99 bottles notes and quotes</h1>
<blockquote>
<p>"good code not only works, but is also simple, understandable, expressive and changeable."</p>
</blockquote>
<blockquote>
<p>"good code can also be defined simply, and somewhat circularly, as that which provides the <strong>highest value for the lowest cost"</strong></p>
</blockquote>
<blockquote>
<p>"Code that is easy to understand and a pleasure to extend naturally feels simple and elegant."</p>
</blockquote>
<blockquote>
<p>"In his paper, McCabe describes his Cyclomatic Complexity metric, an algorithm that counts the number of <strong>unique execution paths through a body of source code. "</strong></p>
</blockquote>
<blockquote>
<p>"A method with many deeply nested conditionals would score very high, while a method with no conditionals at all would score 0."</p>
</blockquote>
<blockquote>
<p>"Cyclomatic complexity does not predict application development time nor does it measure programmer productivity. <strong>Its desire to identify code that is difficult to test or maintain aims it directly at code quality."</strong></p>
</blockquote>
<blockquote>
<p>"Speculatively General is the second longest solution, and has the second highest Flog and Worst Bit scores. Its length and complexity reflect an attempt to arrange the code such that certain imagined changes will be easy, i.e. to guess the future. <strong>These guesses are unlikely to pay off and relative to the other solutions, Speculatively General is both longer and more complex than necessary."</strong></p>
</blockquote>
<blockquote>
<p>"Shameless Green is defined as the solution which quickly reaches green while prioritizing understandability over changeability. It uses tests to drive comprehension, and patiently accumulates concrete examples while awaiting insight into underlying abstractions. It doesn’t dispute that DRY is good, rather it believes that it is cheaper to manage temporary duplication than to recover from incorrect abstractions."</p>
</blockquote>
<blockquote>
<p>"The challenge comes when a change request arrives. Code that’s good enough when nothing ever changes may well be code that’s not good enough when things do."</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
</ul>


10:45:07.120 [debug] l:len=229

10:45:07.120 [debug] l:buf=5:<h1>99 bottles notes and quotes</h1>
<blockquote>
<p>"good code not only works, but is also simple, understandable, expressive and changeable."</p>
</blockquote>
<blockquote>
<p>"good code can also be defined simply, and somewhat circularly, as that which provides the <strong>highest value for the lowest cost"</strong></p>
</blockquote>
<blockquote>
<p>"Code that is easy to understand and a pleasure to extend naturally feels simple and elegant."</p>
</blockquote>
<blockquote>
<p>"In his paper, McCabe describes his Cyclomatic Complexity metric, an algorithm that counts the number of <strong>unique execution paths through a body of source code. "</strong></p>
</blockquote>
<blockquote>
<p>"A method with many deeply nested conditionals would score very high, while a method with no conditionals at all would score 0."</p>
</blockquote>
<blockquote>
<p>"Cyclomatic complexity does not predict application development time nor does it measure programmer productivity. <strong>Its desire to identify code that is difficult to test or maintain aims it directly at code quality."</strong></p>
</blockquote>
<blockquote>
<p>"Speculatively General is the second longest solution, and has the second highest Flog and Worst Bit scores. Its length and complexity reflect an attempt to arrange the code such that certain imagined changes will be easy, i.e. to guess the future. <strong>These guesses are unlikely to pay off and relative to the other solutions, Speculatively General is both longer and more complex than necessary."</strong></p>
</blockquote>
<blockquote>
<p>"Shameless Green is defined as the solution which quickly reaches green while prioritizing understandability over changeability. It uses tests to drive comprehension, and patiently accumulates concrete examples while awaiting insight into underlying abstractions. It doesn’t dispute that DRY is good, rather it believes that it is cheaper to manage temporary duplication than to recover from incorrect abstractions."</p>
</blockquote>
<blockquote>
<p>"The challenge comes when a change request arrives. Code that’s good enough when nothing ever changes may well be code that’s not good enough when things do."</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
</ul>


10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf empty

10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf=654:<h1>✏️ to a Neanderthal</h1>
<h1>:pencil2: to a Neanderthal</h1>
<p>It’s like me handing a pencil to a Neanderthal and the Neanderthal asking “That’s it? This little stick is what allows you to communicate through space and time with other human beings and remember things forever?”</p>
<p><a href="http://localhost:5000/writing" rel="noopener noreferrer">Writing</a></p>
<p>Ref: <a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>


10:45:07.120 [debug] l:len=6

10:45:07.120 [debug] l:buf=54:<h1>✏️ to a Neanderthal</h1>
<h1>:pencil2: to a Neanderthal</h1>
<p>It’s like me handing a pencil to a Neanderthal and the Neanderthal asking “That’s it? This little stick is what allows you to communicate through space and time with other human beings and remember things forever?”</p>
<p><a href="http://localhost:5000/writing" rel="noopener noreferrer">Writing</a></p>
<p>Ref: <a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>


10:45:07.120 [debug] l:len=65

10:45:07.120 [debug] l:buf=4:<h1>✏️ to a Neanderthal</h1>
<h1>:pencil2: to a Neanderthal</h1>
<p>It’s like me handing a pencil to a Neanderthal and the Neanderthal asking “That’s it? This little stick is what allows you to communicate through space and time with other human beings and remember things forever?”</p>
<p><a href="http://localhost:5000/writing" rel="noopener noreferrer">Writing</a></p>
<p>Ref: <a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>


10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf empty

10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf=281:<h1>Synergize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.120 [debug] l:len=2

10:45:07.120 [debug] l:buf=81:<h1>Synergize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.120 [debug] l:len=28

10:45:07.120 [debug] l:buf=1:<h1>Synergize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.120 [debug] l:len=

10:45:07.120 [debug] l:buf empty

10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf=778:<h1>2020-08-28</h1>
<p>I can't sleep. I think it's related to just having too much stuff in my head. Don't know what to do about that except write.</p>
<p>What do I do?</p>
<p>Main things that are bothering me or on my mind:</p>
<ul>
<li>I write a lot but don't share any stuff</li>
<li>Waste too much time in Obsidian</li>
<li>I kind of feel like we're in an <a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li>Not really enjoying Day One right now, due to the above</li>
<li>I'm afraid that some thing is going to blow up in my face related to <a href="http://localhost:5000/murphy's-hawaii-neigbors-are-selling-their-home" rel="noopener noreferrer">Murphy's Hawaii neigbors are selling their home</a></li>
<li></li>
</ul>


10:45:07.121 [debug] l:len=7

10:45:07.121 [debug] l:buf=78:<h1>2020-08-28</h1>
<p>I can't sleep. I think it's related to just having too much stuff in my head. Don't know what to do about that except write.</p>
<p>What do I do?</p>
<p>Main things that are bothering me or on my mind:</p>
<ul>
<li>I write a lot but don't share any stuff</li>
<li>Waste too much time in Obsidian</li>
<li>I kind of feel like we're in an <a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li>Not really enjoying Day One right now, due to the above</li>
<li>I'm afraid that some thing is going to blow up in my face related to <a href="http://localhost:5000/murphy's-hawaii-neigbors-are-selling-their-home" rel="noopener noreferrer">Murphy's Hawaii neigbors are selling their home</a></li>
<li></li>
</ul>


10:45:07.121 [debug] l:len=77

10:45:07.121 [debug] l:buf=8:<h1>2020-08-28</h1>
<p>I can't sleep. I think it's related to just having too much stuff in my head. Don't know what to do about that except write.</p>
<p>What do I do?</p>
<p>Main things that are bothering me or on my mind:</p>
<ul>
<li>I write a lot but don't share any stuff</li>
<li>Waste too much time in Obsidian</li>
<li>I kind of feel like we're in an <a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li>Not really enjoying Day One right now, due to the above</li>
<li>I'm afraid that some thing is going to blow up in my face related to <a href="http://localhost:5000/murphy's-hawaii-neigbors-are-selling-their-home" rel="noopener noreferrer">Murphy's Hawaii neigbors are selling their home</a></li>
<li></li>
</ul>


10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf empty

10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf=84:<h1>Untitled 3</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.121 [debug] l:len=8

10:45:07.121 [debug] l:buf=4:<h1>Untitled 3</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf empty

10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf=606:<p>a brand is the result of doing the same thing over and over.</p>
<p>If you want to obtain the advantages of a good brand, or avoid the disadvantage of a bad reputation, look at the individual actions that get repeated.</p>
<p><a href="https://twitter.com/rjs/status/1275178217809121281?s=20" rel="noopener noreferrer">https://twitter.com/rjs/status/1275178217809121281?s=20</a></p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.121 [debug] l:len=6

10:45:07.121 [debug] l:buf=06:<p>a brand is the result of doing the same thing over and over.</p>
<p>If you want to obtain the advantages of a good brand, or avoid the disadvantage of a bad reputation, look at the individual actions that get repeated.</p>
<p><a href="https://twitter.com/rjs/status/1275178217809121281?s=20" rel="noopener noreferrer">https://twitter.com/rjs/status/1275178217809121281?s=20</a></p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.121 [debug] l:len=60

10:45:07.121 [debug] l:buf=6:<p>a brand is the result of doing the same thing over and over.</p>
<p>If you want to obtain the advantages of a good brand, or avoid the disadvantage of a bad reputation, look at the individual actions that get repeated.</p>
<p><a href="https://twitter.com/rjs/status/1275178217809121281?s=20" rel="noopener noreferrer">https://twitter.com/rjs/status/1275178217809121281?s=20</a></p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf empty

10:45:07.121 [debug] l:len=

10:45:07.121 [debug] l:buf=251:<h1>signposts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.121 [debug] l:len=2

10:45:07.121 [debug] l:buf=51:<h1>signposts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.121 [debug] l:len=25

10:45:07.121 [debug] l:buf=1:<h1>signposts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.122 [debug] l:len=

10:45:07.122 [debug] l:buf empty

10:45:07.122 [debug] l:len=

10:45:07.122 [debug] l:buf=315:<p>How to teach a good <a href="http://localhost:5000/pornography" rel="noopener noreferrer">pornography</a> lesson</p>
<p>Don't focus on the bad and personal experiences it only drives away the spirit</p>
<p>Do focus <a href="http://localhost:5000/christ's-grace" rel="noopener noreferrer">Christ's grace</a>.</p>


10:45:07.122 [debug] l:len=3

10:45:07.122 [debug] l:buf=15:<p>How to teach a good <a href="http://localhost:5000/pornography" rel="noopener noreferrer">pornography</a> lesson</p>
<p>Don't focus on the bad and personal experiences it only drives away the spirit</p>
<p>Do focus <a href="http://localhost:5000/christ's-grace" rel="noopener noreferrer">Christ's grace</a>.</p>


10:45:07.122 [debug] l:len=31

10:45:07.122 [debug] l:buf=5:<p>How to teach a good <a href="http://localhost:5000/pornography" rel="noopener noreferrer">pornography</a> lesson</p>
<p>Don't focus on the bad and personal experiences it only drives away the spirit</p>
<p>Do focus <a href="http://localhost:5000/christ's-grace" rel="noopener noreferrer">Christ's grace</a>.</p>


10:45:07.122 [debug] l:len=

10:45:07.122 [debug] l:buf empty

10:45:07.123 [debug] l:len=

10:45:07.123 [debug] l:buf=8391:<h1>Zettelkasten</h1>
<p>The zettelkasten (German: "slip box") is a knowledge management and note-taking method used in research and study.</p>
<blockquote>
<p>Niklas Luhmann built up a zettelkasten of some 90,000 index cards for his research, and credited it for enabling his extraordinarily prolific writing (including over <strong>70 books</strong> and <strong>400 scholarly articles</strong>).</p>
</blockquote>
<p>Reference: <a href="https://en.wikipedia.org/wiki/Zettelkasten" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Zettelkasten</a></p>
<h2>Links</h2>
<h3>Why Zettelkasten:</h3>
<hr>
<h2><a href="http://localhost:5000/journal-vs-zettelkasten.md" rel="noopener noreferrer">Journal VS Zettelkasten</a> ⤴</h2>
<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs.md" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a> ⤴</h2>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<p><img src="http://localhost:5000/folders.png" alt="Folders"></p>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<p><img src="http://localhost:5000/tagging.png" alt="Tagging"></p>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<p><img src="http://localhost:5000/graph-of-notes.png" alt="Graph of Notes"></p>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-solves-never-reviewing-notes.md" rel="noopener noreferrer">Zettelkasten solves never reviewing notes</a> ⤴</h2>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<ul>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
</ul>
<h3>Learning References:</h3>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>
<h3>Pro-tips</h3>
<ul>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/knowledge,-innovation,-value-and-wisdom" rel="noopener noreferrer">Knowledge, Innovation, Value and Wisdom</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>
<h3>Other:</h3>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note- (truncated)

10:45:07.123 [debug] l:len=8

10:45:07.123 [debug] l:buf=391:<h1>Zettelkasten</h1>
<p>The zettelkasten (German: "slip box") is a knowledge management and note-taking method used in research and study.</p>
<blockquote>
<p>Niklas Luhmann built up a zettelkasten of some 90,000 index cards for his research, and credited it for enabling his extraordinarily prolific writing (including over <strong>70 books</strong> and <strong>400 scholarly articles</strong>).</p>
</blockquote>
<p>Reference: <a href="https://en.wikipedia.org/wiki/Zettelkasten" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Zettelkasten</a></p>
<h2>Links</h2>
<h3>Why Zettelkasten:</h3>
<hr>
<h2><a href="http://localhost:5000/journal-vs-zettelkasten.md" rel="noopener noreferrer">Journal VS Zettelkasten</a> ⤴</h2>
<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs.md" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a> ⤴</h2>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<p><img src="http://localhost:5000/folders.png" alt="Folders"></p>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<p><img src="http://localhost:5000/tagging.png" alt="Tagging"></p>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<p><img src="http://localhost:5000/graph-of-notes.png" alt="Graph of Notes"></p>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-solves-never-reviewing-notes.md" rel="noopener noreferrer">Zettelkasten solves never reviewing notes</a> ⤴</h2>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<ul>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
</ul>
<h3>Learning References:</h3>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>
<h3>Pro-tips</h3>
<ul>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/knowledge,-innovation,-value-and-wisdom" rel="noopener noreferrer">Knowledge, Innovation, Value and Wisdom</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>
<h3>Other:</h3>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-t (truncated)

10:45:07.123 [debug] l:len=83

10:45:07.123 [debug] l:buf=91:<h1>Zettelkasten</h1>
<p>The zettelkasten (German: "slip box") is a knowledge management and note-taking method used in research and study.</p>
<blockquote>
<p>Niklas Luhmann built up a zettelkasten of some 90,000 index cards for his research, and credited it for enabling his extraordinarily prolific writing (including over <strong>70 books</strong> and <strong>400 scholarly articles</strong>).</p>
</blockquote>
<p>Reference: <a href="https://en.wikipedia.org/wiki/Zettelkasten" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Zettelkasten</a></p>
<h2>Links</h2>
<h3>Why Zettelkasten:</h3>
<hr>
<h2><a href="http://localhost:5000/journal-vs-zettelkasten.md" rel="noopener noreferrer">Journal VS Zettelkasten</a> ⤴</h2>
<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs.md" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a> ⤴</h2>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<p><img src="http://localhost:5000/folders.png" alt="Folders"></p>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<p><img src="http://localhost:5000/tagging.png" alt="Tagging"></p>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<p><img src="http://localhost:5000/graph-of-notes.png" alt="Graph of Notes"></p>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-solves-never-reviewing-notes.md" rel="noopener noreferrer">Zettelkasten solves never reviewing notes</a> ⤴</h2>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<ul>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
</ul>
<h3>Learning References:</h3>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>
<h3>Pro-tips</h3>
<ul>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/knowledge,-innovation,-value-and-wisdom" rel="noopener noreferrer">Knowledge, Innovation, Value and Wisdom</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>
<h3>Other:</h3>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-ta (truncated)

10:45:07.123 [debug] l:len=839

10:45:07.123 [debug] l:buf=1:<h1>Zettelkasten</h1>
<p>The zettelkasten (German: "slip box") is a knowledge management and note-taking method used in research and study.</p>
<blockquote>
<p>Niklas Luhmann built up a zettelkasten of some 90,000 index cards for his research, and credited it for enabling his extraordinarily prolific writing (including over <strong>70 books</strong> and <strong>400 scholarly articles</strong>).</p>
</blockquote>
<p>Reference: <a href="https://en.wikipedia.org/wiki/Zettelkasten" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Zettelkasten</a></p>
<h2>Links</h2>
<h3>Why Zettelkasten:</h3>
<hr>
<h2><a href="http://localhost:5000/journal-vs-zettelkasten.md" rel="noopener noreferrer">Journal VS Zettelkasten</a> ⤴</h2>
<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs.md" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a> ⤴</h2>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<p><img src="http://localhost:5000/folders.png" alt="Folders"></p>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<p><img src="http://localhost:5000/tagging.png" alt="Tagging"></p>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<p><img src="http://localhost:5000/graph-of-notes.png" alt="Graph of Notes"></p>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-solves-never-reviewing-notes.md" rel="noopener noreferrer">Zettelkasten solves never reviewing notes</a> ⤴</h2>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<ul>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
</ul>
<h3>Learning References:</h3>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>
<h3>Pro-tips</h3>
<ul>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/knowledge,-innovation,-value-and-wisdom" rel="noopener noreferrer">Knowledge, Innovation, Value and Wisdom</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>
<h3>Other:</h3>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/never-delete-notes-from-your-zettelkasten" rel="noopener noreferrer">Never delete notes from your Zettelkasten</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
<li><a href="http://localhost:5000/youtube--this-note-tak (truncated)

10:45:07.123 [debug] l:len=

10:45:07.123 [debug] l:buf empty

10:45:07.123 [debug] l:len=

10:45:07.123 [debug] l:buf=297:<h1>Data Structures</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.123 [debug] l:len=2

10:45:07.123 [debug] l:buf=97:<h1>Data Structures</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.123 [debug] l:len=29

10:45:07.123 [debug] l:buf=7:<h1>Data Structures</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.123 [debug] l:len=

10:45:07.123 [debug] l:buf empty

10:45:07.124 [debug] l:len=

10:45:07.124 [debug] l:buf=798:<h1>Testing out Emails with Cypress</h1>
<p>They use <a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a> and this app called <a href="https://github.com/mailhog/MailHog" rel="noopener noreferrer">Mailhog</a> which allows you to hit an API and get the emails that have been sent to it
ref: <a href="https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress" rel="noopener noreferrer">https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress</a></p>
<p>Keywords: <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>, <a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a>, <a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></p>


10:45:07.124 [debug] l:len=7

10:45:07.124 [debug] l:buf=98:<h1>Testing out Emails with Cypress</h1>
<p>They use <a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a> and this app called <a href="https://github.com/mailhog/MailHog" rel="noopener noreferrer">Mailhog</a> which allows you to hit an API and get the emails that have been sent to it
ref: <a href="https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress" rel="noopener noreferrer">https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress</a></p>
<p>Keywords: <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>, <a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a>, <a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></p>


10:45:07.124 [debug] l:len=79

10:45:07.124 [debug] l:buf=8:<h1>Testing out Emails with Cypress</h1>
<p>They use <a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a> and this app called <a href="https://github.com/mailhog/MailHog" rel="noopener noreferrer">Mailhog</a> which allows you to hit an API and get the emails that have been sent to it
ref: <a href="https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress" rel="noopener noreferrer">https://humble.dev/testing-an-email-workflow-from-end-to-end-with-cypress</a></p>
<p>Keywords: <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>, <a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a>, <a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></p>


10:45:07.124 [debug] l:len=

10:45:07.124 [debug] l:buf empty

10:45:07.124 [debug] l:len=

10:45:07.124 [debug] l:buf=77:<h1>blogpost</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.124 [debug] l:len=7

10:45:07.124 [debug] l:buf=7:<h1>blogpost</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.124 [debug] l:len=

10:45:07.124 [debug] l:buf empty

10:45:07.124 [debug] l:len=

10:45:07.124 [debug] l:buf=371:<h1>Drudge Report Design</h1>
<p><a href="https://m.signalvnoise.com/?s=three+column+design" rel="noopener noreferrer">https://m.signalvnoise.com/?s=three+column+design</a></p>
<p>Written By <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.124 [debug] l:len=3

10:45:07.124 [debug] l:buf=71:<h1>Drudge Report Design</h1>
<p><a href="https://m.signalvnoise.com/?s=three+column+design" rel="noopener noreferrer">https://m.signalvnoise.com/?s=three+column+design</a></p>
<p>Written By <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.124 [debug] l:len=37

10:45:07.124 [debug] l:buf=1:<h1>Drudge Report Design</h1>
<p><a href="https://m.signalvnoise.com/?s=three+column+design" rel="noopener noreferrer">https://m.signalvnoise.com/?s=three+column+design</a></p>
<p>Written By <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.125 [debug] l:len=

10:45:07.125 [debug] l:buf empty

10:45:07.125 [debug] l:len=

10:45:07.125 [debug] l:buf=71:<h1>Demand side thinking is scratching your own itch</h1>
<p>#jtbd</p>


10:45:07.125 [debug] l:len=7

10:45:07.125 [debug] l:buf=1:<h1>Demand side thinking is scratching your own itch</h1>
<p>#jtbd</p>


10:45:07.125 [debug] l:len=

10:45:07.125 [debug] l:buf empty

10:45:07.125 [debug] l:len=

10:45:07.125 [debug] l:buf=77:<h1>Humility</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.125 [debug] l:len=7

10:45:07.125 [debug] l:buf=7:<h1>Humility</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.125 [debug] l:len=

10:45:07.125 [debug] l:buf empty

10:45:07.126 [debug] l:len=

10:45:07.126 [debug] l:buf=5356:<h1>How JSON decoders work</h1>
<p>JSON decoders are perhaps a huge stumbling block for beginners. They are extremely unintuitive for many including myself (at first). Anything beyond the one level map would totally trip me up. Let's see what they are.</p>
<h1>The problem they solve</h1>
<p>The main thing that JSON decoders solve is the fact that when Elm gets data from an external source that data can <strong>technically be anything</strong>. We usually want it to be in one format but there's nothing stopping JavaScript from just sending "💩" emojis.</p>
<p>Elm is statically typed, meaning all the types have to be known as compile time, not at runtime when JS pulls out the emoji keyboard at an inconvenient time. So what if we want <code>{"id": 2}</code> but JavaScript sends <code>{"id": null }</code>? That's not even close to what we want! It's null not an int! Normally in JavaScript we would just find out later when we try to use that in an HTTP request or something, in Elm we don't have runtime exceptions and we don't have null so we have to tell JS (or any external source) that we just won't stand for that behavior (in a nice way</p>
<h1>Two black boxes</h1>
<p>So I think most of the confusion for me is the fact that we have not just one but two types that you can't totally see into. One being a "decoder" one being</p>
<h1>My "simple" JSON, and how to decode it</h1>
<p>This is the process I went through to Decode this:</p>
<pre><code>{"action" : Action} OR {"action": Action, "error": "I can't do this because..."}
</code></pre>
<p>This <em>appears</em> simple however it's quite tricky because I essentially have two different states that are differentiated only by "error"'s <em>presense</em>. This really isn't too crazy but it does make it a bit more difficult and extends past the safe boundaries of <code>Json.Decode.Pipeline</code></p>
<pre><code>
λ ~/code/rapidash/ master* elm repl
---- elm-repl 0.18.0 -----------------------------------------------------------
 :help for help, :exit to exit, more at &lt;https://github.com/elm-lang/elm-repl&gt;
--------------------------------------------------------------------------------
&gt; :help
General usage directions: &lt;https://github.com/elm-lang/elm-repl#elm-repl&gt;
Additional commands available from the prompt:

  :help			List available commands
  :flags		Manipulate flags sent to elm compiler
  :reset		Clears all previous imports
  :exit			Exits elm-repl

&gt; import Json.Decode exposing (..)
&gt; decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds = decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds (field "a" int) """{"a": 2}"""
Ok 2 : Result.Result String Int
&gt; ds (field "a" string) """{"a": 2}"""
Err "Expecting a String at _.a but instead got: 2" : Result.Result String String
&gt; ds (field "a" string) """{"a": "asdf"}"""
Ok "asdf" : Result.Result String String
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen (\ str -&gt; suceed str)
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `suceed`

4|   andThen (\ str -&gt; suceed str)
                       ==^^==
Maybe you want one of the following?

    succeed
    Json.Decode.succeed


&gt; andThen (\ str -&gt; succeed str)
&lt;function&gt; : Json.Decode.Decoder a -&gt; Json.Decode.Decoder a
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `Decode.string`.

3| actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
                                                                                               ==^^====^^==^
No module called `Decode` has been imported.


&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder String
&gt; type Action = Foo | Bar
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed Foo else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "asdf"}"""
Err "I ran into a `fail` decoder at _.a: was not foo"
    : Result.Result String Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "foo"}"""
Ok Foo : Result.Result String Repl.Action

</code></pre>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>#tutorials</li>
</ul>


10:45:07.126 [debug] l:len=5

10:45:07.126 [debug] l:buf=356:<h1>How JSON decoders work</h1>
<p>JSON decoders are perhaps a huge stumbling block for beginners. They are extremely unintuitive for many including myself (at first). Anything beyond the one level map would totally trip me up. Let's see what they are.</p>
<h1>The problem they solve</h1>
<p>The main thing that JSON decoders solve is the fact that when Elm gets data from an external source that data can <strong>technically be anything</strong>. We usually want it to be in one format but there's nothing stopping JavaScript from just sending "💩" emojis.</p>
<p>Elm is statically typed, meaning all the types have to be known as compile time, not at runtime when JS pulls out the emoji keyboard at an inconvenient time. So what if we want <code>{"id": 2}</code> but JavaScript sends <code>{"id": null }</code>? That's not even close to what we want! It's null not an int! Normally in JavaScript we would just find out later when we try to use that in an HTTP request or something, in Elm we don't have runtime exceptions and we don't have null so we have to tell JS (or any external source) that we just won't stand for that behavior (in a nice way</p>
<h1>Two black boxes</h1>
<p>So I think most of the confusion for me is the fact that we have not just one but two types that you can't totally see into. One being a "decoder" one being</p>
<h1>My "simple" JSON, and how to decode it</h1>
<p>This is the process I went through to Decode this:</p>
<pre><code>{"action" : Action} OR {"action": Action, "error": "I can't do this because..."}
</code></pre>
<p>This <em>appears</em> simple however it's quite tricky because I essentially have two different states that are differentiated only by "error"'s <em>presense</em>. This really isn't too crazy but it does make it a bit more difficult and extends past the safe boundaries of <code>Json.Decode.Pipeline</code></p>
<pre><code>
λ ~/code/rapidash/ master* elm repl
---- elm-repl 0.18.0 -----------------------------------------------------------
 :help for help, :exit to exit, more at &lt;https://github.com/elm-lang/elm-repl&gt;
--------------------------------------------------------------------------------
&gt; :help
General usage directions: &lt;https://github.com/elm-lang/elm-repl#elm-repl&gt;
Additional commands available from the prompt:

  :help			List available commands
  :flags		Manipulate flags sent to elm compiler
  :reset		Clears all previous imports
  :exit			Exits elm-repl

&gt; import Json.Decode exposing (..)
&gt; decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds = decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds (field "a" int) """{"a": 2}"""
Ok 2 : Result.Result String Int
&gt; ds (field "a" string) """{"a": 2}"""
Err "Expecting a String at _.a but instead got: 2" : Result.Result String String
&gt; ds (field "a" string) """{"a": "asdf"}"""
Ok "asdf" : Result.Result String String
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen (\ str -&gt; suceed str)
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `suceed`

4|   andThen (\ str -&gt; suceed str)
                       ==^^==
Maybe you want one of the following?

    succeed
    Json.Decode.succeed


&gt; andThen (\ str -&gt; succeed str)
&lt;function&gt; : Json.Decode.Decoder a -&gt; Json.Decode.Decoder a
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `Decode.string`.

3| actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
                                                                                               ==^^====^^==^
No module called `Decode` has been imported.


&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder String
&gt; type Action = Foo | Bar
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed Foo else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "asdf"}"""
Err "I ran into a `fail` decoder at _.a: was not foo"
    : Result.Result String Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "foo"}"""
Ok Foo : Result.Result String Repl.Action

</code></pre>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>#tutorials</li>
</ul>


10:45:07.126 [debug] l:len=53

10:45:07.126 [debug] l:buf=56:<h1>How JSON decoders work</h1>
<p>JSON decoders are perhaps a huge stumbling block for beginners. They are extremely unintuitive for many including myself (at first). Anything beyond the one level map would totally trip me up. Let's see what they are.</p>
<h1>The problem they solve</h1>
<p>The main thing that JSON decoders solve is the fact that when Elm gets data from an external source that data can <strong>technically be anything</strong>. We usually want it to be in one format but there's nothing stopping JavaScript from just sending "💩" emojis.</p>
<p>Elm is statically typed, meaning all the types have to be known as compile time, not at runtime when JS pulls out the emoji keyboard at an inconvenient time. So what if we want <code>{"id": 2}</code> but JavaScript sends <code>{"id": null }</code>? That's not even close to what we want! It's null not an int! Normally in JavaScript we would just find out later when we try to use that in an HTTP request or something, in Elm we don't have runtime exceptions and we don't have null so we have to tell JS (or any external source) that we just won't stand for that behavior (in a nice way</p>
<h1>Two black boxes</h1>
<p>So I think most of the confusion for me is the fact that we have not just one but two types that you can't totally see into. One being a "decoder" one being</p>
<h1>My "simple" JSON, and how to decode it</h1>
<p>This is the process I went through to Decode this:</p>
<pre><code>{"action" : Action} OR {"action": Action, "error": "I can't do this because..."}
</code></pre>
<p>This <em>appears</em> simple however it's quite tricky because I essentially have two different states that are differentiated only by "error"'s <em>presense</em>. This really isn't too crazy but it does make it a bit more difficult and extends past the safe boundaries of <code>Json.Decode.Pipeline</code></p>
<pre><code>
λ ~/code/rapidash/ master* elm repl
---- elm-repl 0.18.0 -----------------------------------------------------------
 :help for help, :exit to exit, more at &lt;https://github.com/elm-lang/elm-repl&gt;
--------------------------------------------------------------------------------
&gt; :help
General usage directions: &lt;https://github.com/elm-lang/elm-repl#elm-repl&gt;
Additional commands available from the prompt:

  :help			List available commands
  :flags		Manipulate flags sent to elm compiler
  :reset		Clears all previous imports
  :exit			Exits elm-repl

&gt; import Json.Decode exposing (..)
&gt; decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds = decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds (field "a" int) """{"a": 2}"""
Ok 2 : Result.Result String Int
&gt; ds (field "a" string) """{"a": 2}"""
Err "Expecting a String at _.a but instead got: 2" : Result.Result String String
&gt; ds (field "a" string) """{"a": "asdf"}"""
Ok "asdf" : Result.Result String String
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen (\ str -&gt; suceed str)
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `suceed`

4|   andThen (\ str -&gt; suceed str)
                       ==^^==
Maybe you want one of the following?

    succeed
    Json.Decode.succeed


&gt; andThen (\ str -&gt; succeed str)
&lt;function&gt; : Json.Decode.Decoder a -&gt; Json.Decode.Decoder a
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `Decode.string`.

3| actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
                                                                                               ==^^====^^==^
No module called `Decode` has been imported.


&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder String
&gt; type Action = Foo | Bar
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed Foo else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "asdf"}"""
Err "I ran into a `fail` decoder at _.a: was not foo"
    : Result.Result String Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "foo"}"""
Ok Foo : Result.Result String Repl.Action

</code></pre>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>#tutorials</li>
</ul>


10:45:07.126 [debug] l:len=535

10:45:07.126 [debug] l:buf=6:<h1>How JSON decoders work</h1>
<p>JSON decoders are perhaps a huge stumbling block for beginners. They are extremely unintuitive for many including myself (at first). Anything beyond the one level map would totally trip me up. Let's see what they are.</p>
<h1>The problem they solve</h1>
<p>The main thing that JSON decoders solve is the fact that when Elm gets data from an external source that data can <strong>technically be anything</strong>. We usually want it to be in one format but there's nothing stopping JavaScript from just sending "💩" emojis.</p>
<p>Elm is statically typed, meaning all the types have to be known as compile time, not at runtime when JS pulls out the emoji keyboard at an inconvenient time. So what if we want <code>{"id": 2}</code> but JavaScript sends <code>{"id": null }</code>? That's not even close to what we want! It's null not an int! Normally in JavaScript we would just find out later when we try to use that in an HTTP request or something, in Elm we don't have runtime exceptions and we don't have null so we have to tell JS (or any external source) that we just won't stand for that behavior (in a nice way</p>
<h1>Two black boxes</h1>
<p>So I think most of the confusion for me is the fact that we have not just one but two types that you can't totally see into. One being a "decoder" one being</p>
<h1>My "simple" JSON, and how to decode it</h1>
<p>This is the process I went through to Decode this:</p>
<pre><code>{"action" : Action} OR {"action": Action, "error": "I can't do this because..."}
</code></pre>
<p>This <em>appears</em> simple however it's quite tricky because I essentially have two different states that are differentiated only by "error"'s <em>presense</em>. This really isn't too crazy but it does make it a bit more difficult and extends past the safe boundaries of <code>Json.Decode.Pipeline</code></p>
<pre><code>
λ ~/code/rapidash/ master* elm repl
---- elm-repl 0.18.0 -----------------------------------------------------------
 :help for help, :exit to exit, more at &lt;https://github.com/elm-lang/elm-repl&gt;
--------------------------------------------------------------------------------
&gt; :help
General usage directions: &lt;https://github.com/elm-lang/elm-repl#elm-repl&gt;
Additional commands available from the prompt:

  :help			List available commands
  :flags		Manipulate flags sent to elm compiler
  :reset		Clears all previous imports
  :exit			Exits elm-repl

&gt; import Json.Decode exposing (..)
&gt; decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds = decodeString
&lt;function&gt; : Json.Decode.Decoder a -&gt; String -&gt; Result.Result String a
&gt; ds (field "a" int) """{"a": 2}"""
Ok 2 : Result.Result String Int
&gt; ds (field "a" string) """{"a": 2}"""
Err "Expecting a String at _.a but instead got: 2" : Result.Result String String
&gt; ds (field "a" string) """{"a": "asdf"}"""
Ok "asdf" : Result.Result String String
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen
&lt;function&gt;
    : (a -&gt; Json.Decode.Decoder b)
      -&gt; Json.Decode.Decoder a -&gt; Json.Decode.Decoder b
&gt; andThen (\ str -&gt; suceed str)
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `suceed`

4|   andThen (\ str -&gt; suceed str)
                       ==^^==
Maybe you want one of the following?

    succeed
    Json.Decode.succeed


&gt; andThen (\ str -&gt; succeed str)
&lt;function&gt; : Json.Decode.Decoder a -&gt; Json.Decode.Decoder a
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo")
&lt;function&gt; : Json.Decode.Decoder String -&gt; Json.Decode.Decoder String
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
-- NAMING ERROR ---------------------------------------------- repl-temp-000.elm

Cannot find variable `Decode.string`.

3| actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") Decode.string
                                                                                               ==^^====^^==^
No module called `Decode` has been imported.


&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed str else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder String
&gt; type Action = Foo | Bar
&gt; actionDecoder = andThen (\ str -&gt; if str == "foo" then succeed Foo else fail "was not foo") string
&lt;decoder&gt; : Json.Decode.Decoder Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "asdf"}"""
Err "I ran into a `fail` decoder at _.a: was not foo"
    : Result.Result String Repl.Action
&gt; ds (field "a" actionDecoder) """{"a": "foo"}"""
Ok Foo : Result.Result String Repl.Action

</code></pre>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>#tutorials</li>
</ul>


10:45:07.126 [debug] l:len=

10:45:07.126 [debug] l:buf empty

10:45:07.126 [debug] l:len=

10:45:07.126 [debug] l:buf=1002:<h1>Slack like a meandering walk through the woods</h1>
<p>Slack is kind of like a long meandering walk through the woods. You are just constantly moving forward so you have no time to really get to know the territory just constantly seeing new things which all start to look the same after a while. If somebody ask you where you saw that bear at you could maybe describing a little bit but you would have to take a long meandering walk to find it again. Hopefully you would know it when you saw it but because your brain hasn't had enough time to memorize it's placement and it's constantly being replaced by new things it's unlikely you're ever going to see that again.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.126 [debug] l:len=1

10:45:07.126 [debug] l:buf=002:<h1>Slack like a meandering walk through the woods</h1>
<p>Slack is kind of like a long meandering walk through the woods. You are just constantly moving forward so you have no time to really get to know the territory just constantly seeing new things which all start to look the same after a while. If somebody ask you where you saw that bear at you could maybe describing a little bit but you would have to take a long meandering walk to find it again. Hopefully you would know it when you saw it but because your brain hasn't had enough time to memorize it's placement and it's constantly being replaced by new things it's unlikely you're ever going to see that again.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.126 [debug] l:len=10

10:45:07.126 [debug] l:buf=02:<h1>Slack like a meandering walk through the woods</h1>
<p>Slack is kind of like a long meandering walk through the woods. You are just constantly moving forward so you have no time to really get to know the territory just constantly seeing new things which all start to look the same after a while. If somebody ask you where you saw that bear at you could maybe describing a little bit but you would have to take a long meandering walk to find it again. Hopefully you would know it when you saw it but because your brain hasn't had enough time to memorize it's placement and it's constantly being replaced by new things it's unlikely you're ever going to see that again.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.126 [debug] l:len=100

10:45:07.126 [debug] l:buf=2:<h1>Slack like a meandering walk through the woods</h1>
<p>Slack is kind of like a long meandering walk through the woods. You are just constantly moving forward so you have no time to really get to know the territory just constantly seeing new things which all start to look the same after a while. If somebody ask you where you saw that bear at you could maybe describing a little bit but you would have to take a long meandering walk to find it again. Hopefully you would know it when you saw it but because your brain hasn't had enough time to memorize it's placement and it's constantly being replaced by new things it's unlikely you're ever going to see that again.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf empty

10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf=1643:<h1>why you should answer junior devs questions right now.</h1>
<p>Reasons to answer their question right now.</p>
<ul>
<li>You're going to sound very standoffish if you enforce some cold 30min contract with them. Tells them, you don't really want to answer their questions, your time is more valuable then theirs.</li>
<li>You're going to create a culture of, "we've gone through the painful initiation process, you do too". Spoiler alert: you don't want this.</li>
<li>Your time is much better spent getting another engineer as good as you than trying to preserve your time as a single engineer. If you trained 9 other engineers you could 10x yourself.</li>
<li>Their questions are probably going to help you see flaws in your code and documentation. See these as UX problems rather that problems of more trying hard enough. That way you're less likely to ever get the question again.</li>
</ul>
<p>Don't assume that people's intentions are bad. I believe that everyone wants to be good contributors, and it's our job to help them.</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/junior-devloper" rel="noopener noreferrer">Junior Devloper</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/training" rel="noopener noreferrer">Training</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/compassion" rel="noopener noreferrer">compassion</a></li>
</ul>


10:45:07.127 [debug] l:len=1

10:45:07.127 [debug] l:buf=643:<h1>why you should answer junior devs questions right now.</h1>
<p>Reasons to answer their question right now.</p>
<ul>
<li>You're going to sound very standoffish if you enforce some cold 30min contract with them. Tells them, you don't really want to answer their questions, your time is more valuable then theirs.</li>
<li>You're going to create a culture of, "we've gone through the painful initiation process, you do too". Spoiler alert: you don't want this.</li>
<li>Your time is much better spent getting another engineer as good as you than trying to preserve your time as a single engineer. If you trained 9 other engineers you could 10x yourself.</li>
<li>Their questions are probably going to help you see flaws in your code and documentation. See these as UX problems rather that problems of more trying hard enough. That way you're less likely to ever get the question again.</li>
</ul>
<p>Don't assume that people's intentions are bad. I believe that everyone wants to be good contributors, and it's our job to help them.</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/junior-devloper" rel="noopener noreferrer">Junior Devloper</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/training" rel="noopener noreferrer">Training</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/compassion" rel="noopener noreferrer">compassion</a></li>
</ul>


10:45:07.127 [debug] l:len=16

10:45:07.127 [debug] l:buf=43:<h1>why you should answer junior devs questions right now.</h1>
<p>Reasons to answer their question right now.</p>
<ul>
<li>You're going to sound very standoffish if you enforce some cold 30min contract with them. Tells them, you don't really want to answer their questions, your time is more valuable then theirs.</li>
<li>You're going to create a culture of, "we've gone through the painful initiation process, you do too". Spoiler alert: you don't want this.</li>
<li>Your time is much better spent getting another engineer as good as you than trying to preserve your time as a single engineer. If you trained 9 other engineers you could 10x yourself.</li>
<li>Their questions are probably going to help you see flaws in your code and documentation. See these as UX problems rather that problems of more trying hard enough. That way you're less likely to ever get the question again.</li>
</ul>
<p>Don't assume that people's intentions are bad. I believe that everyone wants to be good contributors, and it's our job to help them.</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/junior-devloper" rel="noopener noreferrer">Junior Devloper</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/training" rel="noopener noreferrer">Training</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/compassion" rel="noopener noreferrer">compassion</a></li>
</ul>


10:45:07.127 [debug] l:len=164

10:45:07.127 [debug] l:buf=3:<h1>why you should answer junior devs questions right now.</h1>
<p>Reasons to answer their question right now.</p>
<ul>
<li>You're going to sound very standoffish if you enforce some cold 30min contract with them. Tells them, you don't really want to answer their questions, your time is more valuable then theirs.</li>
<li>You're going to create a culture of, "we've gone through the painful initiation process, you do too". Spoiler alert: you don't want this.</li>
<li>Your time is much better spent getting another engineer as good as you than trying to preserve your time as a single engineer. If you trained 9 other engineers you could 10x yourself.</li>
<li>Their questions are probably going to help you see flaws in your code and documentation. See these as UX problems rather that problems of more trying hard enough. That way you're less likely to ever get the question again.</li>
</ul>
<p>Don't assume that people's intentions are bad. I believe that everyone wants to be good contributors, and it's our job to help them.</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/junior-devloper" rel="noopener noreferrer">Junior Devloper</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/training" rel="noopener noreferrer">Training</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/compassion" rel="noopener noreferrer">compassion</a></li>
</ul>


10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf empty

10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf=263:<h1>the Health Industry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.127 [debug] l:len=2

10:45:07.127 [debug] l:buf=63:<h1>the Health Industry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.127 [debug] l:len=26

10:45:07.127 [debug] l:buf=3:<h1>the Health Industry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf empty

10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf=2178:<h1>Encapsulation design</h1>
<p>Drawing the line between what you want other code to be coupled to and what you don't</p>
<p><strong>Hint:</strong> you want people to be coupled to as little as possible so changes to it affects others very little.</p>
<blockquote>
<p>the succinct expression or depiction of the essential features of something.</p>
<ul>
<li>Google's dictionary</li>
</ul>
</blockquote>
<p>Indications your line is wrong:</p>
<ul>
<li>You make a mere performance improvement and other code breaks</li>
<li>Changing code that doesn't change what the user experiences breaks code</li>
</ul>
<h3>Encapsulation is good for...</h3>
<ul>
<li>Things with non-trivial implementation details</li>
<li>anything with internal state</li>
<li>anything where the API can be simpler than the underlying data structure</li>
<li>Making invalid states impossible</li>
</ul>
<h3>Encapsulation is bad for...</h3>
<ul>
<li>
<p>encoding (fix: always have some sort of export function)</p>
</li>
<li>
<p>Understanding, sometimes it's just easier to understand the underlying datastucture (over abstraction). If it's just a body of text maybe it should just be a string. This is perhaps the greatest cost. This can be mitigated by first, avoiding abstraction till the API becomes clear, second, making a very minimal API,  third, documenting that API like crazy</p>
</li>
<li>
<p>Using the wrong abstraction. This is the most dangerous part. If you're API is woefully broken and it starts to be depended on, you'll break a lot of code to fix it. This either means you'll never fix it, people will never upgrade, or everyone will have to pay the cost (hopefully small if done soon enough). However this problem is kind of unavoidable because it will either have the interface of the datastucture OR the one you provide. Choose the one that's best.</p>
</li>
<li>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
</ul>


10:45:07.127 [debug] l:len=2

10:45:07.127 [debug] l:buf=178:<h1>Encapsulation design</h1>
<p>Drawing the line between what you want other code to be coupled to and what you don't</p>
<p><strong>Hint:</strong> you want people to be coupled to as little as possible so changes to it affects others very little.</p>
<blockquote>
<p>the succinct expression or depiction of the essential features of something.</p>
<ul>
<li>Google's dictionary</li>
</ul>
</blockquote>
<p>Indications your line is wrong:</p>
<ul>
<li>You make a mere performance improvement and other code breaks</li>
<li>Changing code that doesn't change what the user experiences breaks code</li>
</ul>
<h3>Encapsulation is good for...</h3>
<ul>
<li>Things with non-trivial implementation details</li>
<li>anything with internal state</li>
<li>anything where the API can be simpler than the underlying data structure</li>
<li>Making invalid states impossible</li>
</ul>
<h3>Encapsulation is bad for...</h3>
<ul>
<li>
<p>encoding (fix: always have some sort of export function)</p>
</li>
<li>
<p>Understanding, sometimes it's just easier to understand the underlying datastucture (over abstraction). If it's just a body of text maybe it should just be a string. This is perhaps the greatest cost. This can be mitigated by first, avoiding abstraction till the API becomes clear, second, making a very minimal API,  third, documenting that API like crazy</p>
</li>
<li>
<p>Using the wrong abstraction. This is the most dangerous part. If you're API is woefully broken and it starts to be depended on, you'll break a lot of code to fix it. This either means you'll never fix it, people will never upgrade, or everyone will have to pay the cost (hopefully small if done soon enough). However this problem is kind of unavoidable because it will either have the interface of the datastucture OR the one you provide. Choose the one that's best.</p>
</li>
<li>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
</ul>


10:45:07.127 [debug] l:len=21

10:45:07.127 [debug] l:buf=78:<h1>Encapsulation design</h1>
<p>Drawing the line between what you want other code to be coupled to and what you don't</p>
<p><strong>Hint:</strong> you want people to be coupled to as little as possible so changes to it affects others very little.</p>
<blockquote>
<p>the succinct expression or depiction of the essential features of something.</p>
<ul>
<li>Google's dictionary</li>
</ul>
</blockquote>
<p>Indications your line is wrong:</p>
<ul>
<li>You make a mere performance improvement and other code breaks</li>
<li>Changing code that doesn't change what the user experiences breaks code</li>
</ul>
<h3>Encapsulation is good for...</h3>
<ul>
<li>Things with non-trivial implementation details</li>
<li>anything with internal state</li>
<li>anything where the API can be simpler than the underlying data structure</li>
<li>Making invalid states impossible</li>
</ul>
<h3>Encapsulation is bad for...</h3>
<ul>
<li>
<p>encoding (fix: always have some sort of export function)</p>
</li>
<li>
<p>Understanding, sometimes it's just easier to understand the underlying datastucture (over abstraction). If it's just a body of text maybe it should just be a string. This is perhaps the greatest cost. This can be mitigated by first, avoiding abstraction till the API becomes clear, second, making a very minimal API,  third, documenting that API like crazy</p>
</li>
<li>
<p>Using the wrong abstraction. This is the most dangerous part. If you're API is woefully broken and it starts to be depended on, you'll break a lot of code to fix it. This either means you'll never fix it, people will never upgrade, or everyone will have to pay the cost (hopefully small if done soon enough). However this problem is kind of unavoidable because it will either have the interface of the datastucture OR the one you provide. Choose the one that's best.</p>
</li>
<li>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
</ul>


10:45:07.127 [debug] l:len=217

10:45:07.127 [debug] l:buf=8:<h1>Encapsulation design</h1>
<p>Drawing the line between what you want other code to be coupled to and what you don't</p>
<p><strong>Hint:</strong> you want people to be coupled to as little as possible so changes to it affects others very little.</p>
<blockquote>
<p>the succinct expression or depiction of the essential features of something.</p>
<ul>
<li>Google's dictionary</li>
</ul>
</blockquote>
<p>Indications your line is wrong:</p>
<ul>
<li>You make a mere performance improvement and other code breaks</li>
<li>Changing code that doesn't change what the user experiences breaks code</li>
</ul>
<h3>Encapsulation is good for...</h3>
<ul>
<li>Things with non-trivial implementation details</li>
<li>anything with internal state</li>
<li>anything where the API can be simpler than the underlying data structure</li>
<li>Making invalid states impossible</li>
</ul>
<h3>Encapsulation is bad for...</h3>
<ul>
<li>
<p>encoding (fix: always have some sort of export function)</p>
</li>
<li>
<p>Understanding, sometimes it's just easier to understand the underlying datastucture (over abstraction). If it's just a body of text maybe it should just be a string. This is perhaps the greatest cost. This can be mitigated by first, avoiding abstraction till the API becomes clear, second, making a very minimal API,  third, documenting that API like crazy</p>
</li>
<li>
<p>Using the wrong abstraction. This is the most dangerous part. If you're API is woefully broken and it starts to be depended on, you'll break a lot of code to fix it. This either means you'll never fix it, people will never upgrade, or everyone will have to pay the cost (hopefully small if done soon enough). However this problem is kind of unavoidable because it will either have the interface of the datastucture OR the one you provide. Choose the one that's best.</p>
</li>
<li>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
</ul>


10:45:07.127 [debug] l:len=

10:45:07.127 [debug] l:buf empty

10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf=835:<h1>Essentialism</h1>
<hr>
<h2><a href="http://localhost:5000/essentialism-visual-guide.png" rel="noopener noreferrer">Essentialism Visual Guide</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://www.verbaltovisual.com/essentialism/" rel="noopener noreferrer">https://www.verbaltovisual.com/essentialism/</a></p>
<h2>Focus</h2>
<hr>
<h2><a href="http://localhost:5000/essentialism,-focusing-energy.png" rel="noopener noreferrer">Essentialism, focusing energy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
<li><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></li>
</ul>


10:45:07.128 [debug] l:len=8

10:45:07.128 [debug] l:buf=35:<h1>Essentialism</h1>
<hr>
<h2><a href="http://localhost:5000/essentialism-visual-guide.png" rel="noopener noreferrer">Essentialism Visual Guide</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://www.verbaltovisual.com/essentialism/" rel="noopener noreferrer">https://www.verbaltovisual.com/essentialism/</a></p>
<h2>Focus</h2>
<hr>
<h2><a href="http://localhost:5000/essentialism,-focusing-energy.png" rel="noopener noreferrer">Essentialism, focusing energy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
<li><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></li>
</ul>


10:45:07.128 [debug] l:len=83

10:45:07.128 [debug] l:buf=5:<h1>Essentialism</h1>
<hr>
<h2><a href="http://localhost:5000/essentialism-visual-guide.png" rel="noopener noreferrer">Essentialism Visual Guide</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://www.verbaltovisual.com/essentialism/" rel="noopener noreferrer">https://www.verbaltovisual.com/essentialism/</a></p>
<h2>Focus</h2>
<hr>
<h2><a href="http://localhost:5000/essentialism,-focusing-energy.png" rel="noopener noreferrer">Essentialism, focusing energy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
<li><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></li>
</ul>


10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf empty

10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf=79:<h1>Kyani</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.128 [debug] l:len=7

10:45:07.128 [debug] l:buf=9:<h1>Kyani</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf empty

10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf=244:<h1>teaching</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.128 [debug] l:len=2

10:45:07.128 [debug] l:buf=44:<h1>teaching</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.128 [debug] l:len=24

10:45:07.128 [debug] l:buf=4:<h1>teaching</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.128 [debug] l:len=

10:45:07.128 [debug] l:buf empty

10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf=1675:<h2>Github's Notification System</h2>
<p>Github's notification system can feel overwhelming to say the least. In the below picture I've highlighted a bunch of stuff that are clickable in red, distractions in yellow. And hidden buttons and interactions in blue.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-17.png" rel="noopener noreferrer">Pasted image 17</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ul>
<li>==27== red boxes</li>
<li>==18== blue boxes (if you include all the ones on the screen)</li>
<li>==10== yellow boxes</li>
</ul>
<p>Score of: <code>45 clickable areas</code></p>
<p>How much useful information? Not much. None of these really tell you what you're going to find besides a vague statement like, "<em>+8 review requested</em>".</p>
<h2>Basecamp's notification system</h2>
<p><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a> is perhaps the most simple and yet useful system I've seen anywhere.</p>
<hr>
<h2><a href="http://localhost:5000/basecamp's-notification-system.png" rel="noopener noreferrer">Basecamp's notification system</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>See also: <a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></p>
<p>See also: <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>


10:45:07.129 [debug] l:len=1

10:45:07.129 [debug] l:buf=675:<h2>Github's Notification System</h2>
<p>Github's notification system can feel overwhelming to say the least. In the below picture I've highlighted a bunch of stuff that are clickable in red, distractions in yellow. And hidden buttons and interactions in blue.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-17.png" rel="noopener noreferrer">Pasted image 17</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ul>
<li>==27== red boxes</li>
<li>==18== blue boxes (if you include all the ones on the screen)</li>
<li>==10== yellow boxes</li>
</ul>
<p>Score of: <code>45 clickable areas</code></p>
<p>How much useful information? Not much. None of these really tell you what you're going to find besides a vague statement like, "<em>+8 review requested</em>".</p>
<h2>Basecamp's notification system</h2>
<p><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a> is perhaps the most simple and yet useful system I've seen anywhere.</p>
<hr>
<h2><a href="http://localhost:5000/basecamp's-notification-system.png" rel="noopener noreferrer">Basecamp's notification system</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>See also: <a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></p>
<p>See also: <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>


10:45:07.129 [debug] l:len=16

10:45:07.129 [debug] l:buf=75:<h2>Github's Notification System</h2>
<p>Github's notification system can feel overwhelming to say the least. In the below picture I've highlighted a bunch of stuff that are clickable in red, distractions in yellow. And hidden buttons and interactions in blue.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-17.png" rel="noopener noreferrer">Pasted image 17</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ul>
<li>==27== red boxes</li>
<li>==18== blue boxes (if you include all the ones on the screen)</li>
<li>==10== yellow boxes</li>
</ul>
<p>Score of: <code>45 clickable areas</code></p>
<p>How much useful information? Not much. None of these really tell you what you're going to find besides a vague statement like, "<em>+8 review requested</em>".</p>
<h2>Basecamp's notification system</h2>
<p><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a> is perhaps the most simple and yet useful system I've seen anywhere.</p>
<hr>
<h2><a href="http://localhost:5000/basecamp's-notification-system.png" rel="noopener noreferrer">Basecamp's notification system</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>See also: <a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></p>
<p>See also: <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>


10:45:07.129 [debug] l:len=167

10:45:07.129 [debug] l:buf=5:<h2>Github's Notification System</h2>
<p>Github's notification system can feel overwhelming to say the least. In the below picture I've highlighted a bunch of stuff that are clickable in red, distractions in yellow. And hidden buttons and interactions in blue.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-17.png" rel="noopener noreferrer">Pasted image 17</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ul>
<li>==27== red boxes</li>
<li>==18== blue boxes (if you include all the ones on the screen)</li>
<li>==10== yellow boxes</li>
</ul>
<p>Score of: <code>45 clickable areas</code></p>
<p>How much useful information? Not much. None of these really tell you what you're going to find besides a vague statement like, "<em>+8 review requested</em>".</p>
<h2>Basecamp's notification system</h2>
<p><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a> is perhaps the most simple and yet useful system I've seen anywhere.</p>
<hr>
<h2><a href="http://localhost:5000/basecamp's-notification-system.png" rel="noopener noreferrer">Basecamp's notification system</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>See also: <a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></p>
<p>See also: <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>


10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf empty

10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf=308:<h1>Pasted image 4</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.129 [debug] l:len=3

10:45:07.129 [debug] l:buf=08:<h1>Pasted image 4</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.129 [debug] l:len=30

10:45:07.129 [debug] l:buf=8:<h1>Pasted image 4</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf empty

10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf=244:<h1>Static Typing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
</ul>


10:45:07.129 [debug] l:len=2

10:45:07.129 [debug] l:buf=44:<h1>Static Typing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
</ul>


10:45:07.129 [debug] l:len=24

10:45:07.129 [debug] l:buf=4:<h1>Static Typing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
</ul>


10:45:07.129 [debug] l:len=

10:45:07.129 [debug] l:buf empty

10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf=96:<h1>Pasted image 20200923062424</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.130 [debug] l:len=9

10:45:07.130 [debug] l:buf=6:<h1>Pasted image 20200923062424</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf empty

10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf=255:<h1>Essentialism, focusing energy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.130 [debug] l:len=2

10:45:07.130 [debug] l:buf=55:<h1>Essentialism, focusing energy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.130 [debug] l:len=25

10:45:07.130 [debug] l:buf=5:<h1>Essentialism, focusing energy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf empty

10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf=548:<h1>Never delete notes from your <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.130 [debug] l:len=5

10:45:07.130 [debug] l:buf=48:<h1>Never delete notes from your <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.130 [debug] l:len=54

10:45:07.130 [debug] l:buf=8:<h1>Never delete notes from your <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf empty

10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf=173:<h1>Go and connect 4</h1>
<p>If you surround another person you capture them.</p>
<p><a href="http://localhost:5000/game-ideas" rel="noopener noreferrer">Game ideas</a></p>


10:45:07.130 [debug] l:len=1

10:45:07.130 [debug] l:buf=73:<h1>Go and connect 4</h1>
<p>If you surround another person you capture them.</p>
<p><a href="http://localhost:5000/game-ideas" rel="noopener noreferrer">Game ideas</a></p>


10:45:07.130 [debug] l:len=17

10:45:07.130 [debug] l:buf=3:<h1>Go and connect 4</h1>
<p>If you surround another person you capture them.</p>
<p><a href="http://localhost:5000/game-ideas" rel="noopener noreferrer">Game ideas</a></p>


10:45:07.130 [debug] l:len=

10:45:07.130 [debug] l:buf empty

10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf=339:<h1>Tomas Frank</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
</ul>


10:45:07.131 [debug] l:len=3

10:45:07.131 [debug] l:buf=39:<h1>Tomas Frank</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
</ul>


10:45:07.131 [debug] l:len=33

10:45:07.131 [debug] l:buf=9:<h1>Tomas Frank</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
</ul>


10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf empty

10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf=250:<h1>documentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=2

10:45:07.131 [debug] l:buf=50:<h1>documentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=25

10:45:07.131 [debug] l:buf=0:<h1>documentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf empty

10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf=259:<h1>Customer collaboration</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=2

10:45:07.131 [debug] l:buf=59:<h1>Customer collaboration</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=25

10:45:07.131 [debug] l:buf=9:<h1>Customer collaboration</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf empty

10:45:07.131 [debug] l:len=

10:45:07.131 [debug] l:buf=281:<h1>Responsive Design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.131 [debug] l:len=2

10:45:07.132 [debug] l:buf=81:<h1>Responsive Design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.132 [debug] l:len=28

10:45:07.132 [debug] l:buf=1:<h1>Responsive Design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.132 [debug] l:len=

10:45:07.132 [debug] l:buf empty

10:45:07.132 [debug] l:len=

10:45:07.132 [debug] l:buf=531:<h1>knowledge worker</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.132 [debug] l:len=5

10:45:07.132 [debug] l:buf=31:<h1>knowledge worker</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.132 [debug] l:len=53

10:45:07.132 [debug] l:buf=1:<h1>knowledge worker</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.132 [debug] l:len=

10:45:07.132 [debug] l:buf empty

10:45:07.132 [debug] l:len=

10:45:07.132 [debug] l:buf=1320:<h1>project management tools</h1>
<p>Tools such as:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a></li>
<li><a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a></li>
<li><a href="http://localhost:5000/asana" rel="noopener noreferrer">Asana</a></li>
<li><a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<p>And also weirdly enough <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> (see <a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.132 [debug] l:len=1

10:45:07.132 [debug] l:buf=320:<h1>project management tools</h1>
<p>Tools such as:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a></li>
<li><a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a></li>
<li><a href="http://localhost:5000/asana" rel="noopener noreferrer">Asana</a></li>
<li><a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<p>And also weirdly enough <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> (see <a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.132 [debug] l:len=13

10:45:07.132 [debug] l:buf=20:<h1>project management tools</h1>
<p>Tools such as:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a></li>
<li><a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a></li>
<li><a href="http://localhost:5000/asana" rel="noopener noreferrer">Asana</a></li>
<li><a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<p>And also weirdly enough <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> (see <a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.132 [debug] l:len=132

10:45:07.132 [debug] l:buf=0:<h1>project management tools</h1>
<p>Tools such as:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a></li>
<li><a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a></li>
<li><a href="http://localhost:5000/asana" rel="noopener noreferrer">Asana</a></li>
<li><a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<p>And also weirdly enough <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> (see <a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.132 [debug] l:len=

10:45:07.132 [debug] l:buf empty

10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf=430:<h1>Regional Conference</h1>
<ol>
<li>Have Gratitude</li>
<li></li>
</ol>
<h1>Apathy</h1>
<p>No feeling
Don't care</p>
<p>God -&gt; "I will spew you out of my mouth if you are lukewarm"</p>
<p>Mighty prayer
|&gt; overcome Apathy
|&gt; Just speaking, contact God, get his attention
|&gt; No vain repetition
|&gt; Come from the 💓
|&gt; Eagerness, Zeal, etc...</p>
<blockquote>
<p>Zeal is the opposite of Apathy</p>
</blockquote>


10:45:07.133 [debug] l:len=4

10:45:07.133 [debug] l:buf=30:<h1>Regional Conference</h1>
<ol>
<li>Have Gratitude</li>
<li></li>
</ol>
<h1>Apathy</h1>
<p>No feeling
Don't care</p>
<p>God -&gt; "I will spew you out of my mouth if you are lukewarm"</p>
<p>Mighty prayer
|&gt; overcome Apathy
|&gt; Just speaking, contact God, get his attention
|&gt; No vain repetition
|&gt; Come from the 💓
|&gt; Eagerness, Zeal, etc...</p>
<blockquote>
<p>Zeal is the opposite of Apathy</p>
</blockquote>


10:45:07.133 [debug] l:len=43

10:45:07.133 [debug] l:buf=0:<h1>Regional Conference</h1>
<ol>
<li>Have Gratitude</li>
<li></li>
</ol>
<h1>Apathy</h1>
<p>No feeling
Don't care</p>
<p>God -&gt; "I will spew you out of my mouth if you are lukewarm"</p>
<p>Mighty prayer
|&gt; overcome Apathy
|&gt; Just speaking, contact God, get his attention
|&gt; No vain repetition
|&gt; Come from the 💓
|&gt; Eagerness, Zeal, etc...</p>
<blockquote>
<p>Zeal is the opposite of Apathy</p>
</blockquote>


10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf empty

10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf=80:<h1>Mac Catalyst</h1>
<p>A way to write a mac/ios app and run it everywhere</p>


10:45:07.133 [debug] l:len=8

10:45:07.133 [debug] l:buf=0:<h1>Mac Catalyst</h1>
<p>A way to write a mac/ios app and run it everywhere</p>


10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf empty

10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf=503:<p>“Libraries <em>cannot</em> provide new inabilities.”
~ Mark Miller</p>
<p>Constraints | Tagide
<a href="http://tagide.com/blog/research/constraints/" rel="noopener noreferrer">http://tagide.com/blog/research/constraints/</a></p>
<p>Tags:
<a href="http://localhost:5000/elm" rel="noopener noreferrer">elm</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></p>


10:45:07.133 [debug] l:len=5

10:45:07.133 [debug] l:buf=03:<p>“Libraries <em>cannot</em> provide new inabilities.”
~ Mark Miller</p>
<p>Constraints | Tagide
<a href="http://tagide.com/blog/research/constraints/" rel="noopener noreferrer">http://tagide.com/blog/research/constraints/</a></p>
<p>Tags:
<a href="http://localhost:5000/elm" rel="noopener noreferrer">elm</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></p>


10:45:07.133 [debug] l:len=50

10:45:07.133 [debug] l:buf=3:<p>“Libraries <em>cannot</em> provide new inabilities.”
~ Mark Miller</p>
<p>Constraints | Tagide
<a href="http://tagide.com/blog/research/constraints/" rel="noopener noreferrer">http://tagide.com/blog/research/constraints/</a></p>
<p>Tags:
<a href="http://localhost:5000/elm" rel="noopener noreferrer">elm</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></p>


10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf empty

10:45:07.133 [debug] l:len=

10:45:07.133 [debug] l:buf=478:<h1>Time is money</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.133 [debug] l:len=4

10:45:07.133 [debug] l:buf=78:<h1>Time is money</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.134 [debug] l:len=47

10:45:07.134 [debug] l:buf=8:<h1>Time is money</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.134 [debug] l:len=

10:45:07.134 [debug] l:buf empty

10:45:07.134 [debug] l:len=

10:45:07.134 [debug] l:buf=6221:<h1>Slack MOC</h1>
<h1>Essays</h1>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Articles</h2>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>
<h2>In the title</h2>
<ul>
<li><a href="http://localhost:5000/slack-emulates-the-office" rel="noopener noreferrer">Slack emulates the office</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack-is-about...-slacking" rel="noopener noreferrer">Slack is about... slacking</a></li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-unthreaded-thread" rel="noopener noreferrer">Slack-Unthreaded-thread</a></li>
<li><a href="http://localhost:5000/slack-vs-basecamp-datastructure" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>
<h2>Mention</h2>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/how-to-elm" rel="noopener noreferrer">How to Elm</a></li>
<li><a href="http://localhost:5000/javascript-is-not-maintainable" rel="noopener noreferrer">JavaScript is not Maintainable</a></li>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
<li><a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">Messy drawer of communication</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/teamchat-threads---pitch" rel="noopener noreferrer">Teamchat Threads - Pitch</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/top-3-reasons-i-like-basecamp" rel="noopener noreferrer">Top 3 reasons I like Basecamp</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/the-messy-drawer-of-communication" rel="noopener noreferrer">the messy drawer of communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Misc</h2>
<ul>
<li><a href="http://localhost:5000/slack-themes" rel="noopener noreferrer">Slack themes</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<p>#public</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.134 [debug] l:len=6

10:45:07.134 [debug] l:buf=221:<h1>Slack MOC</h1>
<h1>Essays</h1>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Articles</h2>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>
<h2>In the title</h2>
<ul>
<li><a href="http://localhost:5000/slack-emulates-the-office" rel="noopener noreferrer">Slack emulates the office</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack-is-about...-slacking" rel="noopener noreferrer">Slack is about... slacking</a></li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-unthreaded-thread" rel="noopener noreferrer">Slack-Unthreaded-thread</a></li>
<li><a href="http://localhost:5000/slack-vs-basecamp-datastructure" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>
<h2>Mention</h2>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/how-to-elm" rel="noopener noreferrer">How to Elm</a></li>
<li><a href="http://localhost:5000/javascript-is-not-maintainable" rel="noopener noreferrer">JavaScript is not Maintainable</a></li>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
<li><a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">Messy drawer of communication</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/teamchat-threads---pitch" rel="noopener noreferrer">Teamchat Threads - Pitch</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/top-3-reasons-i-like-basecamp" rel="noopener noreferrer">Top 3 reasons I like Basecamp</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/the-messy-drawer-of-communication" rel="noopener noreferrer">the messy drawer of communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Misc</h2>
<ul>
<li><a href="http://localhost:5000/slack-themes" rel="noopener noreferrer">Slack themes</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<p>#public</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.134 [debug] l:len=62

10:45:07.134 [debug] l:buf=21:<h1>Slack MOC</h1>
<h1>Essays</h1>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Articles</h2>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>
<h2>In the title</h2>
<ul>
<li><a href="http://localhost:5000/slack-emulates-the-office" rel="noopener noreferrer">Slack emulates the office</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack-is-about...-slacking" rel="noopener noreferrer">Slack is about... slacking</a></li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-unthreaded-thread" rel="noopener noreferrer">Slack-Unthreaded-thread</a></li>
<li><a href="http://localhost:5000/slack-vs-basecamp-datastructure" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>
<h2>Mention</h2>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/how-to-elm" rel="noopener noreferrer">How to Elm</a></li>
<li><a href="http://localhost:5000/javascript-is-not-maintainable" rel="noopener noreferrer">JavaScript is not Maintainable</a></li>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
<li><a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">Messy drawer of communication</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/teamchat-threads---pitch" rel="noopener noreferrer">Teamchat Threads - Pitch</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/top-3-reasons-i-like-basecamp" rel="noopener noreferrer">Top 3 reasons I like Basecamp</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/the-messy-drawer-of-communication" rel="noopener noreferrer">the messy drawer of communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Misc</h2>
<ul>
<li><a href="http://localhost:5000/slack-themes" rel="noopener noreferrer">Slack themes</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<p>#public</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.134 [debug] l:len=622

10:45:07.134 [debug] l:buf=1:<h1>Slack MOC</h1>
<h1>Essays</h1>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Articles</h2>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>
<h2>In the title</h2>
<ul>
<li><a href="http://localhost:5000/slack-emulates-the-office" rel="noopener noreferrer">Slack emulates the office</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack-is-about...-slacking" rel="noopener noreferrer">Slack is about... slacking</a></li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-unthreaded-thread" rel="noopener noreferrer">Slack-Unthreaded-thread</a></li>
<li><a href="http://localhost:5000/slack-vs-basecamp-datastructure" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>
<h2>Mention</h2>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/how-to-elm" rel="noopener noreferrer">How to Elm</a></li>
<li><a href="http://localhost:5000/javascript-is-not-maintainable" rel="noopener noreferrer">JavaScript is not Maintainable</a></li>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
<li><a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">Messy drawer of communication</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/teamchat-threads---pitch" rel="noopener noreferrer">Teamchat Threads - Pitch</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/top-3-reasons-i-like-basecamp" rel="noopener noreferrer">Top 3 reasons I like Basecamp</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/the-messy-drawer-of-communication" rel="noopener noreferrer">the messy drawer of communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>
<h2>Misc</h2>
<ul>
<li><a href="http://localhost:5000/slack-themes" rel="noopener noreferrer">Slack themes</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<p>#public</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf empty

10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf=441:<p>Repentance</p>
<p>2 Core 7:9-10</p>
<p>29 Therefore I say unto you, Go; and whosoever transgresseth against me, him shall ye judge according to the sins which he has committed; and if he confess his sins before thee and me, and repenteth in the sincerity of his heart, him shall ye forgive, and I will forgive him also.
30 Yea, and as often as my people repent will I forgive them their trespasses against me.</p>
<p>Tags:
repentance</p>


10:45:07.135 [debug] l:len=4

10:45:07.135 [debug] l:buf=41:<p>Repentance</p>
<p>2 Core 7:9-10</p>
<p>29 Therefore I say unto you, Go; and whosoever transgresseth against me, him shall ye judge according to the sins which he has committed; and if he confess his sins before thee and me, and repenteth in the sincerity of his heart, him shall ye forgive, and I will forgive him also.
30 Yea, and as often as my people repent will I forgive them their trespasses against me.</p>
<p>Tags:
repentance</p>


10:45:07.135 [debug] l:len=44

10:45:07.135 [debug] l:buf=1:<p>Repentance</p>
<p>2 Core 7:9-10</p>
<p>29 Therefore I say unto you, Go; and whosoever transgresseth against me, him shall ye judge according to the sins which he has committed; and if he confess his sins before thee and me, and repenteth in the sincerity of his heart, him shall ye forgive, and I will forgive him also.
30 Yea, and as often as my people repent will I forgive them their trespasses against me.</p>
<p>Tags:
repentance</p>


10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf empty

10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf=262:<h1>Basecamp's one page design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.135 [debug] l:len=2

10:45:07.135 [debug] l:buf=62:<h1>Basecamp's one page design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.135 [debug] l:len=26

10:45:07.135 [debug] l:buf=2:<h1>Basecamp's one page design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf empty

10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf=999:<h1>Pitches</h1>
<p><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> helps a lot because it creates a central document (called a Pitch) that's detailed enough to accomplish the goal in a reasonable amount of time, but not too detailed to allow <a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">flexibility in scope</a>. Also setting time constraints allows everyone in the company to make better <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>. Before anything new is added it's more common to as, <em>"But is this going to make us miss our deadline?"</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.135 [debug] l:len=9

10:45:07.135 [debug] l:buf=99:<h1>Pitches</h1>
<p><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> helps a lot because it creates a central document (called a Pitch) that's detailed enough to accomplish the goal in a reasonable amount of time, but not too detailed to allow <a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">flexibility in scope</a>. Also setting time constraints allows everyone in the company to make better <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>. Before anything new is added it's more common to as, <em>"But is this going to make us miss our deadline?"</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.135 [debug] l:len=99

10:45:07.135 [debug] l:buf=9:<h1>Pitches</h1>
<p><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> helps a lot because it creates a central document (called a Pitch) that's detailed enough to accomplish the goal in a reasonable amount of time, but not too detailed to allow <a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">flexibility in scope</a>. Also setting time constraints allows everyone in the company to make better <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>. Before anything new is added it's more common to as, <em>"But is this going to make us miss our deadline?"</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf empty

10:45:07.135 [debug] l:len=

10:45:07.135 [debug] l:buf=388:<h1>time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.135 [debug] l:len=3

10:45:07.135 [debug] l:buf=88:<h1>time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.136 [debug] l:len=38

10:45:07.136 [debug] l:buf=8:<h1>time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.136 [debug] l:len=

10:45:07.136 [debug] l:buf empty

10:45:07.136 [debug] l:len=

10:45:07.136 [debug] l:buf=170:<p>Pioneers</p>
<p>Compassion</p>
<p>Work</p>
<p>Optimism</p>
<ul>
<li>they had the power to look past their earthly trials to eternal blessings</li>
</ul>
<p>Trials</p>


10:45:07.136 [debug] l:len=1

10:45:07.136 [debug] l:buf=70:<p>Pioneers</p>
<p>Compassion</p>
<p>Work</p>
<p>Optimism</p>
<ul>
<li>they had the power to look past their earthly trials to eternal blessings</li>
</ul>
<p>Trials</p>


10:45:07.136 [debug] l:len=17

10:45:07.136 [debug] l:buf=0:<p>Pioneers</p>
<p>Compassion</p>
<p>Work</p>
<p>Optimism</p>
<ul>
<li>they had the power to look past their earthly trials to eternal blessings</li>
</ul>
<p>Trials</p>


10:45:07.136 [debug] l:len=

10:45:07.136 [debug] l:buf empty

10:45:07.136 [debug] l:len=

10:45:07.136 [debug] l:buf=73:<h1>lift</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.136 [debug] l:len=7

10:45:07.136 [debug] l:buf=3:<h1>lift</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.136 [debug] l:len=

10:45:07.136 [debug] l:buf empty

10:45:07.138 [debug] l:len=

10:45:07.138 [debug] l:buf=794:<h1>Pros AND Cons matter</h1>
<p>From: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<blockquote>
<p>Understanding the positives and negatives, and how they play off one another, is central to getting the most out of something. Knowing the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a> helps you assign value.
<br>
<em><strong>Ignoring the cons because the pros are so good, or dismissing the pros because the cons are so bad</strong></em>, <em>leaves you with a false sense of comfort</em> and a <em>cloudy picture of the reality on the ground</em>.</p>
</blockquote>
<p><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></p>


10:45:07.138 [debug] l:len=7

10:45:07.138 [debug] l:buf=94:<h1>Pros AND Cons matter</h1>
<p>From: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<blockquote>
<p>Understanding the positives and negatives, and how they play off one another, is central to getting the most out of something. Knowing the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a> helps you assign value.
<br>
<em><strong>Ignoring the cons because the pros are so good, or dismissing the pros because the cons are so bad</strong></em>, <em>leaves you with a false sense of comfort</em> and a <em>cloudy picture of the reality on the ground</em>.</p>
</blockquote>
<p><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></p>


10:45:07.138 [debug] l:len=79

10:45:07.138 [debug] l:buf=4:<h1>Pros AND Cons matter</h1>
<p>From: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<blockquote>
<p>Understanding the positives and negatives, and how they play off one another, is central to getting the most out of something. Knowing the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a> helps you assign value.
<br>
<em><strong>Ignoring the cons because the pros are so good, or dismissing the pros because the cons are so bad</strong></em>, <em>leaves you with a false sense of comfort</em> and a <em>cloudy picture of the reality on the ground</em>.</p>
</blockquote>
<p><a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a></p>


10:45:07.138 [debug] l:len=

10:45:07.138 [debug] l:buf empty

10:45:07.138 [debug] l:len=

10:45:07.138 [debug] l:buf=403:<h1>How to pay Golden West bills</h1>
<p>Go to here: <a href="https://gwcu.lenderpayments.com/" rel="noopener noreferrer">https://gwcu.lenderpayments.com/</a></p>
<p>The scheduled payments should be there if you know your account number (I found this in an email titled: <em>Credit Union Documents (for Gage Karl Peterson) between Goldenwest Credit Union and Gage Peterson is Signed and Filed!</em></p>


10:45:07.138 [debug] l:len=4

10:45:07.138 [debug] l:buf=03:<h1>How to pay Golden West bills</h1>
<p>Go to here: <a href="https://gwcu.lenderpayments.com/" rel="noopener noreferrer">https://gwcu.lenderpayments.com/</a></p>
<p>The scheduled payments should be there if you know your account number (I found this in an email titled: <em>Credit Union Documents (for Gage Karl Peterson) between Goldenwest Credit Union and Gage Peterson is Signed and Filed!</em></p>


10:45:07.138 [debug] l:len=40

10:45:07.138 [debug] l:buf=3:<h1>How to pay Golden West bills</h1>
<p>Go to here: <a href="https://gwcu.lenderpayments.com/" rel="noopener noreferrer">https://gwcu.lenderpayments.com/</a></p>
<p>The scheduled payments should be there if you know your account number (I found this in an email titled: <em>Credit Union Documents (for Gage Karl Peterson) between Goldenwest Credit Union and Gage Peterson is Signed and Filed!</em></p>


10:45:07.138 [debug] l:len=

10:45:07.138 [debug] l:buf empty

10:45:07.138 [debug] l:len=

10:45:07.138 [debug] l:buf=331:<h1>Facebook</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.138 [debug] l:len=3

10:45:07.138 [debug] l:buf=31:<h1>Facebook</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.139 [debug] l:len=33

10:45:07.139 [debug] l:buf=1:<h1>Facebook</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf empty

10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf=319:<h1>Pasted image 20201020092052</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.139 [debug] l:len=3

10:45:07.139 [debug] l:buf=19:<h1>Pasted image 20201020092052</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.139 [debug] l:len=31

10:45:07.139 [debug] l:buf=9:<h1>Pasted image 20201020092052</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf empty

10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf=2040:<h1>the hidden costs of Group chat (slack and others)</h1>
<h2>Stacks</h2>
<p>Stacks are funny data structures. They are like a queue, but backward. What is a queue then? A queue is like when you wait in line at the DMV. First come, first serve. You take a number then you can wait patiently and you will get helped eventually. In fact, the time you wait is a direct function of the number of people that came before you, that haven't been processed yet.</p>
<h2>Stacks, your worst DMV nightmare 😈</h2>
<p>Now imagine instead of first come first serve it's last come, first serve. Meaning that there's no more waiting patiently,</p>
<h2>hidden costs</h2>
<blockquote>
<p>time is much the same as with money. The most dangerous way to lose time is not to spend it having fun, but to spend it doing fake work. When you spend time having fun, you know you're being self-indulgent. Alarms start to go off fairly quickly. If I woke up one morning and sat down on the sofa and watched TV all day, I'd feel like something was terribly wrong.</p>
</blockquote>
<blockquote>
<p>...
But the same alarms don't go off on the days when I get nothing done, because I'm doing stuff that seems, superficially, like real work. Dealing with email, for example. You do it sitting at a desk. It's not fun. So it must be work.</p>
</blockquote>
<p><a href="http://paulgraham.com/selfindulgence.html" rel="noopener noreferrer">http://paulgraham.com/selfindulgence.html</a></p>
<p>Keywords</p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.139 [debug] l:len=2

10:45:07.139 [debug] l:buf=040:<h1>the hidden costs of Group chat (slack and others)</h1>
<h2>Stacks</h2>
<p>Stacks are funny data structures. They are like a queue, but backward. What is a queue then? A queue is like when you wait in line at the DMV. First come, first serve. You take a number then you can wait patiently and you will get helped eventually. In fact, the time you wait is a direct function of the number of people that came before you, that haven't been processed yet.</p>
<h2>Stacks, your worst DMV nightmare 😈</h2>
<p>Now imagine instead of first come first serve it's last come, first serve. Meaning that there's no more waiting patiently,</p>
<h2>hidden costs</h2>
<blockquote>
<p>time is much the same as with money. The most dangerous way to lose time is not to spend it having fun, but to spend it doing fake work. When you spend time having fun, you know you're being self-indulgent. Alarms start to go off fairly quickly. If I woke up one morning and sat down on the sofa and watched TV all day, I'd feel like something was terribly wrong.</p>
</blockquote>
<blockquote>
<p>...
But the same alarms don't go off on the days when I get nothing done, because I'm doing stuff that seems, superficially, like real work. Dealing with email, for example. You do it sitting at a desk. It's not fun. So it must be work.</p>
</blockquote>
<p><a href="http://paulgraham.com/selfindulgence.html" rel="noopener noreferrer">http://paulgraham.com/selfindulgence.html</a></p>
<p>Keywords</p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.139 [debug] l:len=20

10:45:07.139 [debug] l:buf=40:<h1>the hidden costs of Group chat (slack and others)</h1>
<h2>Stacks</h2>
<p>Stacks are funny data structures. They are like a queue, but backward. What is a queue then? A queue is like when you wait in line at the DMV. First come, first serve. You take a number then you can wait patiently and you will get helped eventually. In fact, the time you wait is a direct function of the number of people that came before you, that haven't been processed yet.</p>
<h2>Stacks, your worst DMV nightmare 😈</h2>
<p>Now imagine instead of first come first serve it's last come, first serve. Meaning that there's no more waiting patiently,</p>
<h2>hidden costs</h2>
<blockquote>
<p>time is much the same as with money. The most dangerous way to lose time is not to spend it having fun, but to spend it doing fake work. When you spend time having fun, you know you're being self-indulgent. Alarms start to go off fairly quickly. If I woke up one morning and sat down on the sofa and watched TV all day, I'd feel like something was terribly wrong.</p>
</blockquote>
<blockquote>
<p>...
But the same alarms don't go off on the days when I get nothing done, because I'm doing stuff that seems, superficially, like real work. Dealing with email, for example. You do it sitting at a desk. It's not fun. So it must be work.</p>
</blockquote>
<p><a href="http://paulgraham.com/selfindulgence.html" rel="noopener noreferrer">http://paulgraham.com/selfindulgence.html</a></p>
<p>Keywords</p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.139 [debug] l:len=204

10:45:07.139 [debug] l:buf=0:<h1>the hidden costs of Group chat (slack and others)</h1>
<h2>Stacks</h2>
<p>Stacks are funny data structures. They are like a queue, but backward. What is a queue then? A queue is like when you wait in line at the DMV. First come, first serve. You take a number then you can wait patiently and you will get helped eventually. In fact, the time you wait is a direct function of the number of people that came before you, that haven't been processed yet.</p>
<h2>Stacks, your worst DMV nightmare 😈</h2>
<p>Now imagine instead of first come first serve it's last come, first serve. Meaning that there's no more waiting patiently,</p>
<h2>hidden costs</h2>
<blockquote>
<p>time is much the same as with money. The most dangerous way to lose time is not to spend it having fun, but to spend it doing fake work. When you spend time having fun, you know you're being self-indulgent. Alarms start to go off fairly quickly. If I woke up one morning and sat down on the sofa and watched TV all day, I'd feel like something was terribly wrong.</p>
</blockquote>
<blockquote>
<p>...
But the same alarms don't go off on the days when I get nothing done, because I'm doing stuff that seems, superficially, like real work. Dealing with email, for example. You do it sitting at a desk. It's not fun. So it must be work.</p>
</blockquote>
<p><a href="http://paulgraham.com/selfindulgence.html" rel="noopener noreferrer">http://paulgraham.com/selfindulgence.html</a></p>
<p>Keywords</p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf empty

10:45:07.139 [debug] l:len=

10:45:07.139 [debug] l:buf=819:<h1>Skinners Box</h1>
<blockquote>
<p>like the mice in Skinner’s box, <strong>crave predictability</strong> and <strong>struggle to find patterns, <em>even when none exist</em></strong>. Variability is the brain’s cognitive nemesis and our minds ==make deduction of cause and effect a <em>priority</em> over other functions like <strong>self-control</strong> and <strong>moderation</strong>.==</p>
</blockquote>
<p><a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>
<p>Keywords: <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a>, <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.139 [debug] l:len=8

10:45:07.140 [debug] l:buf=19:<h1>Skinners Box</h1>
<blockquote>
<p>like the mice in Skinner’s box, <strong>crave predictability</strong> and <strong>struggle to find patterns, <em>even when none exist</em></strong>. Variability is the brain’s cognitive nemesis and our minds ==make deduction of cause and effect a <em>priority</em> over other functions like <strong>self-control</strong> and <strong>moderation</strong>.==</p>
</blockquote>
<p><a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>
<p>Keywords: <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a>, <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.140 [debug] l:len=81

10:45:07.140 [debug] l:buf=9:<h1>Skinners Box</h1>
<blockquote>
<p>like the mice in Skinner’s box, <strong>crave predictability</strong> and <strong>struggle to find patterns, <em>even when none exist</em></strong>. Variability is the brain’s cognitive nemesis and our minds ==make deduction of cause and effect a <em>priority</em> over other functions like <strong>self-control</strong> and <strong>moderation</strong>.==</p>
</blockquote>
<p><a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>
<p>Keywords: <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a>, <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf empty

10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf=289:<h1>Basecamp discourages communication fragmentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.140 [debug] l:len=2

10:45:07.140 [debug] l:buf=89:<h1>Basecamp discourages communication fragmentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.140 [debug] l:len=28

10:45:07.140 [debug] l:buf=9:<h1>Basecamp discourages communication fragmentation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf empty

10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf=263:<h1>Connect 4 Anarchy</h1>
<p><img src="http://localhost:5000/image_picker6580323174693680559.jpg" alt="Image"></p>
<p>Is all about finishing the board as quick as possible. You don't have to go first or second but you can run out of tokens</p>
<p>Game ideas</p>


10:45:07.140 [debug] l:len=2

10:45:07.140 [debug] l:buf=63:<h1>Connect 4 Anarchy</h1>
<p><img src="http://localhost:5000/image_picker6580323174693680559.jpg" alt="Image"></p>
<p>Is all about finishing the board as quick as possible. You don't have to go first or second but you can run out of tokens</p>
<p>Game ideas</p>


10:45:07.140 [debug] l:len=26

10:45:07.140 [debug] l:buf=3:<h1>Connect 4 Anarchy</h1>
<p><img src="http://localhost:5000/image_picker6580323174693680559.jpg" alt="Image"></p>
<p>Is all about finishing the board as quick as possible. You don't have to go first or second but you can run out of tokens</p>
<p>Game ideas</p>


10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf empty

10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf=79:<h1>confidence</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.140 [debug] l:len=7

10:45:07.140 [debug] l:buf=9:<h1>confidence</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf empty

10:45:07.140 [debug] l:len=

10:45:07.140 [debug] l:buf=348:<h1>rapid fire messages then send one well thought out one</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.140 [debug] l:len=3

10:45:07.140 [debug] l:buf=48:<h1>rapid fire messages then send one well thought out one</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.140 [debug] l:len=34

10:45:07.140 [debug] l:buf=8:<h1>rapid fire messages then send one well thought out one</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.141 [debug] l:len=

10:45:07.141 [debug] l:buf empty

10:45:07.141 [debug] l:len=

10:45:07.141 [debug] l:buf=7655:<h1>Instructure Internship Report</h1>
<h1>Outline</h1>
<ul>
<li>What do I wish I had learned in school before my internship?
x TTD
x More about Git
<ul>
<li>Agile Stuff</li>
<li>Performance doesn't matter.</li>
<li>A high level language that wasn't C++ or Java</li>
<li>That OO isn't going to solve my problems</li>
<li>Functional Programing concepts
x Speed is more important than perfect sometimes. (I did learn this in my software design class but it wasn't reall talked about more than once)</li>
<li>Usability matters</li>
<li>Pair programing</li>
</ul>
</li>
<li>How could I have done the internship itself better? Are there any mistakes that I would avoid?
<ul>
<li>I wish I would have spent less time trying to figure things out on my own rather than just asking somone.</li>
</ul>
</li>
<li>Is there another role or company that I would prefer to work for as a full-time position?
<ul>
<li>For the most part no, I would perhaps like to work at a company that did functional programing more but that's not a huge deal. For the most part Instructure was awesome.</li>
</ul>
</li>
<li>What will I do when I return to school to prepare myself for a full-time position?
<ul>
<li>Focus more fully on discrete math.</li>
</ul>
</li>
</ul>
<p>Imagine having a younger sibling following in your footsteps. In many ways, this report should be written to him/her.</p>
<h1>Internship Report</h1>
<p>Gage Peterson</p>
<p>Fri Aug 21 17:20:27 MDT 2015</p>
<p>INTRO</p>
<h3>What do I wish I had learned in school before my internship?</h3>
<p>Firstly importance of writing tests. After working for a while it's scarry to look back at the develpment process that I did in school. Sure I tried to make sure some things where commented and things where as clean as possible but for the most of the time adding a few <code>cout</code> statements into it was all I did in the form of test which I quickly deleted. If I had known that I could think about a problem lot clearer and refactor my code with a greater amount of confidence that I would have probably not been up as manny late nights trying to figure out what my "small" code change broke. The only reason students aren't modivated to do it is because we throw away our projects once we get to version 1 and we never have to maintain that horrible code ever again. Because of this we don't realize the huge amount of bugs that are lurking in there. This is just doesn't scale with any project that exists for more than a month.</p>
<p>Another thing that I wish I would have know is <code>git</code>. While this is technically taught in school it bearly ever used there. Git is super important! It's pretty much taken over the entire world of software development and for good reason. Even if all students do is use it to save versions of their code they would be hugely benifited. I'm always saddened when my fellow students don't use it just because it seems harder or they are afraid of merge conflicts. But what they are really avoiding is comunicating what they are currently working on. Merge conflicts don't happen if you both know what the other person is doing.</p>
<p><em>you can't code alone</em>. As smart as you think you are you'll never be smart enough to code the project all by yourself and get things done in a acceptable amount of time. While I do see value in proving that you know something without the help of your classmates when it comes to working, you should probably only wait <strong>15 mins</strong> of <strong>hard trying</strong> to figure something out (somtimes longer if the problem is intrisicly just a hard problem) before you should stop and ask for help. If you spend too much time trying to bash your brain against a problem that udoubtably somone else on the team has already encountered our could help you is just wasting people's money. Remember that your sallery is high and your time is precious. Just ask. My personal rule is to work on it just long enough till I can think of an informed question. Even then somtimes you have to break down and say, "I have no idea what's going on. Please help me". This doesn't mean that you a bad programmer or that you'll never make it in this feild. you have to realize that codebases, programing languages, databases, etc. are always going to be more than you to fit in your head at any one time. Not to mention most of that knowlege won't do you any good to memorize because it will be out of date a few years from now when the codebase has changed or the better databases have been created.</p>
<p>I also wish that I had been taught that Object orientation is not going to solve my problems. While it does provide one abstraction for your buissness logic it's not allways the best one (sorry Java) and not going to do much to improve the quality of your code. That part is still in your cort. I wish I would have been taught that pair programing is a good thing! In school when one person is typing and the other is watching we often call that "cheating" but in the workplace that's called "collaberating" or in it's more <em>Agile</em> term <strong>pair programing</strong>. It really does help the quality of your code by a huge amount. It helps you find a ton more bugs and more importantly your able to learn from people that know some things that you don't.</p>
<h3>Is there another role or company that I would prefer to work for as a full-time position?</h3>
<p>For the most part I want to say no. I really confirmed to myself that I want to be a software developer and I really think Instructure is one of the most pleasent places to work. They really put a ton of trust into their engineers. They give basicly ifinite time off (within reason). I rarely get tired of working there at the end of the day or week. The only thing that I feel is left to be dired at Instructure is harder problems to solve. While they may have some hard problems to solve they deal mostly</p>
<h3>What will I do when I return to school to prepare myself for a full-time position?</h3>
<p>I really want to focus a lot more on math. This seems like a weird considering that I spent most of my time not doing math at work. The main reason is some of the coolest problems you can slove can be done in math. Just simply learning Haskell on the side like many of my coworkers do can really open your mind to how to solve things. Mathmatical concepts like Monads, functors, pure functions, P vs NP, graph theory, formal grammars are all things that have helped me to realize that the most obvious or popular solution was rarely the best solution. I want to horde up as much of that knowledge as I can so that when I'm faced with a hard problem I have more tools to make something elegant verses something that only half works, or doesn't quite abstract things quite right causing problems when new features are added to the project. Math if nothing else makes sure.</p>
<p>Be more organized I really learned that there's a lot of value in being organized It sounds like a no-brainer yet so many students try to fly by the seat of their pants getting things done right before due dates come knocking on the door. I tend to be one of those students. However in the workplace this can't and won't be tolerated You need to know when your meeting is and what you need to work on. You need to remember to do the things you say your going to do. The main concrete change that I'm going to make is to use a planner more.</p>
<p>CONCLUSION</p>
<ul>
<li><a href="http://localhost:5000/instructure" rel="noopener noreferrer">Instructure</a></li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
</ul>


10:45:07.141 [debug] l:len=7

10:45:07.141 [debug] l:buf=655:<h1>Instructure Internship Report</h1>
<h1>Outline</h1>
<ul>
<li>What do I wish I had learned in school before my internship?
x TTD
x More about Git
<ul>
<li>Agile Stuff</li>
<li>Performance doesn't matter.</li>
<li>A high level language that wasn't C++ or Java</li>
<li>That OO isn't going to solve my problems</li>
<li>Functional Programing concepts
x Speed is more important than perfect sometimes. (I did learn this in my software design class but it wasn't reall talked about more than once)</li>
<li>Usability matters</li>
<li>Pair programing</li>
</ul>
</li>
<li>How could I have done the internship itself better? Are there any mistakes that I would avoid?
<ul>
<li>I wish I would have spent less time trying to figure things out on my own rather than just asking somone.</li>
</ul>
</li>
<li>Is there another role or company that I would prefer to work for as a full-time position?
<ul>
<li>For the most part no, I would perhaps like to work at a company that did functional programing more but that's not a huge deal. For the most part Instructure was awesome.</li>
</ul>
</li>
<li>What will I do when I return to school to prepare myself for a full-time position?
<ul>
<li>Focus more fully on discrete math.</li>
</ul>
</li>
</ul>
<p>Imagine having a younger sibling following in your footsteps. In many ways, this report should be written to him/her.</p>
<h1>Internship Report</h1>
<p>Gage Peterson</p>
<p>Fri Aug 21 17:20:27 MDT 2015</p>
<p>INTRO</p>
<h3>What do I wish I had learned in school before my internship?</h3>
<p>Firstly importance of writing tests. After working for a while it's scarry to look back at the develpment process that I did in school. Sure I tried to make sure some things where commented and things where as clean as possible but for the most of the time adding a few <code>cout</code> statements into it was all I did in the form of test which I quickly deleted. If I had known that I could think about a problem lot clearer and refactor my code with a greater amount of confidence that I would have probably not been up as manny late nights trying to figure out what my "small" code change broke. The only reason students aren't modivated to do it is because we throw away our projects once we get to version 1 and we never have to maintain that horrible code ever again. Because of this we don't realize the huge amount of bugs that are lurking in there. This is just doesn't scale with any project that exists for more than a month.</p>
<p>Another thing that I wish I would have know is <code>git</code>. While this is technically taught in school it bearly ever used there. Git is super important! It's pretty much taken over the entire world of software development and for good reason. Even if all students do is use it to save versions of their code they would be hugely benifited. I'm always saddened when my fellow students don't use it just because it seems harder or they are afraid of merge conflicts. But what they are really avoiding is comunicating what they are currently working on. Merge conflicts don't happen if you both know what the other person is doing.</p>
<p><em>you can't code alone</em>. As smart as you think you are you'll never be smart enough to code the project all by yourself and get things done in a acceptable amount of time. While I do see value in proving that you know something without the help of your classmates when it comes to working, you should probably only wait <strong>15 mins</strong> of <strong>hard trying</strong> to figure something out (somtimes longer if the problem is intrisicly just a hard problem) before you should stop and ask for help. If you spend too much time trying to bash your brain against a problem that udoubtably somone else on the team has already encountered our could help you is just wasting people's money. Remember that your sallery is high and your time is precious. Just ask. My personal rule is to work on it just long enough till I can think of an informed question. Even then somtimes you have to break down and say, "I have no idea what's going on. Please help me". This doesn't mean that you a bad programmer or that you'll never make it in this feild. you have to realize that codebases, programing languages, databases, etc. are always going to be more than you to fit in your head at any one time. Not to mention most of that knowlege won't do you any good to memorize because it will be out of date a few years from now when the codebase has changed or the better databases have been created.</p>
<p>I also wish that I had been taught that Object orientation is not going to solve my problems. While it does provide one abstraction for your buissness logic it's not allways the best one (sorry Java) and not going to do much to improve the quality of your code. That part is still in your cort. I wish I would have been taught that pair programing is a good thing! In school when one person is typing and the other is watching we often call that "cheating" but in the workplace that's called "collaberating" or in it's more <em>Agile</em> term <strong>pair programing</strong>. It really does help the quality of your code by a huge amount. It helps you find a ton more bugs and more importantly your able to learn from people that know some things that you don't.</p>
<h3>Is there another role or company that I would prefer to work for as a full-time position?</h3>
<p>For the most part I want to say no. I really confirmed to myself that I want to be a software developer and I really think Instructure is one of the most pleasent places to work. They really put a ton of trust into their engineers. They give basicly ifinite time off (within reason). I rarely get tired of working there at the end of the day or week. The only thing that I feel is left to be dired at Instructure is harder problems to solve. While they may have some hard problems to solve they deal mostly</p>
<h3>What will I do when I return to school to prepare myself for a full-time position?</h3>
<p>I really want to focus a lot more on math. This seems like a weird considering that I spent most of my time not doing math at work. The main reason is some of the coolest problems you can slove can be done in math. Just simply learning Haskell on the side like many of my coworkers do can really open your mind to how to solve things. Mathmatical concepts like Monads, functors, pure functions, P vs NP, graph theory, formal grammars are all things that have helped me to realize that the most obvious or popular solution was rarely the best solution. I want to horde up as much of that knowledge as I can so that when I'm faced with a hard problem I have more tools to make something elegant verses something that only half works, or doesn't quite abstract things quite right causing problems when new features are added to the project. Math if nothing else makes sure.</p>
<p>Be more organized I really learned that there's a lot of value in being organized It sounds like a no-brainer yet so many students try to fly by the seat of their pants getting things done right before due dates come knocking on the door. I tend to be one of those students. However in the workplace this can't and won't be tolerated You need to know when your meeting is and what you need to work on. You need to remember to do the things you say your going to do. The main concrete change that I'm going to make is to use a planner more.</p>
<p>CONCLUSION</p>
<ul>
<li><a href="http://localhost:5000/instructure" rel="noopener noreferrer">Instructure</a></li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
</ul>


10:45:07.141 [debug] l:len=76

10:45:07.141 [debug] l:buf=55:<h1>Instructure Internship Report</h1>
<h1>Outline</h1>
<ul>
<li>What do I wish I had learned in school before my internship?
x TTD
x More about Git
<ul>
<li>Agile Stuff</li>
<li>Performance doesn't matter.</li>
<li>A high level language that wasn't C++ or Java</li>
<li>That OO isn't going to solve my problems</li>
<li>Functional Programing concepts
x Speed is more important than perfect sometimes. (I did learn this in my software design class but it wasn't reall talked about more than once)</li>
<li>Usability matters</li>
<li>Pair programing</li>
</ul>
</li>
<li>How could I have done the internship itself better? Are there any mistakes that I would avoid?
<ul>
<li>I wish I would have spent less time trying to figure things out on my own rather than just asking somone.</li>
</ul>
</li>
<li>Is there another role or company that I would prefer to work for as a full-time position?
<ul>
<li>For the most part no, I would perhaps like to work at a company that did functional programing more but that's not a huge deal. For the most part Instructure was awesome.</li>
</ul>
</li>
<li>What will I do when I return to school to prepare myself for a full-time position?
<ul>
<li>Focus more fully on discrete math.</li>
</ul>
</li>
</ul>
<p>Imagine having a younger sibling following in your footsteps. In many ways, this report should be written to him/her.</p>
<h1>Internship Report</h1>
<p>Gage Peterson</p>
<p>Fri Aug 21 17:20:27 MDT 2015</p>
<p>INTRO</p>
<h3>What do I wish I had learned in school before my internship?</h3>
<p>Firstly importance of writing tests. After working for a while it's scarry to look back at the develpment process that I did in school. Sure I tried to make sure some things where commented and things where as clean as possible but for the most of the time adding a few <code>cout</code> statements into it was all I did in the form of test which I quickly deleted. If I had known that I could think about a problem lot clearer and refactor my code with a greater amount of confidence that I would have probably not been up as manny late nights trying to figure out what my "small" code change broke. The only reason students aren't modivated to do it is because we throw away our projects once we get to version 1 and we never have to maintain that horrible code ever again. Because of this we don't realize the huge amount of bugs that are lurking in there. This is just doesn't scale with any project that exists for more than a month.</p>
<p>Another thing that I wish I would have know is <code>git</code>. While this is technically taught in school it bearly ever used there. Git is super important! It's pretty much taken over the entire world of software development and for good reason. Even if all students do is use it to save versions of their code they would be hugely benifited. I'm always saddened when my fellow students don't use it just because it seems harder or they are afraid of merge conflicts. But what they are really avoiding is comunicating what they are currently working on. Merge conflicts don't happen if you both know what the other person is doing.</p>
<p><em>you can't code alone</em>. As smart as you think you are you'll never be smart enough to code the project all by yourself and get things done in a acceptable amount of time. While I do see value in proving that you know something without the help of your classmates when it comes to working, you should probably only wait <strong>15 mins</strong> of <strong>hard trying</strong> to figure something out (somtimes longer if the problem is intrisicly just a hard problem) before you should stop and ask for help. If you spend too much time trying to bash your brain against a problem that udoubtably somone else on the team has already encountered our could help you is just wasting people's money. Remember that your sallery is high and your time is precious. Just ask. My personal rule is to work on it just long enough till I can think of an informed question. Even then somtimes you have to break down and say, "I have no idea what's going on. Please help me". This doesn't mean that you a bad programmer or that you'll never make it in this feild. you have to realize that codebases, programing languages, databases, etc. are always going to be more than you to fit in your head at any one time. Not to mention most of that knowlege won't do you any good to memorize because it will be out of date a few years from now when the codebase has changed or the better databases have been created.</p>
<p>I also wish that I had been taught that Object orientation is not going to solve my problems. While it does provide one abstraction for your buissness logic it's not allways the best one (sorry Java) and not going to do much to improve the quality of your code. That part is still in your cort. I wish I would have been taught that pair programing is a good thing! In school when one person is typing and the other is watching we often call that "cheating" but in the workplace that's called "collaberating" or in it's more <em>Agile</em> term <strong>pair programing</strong>. It really does help the quality of your code by a huge amount. It helps you find a ton more bugs and more importantly your able to learn from people that know some things that you don't.</p>
<h3>Is there another role or company that I would prefer to work for as a full-time position?</h3>
<p>For the most part I want to say no. I really confirmed to myself that I want to be a software developer and I really think Instructure is one of the most pleasent places to work. They really put a ton of trust into their engineers. They give basicly ifinite time off (within reason). I rarely get tired of working there at the end of the day or week. The only thing that I feel is left to be dired at Instructure is harder problems to solve. While they may have some hard problems to solve they deal mostly</p>
<h3>What will I do when I return to school to prepare myself for a full-time position?</h3>
<p>I really want to focus a lot more on math. This seems like a weird considering that I spent most of my time not doing math at work. The main reason is some of the coolest problems you can slove can be done in math. Just simply learning Haskell on the side like many of my coworkers do can really open your mind to how to solve things. Mathmatical concepts like Monads, functors, pure functions, P vs NP, graph theory, formal grammars are all things that have helped me to realize that the most obvious or popular solution was rarely the best solution. I want to horde up as much of that knowledge as I can so that when I'm faced with a hard problem I have more tools to make something elegant verses something that only half works, or doesn't quite abstract things quite right causing problems when new features are added to the project. Math if nothing else makes sure.</p>
<p>Be more organized I really learned that there's a lot of value in being organized It sounds like a no-brainer yet so many students try to fly by the seat of their pants getting things done right before due dates come knocking on the door. I tend to be one of those students. However in the workplace this can't and won't be tolerated You need to know when your meeting is and what you need to work on. You need to remember to do the things you say your going to do. The main concrete change that I'm going to make is to use a planner more.</p>
<p>CONCLUSION</p>
<ul>
<li><a href="http://localhost:5000/instructure" rel="noopener noreferrer">Instructure</a></li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
</ul>


10:45:07.141 [debug] l:len=765

10:45:07.141 [debug] l:buf=5:<h1>Instructure Internship Report</h1>
<h1>Outline</h1>
<ul>
<li>What do I wish I had learned in school before my internship?
x TTD
x More about Git
<ul>
<li>Agile Stuff</li>
<li>Performance doesn't matter.</li>
<li>A high level language that wasn't C++ or Java</li>
<li>That OO isn't going to solve my problems</li>
<li>Functional Programing concepts
x Speed is more important than perfect sometimes. (I did learn this in my software design class but it wasn't reall talked about more than once)</li>
<li>Usability matters</li>
<li>Pair programing</li>
</ul>
</li>
<li>How could I have done the internship itself better? Are there any mistakes that I would avoid?
<ul>
<li>I wish I would have spent less time trying to figure things out on my own rather than just asking somone.</li>
</ul>
</li>
<li>Is there another role or company that I would prefer to work for as a full-time position?
<ul>
<li>For the most part no, I would perhaps like to work at a company that did functional programing more but that's not a huge deal. For the most part Instructure was awesome.</li>
</ul>
</li>
<li>What will I do when I return to school to prepare myself for a full-time position?
<ul>
<li>Focus more fully on discrete math.</li>
</ul>
</li>
</ul>
<p>Imagine having a younger sibling following in your footsteps. In many ways, this report should be written to him/her.</p>
<h1>Internship Report</h1>
<p>Gage Peterson</p>
<p>Fri Aug 21 17:20:27 MDT 2015</p>
<p>INTRO</p>
<h3>What do I wish I had learned in school before my internship?</h3>
<p>Firstly importance of writing tests. After working for a while it's scarry to look back at the develpment process that I did in school. Sure I tried to make sure some things where commented and things where as clean as possible but for the most of the time adding a few <code>cout</code> statements into it was all I did in the form of test which I quickly deleted. If I had known that I could think about a problem lot clearer and refactor my code with a greater amount of confidence that I would have probably not been up as manny late nights trying to figure out what my "small" code change broke. The only reason students aren't modivated to do it is because we throw away our projects once we get to version 1 and we never have to maintain that horrible code ever again. Because of this we don't realize the huge amount of bugs that are lurking in there. This is just doesn't scale with any project that exists for more than a month.</p>
<p>Another thing that I wish I would have know is <code>git</code>. While this is technically taught in school it bearly ever used there. Git is super important! It's pretty much taken over the entire world of software development and for good reason. Even if all students do is use it to save versions of their code they would be hugely benifited. I'm always saddened when my fellow students don't use it just because it seems harder or they are afraid of merge conflicts. But what they are really avoiding is comunicating what they are currently working on. Merge conflicts don't happen if you both know what the other person is doing.</p>
<p><em>you can't code alone</em>. As smart as you think you are you'll never be smart enough to code the project all by yourself and get things done in a acceptable amount of time. While I do see value in proving that you know something without the help of your classmates when it comes to working, you should probably only wait <strong>15 mins</strong> of <strong>hard trying</strong> to figure something out (somtimes longer if the problem is intrisicly just a hard problem) before you should stop and ask for help. If you spend too much time trying to bash your brain against a problem that udoubtably somone else on the team has already encountered our could help you is just wasting people's money. Remember that your sallery is high and your time is precious. Just ask. My personal rule is to work on it just long enough till I can think of an informed question. Even then somtimes you have to break down and say, "I have no idea what's going on. Please help me". This doesn't mean that you a bad programmer or that you'll never make it in this feild. you have to realize that codebases, programing languages, databases, etc. are always going to be more than you to fit in your head at any one time. Not to mention most of that knowlege won't do you any good to memorize because it will be out of date a few years from now when the codebase has changed or the better databases have been created.</p>
<p>I also wish that I had been taught that Object orientation is not going to solve my problems. While it does provide one abstraction for your buissness logic it's not allways the best one (sorry Java) and not going to do much to improve the quality of your code. That part is still in your cort. I wish I would have been taught that pair programing is a good thing! In school when one person is typing and the other is watching we often call that "cheating" but in the workplace that's called "collaberating" or in it's more <em>Agile</em> term <strong>pair programing</strong>. It really does help the quality of your code by a huge amount. It helps you find a ton more bugs and more importantly your able to learn from people that know some things that you don't.</p>
<h3>Is there another role or company that I would prefer to work for as a full-time position?</h3>
<p>For the most part I want to say no. I really confirmed to myself that I want to be a software developer and I really think Instructure is one of the most pleasent places to work. They really put a ton of trust into their engineers. They give basicly ifinite time off (within reason). I rarely get tired of working there at the end of the day or week. The only thing that I feel is left to be dired at Instructure is harder problems to solve. While they may have some hard problems to solve they deal mostly</p>
<h3>What will I do when I return to school to prepare myself for a full-time position?</h3>
<p>I really want to focus a lot more on math. This seems like a weird considering that I spent most of my time not doing math at work. The main reason is some of the coolest problems you can slove can be done in math. Just simply learning Haskell on the side like many of my coworkers do can really open your mind to how to solve things. Mathmatical concepts like Monads, functors, pure functions, P vs NP, graph theory, formal grammars are all things that have helped me to realize that the most obvious or popular solution was rarely the best solution. I want to horde up as much of that knowledge as I can so that when I'm faced with a hard problem I have more tools to make something elegant verses something that only half works, or doesn't quite abstract things quite right causing problems when new features are added to the project. Math if nothing else makes sure.</p>
<p>Be more organized I really learned that there's a lot of value in being organized It sounds like a no-brainer yet so many students try to fly by the seat of their pants getting things done right before due dates come knocking on the door. I tend to be one of those students. However in the workplace this can't and won't be tolerated You need to know when your meeting is and what you need to work on. You need to remember to do the things you say your going to do. The main concrete change that I'm going to make is to use a planner more.</p>
<p>CONCLUSION</p>
<ul>
<li><a href="http://localhost:5000/instructure" rel="noopener noreferrer">Instructure</a></li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
</ul>


10:45:07.141 [debug] l:len=

10:45:07.141 [debug] l:buf empty

10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf=255:<h1>Evergreen Notes - Andys</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a></li>
</ul>


10:45:07.142 [debug] l:len=2

10:45:07.142 [debug] l:buf=55:<h1>Evergreen Notes - Andys</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a></li>
</ul>


10:45:07.142 [debug] l:len=25

10:45:07.142 [debug] l:buf=5:<h1>Evergreen Notes - Andys</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a></li>
</ul>


10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf empty

10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf=1683:<h1>Functional CSS - The mic drop 🎤⏬</h1>
<p>Questions of Functional CSS:</p>
<ol>
<li>Inline styles?</li>
<li>Ugly</li>
<li>Perf?</li>
<li></li>
</ol>
<hr>
<p>What is Functional CSS?</p>
<p>Instead of applying a single class to an element</p>
<pre><code>&lt;div class="tan-box"&gt;
	This is a tan box
&lt;/div&gt;
</code></pre>
<p>you apply lots!</p>
<pre><code>&lt;div className="bg-tan p-5 text-sm font-bold"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>First Question, isn't this just inline styles???</h2>
<p>No it has the following advantages over them:</p>
<pre><code>1. The CSS specificity is even, little to know overriding
2. You can do breakpoints, hovers, animations and everything else that isn't possible with inline styles API
3. Everything is aligned to a design system (most important)
4. The overall bundle size is lower
</code></pre>
<p>The thing that is the same is:
1. No specificity wars
2. No danger of picking the same name as someone else</p>
<h2>But I don't like this my HTML looks bad now</h2>
<p>Well you can do a couple of things to make it look better.</p>
<ol>
<li>Put it into a component:</li>
</ol>
<pre><code>&lt;TanBox /&gt;
</code></pre>
<ol>
<li>Break it up on multiple lines</li>
</ol>
<pre><code>&lt;div className="
bg-tan
p-5
text-sm
font-bold
"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>Yeah but is anyone using this?</h2>
<p>How about FACEBOOK, and Mapbox and a bunch of other people</p>
<h2>Looks like a lot of work!</h2>
<p>Tailwind!</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.142 [debug] l:len=1

10:45:07.142 [debug] l:buf=683:<h1>Functional CSS - The mic drop 🎤⏬</h1>
<p>Questions of Functional CSS:</p>
<ol>
<li>Inline styles?</li>
<li>Ugly</li>
<li>Perf?</li>
<li></li>
</ol>
<hr>
<p>What is Functional CSS?</p>
<p>Instead of applying a single class to an element</p>
<pre><code>&lt;div class="tan-box"&gt;
	This is a tan box
&lt;/div&gt;
</code></pre>
<p>you apply lots!</p>
<pre><code>&lt;div className="bg-tan p-5 text-sm font-bold"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>First Question, isn't this just inline styles???</h2>
<p>No it has the following advantages over them:</p>
<pre><code>1. The CSS specificity is even, little to know overriding
2. You can do breakpoints, hovers, animations and everything else that isn't possible with inline styles API
3. Everything is aligned to a design system (most important)
4. The overall bundle size is lower
</code></pre>
<p>The thing that is the same is:
1. No specificity wars
2. No danger of picking the same name as someone else</p>
<h2>But I don't like this my HTML looks bad now</h2>
<p>Well you can do a couple of things to make it look better.</p>
<ol>
<li>Put it into a component:</li>
</ol>
<pre><code>&lt;TanBox /&gt;
</code></pre>
<ol>
<li>Break it up on multiple lines</li>
</ol>
<pre><code>&lt;div className="
bg-tan
p-5
text-sm
font-bold
"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>Yeah but is anyone using this?</h2>
<p>How about FACEBOOK, and Mapbox and a bunch of other people</p>
<h2>Looks like a lot of work!</h2>
<p>Tailwind!</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.142 [debug] l:len=16

10:45:07.142 [debug] l:buf=83:<h1>Functional CSS - The mic drop 🎤⏬</h1>
<p>Questions of Functional CSS:</p>
<ol>
<li>Inline styles?</li>
<li>Ugly</li>
<li>Perf?</li>
<li></li>
</ol>
<hr>
<p>What is Functional CSS?</p>
<p>Instead of applying a single class to an element</p>
<pre><code>&lt;div class="tan-box"&gt;
	This is a tan box
&lt;/div&gt;
</code></pre>
<p>you apply lots!</p>
<pre><code>&lt;div className="bg-tan p-5 text-sm font-bold"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>First Question, isn't this just inline styles???</h2>
<p>No it has the following advantages over them:</p>
<pre><code>1. The CSS specificity is even, little to know overriding
2. You can do breakpoints, hovers, animations and everything else that isn't possible with inline styles API
3. Everything is aligned to a design system (most important)
4. The overall bundle size is lower
</code></pre>
<p>The thing that is the same is:
1. No specificity wars
2. No danger of picking the same name as someone else</p>
<h2>But I don't like this my HTML looks bad now</h2>
<p>Well you can do a couple of things to make it look better.</p>
<ol>
<li>Put it into a component:</li>
</ol>
<pre><code>&lt;TanBox /&gt;
</code></pre>
<ol>
<li>Break it up on multiple lines</li>
</ol>
<pre><code>&lt;div className="
bg-tan
p-5
text-sm
font-bold
"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>Yeah but is anyone using this?</h2>
<p>How about FACEBOOK, and Mapbox and a bunch of other people</p>
<h2>Looks like a lot of work!</h2>
<p>Tailwind!</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.142 [debug] l:len=168

10:45:07.142 [debug] l:buf=3:<h1>Functional CSS - The mic drop 🎤⏬</h1>
<p>Questions of Functional CSS:</p>
<ol>
<li>Inline styles?</li>
<li>Ugly</li>
<li>Perf?</li>
<li></li>
</ol>
<hr>
<p>What is Functional CSS?</p>
<p>Instead of applying a single class to an element</p>
<pre><code>&lt;div class="tan-box"&gt;
	This is a tan box
&lt;/div&gt;
</code></pre>
<p>you apply lots!</p>
<pre><code>&lt;div className="bg-tan p-5 text-sm font-bold"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>First Question, isn't this just inline styles???</h2>
<p>No it has the following advantages over them:</p>
<pre><code>1. The CSS specificity is even, little to know overriding
2. You can do breakpoints, hovers, animations and everything else that isn't possible with inline styles API
3. Everything is aligned to a design system (most important)
4. The overall bundle size is lower
</code></pre>
<p>The thing that is the same is:
1. No specificity wars
2. No danger of picking the same name as someone else</p>
<h2>But I don't like this my HTML looks bad now</h2>
<p>Well you can do a couple of things to make it look better.</p>
<ol>
<li>Put it into a component:</li>
</ol>
<pre><code>&lt;TanBox /&gt;
</code></pre>
<ol>
<li>Break it up on multiple lines</li>
</ol>
<pre><code>&lt;div className="
bg-tan
p-5
text-sm
font-bold
"&gt;
  This is a tan box
&lt;/div&gt;
</code></pre>
<h2>Yeah but is anyone using this?</h2>
<p>How about FACEBOOK, and Mapbox and a bunch of other people</p>
<h2>Looks like a lot of work!</h2>
<p>Tailwind!</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf empty

10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf=80:<h1>BC4-MyPlace</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.142 [debug] l:len=8

10:45:07.142 [debug] l:buf=0:<h1>BC4-MyPlace</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf empty

10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf=79:<h1>JavaScript</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.142 [debug] l:len=7

10:45:07.142 [debug] l:buf=9:<h1>JavaScript</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.142 [debug] l:len=

10:45:07.142 [debug] l:buf empty

10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf=694:<h1>configuration as a UX cop-out</h1>
<p>Often times when users complain that, "You're doing this to me!" if you provide configuration then you get the benefit of calming down the people who complain yet still retain your defaults that most people unknowingly fall into (usually <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to do <a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
</ul>


10:45:07.143 [debug] l:len=6

10:45:07.143 [debug] l:buf=94:<h1>configuration as a UX cop-out</h1>
<p>Often times when users complain that, "You're doing this to me!" if you provide configuration then you get the benefit of calming down the people who complain yet still retain your defaults that most people unknowingly fall into (usually <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to do <a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
</ul>


10:45:07.143 [debug] l:len=69

10:45:07.143 [debug] l:buf=4:<h1>configuration as a UX cop-out</h1>
<p>Often times when users complain that, "You're doing this to me!" if you provide configuration then you get the benefit of calming down the people who complain yet still retain your defaults that most people unknowingly fall into (usually <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to do <a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a>).</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
</ul>


10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf empty

10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf=892:<h1>“The Greatest Sales Deck I’ve Ever Seen”</h1>
<p>@araskin</p>
<p><a href="https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0" rel="noopener noreferrer">https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0</a></p>
<h2>change is in the air</h2>
<h2>there will be winners and losers</h2>
<h2>tease the promised land</h2>
<h2>Introduce Features as “Magic Gifts” for Overcoming Obstacles to the Promised Land</h2>
<blockquote>
<p>Your prospect is Luke, and you’re Obi Wan, furnishing a lightsaber to help him defeat the Empire.</p>
</blockquote>
<h2>Present Evidence that You Can Make the Story Come True</h2>
<ul>
<li><a href="http://localhost:5000/selling" rel="noopener noreferrer">Selling</a></li>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
</ul>


10:45:07.143 [debug] l:len=8

10:45:07.143 [debug] l:buf=92:<h1>“The Greatest Sales Deck I’ve Ever Seen”</h1>
<p>@araskin</p>
<p><a href="https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0" rel="noopener noreferrer">https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0</a></p>
<h2>change is in the air</h2>
<h2>there will be winners and losers</h2>
<h2>tease the promised land</h2>
<h2>Introduce Features as “Magic Gifts” for Overcoming Obstacles to the Promised Land</h2>
<blockquote>
<p>Your prospect is Luke, and you’re Obi Wan, furnishing a lightsaber to help him defeat the Empire.</p>
</blockquote>
<h2>Present Evidence that You Can Make the Story Come True</h2>
<ul>
<li><a href="http://localhost:5000/selling" rel="noopener noreferrer">Selling</a></li>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
</ul>


10:45:07.143 [debug] l:len=89

10:45:07.143 [debug] l:buf=2:<h1>“The Greatest Sales Deck I’ve Ever Seen”</h1>
<p>@araskin</p>
<p><a href="https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0" rel="noopener noreferrer">https://medium.com/the-mission/the-greatest-sales-deck-ive-ever-seen-4f4ef3391ba0</a></p>
<h2>change is in the air</h2>
<h2>there will be winners and losers</h2>
<h2>tease the promised land</h2>
<h2>Introduce Features as “Magic Gifts” for Overcoming Obstacles to the Promised Land</h2>
<blockquote>
<p>Your prospect is Luke, and you’re Obi Wan, furnishing a lightsaber to help him defeat the Empire.</p>
</blockquote>
<h2>Present Evidence that You Can Make the Story Come True</h2>
<ul>
<li><a href="http://localhost:5000/selling" rel="noopener noreferrer">Selling</a></li>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
</ul>


10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf empty

10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf=262:<h1>Never Interupt a Programer (comic)</h1>
<hr>
<h2><a href="http://localhost:5000/never-interupt-a-programmer-image.png" rel="noopener noreferrer">Never Interupt a programmer (image)</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.143 [debug] l:len=2

10:45:07.143 [debug] l:buf=62:<h1>Never Interupt a Programer (comic)</h1>
<hr>
<h2><a href="http://localhost:5000/never-interupt-a-programmer-image.png" rel="noopener noreferrer">Never Interupt a programmer (image)</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.143 [debug] l:len=26

10:45:07.143 [debug] l:buf=2:<h1>Never Interupt a Programer (comic)</h1>
<hr>
<h2><a href="http://localhost:5000/never-interupt-a-programmer-image.png" rel="noopener noreferrer">Never Interupt a programmer (image)</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf empty

10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf=410:<h1>Why checking messages is addictive</h1>
<p>There are <a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a>.</p>
<p>Checking messages is addictive because it provides all</p>
<p>Ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>


10:45:07.143 [debug] l:len=4

10:45:07.143 [debug] l:buf=10:<h1>Why checking messages is addictive</h1>
<p>There are <a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a>.</p>
<p>Checking messages is addictive because it provides all</p>
<p>Ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>


10:45:07.143 [debug] l:len=41

10:45:07.143 [debug] l:buf=0:<h1>Why checking messages is addictive</h1>
<p>There are <a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a>.</p>
<p>Checking messages is addictive because it provides all</p>
<p>Ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/</a></p>


10:45:07.143 [debug] l:len=

10:45:07.143 [debug] l:buf empty

10:45:07.144 [debug] l:len=

10:45:07.144 [debug] l:buf=339:<h1>Pasted image 28</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.144 [debug] l:len=3

10:45:07.144 [debug] l:buf=39:<h1>Pasted image 28</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.144 [debug] l:len=33

10:45:07.144 [debug] l:buf=9:<h1>Pasted image 28</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.144 [debug] l:len=

10:45:07.144 [debug] l:buf empty

10:45:07.144 [debug] l:len=

10:45:07.144 [debug] l:buf=74:<h1>Pipeline Efficency is no longer our problem</h1>
<ul>
<li></li>
</ul>


10:45:07.144 [debug] l:len=7

10:45:07.144 [debug] l:buf=4:<h1>Pipeline Efficency is no longer our problem</h1>
<ul>
<li></li>
</ul>


10:45:07.144 [debug] l:len=

10:45:07.144 [debug] l:buf empty

10:45:07.144 [debug] l:len=

10:45:07.144 [debug] l:buf=1954:<h1>Talk Ideas</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<p>GOOD CFP example: <a href="https://docs.google.com/document/d/1uT4aimBXzLmSH7rOxnOYGX1iyHw76mKrs5jnwq3TWrg/edit" rel="noopener noreferrer">Infinitely Better UIs with Finite Automata - Google Docs</a></p>
<ul>
<li>Using Functional CSS to scale design systems
<ul>
<li>Alt Title:
<ul>
<li>Creating a Language of design With TachyonsCSS</li>
<li>Stop writing CSS and still look good (with <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>!)</li>
</ul>
</li>
</ul>
</li>
<li>[[Other/Old Notes/Simplenote/Elm]]
<ul>
<li>JSON decoders
<ul>
<li>Just get Elm installed with create-elm-app</li>
<li>Basic Syntax of <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no gerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn Json into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>A tour of Alt-JS languages</li>
<li>How language design (technology in general) affects the products you create</li>
<li>Introduction to <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a>, a fast open source graph database</li>
<li>Putting the graph in GraphQL</li>
</ul>


10:45:07.144 [debug] l:len=1

10:45:07.144 [debug] l:buf=954:<h1>Talk Ideas</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<p>GOOD CFP example: <a href="https://docs.google.com/document/d/1uT4aimBXzLmSH7rOxnOYGX1iyHw76mKrs5jnwq3TWrg/edit" rel="noopener noreferrer">Infinitely Better UIs with Finite Automata - Google Docs</a></p>
<ul>
<li>Using Functional CSS to scale design systems
<ul>
<li>Alt Title:
<ul>
<li>Creating a Language of design With TachyonsCSS</li>
<li>Stop writing CSS and still look good (with <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>!)</li>
</ul>
</li>
</ul>
</li>
<li>[[Other/Old Notes/Simplenote/Elm]]
<ul>
<li>JSON decoders
<ul>
<li>Just get Elm installed with create-elm-app</li>
<li>Basic Syntax of <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no gerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn Json into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>A tour of Alt-JS languages</li>
<li>How language design (technology in general) affects the products you create</li>
<li>Introduction to <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a>, a fast open source graph database</li>
<li>Putting the graph in GraphQL</li>
</ul>


10:45:07.144 [debug] l:len=19

10:45:07.144 [debug] l:buf=54:<h1>Talk Ideas</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<p>GOOD CFP example: <a href="https://docs.google.com/document/d/1uT4aimBXzLmSH7rOxnOYGX1iyHw76mKrs5jnwq3TWrg/edit" rel="noopener noreferrer">Infinitely Better UIs with Finite Automata - Google Docs</a></p>
<ul>
<li>Using Functional CSS to scale design systems
<ul>
<li>Alt Title:
<ul>
<li>Creating a Language of design With TachyonsCSS</li>
<li>Stop writing CSS and still look good (with <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>!)</li>
</ul>
</li>
</ul>
</li>
<li>[[Other/Old Notes/Simplenote/Elm]]
<ul>
<li>JSON decoders
<ul>
<li>Just get Elm installed with create-elm-app</li>
<li>Basic Syntax of <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no gerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn Json into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>A tour of Alt-JS languages</li>
<li>How language design (technology in general) affects the products you create</li>
<li>Introduction to <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a>, a fast open source graph database</li>
<li>Putting the graph in GraphQL</li>
</ul>


10:45:07.144 [debug] l:len=195

10:45:07.144 [debug] l:buf=4:<h1>Talk Ideas</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<p>GOOD CFP example: <a href="https://docs.google.com/document/d/1uT4aimBXzLmSH7rOxnOYGX1iyHw76mKrs5jnwq3TWrg/edit" rel="noopener noreferrer">Infinitely Better UIs with Finite Automata - Google Docs</a></p>
<ul>
<li>Using Functional CSS to scale design systems
<ul>
<li>Alt Title:
<ul>
<li>Creating a Language of design With TachyonsCSS</li>
<li>Stop writing CSS and still look good (with <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>!)</li>
</ul>
</li>
</ul>
</li>
<li>[[Other/Old Notes/Simplenote/Elm]]
<ul>
<li>JSON decoders
<ul>
<li>Just get Elm installed with create-elm-app</li>
<li>Basic Syntax of <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no gerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn Json into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>A tour of Alt-JS languages</li>
<li>How language design (technology in general) affects the products you create</li>
<li>Introduction to <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a>, a fast open source graph database</li>
<li>Putting the graph in GraphQL</li>
</ul>


10:45:07.144 [debug] l:len=

10:45:07.145 [debug] l:buf empty

10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf=309:<h1>Posting V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.145 [debug] l:len=3

10:45:07.145 [debug] l:buf=09:<h1>Posting V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.145 [debug] l:len=30

10:45:07.145 [debug] l:buf=9:<h1>Posting V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf empty

10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf=821:<h1>Slack's poor use of space</h1>
<p>See: <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a> and <a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.145 [debug] l:len=8

10:45:07.145 [debug] l:buf=21:<h1>Slack's poor use of space</h1>
<p>See: <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a> and <a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.145 [debug] l:len=82

10:45:07.145 [debug] l:buf=1:<h1>Slack's poor use of space</h1>
<p>See: <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a> and <a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-gif-problem" rel="noopener noreferrer">Slack's GIF problem</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf empty

10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf=252:<h1>Basecamp is slow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.145 [debug] l:len=2

10:45:07.145 [debug] l:buf=52:<h1>Basecamp is slow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.145 [debug] l:len=25

10:45:07.145 [debug] l:buf=2:<h1>Basecamp is slow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.145 [debug] l:len=

10:45:07.145 [debug] l:buf empty

10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf=1651:<h1>force the user to read everything</h1>
<p>This happens whenever the <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> that has a mixture of useless and super important information the user is <em><strong>forced</strong></em> to read everything despite the activity mostly wasting your time.</p>
<p>This happens in traditional email because you have newsletters, spam, and important messages from your boss all mixed up into one place. <a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> solves this by <a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.146 [debug] l:len=1

10:45:07.146 [debug] l:buf=651:<h1>force the user to read everything</h1>
<p>This happens whenever the <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> that has a mixture of useless and super important information the user is <em><strong>forced</strong></em> to read everything despite the activity mostly wasting your time.</p>
<p>This happens in traditional email because you have newsletters, spam, and important messages from your boss all mixed up into one place. <a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> solves this by <a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.146 [debug] l:len=16

10:45:07.146 [debug] l:buf=51:<h1>force the user to read everything</h1>
<p>This happens whenever the <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> that has a mixture of useless and super important information the user is <em><strong>forced</strong></em> to read everything despite the activity mostly wasting your time.</p>
<p>This happens in traditional email because you have newsletters, spam, and important messages from your boss all mixed up into one place. <a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> solves this by <a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.146 [debug] l:len=165

10:45:07.146 [debug] l:buf=1:<h1>force the user to read everything</h1>
<p>This happens whenever the <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> that has a mixture of useless and super important information the user is <em><strong>forced</strong></em> to read everything despite the activity mostly wasting your time.</p>
<p>This happens in traditional email because you have newsletters, spam, and important messages from your boss all mixed up into one place. <a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> solves this by <a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf empty

10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf=407:<h1>risk</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
</ul>


10:45:07.146 [debug] l:len=4

10:45:07.146 [debug] l:buf=07:<h1>risk</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
</ul>


10:45:07.146 [debug] l:len=40

10:45:07.146 [debug] l:buf=7:<h1>risk</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
</ul>


10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf empty

10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf=576:<h1>Virtue</h1>
<blockquote>
<p>What you do when no one is watching, or "nobody" will know. Even in those</p>
</blockquote>
<blockquote>
<p>Internal fortitude</p>
</blockquote>
<h1>How to avoid</h1>
<blockquote>
<p>The storm is raging about you, you have no way to stop it. But you can dress warm and seek shelter.</p>
</blockquote>
<h2>1. Create a plan</h2>
<h2>2. Be honest and keep communication open</h2>
<p><em>Let them know you are a source of help not punishment</em></p>
<p>Tags:
virtue, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.146 [debug] l:len=5

10:45:07.146 [debug] l:buf=76:<h1>Virtue</h1>
<blockquote>
<p>What you do when no one is watching, or "nobody" will know. Even in those</p>
</blockquote>
<blockquote>
<p>Internal fortitude</p>
</blockquote>
<h1>How to avoid</h1>
<blockquote>
<p>The storm is raging about you, you have no way to stop it. But you can dress warm and seek shelter.</p>
</blockquote>
<h2>1. Create a plan</h2>
<h2>2. Be honest and keep communication open</h2>
<p><em>Let them know you are a source of help not punishment</em></p>
<p>Tags:
virtue, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.146 [debug] l:len=57

10:45:07.146 [debug] l:buf=6:<h1>Virtue</h1>
<blockquote>
<p>What you do when no one is watching, or "nobody" will know. Even in those</p>
</blockquote>
<blockquote>
<p>Internal fortitude</p>
</blockquote>
<h1>How to avoid</h1>
<blockquote>
<p>The storm is raging about you, you have no way to stop it. But you can dress warm and seek shelter.</p>
</blockquote>
<h2>1. Create a plan</h2>
<h2>2. Be honest and keep communication open</h2>
<p><em>Let them know you are a source of help not punishment</em></p>
<p>Tags:
virtue, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf empty

10:45:07.146 [debug] l:len=

10:45:07.146 [debug] l:buf=86:<h1>Knowlege transfer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.146 [debug] l:len=8

10:45:07.146 [debug] l:buf=6:<h1>Knowlege transfer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.146 [debug] l:len=

10:45:07.147 [debug] l:buf empty

10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf=555:<h1>Technology adoption life cycle</h1>
<p>Based on the book <a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-39.png" rel="noopener noreferrer">Pasted image 39</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="https://en.wikipedia.org/wiki/Technology_adoption_life_cycle" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Technology_adoption_life_cycle</a></p>


10:45:07.147 [debug] l:len=5

10:45:07.147 [debug] l:buf=55:<h1>Technology adoption life cycle</h1>
<p>Based on the book <a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-39.png" rel="noopener noreferrer">Pasted image 39</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="https://en.wikipedia.org/wiki/Technology_adoption_life_cycle" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Technology_adoption_life_cycle</a></p>


10:45:07.147 [debug] l:len=55

10:45:07.147 [debug] l:buf=5:<h1>Technology adoption life cycle</h1>
<p>Based on the book <a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-39.png" rel="noopener noreferrer">Pasted image 39</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="https://en.wikipedia.org/wiki/Technology_adoption_life_cycle" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Technology_adoption_life_cycle</a></p>


10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf empty

10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf=297:<h1>Reference Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.147 [debug] l:len=2

10:45:07.147 [debug] l:buf=97:<h1>Reference Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.147 [debug] l:len=29

10:45:07.147 [debug] l:buf=7:<h1>Reference Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf empty

10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf=76:<h1>Modules</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.147 [debug] l:len=7

10:45:07.147 [debug] l:buf=6:<h1>Modules</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.147 [debug] l:len=

10:45:07.147 [debug] l:buf empty

10:45:07.148 [debug] l:len=

10:45:07.148 [debug] l:buf=2123:<h1>Ryan Singer</h1>
<blockquote>
<p>Head of Product Strategy at Basecamp. Software dev/design. Author of Shape Up: <a href="http://basecamp.com/shapeup" rel="noopener noreferrer">http://basecamp.com/shapeup</a> Tweets technical, book in plain English.</p>
</blockquote>
<p>Links: <a href="https://twitter.com/rjs" rel="noopener noreferrer">https://twitter.com/rjs</a>, <a href="https://feltpresence.com/" rel="noopener noreferrer">https://feltpresence.com/</a></p>
<p>Has a few podcasts:</p>
<ul>
<li><a href="http://synthetic.transistor.fm/" rel="noopener noreferrer">http://synthetic.transistor.fm/</a></li>
<li><a href="http://demandthinking.com/" rel="noopener noreferrer">http://demandthinking.com/</a></li>
</ul>
<p>Tweets some sick stuff:
<a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a></li>
</ul>


10:45:07.148 [debug] l:len=2

10:45:07.148 [debug] l:buf=123:<h1>Ryan Singer</h1>
<blockquote>
<p>Head of Product Strategy at Basecamp. Software dev/design. Author of Shape Up: <a href="http://basecamp.com/shapeup" rel="noopener noreferrer">http://basecamp.com/shapeup</a> Tweets technical, book in plain English.</p>
</blockquote>
<p>Links: <a href="https://twitter.com/rjs" rel="noopener noreferrer">https://twitter.com/rjs</a>, <a href="https://feltpresence.com/" rel="noopener noreferrer">https://feltpresence.com/</a></p>
<p>Has a few podcasts:</p>
<ul>
<li><a href="http://synthetic.transistor.fm/" rel="noopener noreferrer">http://synthetic.transistor.fm/</a></li>
<li><a href="http://demandthinking.com/" rel="noopener noreferrer">http://demandthinking.com/</a></li>
</ul>
<p>Tweets some sick stuff:
<a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a></li>
</ul>


10:45:07.148 [debug] l:len=21

10:45:07.148 [debug] l:buf=23:<h1>Ryan Singer</h1>
<blockquote>
<p>Head of Product Strategy at Basecamp. Software dev/design. Author of Shape Up: <a href="http://basecamp.com/shapeup" rel="noopener noreferrer">http://basecamp.com/shapeup</a> Tweets technical, book in plain English.</p>
</blockquote>
<p>Links: <a href="https://twitter.com/rjs" rel="noopener noreferrer">https://twitter.com/rjs</a>, <a href="https://feltpresence.com/" rel="noopener noreferrer">https://feltpresence.com/</a></p>
<p>Has a few podcasts:</p>
<ul>
<li><a href="http://synthetic.transistor.fm/" rel="noopener noreferrer">http://synthetic.transistor.fm/</a></li>
<li><a href="http://demandthinking.com/" rel="noopener noreferrer">http://demandthinking.com/</a></li>
</ul>
<p>Tweets some sick stuff:
<a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a></li>
</ul>


10:45:07.148 [debug] l:len=212

10:45:07.148 [debug] l:buf=3:<h1>Ryan Singer</h1>
<blockquote>
<p>Head of Product Strategy at Basecamp. Software dev/design. Author of Shape Up: <a href="http://basecamp.com/shapeup" rel="noopener noreferrer">http://basecamp.com/shapeup</a> Tweets technical, book in plain English.</p>
</blockquote>
<p>Links: <a href="https://twitter.com/rjs" rel="noopener noreferrer">https://twitter.com/rjs</a>, <a href="https://feltpresence.com/" rel="noopener noreferrer">https://feltpresence.com/</a></p>
<p>Has a few podcasts:</p>
<ul>
<li><a href="http://synthetic.transistor.fm/" rel="noopener noreferrer">http://synthetic.transistor.fm/</a></li>
<li><a href="http://demandthinking.com/" rel="noopener noreferrer">http://demandthinking.com/</a></li>
</ul>
<p>Tweets some sick stuff:
<a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a></li>
</ul>


10:45:07.148 [debug] l:len=

10:45:07.148 [debug] l:buf empty

10:45:07.148 [debug] l:len=

10:45:07.148 [debug] l:buf=96:<h1>2020-08-27</h1>
<h1>Thursday Aug 27th 2020</h1>
<p><strong>Typing test</strong>: 73 WPM</p>


10:45:07.148 [debug] l:len=9

10:45:07.148 [debug] l:buf=6:<h1>2020-08-27</h1>
<h1>Thursday Aug 27th 2020</h1>
<p><strong>Typing test</strong>: 73 WPM</p>


10:45:07.148 [debug] l:len=

10:45:07.148 [debug] l:buf empty

10:45:07.148 [debug] l:len=

10:45:07.148 [debug] l:buf=1173:<h1>JSON Decoders talk</h1>
<ul>
<li>Just get <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> installed with create-elm-app</li>
<li>Basic Syntax of [[Other/Old Notes/Simplenote/Elm]]</li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no guerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn JSON into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.149 [debug] l:len=1

10:45:07.149 [debug] l:buf=173:<h1>JSON Decoders talk</h1>
<ul>
<li>Just get <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> installed with create-elm-app</li>
<li>Basic Syntax of [[Other/Old Notes/Simplenote/Elm]]</li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no guerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn JSON into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.149 [debug] l:len=11

10:45:07.149 [debug] l:buf=73:<h1>JSON Decoders talk</h1>
<ul>
<li>Just get <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> installed with create-elm-app</li>
<li>Basic Syntax of [[Other/Old Notes/Simplenote/Elm]]</li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no guerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn JSON into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.149 [debug] l:len=117

10:45:07.149 [debug] l:buf=3:<h1>JSON Decoders talk</h1>
<ul>
<li>Just get <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> installed with create-elm-app</li>
<li>Basic Syntax of [[Other/Old Notes/Simplenote/Elm]]</li>
<li>Why JSON decoders?
<ul>
<li>Basically all external services talk in JSON</li>
<li>Elm's types are close to JSON but are not the same</li>
<li>There's no guerentee that the external thing will return things in the right form. To be safe we have to be defensive</li>
</ul>
</li>
<li>What is a JSON decoder
<ul>
<li>It's a list of instructions on how to turn JSON into elm types</li>
<li>It's a pure data structure not a function, although it can contain functions for the more difficult parts</li>
<li>It contains two values:
<ul>
<li>Json to be queried and prodded at</li>
<li>A <strong>single value</strong> of the decoders result so far which can be in one of 3 states:
<ul>
<li>Nothing (you haven't began decoding)</li>
<li>A decoded value</li>
<li>An Error</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf empty

10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf=557:<p>Steve jobs on creativity
And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
<p><a href="http://signalvnoise.com/posts/3124-give-it-five-minutes" rel="noopener noreferrer">http://signalvnoise.com/posts/3124-give-it-five-minutes</a></p>
<p>Tags:
creativity</p>


10:45:07.149 [debug] l:len=5

10:45:07.149 [debug] l:buf=57:<p>Steve jobs on creativity
And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
<p><a href="http://signalvnoise.com/posts/3124-give-it-five-minutes" rel="noopener noreferrer">http://signalvnoise.com/posts/3124-give-it-five-minutes</a></p>
<p>Tags:
creativity</p>


10:45:07.149 [debug] l:len=55

10:45:07.149 [debug] l:buf=7:<p>Steve jobs on creativity
And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
<p><a href="http://signalvnoise.com/posts/3124-give-it-five-minutes" rel="noopener noreferrer">http://signalvnoise.com/posts/3124-give-it-five-minutes</a></p>
<p>Tags:
creativity</p>


10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf empty

10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf=1352:<h1>Kanban boards</h1>
<ul>
<li>If you've ever seen a <a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a> or <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a> board then you have seen a <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board. They are characterized by cards or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and and vertical columns that you drag the tickets between. They've become very popular among the software development teams practicing <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>. They are also usually accompanied with different kanban agile methodologies (scrum and kanban being the most popular)</li>
<li>The idea is "empty space is a signal"</li>
<li>They are made to maximize <a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> Problem</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.149 [debug] l:len=1

10:45:07.149 [debug] l:buf=352:<h1>Kanban boards</h1>
<ul>
<li>If you've ever seen a <a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a> or <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a> board then you have seen a <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board. They are characterized by cards or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and and vertical columns that you drag the tickets between. They've become very popular among the software development teams practicing <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>. They are also usually accompanied with different kanban agile methodologies (scrum and kanban being the most popular)</li>
<li>The idea is "empty space is a signal"</li>
<li>They are made to maximize <a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> Problem</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.149 [debug] l:len=13

10:45:07.149 [debug] l:buf=52:<h1>Kanban boards</h1>
<ul>
<li>If you've ever seen a <a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a> or <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a> board then you have seen a <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board. They are characterized by cards or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and and vertical columns that you drag the tickets between. They've become very popular among the software development teams practicing <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>. They are also usually accompanied with different kanban agile methodologies (scrum and kanban being the most popular)</li>
<li>The idea is "empty space is a signal"</li>
<li>They are made to maximize <a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> Problem</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.149 [debug] l:len=135

10:45:07.149 [debug] l:buf=2:<h1>Kanban boards</h1>
<ul>
<li>If you've ever seen a <a href="http://localhost:5000/trello" rel="noopener noreferrer">Trello</a> or <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a> board then you have seen a <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board. They are characterized by cards or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and and vertical columns that you drag the tickets between. They've become very popular among the software development teams practicing <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>. They are also usually accompanied with different kanban agile methodologies (scrum and kanban being the most popular)</li>
<li>The idea is "empty space is a signal"</li>
<li>They are made to maximize <a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> Problem</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf empty

10:45:07.149 [debug] l:len=

10:45:07.149 [debug] l:buf=282:<h1>Basecamp's mobile app is always fully featured</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.149 [debug] l:len=2

10:45:07.149 [debug] l:buf=82:<h1>Basecamp's mobile app is always fully featured</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.149 [debug] l:len=28

10:45:07.149 [debug] l:buf=2:<h1>Basecamp's mobile app is always fully featured</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.149 [debug] l:len=

10:45:07.150 [debug] l:buf empty

10:45:07.150 [debug] l:len=

10:45:07.150 [debug] l:buf=4770:<h1>How to Take care of a Lawn</h1>
<p>Found here: <a href="https://www.houzz.com/discussions/1494167/help-my-lawn-needs-a-makeover" rel="noopener noreferrer">help!! my lawn needs a makeover!</a></p>
<p>Glad that you wrote in with your plan before implementing it. There are a few commonly held ideas that don't work well. Here is a plan that will help get you started. This is the collected wisdom of the Internet savvy homeowners and lawn care professionals summarized in a few words. If you follow the advice here you will have conquered at least 50% of all lawn problems. Once you have these three elements mastered, then you can worry about weeds (if you have any left), dog spots, and striping your lawn. But if you are not doing these three things, they will be the first three things suggested for you to correct.</p>
<ol>
<li>Watering
Water deeply and infrequently. Deeply means at least an hour in every zone, all at once. Infrequently means monthly during the cool months and no more than weekly during the hottest part of summer. Do not spread this out and water for 10 minutes every day. If your grass looks dry before the month/week is up, water longer next time. If that does not work, then you might have to water every 5 days during the summer's hottest period. Deep watering grows deep, drought resistant roots. Infrequent watering allows the top layer of soil to dry completely which kills off many shallow rooted weeds.</li>
</ol>
<p>You will have to learn to judge when to water your own lawn. If you live in Las Vegas your watering will be different than if you live in Vermont. Adjust your watering to your type of grass, humidity, wind, and soil type. It is worth noting that this technique is used successfully by professionals in Phoenix, so...just sayin.' The other factors make a difference. If you normally water 1 inch per week and you get 1/2 inch of rain, then adjust and water only 1/2 inch that week.</p>
<ol>
<li>
<p>Mowing
Every week mulch mow at the highest setting on your mower. Most grasses are the most dense when mowed tall. However, bermuda, centipede, and bent grasses will become the most dense when they are mowed at the lowest setting on your mower. In fact there are special mowers that can mow these grasses down to 1/16 inch. Dense grass shades out weeds, keeps the soil cooler, and uses less water than thin grass. Tall grass can feed the deep roots you developed in #1 above. Tall grass does not grow faster than short grass nor does it look shaggy sooner. Once all your grass is at the same height, tall grass just looks plush.</p>
</li>
<li>
<p>Fertilizing
Fertilize regularly. I fertilize 5 times per year using organic fertilizer. Which fertilizer you use is much less important than numbers 1 and 2 above. Follow the directions on the bag and do not overdo it. With chemical fertilizers, too little is better than too much. With organic fertilizers, too much is better than too little. At this point you do not have to worry about weed and feed products - remember at this point you are just trying to grow grass, not perfect it. Besides once you are doing these three things correctly, your weed problems should go away without herbicide.</p>
</li>
</ol>
<p>Great photos, by the way. Very helpful to assess your situation. Stay far away from weed n feed products. They do not work like you think they would. If you seriously want to spray something on the weeds, first determine if you have any St Augustine grass. You probably do and you really should target St Aug as your future lawn. But it does not respond well to "normal" herbicides. There is a special spray herbicide you can use for "southern lawns," a euphemism for St Augustine. Watch for it. I believe it comes in a black bottle with a purple label from Weed-B-Gone. Then spot spray your weeds rather than spraying the entire lawn. But don't spray right away. Fertilize the area first. Then about 2 weeks later, when the weeds are under the influence of the fertilizer, then spray them. Weeds die best when they are fairly healthy.</p>
<p>If you want to go with organic fertilizer you can start applying any time you want. I would suggest starting with something easy to find like rabbit food from your nearest feed store. It comes in 50-pound bags for about $10. Apply at a rate of 20 pounds per 1,000 square feet and moisten it after applying. Rabbit food is pelletized alfalfa. By moistening it the water will soak in and break the bonds of the pellet. This makes it impossible for birds to come in and eat all your fertilizer. Even though you would be applying rabbit food to the lawn, you will not see an increase in vermin. It gets moldy quickly and the mammals won't touch it. The mold is good, by the way. That's what you're looking for.</p>


10:45:07.150 [debug] l:len=4

10:45:07.150 [debug] l:buf=770:<h1>How to Take care of a Lawn</h1>
<p>Found here: <a href="https://www.houzz.com/discussions/1494167/help-my-lawn-needs-a-makeover" rel="noopener noreferrer">help!! my lawn needs a makeover!</a></p>
<p>Glad that you wrote in with your plan before implementing it. There are a few commonly held ideas that don't work well. Here is a plan that will help get you started. This is the collected wisdom of the Internet savvy homeowners and lawn care professionals summarized in a few words. If you follow the advice here you will have conquered at least 50% of all lawn problems. Once you have these three elements mastered, then you can worry about weeds (if you have any left), dog spots, and striping your lawn. But if you are not doing these three things, they will be the first three things suggested for you to correct.</p>
<ol>
<li>Watering
Water deeply and infrequently. Deeply means at least an hour in every zone, all at once. Infrequently means monthly during the cool months and no more than weekly during the hottest part of summer. Do not spread this out and water for 10 minutes every day. If your grass looks dry before the month/week is up, water longer next time. If that does not work, then you might have to water every 5 days during the summer's hottest period. Deep watering grows deep, drought resistant roots. Infrequent watering allows the top layer of soil to dry completely which kills off many shallow rooted weeds.</li>
</ol>
<p>You will have to learn to judge when to water your own lawn. If you live in Las Vegas your watering will be different than if you live in Vermont. Adjust your watering to your type of grass, humidity, wind, and soil type. It is worth noting that this technique is used successfully by professionals in Phoenix, so...just sayin.' The other factors make a difference. If you normally water 1 inch per week and you get 1/2 inch of rain, then adjust and water only 1/2 inch that week.</p>
<ol>
<li>
<p>Mowing
Every week mulch mow at the highest setting on your mower. Most grasses are the most dense when mowed tall. However, bermuda, centipede, and bent grasses will become the most dense when they are mowed at the lowest setting on your mower. In fact there are special mowers that can mow these grasses down to 1/16 inch. Dense grass shades out weeds, keeps the soil cooler, and uses less water than thin grass. Tall grass can feed the deep roots you developed in #1 above. Tall grass does not grow faster than short grass nor does it look shaggy sooner. Once all your grass is at the same height, tall grass just looks plush.</p>
</li>
<li>
<p>Fertilizing
Fertilize regularly. I fertilize 5 times per year using organic fertilizer. Which fertilizer you use is much less important than numbers 1 and 2 above. Follow the directions on the bag and do not overdo it. With chemical fertilizers, too little is better than too much. With organic fertilizers, too much is better than too little. At this point you do not have to worry about weed and feed products - remember at this point you are just trying to grow grass, not perfect it. Besides once you are doing these three things correctly, your weed problems should go away without herbicide.</p>
</li>
</ol>
<p>Great photos, by the way. Very helpful to assess your situation. Stay far away from weed n feed products. They do not work like you think they would. If you seriously want to spray something on the weeds, first determine if you have any St Augustine grass. You probably do and you really should target St Aug as your future lawn. But it does not respond well to "normal" herbicides. There is a special spray herbicide you can use for "southern lawns," a euphemism for St Augustine. Watch for it. I believe it comes in a black bottle with a purple label from Weed-B-Gone. Then spot spray your weeds rather than spraying the entire lawn. But don't spray right away. Fertilize the area first. Then about 2 weeks later, when the weeds are under the influence of the fertilizer, then spray them. Weeds die best when they are fairly healthy.</p>
<p>If you want to go with organic fertilizer you can start applying any time you want. I would suggest starting with something easy to find like rabbit food from your nearest feed store. It comes in 50-pound bags for about $10. Apply at a rate of 20 pounds per 1,000 square feet and moisten it after applying. Rabbit food is pelletized alfalfa. By moistening it the water will soak in and break the bonds of the pellet. This makes it impossible for birds to come in and eat all your fertilizer. Even though you would be applying rabbit food to the lawn, you will not see an increase in vermin. It gets moldy quickly and the mammals won't touch it. The mold is good, by the way. That's what you're looking for.</p>


10:45:07.150 [debug] l:len=47

10:45:07.150 [debug] l:buf=70:<h1>How to Take care of a Lawn</h1>
<p>Found here: <a href="https://www.houzz.com/discussions/1494167/help-my-lawn-needs-a-makeover" rel="noopener noreferrer">help!! my lawn needs a makeover!</a></p>
<p>Glad that you wrote in with your plan before implementing it. There are a few commonly held ideas that don't work well. Here is a plan that will help get you started. This is the collected wisdom of the Internet savvy homeowners and lawn care professionals summarized in a few words. If you follow the advice here you will have conquered at least 50% of all lawn problems. Once you have these three elements mastered, then you can worry about weeds (if you have any left), dog spots, and striping your lawn. But if you are not doing these three things, they will be the first three things suggested for you to correct.</p>
<ol>
<li>Watering
Water deeply and infrequently. Deeply means at least an hour in every zone, all at once. Infrequently means monthly during the cool months and no more than weekly during the hottest part of summer. Do not spread this out and water for 10 minutes every day. If your grass looks dry before the month/week is up, water longer next time. If that does not work, then you might have to water every 5 days during the summer's hottest period. Deep watering grows deep, drought resistant roots. Infrequent watering allows the top layer of soil to dry completely which kills off many shallow rooted weeds.</li>
</ol>
<p>You will have to learn to judge when to water your own lawn. If you live in Las Vegas your watering will be different than if you live in Vermont. Adjust your watering to your type of grass, humidity, wind, and soil type. It is worth noting that this technique is used successfully by professionals in Phoenix, so...just sayin.' The other factors make a difference. If you normally water 1 inch per week and you get 1/2 inch of rain, then adjust and water only 1/2 inch that week.</p>
<ol>
<li>
<p>Mowing
Every week mulch mow at the highest setting on your mower. Most grasses are the most dense when mowed tall. However, bermuda, centipede, and bent grasses will become the most dense when they are mowed at the lowest setting on your mower. In fact there are special mowers that can mow these grasses down to 1/16 inch. Dense grass shades out weeds, keeps the soil cooler, and uses less water than thin grass. Tall grass can feed the deep roots you developed in #1 above. Tall grass does not grow faster than short grass nor does it look shaggy sooner. Once all your grass is at the same height, tall grass just looks plush.</p>
</li>
<li>
<p>Fertilizing
Fertilize regularly. I fertilize 5 times per year using organic fertilizer. Which fertilizer you use is much less important than numbers 1 and 2 above. Follow the directions on the bag and do not overdo it. With chemical fertilizers, too little is better than too much. With organic fertilizers, too much is better than too little. At this point you do not have to worry about weed and feed products - remember at this point you are just trying to grow grass, not perfect it. Besides once you are doing these three things correctly, your weed problems should go away without herbicide.</p>
</li>
</ol>
<p>Great photos, by the way. Very helpful to assess your situation. Stay far away from weed n feed products. They do not work like you think they would. If you seriously want to spray something on the weeds, first determine if you have any St Augustine grass. You probably do and you really should target St Aug as your future lawn. But it does not respond well to "normal" herbicides. There is a special spray herbicide you can use for "southern lawns," a euphemism for St Augustine. Watch for it. I believe it comes in a black bottle with a purple label from Weed-B-Gone. Then spot spray your weeds rather than spraying the entire lawn. But don't spray right away. Fertilize the area first. Then about 2 weeks later, when the weeds are under the influence of the fertilizer, then spray them. Weeds die best when they are fairly healthy.</p>
<p>If you want to go with organic fertilizer you can start applying any time you want. I would suggest starting with something easy to find like rabbit food from your nearest feed store. It comes in 50-pound bags for about $10. Apply at a rate of 20 pounds per 1,000 square feet and moisten it after applying. Rabbit food is pelletized alfalfa. By moistening it the water will soak in and break the bonds of the pellet. This makes it impossible for birds to come in and eat all your fertilizer. Even though you would be applying rabbit food to the lawn, you will not see an increase in vermin. It gets moldy quickly and the mammals won't touch it. The mold is good, by the way. That's what you're looking for.</p>


10:45:07.150 [debug] l:len=477

10:45:07.150 [debug] l:buf=0:<h1>How to Take care of a Lawn</h1>
<p>Found here: <a href="https://www.houzz.com/discussions/1494167/help-my-lawn-needs-a-makeover" rel="noopener noreferrer">help!! my lawn needs a makeover!</a></p>
<p>Glad that you wrote in with your plan before implementing it. There are a few commonly held ideas that don't work well. Here is a plan that will help get you started. This is the collected wisdom of the Internet savvy homeowners and lawn care professionals summarized in a few words. If you follow the advice here you will have conquered at least 50% of all lawn problems. Once you have these three elements mastered, then you can worry about weeds (if you have any left), dog spots, and striping your lawn. But if you are not doing these three things, they will be the first three things suggested for you to correct.</p>
<ol>
<li>Watering
Water deeply and infrequently. Deeply means at least an hour in every zone, all at once. Infrequently means monthly during the cool months and no more than weekly during the hottest part of summer. Do not spread this out and water for 10 minutes every day. If your grass looks dry before the month/week is up, water longer next time. If that does not work, then you might have to water every 5 days during the summer's hottest period. Deep watering grows deep, drought resistant roots. Infrequent watering allows the top layer of soil to dry completely which kills off many shallow rooted weeds.</li>
</ol>
<p>You will have to learn to judge when to water your own lawn. If you live in Las Vegas your watering will be different than if you live in Vermont. Adjust your watering to your type of grass, humidity, wind, and soil type. It is worth noting that this technique is used successfully by professionals in Phoenix, so...just sayin.' The other factors make a difference. If you normally water 1 inch per week and you get 1/2 inch of rain, then adjust and water only 1/2 inch that week.</p>
<ol>
<li>
<p>Mowing
Every week mulch mow at the highest setting on your mower. Most grasses are the most dense when mowed tall. However, bermuda, centipede, and bent grasses will become the most dense when they are mowed at the lowest setting on your mower. In fact there are special mowers that can mow these grasses down to 1/16 inch. Dense grass shades out weeds, keeps the soil cooler, and uses less water than thin grass. Tall grass can feed the deep roots you developed in #1 above. Tall grass does not grow faster than short grass nor does it look shaggy sooner. Once all your grass is at the same height, tall grass just looks plush.</p>
</li>
<li>
<p>Fertilizing
Fertilize regularly. I fertilize 5 times per year using organic fertilizer. Which fertilizer you use is much less important than numbers 1 and 2 above. Follow the directions on the bag and do not overdo it. With chemical fertilizers, too little is better than too much. With organic fertilizers, too much is better than too little. At this point you do not have to worry about weed and feed products - remember at this point you are just trying to grow grass, not perfect it. Besides once you are doing these three things correctly, your weed problems should go away without herbicide.</p>
</li>
</ol>
<p>Great photos, by the way. Very helpful to assess your situation. Stay far away from weed n feed products. They do not work like you think they would. If you seriously want to spray something on the weeds, first determine if you have any St Augustine grass. You probably do and you really should target St Aug as your future lawn. But it does not respond well to "normal" herbicides. There is a special spray herbicide you can use for "southern lawns," a euphemism for St Augustine. Watch for it. I believe it comes in a black bottle with a purple label from Weed-B-Gone. Then spot spray your weeds rather than spraying the entire lawn. But don't spray right away. Fertilize the area first. Then about 2 weeks later, when the weeds are under the influence of the fertilizer, then spray them. Weeds die best when they are fairly healthy.</p>
<p>If you want to go with organic fertilizer you can start applying any time you want. I would suggest starting with something easy to find like rabbit food from your nearest feed store. It comes in 50-pound bags for about $10. Apply at a rate of 20 pounds per 1,000 square feet and moisten it after applying. Rabbit food is pelletized alfalfa. By moistening it the water will soak in and break the bonds of the pellet. This makes it impossible for birds to come in and eat all your fertilizer. Even though you would be applying rabbit food to the lawn, you will not see an increase in vermin. It gets moldy quickly and the mammals won't touch it. The mold is good, by the way. That's what you're looking for.</p>


10:45:07.150 [debug] l:len=

10:45:07.150 [debug] l:buf empty

10:45:07.150 [debug] l:len=

10:45:07.150 [debug] l:buf=74:<h1>ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.150 [debug] l:len=7

10:45:07.150 [debug] l:buf=4:<h1>ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.150 [debug] l:len=

10:45:07.150 [debug] l:buf empty

10:45:07.150 [debug] l:len=

10:45:07.150 [debug] l:buf=336:<h1>Untitled recording</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.150 [debug] l:len=3

10:45:07.150 [debug] l:buf=36:<h1>Untitled recording</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.151 [debug] l:len=33

10:45:07.151 [debug] l:buf=6:<h1>Untitled recording</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf empty

10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf=401:<h1>ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.151 [debug] l:len=4

10:45:07.151 [debug] l:buf=01:<h1>ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.151 [debug] l:len=40

10:45:07.151 [debug] l:buf=1:<h1>ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf empty

10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf=1063:<h1>people don’t have a project management problem</h1>
<p>That’s too broad. Bob taught us to dig until we hit a seam of true understanding. Project management is a label, it’s not a struggle.</p>
<p>People struggle to know where a project stands. People strug- gle to maintain accountability across teams. People struggle to know who’s working on what, and when those things will be done. People struggle with presenting a professional appear- ance with clients. People struggle to keep everything organized in one place so people know where things are. People struggle to communicate clearly so they don’t have to repeat themselves. People struggle to cover their ass and document decisions, so they aren’t held liable if a client says something wasn’t deliv- ered as promised. That’s the deep down stuff, the real struggles.</p>
<p><a href="https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/" rel="noopener noreferrer">https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/</a></p>


10:45:07.151 [debug] l:len=1

10:45:07.151 [debug] l:buf=063:<h1>people don’t have a project management problem</h1>
<p>That’s too broad. Bob taught us to dig until we hit a seam of true understanding. Project management is a label, it’s not a struggle.</p>
<p>People struggle to know where a project stands. People strug- gle to maintain accountability across teams. People struggle to know who’s working on what, and when those things will be done. People struggle with presenting a professional appear- ance with clients. People struggle to keep everything organized in one place so people know where things are. People struggle to communicate clearly so they don’t have to repeat themselves. People struggle to cover their ass and document decisions, so they aren’t held liable if a client says something wasn’t deliv- ered as promised. That’s the deep down stuff, the real struggles.</p>
<p><a href="https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/" rel="noopener noreferrer">https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/</a></p>


10:45:07.151 [debug] l:len=10

10:45:07.151 [debug] l:buf=63:<h1>people don’t have a project management problem</h1>
<p>That’s too broad. Bob taught us to dig until we hit a seam of true understanding. Project management is a label, it’s not a struggle.</p>
<p>People struggle to know where a project stands. People strug- gle to maintain accountability across teams. People struggle to know who’s working on what, and when those things will be done. People struggle with presenting a professional appear- ance with clients. People struggle to keep everything organized in one place so people know where things are. People struggle to communicate clearly so they don’t have to repeat themselves. People struggle to cover their ass and document decisions, so they aren’t held liable if a client says something wasn’t deliv- ered as promised. That’s the deep down stuff, the real struggles.</p>
<p><a href="https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/" rel="noopener noreferrer">https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/</a></p>


10:45:07.151 [debug] l:len=106

10:45:07.151 [debug] l:buf=3:<h1>people don’t have a project management problem</h1>
<p>That’s too broad. Bob taught us to dig until we hit a seam of true understanding. Project management is a label, it’s not a struggle.</p>
<p>People struggle to know where a project stands. People strug- gle to maintain accountability across teams. People struggle to know who’s working on what, and when those things will be done. People struggle with presenting a professional appear- ance with clients. People struggle to keep everything organized in one place so people know where things are. People struggle to communicate clearly so they don’t have to repeat themselves. People struggle to cover their ass and document decisions, so they aren’t held liable if a client says something wasn’t deliv- ered as promised. That’s the deep down stuff, the real struggles.</p>
<p><a href="https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/" rel="noopener noreferrer">https://m.signalvnoise.com/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/</a></p>


10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf empty

10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf=545:<h1>Keep Conversation a game of Ping-Pong</h1>
<p>Conversations need to have flow. If people send you a message, try to have a good response but perhaps more important is to not to forget to respond so that they don't think you aren't listening.</p>
<p>It's important in <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> to have full context but it's also important to <em>actually respond</em>. It's easy to forget, especially with text messages and emails.</p>
<p>Keywords</p>


10:45:07.151 [debug] l:len=5

10:45:07.151 [debug] l:buf=45:<h1>Keep Conversation a game of Ping-Pong</h1>
<p>Conversations need to have flow. If people send you a message, try to have a good response but perhaps more important is to not to forget to respond so that they don't think you aren't listening.</p>
<p>It's important in <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> to have full context but it's also important to <em>actually respond</em>. It's easy to forget, especially with text messages and emails.</p>
<p>Keywords</p>


10:45:07.151 [debug] l:len=54

10:45:07.151 [debug] l:buf=5:<h1>Keep Conversation a game of Ping-Pong</h1>
<p>Conversations need to have flow. If people send you a message, try to have a good response but perhaps more important is to not to forget to respond so that they don't think you aren't listening.</p>
<p>It's important in <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> to have full context but it's also important to <em>actually respond</em>. It's easy to forget, especially with text messages and emails.</p>
<p>Keywords</p>


10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf empty

10:45:07.151 [debug] l:len=

10:45:07.151 [debug] l:buf=298:<h1>Computer Science</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.151 [debug] l:len=2

10:45:07.152 [debug] l:buf=98:<h1>Computer Science</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.152 [debug] l:len=29

10:45:07.152 [debug] l:buf=8:<h1>Computer Science</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf empty

10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf=81:<h1>Binging</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.152 [debug] l:len=8

10:45:07.152 [debug] l:buf=1:<h1>Binging</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf empty

10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf=2985:<h1>Notes on <strong>"Exhaust Ports"</strong> by Jon Gold</h1>
<p><a href="https://jon.gold/2018/02/exhaust-ports/" rel="noopener noreferrer">https://jon.gold/2018/02/exhaust-ports/</a></p>
<blockquote>
<p>Time is the only thing that is scarce, and those greedy corporations know it, because they’re each striving to own every second of our lives. And somehow, we don’t see the compromise we’ve been tricked into making. Each of us has twenty four hours in a day, and only a finite number of days in our lives. And we check our phone tens or hundreds of times per day. Every thought, hope, dream, punctuated by pings. Every moment genuinely well spent is interrupted by our nagging anxiety to see what’s happening somewhere else.</p>
</blockquote>
<blockquote>
<p>The bluesman Robert Johnson was said to have sold his soul to the devil in exchange for his guitar playing prowess: at least he got a good deal out of it. We sold years of our lives to billionaire tech entrepreneurs, and in return we got depression.</p>
</blockquote>
<blockquote>
<p>There’s an opportunity cost associated with the smartest people working on these technologies and the financial bubble that has risen in concert with them. The world is full of pressing issues that we desperately need to allocate resources to, and each thing that someone builds or funds that harms us is a waste of energy that could be used to fix non-trivial issues. To take a random, non-weighted sample of examples I’ve been thinking about this week: there are 7000 people sleeping on the streets of San Francisco, and 45 million Americans living below the poverty line. 5 trillion pieces of plastic are floating in the Pacific, and by 2050 perhaps 200 million or 1 billion people will be displaced by climate change. At the time of writing, Flint, Michigan hasn’t had clean drinking water for 1391 days.</p>
</blockquote>
<blockquote>
<p>It’s imperative that we remove these companies from the pedestal we’ve placed them on. They’re not to be aspired to.</p>
</blockquote>
<blockquote>
<p>Common feedback to my criticism of Twitter &amp; Facebook is that they are just businesses responding to what the market is currently rewarding. I agree, and the market is rotten.</p>
</blockquote>
<blockquote>
<p>tracking time-spent as an organizational goal rather than embarrassment; the presumable moneymaker of selling personal data or showing adverts; funding it all with obscene amounts of money that could be used to really save the world.</p>
</blockquote>
<blockquote>
<p>“But Jon, it’s not just social media, it’s TV and advertising and everything else too” — I agree. Advertising is equally repulsive. We’re destroying the planet, and advertising is an accelerant, and the list of exceptions to this are vanishingly small.</p>
</blockquote>
<blockquote>
<p>I’m still in love with technology, but increasingly with nuance into that which is for us, and that which productizes us.</p>
</blockquote>


10:45:07.152 [debug] l:len=2

10:45:07.152 [debug] l:buf=985:<h1>Notes on <strong>"Exhaust Ports"</strong> by Jon Gold</h1>
<p><a href="https://jon.gold/2018/02/exhaust-ports/" rel="noopener noreferrer">https://jon.gold/2018/02/exhaust-ports/</a></p>
<blockquote>
<p>Time is the only thing that is scarce, and those greedy corporations know it, because they’re each striving to own every second of our lives. And somehow, we don’t see the compromise we’ve been tricked into making. Each of us has twenty four hours in a day, and only a finite number of days in our lives. And we check our phone tens or hundreds of times per day. Every thought, hope, dream, punctuated by pings. Every moment genuinely well spent is interrupted by our nagging anxiety to see what’s happening somewhere else.</p>
</blockquote>
<blockquote>
<p>The bluesman Robert Johnson was said to have sold his soul to the devil in exchange for his guitar playing prowess: at least he got a good deal out of it. We sold years of our lives to billionaire tech entrepreneurs, and in return we got depression.</p>
</blockquote>
<blockquote>
<p>There’s an opportunity cost associated with the smartest people working on these technologies and the financial bubble that has risen in concert with them. The world is full of pressing issues that we desperately need to allocate resources to, and each thing that someone builds or funds that harms us is a waste of energy that could be used to fix non-trivial issues. To take a random, non-weighted sample of examples I’ve been thinking about this week: there are 7000 people sleeping on the streets of San Francisco, and 45 million Americans living below the poverty line. 5 trillion pieces of plastic are floating in the Pacific, and by 2050 perhaps 200 million or 1 billion people will be displaced by climate change. At the time of writing, Flint, Michigan hasn’t had clean drinking water for 1391 days.</p>
</blockquote>
<blockquote>
<p>It’s imperative that we remove these companies from the pedestal we’ve placed them on. They’re not to be aspired to.</p>
</blockquote>
<blockquote>
<p>Common feedback to my criticism of Twitter &amp; Facebook is that they are just businesses responding to what the market is currently rewarding. I agree, and the market is rotten.</p>
</blockquote>
<blockquote>
<p>tracking time-spent as an organizational goal rather than embarrassment; the presumable moneymaker of selling personal data or showing adverts; funding it all with obscene amounts of money that could be used to really save the world.</p>
</blockquote>
<blockquote>
<p>“But Jon, it’s not just social media, it’s TV and advertising and everything else too” — I agree. Advertising is equally repulsive. We’re destroying the planet, and advertising is an accelerant, and the list of exceptions to this are vanishingly small.</p>
</blockquote>
<blockquote>
<p>I’m still in love with technology, but increasingly with nuance into that which is for us, and that which productizes us.</p>
</blockquote>


10:45:07.152 [debug] l:len=29

10:45:07.152 [debug] l:buf=85:<h1>Notes on <strong>"Exhaust Ports"</strong> by Jon Gold</h1>
<p><a href="https://jon.gold/2018/02/exhaust-ports/" rel="noopener noreferrer">https://jon.gold/2018/02/exhaust-ports/</a></p>
<blockquote>
<p>Time is the only thing that is scarce, and those greedy corporations know it, because they’re each striving to own every second of our lives. And somehow, we don’t see the compromise we’ve been tricked into making. Each of us has twenty four hours in a day, and only a finite number of days in our lives. And we check our phone tens or hundreds of times per day. Every thought, hope, dream, punctuated by pings. Every moment genuinely well spent is interrupted by our nagging anxiety to see what’s happening somewhere else.</p>
</blockquote>
<blockquote>
<p>The bluesman Robert Johnson was said to have sold his soul to the devil in exchange for his guitar playing prowess: at least he got a good deal out of it. We sold years of our lives to billionaire tech entrepreneurs, and in return we got depression.</p>
</blockquote>
<blockquote>
<p>There’s an opportunity cost associated with the smartest people working on these technologies and the financial bubble that has risen in concert with them. The world is full of pressing issues that we desperately need to allocate resources to, and each thing that someone builds or funds that harms us is a waste of energy that could be used to fix non-trivial issues. To take a random, non-weighted sample of examples I’ve been thinking about this week: there are 7000 people sleeping on the streets of San Francisco, and 45 million Americans living below the poverty line. 5 trillion pieces of plastic are floating in the Pacific, and by 2050 perhaps 200 million or 1 billion people will be displaced by climate change. At the time of writing, Flint, Michigan hasn’t had clean drinking water for 1391 days.</p>
</blockquote>
<blockquote>
<p>It’s imperative that we remove these companies from the pedestal we’ve placed them on. They’re not to be aspired to.</p>
</blockquote>
<blockquote>
<p>Common feedback to my criticism of Twitter &amp; Facebook is that they are just businesses responding to what the market is currently rewarding. I agree, and the market is rotten.</p>
</blockquote>
<blockquote>
<p>tracking time-spent as an organizational goal rather than embarrassment; the presumable moneymaker of selling personal data or showing adverts; funding it all with obscene amounts of money that could be used to really save the world.</p>
</blockquote>
<blockquote>
<p>“But Jon, it’s not just social media, it’s TV and advertising and everything else too” — I agree. Advertising is equally repulsive. We’re destroying the planet, and advertising is an accelerant, and the list of exceptions to this are vanishingly small.</p>
</blockquote>
<blockquote>
<p>I’m still in love with technology, but increasingly with nuance into that which is for us, and that which productizes us.</p>
</blockquote>


10:45:07.152 [debug] l:len=298

10:45:07.152 [debug] l:buf=5:<h1>Notes on <strong>"Exhaust Ports"</strong> by Jon Gold</h1>
<p><a href="https://jon.gold/2018/02/exhaust-ports/" rel="noopener noreferrer">https://jon.gold/2018/02/exhaust-ports/</a></p>
<blockquote>
<p>Time is the only thing that is scarce, and those greedy corporations know it, because they’re each striving to own every second of our lives. And somehow, we don’t see the compromise we’ve been tricked into making. Each of us has twenty four hours in a day, and only a finite number of days in our lives. And we check our phone tens or hundreds of times per day. Every thought, hope, dream, punctuated by pings. Every moment genuinely well spent is interrupted by our nagging anxiety to see what’s happening somewhere else.</p>
</blockquote>
<blockquote>
<p>The bluesman Robert Johnson was said to have sold his soul to the devil in exchange for his guitar playing prowess: at least he got a good deal out of it. We sold years of our lives to billionaire tech entrepreneurs, and in return we got depression.</p>
</blockquote>
<blockquote>
<p>There’s an opportunity cost associated with the smartest people working on these technologies and the financial bubble that has risen in concert with them. The world is full of pressing issues that we desperately need to allocate resources to, and each thing that someone builds or funds that harms us is a waste of energy that could be used to fix non-trivial issues. To take a random, non-weighted sample of examples I’ve been thinking about this week: there are 7000 people sleeping on the streets of San Francisco, and 45 million Americans living below the poverty line. 5 trillion pieces of plastic are floating in the Pacific, and by 2050 perhaps 200 million or 1 billion people will be displaced by climate change. At the time of writing, Flint, Michigan hasn’t had clean drinking water for 1391 days.</p>
</blockquote>
<blockquote>
<p>It’s imperative that we remove these companies from the pedestal we’ve placed them on. They’re not to be aspired to.</p>
</blockquote>
<blockquote>
<p>Common feedback to my criticism of Twitter &amp; Facebook is that they are just businesses responding to what the market is currently rewarding. I agree, and the market is rotten.</p>
</blockquote>
<blockquote>
<p>tracking time-spent as an organizational goal rather than embarrassment; the presumable moneymaker of selling personal data or showing adverts; funding it all with obscene amounts of money that could be used to really save the world.</p>
</blockquote>
<blockquote>
<p>“But Jon, it’s not just social media, it’s TV and advertising and everything else too” — I agree. Advertising is equally repulsive. We’re destroying the planet, and advertising is an accelerant, and the list of exceptions to this are vanishingly small.</p>
</blockquote>
<blockquote>
<p>I’m still in love with technology, but increasingly with nuance into that which is for us, and that which productizes us.</p>
</blockquote>


10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf empty

10:45:07.152 [debug] l:len=

10:45:07.152 [debug] l:buf=103:<h1>jack of all trades, master of none</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.152 [debug] l:len=1

10:45:07.152 [debug] l:buf=03:<h1>jack of all trades, master of none</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.152 [debug] l:len=10

10:45:07.152 [debug] l:buf=3:<h1>jack of all trades, master of none</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf empty

10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf=224:<p>Cremation</p>
<p>Https://www.lds.org/handbook/handbook-2-administering-the-church/selected-church-policies/21.3?lang=eng&amp;_r=1#213</p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.153 [debug] l:len=2

10:45:07.153 [debug] l:buf=24:<p>Cremation</p>
<p>Https://www.lds.org/handbook/handbook-2-administering-the-church/selected-church-policies/21.3?lang=eng&amp;_r=1#213</p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.153 [debug] l:len=22

10:45:07.153 [debug] l:buf=4:<p>Cremation</p>
<p>Https://www.lds.org/handbook/handbook-2-administering-the-church/selected-church-policies/21.3?lang=eng&amp;_r=1#213</p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf empty

10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf=1290:<h1>Jason Fried</h1>
<p>Co-founder and president of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> along with <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
<p>Twitter: <a href="https://twitter.com/jasonfried" rel="noopener noreferrer">https://twitter.com/jasonfried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.153 [debug] l:len=1

10:45:07.153 [debug] l:buf=290:<h1>Jason Fried</h1>
<p>Co-founder and president of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> along with <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
<p>Twitter: <a href="https://twitter.com/jasonfried" rel="noopener noreferrer">https://twitter.com/jasonfried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.153 [debug] l:len=12

10:45:07.153 [debug] l:buf=90:<h1>Jason Fried</h1>
<p>Co-founder and president of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> along with <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
<p>Twitter: <a href="https://twitter.com/jasonfried" rel="noopener noreferrer">https://twitter.com/jasonfried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.153 [debug] l:len=129

10:45:07.153 [debug] l:buf=0:<h1>Jason Fried</h1>
<p>Co-founder and president of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> along with <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
<p>Twitter: <a href="https://twitter.com/jasonfried" rel="noopener noreferrer">https://twitter.com/jasonfried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf empty

10:45:07.153 [debug] l:len=

10:45:07.153 [debug] l:buf=1684:<h1>Midterm memory</h1>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is an organization's "short term" memory, often wiki's like <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> act more like a ultra-long term memory. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> is kind of in-between. It's a sort of "Midterm memory". What do I mean by that?</p>
<p>Well I've experienced how you <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>, and I think the reason is because of how</p>
<hr>
<p>Organizations <em>really</em> need a "mid-term memory". This is information that moves slowly, but not <em>too</em> slowly.</p>
<ul>
<li>Chats: Gone in a day</li>
<li>Documenation: lasts forever (hard to organize)</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012150328.png" rel="noopener noreferrer">Pasted image 20201012150328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Links:</h2>
<ul>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>


10:45:07.153 [debug] l:len=1

10:45:07.154 [debug] l:buf=684:<h1>Midterm memory</h1>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is an organization's "short term" memory, often wiki's like <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> act more like a ultra-long term memory. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> is kind of in-between. It's a sort of "Midterm memory". What do I mean by that?</p>
<p>Well I've experienced how you <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>, and I think the reason is because of how</p>
<hr>
<p>Organizations <em>really</em> need a "mid-term memory". This is information that moves slowly, but not <em>too</em> slowly.</p>
<ul>
<li>Chats: Gone in a day</li>
<li>Documenation: lasts forever (hard to organize)</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012150328.png" rel="noopener noreferrer">Pasted image 20201012150328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Links:</h2>
<ul>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>


10:45:07.154 [debug] l:len=16

10:45:07.154 [debug] l:buf=84:<h1>Midterm memory</h1>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is an organization's "short term" memory, often wiki's like <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> act more like a ultra-long term memory. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> is kind of in-between. It's a sort of "Midterm memory". What do I mean by that?</p>
<p>Well I've experienced how you <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>, and I think the reason is because of how</p>
<hr>
<p>Organizations <em>really</em> need a "mid-term memory". This is information that moves slowly, but not <em>too</em> slowly.</p>
<ul>
<li>Chats: Gone in a day</li>
<li>Documenation: lasts forever (hard to organize)</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012150328.png" rel="noopener noreferrer">Pasted image 20201012150328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Links:</h2>
<ul>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>


10:45:07.154 [debug] l:len=168

10:45:07.154 [debug] l:buf=4:<h1>Midterm memory</h1>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is an organization's "short term" memory, often wiki's like <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> act more like a ultra-long term memory. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> is kind of in-between. It's a sort of "Midterm memory". What do I mean by that?</p>
<p>Well I've experienced how you <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>, and I think the reason is because of how</p>
<hr>
<p>Organizations <em>really</em> need a "mid-term memory". This is information that moves slowly, but not <em>too</em> slowly.</p>
<ul>
<li>Chats: Gone in a day</li>
<li>Documenation: lasts forever (hard to organize)</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012150328.png" rel="noopener noreferrer">Pasted image 20201012150328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Links:</h2>
<ul>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/speed-of-conversaiton-determines-it's-sanity" rel="noopener noreferrer">Speed of conversaiton determines it's sanity</a></li>
</ul>


10:45:07.154 [debug] l:len=

10:45:07.154 [debug] l:buf empty

10:45:07.154 [debug] l:len=

10:45:07.154 [debug] l:buf=6534:<h1>Kanban Cards are a bunch of directions, but you need a MAP</h1>
<p>I wrote this up as an attempt to make it easier to describe the problems with never-ended Kanban boards. Would love some feedback to see what everyone thinks</p>
<hr>
<h2>Everyone driving the car</h2>
<p>the point of doing a "project" is that the company wants to make it to a "destination". Imagine that your whole team is in a car and the programmers are in the driver's seat.</p>
<p>At first, everyone would just yell out where to go, backseat driver style, but this just stressed out the driver and they wouldn't know who to listen to and subsequently made no progress.</p>
<h2>Taking Turns</h2>
<p>They solve this arguments by taking turns picking where to go. Each person picks a close-by destination, write it on a sticky-note and place it in a queue. The driver goes to them in order.</p>
<p>For instance:</p>
<ul>
<li>Ron: "Go to Walmart on main so I can get an apple"</li>
<li>Jess: "Go to the park on 27nd street, there's some low hanging fruit"</li>
<li>Ron: "Go back to Walmart on Main because I need another shrubbery"</li>
<li>Jerry: "Go to the car shop on 89th street, we need some fresh tires to avoid roll resistance"</li>
<li>Jess: "Drive to this gas station for some fuel, there's one right here"</li>
</ul>
<h2>Fair, but not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a></h2>
<p>This helps with the driver getting stressed out but also has some problems. Firstly, it's very unfocused. <strong>Everyone gets a turn to pick where to go, which is "fair" but isn't very <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</strong></p>
<p>All the different sticky-notes, while detailed, don't get them anywhere in particular when you added them up. The list is so verbose also so it took a very long time to read.</p>
<p>Secondly, there's no real check on each of these instruction cards to see if all of them are <em>truly necessary</em>. Anyone can just throw a card into the list that wants to. Sorting and throwing out bad ideas would help, but this is very time-intensive due to the sheer number of sticky-notes and the fast rate at which they are added.</p>
<h2>A map that everyone shares</h2>
<p>A better system is to have <strong>a map that everyone shares</strong>. Not only that but lay out a clear guideline on <em><strong>where</strong></em> exactly you want to go:</p>
<blockquote>
<p><em>"We want to discover Atlantis</em> 🤯*"*</p>
</blockquote>
<p>Wow! Sounds exciting, but nobody knows where Atlantis is. This would easily turn into a wild goose chase that could take years with no progress, there's just too much risk and too much ambiguity. Maybe pick something a bit more reasonable.</p>
<blockquote>
<p><em>"We want to go to the Grand Canyon and go poll vaulting"</em></p>
</blockquote>
<p>Much better! This is very good because as the driver thinks of where to go and deals with unexpected traffic problems he can make efficient adjustments. It's also nice because it becomes a clear way to measure if you're going in the right direction or not. While it might be tempting to take this and convert it back into the sticky note system this causes everyone to turn off their brains and blindly follow the instructions and it's unclear if each sticky note is contributing to the main goal or a distraction from it.</p>
<h2>Deadlines</h2>
<p>Another great thing to add to your travel plan is an arrival time. For example:</p>
<blockquote>
<p><em>"We want to go the Grand Canyon and go pole vaulting by September 5th (3 days away)"</em></p>
</blockquote>
<p>While it may be tempting to again try to just add up all sub-destinations and expected stops to figure out how long it will take to get there, it doesn't work because if you ask, "what's all the stops along the way everyone <em>wants</em> to make?" people will all contribute their 10 tickets and you'll end up with a month-long road trip which is far more than you bargained for.</p>
<p>Counterintuitive as it may seem but adding a deadline <em>before</em> you plan all your stops (so long as it's unrealisticly short) actually helps a lot because it makes everyone in the car think twice before requesting any more stops along the way.</p>
<h2>Making this more concrete</h2>
<p>The problem with Kanban boards is they don't show you <strong>where you're going</strong>, only a bunch of "driving directions". They don't have a concept of a project because they make the assumption that you've already broken down the project (put your project description through a shredder) and that all the tickets that are in the sprint are cohesive and not just a bunch of competing priorities.</p>
<p>However, this is a bad assumption. Organizations are made up of lots of people, and as such, each department (support, developers, marketing, the executives, etc...) usually gets a relatively equal say in what tasks get prioritized. As such this means the development team gets pulled in many directions and often makes very slow progress because of it.</p>
<h2>See also:</h2>
<ul>
<li><a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">fixed time, variable scope</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/untitled-recording.webm.md" rel="noopener noreferrer">Untitled recording.webm</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.154 [debug] l:len=6

10:45:07.154 [debug] l:buf=534:<h1>Kanban Cards are a bunch of directions, but you need a MAP</h1>
<p>I wrote this up as an attempt to make it easier to describe the problems with never-ended Kanban boards. Would love some feedback to see what everyone thinks</p>
<hr>
<h2>Everyone driving the car</h2>
<p>the point of doing a "project" is that the company wants to make it to a "destination". Imagine that your whole team is in a car and the programmers are in the driver's seat.</p>
<p>At first, everyone would just yell out where to go, backseat driver style, but this just stressed out the driver and they wouldn't know who to listen to and subsequently made no progress.</p>
<h2>Taking Turns</h2>
<p>They solve this arguments by taking turns picking where to go. Each person picks a close-by destination, write it on a sticky-note and place it in a queue. The driver goes to them in order.</p>
<p>For instance:</p>
<ul>
<li>Ron: "Go to Walmart on main so I can get an apple"</li>
<li>Jess: "Go to the park on 27nd street, there's some low hanging fruit"</li>
<li>Ron: "Go back to Walmart on Main because I need another shrubbery"</li>
<li>Jerry: "Go to the car shop on 89th street, we need some fresh tires to avoid roll resistance"</li>
<li>Jess: "Drive to this gas station for some fuel, there's one right here"</li>
</ul>
<h2>Fair, but not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a></h2>
<p>This helps with the driver getting stressed out but also has some problems. Firstly, it's very unfocused. <strong>Everyone gets a turn to pick where to go, which is "fair" but isn't very <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</strong></p>
<p>All the different sticky-notes, while detailed, don't get them anywhere in particular when you added them up. The list is so verbose also so it took a very long time to read.</p>
<p>Secondly, there's no real check on each of these instruction cards to see if all of them are <em>truly necessary</em>. Anyone can just throw a card into the list that wants to. Sorting and throwing out bad ideas would help, but this is very time-intensive due to the sheer number of sticky-notes and the fast rate at which they are added.</p>
<h2>A map that everyone shares</h2>
<p>A better system is to have <strong>a map that everyone shares</strong>. Not only that but lay out a clear guideline on <em><strong>where</strong></em> exactly you want to go:</p>
<blockquote>
<p><em>"We want to discover Atlantis</em> 🤯*"*</p>
</blockquote>
<p>Wow! Sounds exciting, but nobody knows where Atlantis is. This would easily turn into a wild goose chase that could take years with no progress, there's just too much risk and too much ambiguity. Maybe pick something a bit more reasonable.</p>
<blockquote>
<p><em>"We want to go to the Grand Canyon and go poll vaulting"</em></p>
</blockquote>
<p>Much better! This is very good because as the driver thinks of where to go and deals with unexpected traffic problems he can make efficient adjustments. It's also nice because it becomes a clear way to measure if you're going in the right direction or not. While it might be tempting to take this and convert it back into the sticky note system this causes everyone to turn off their brains and blindly follow the instructions and it's unclear if each sticky note is contributing to the main goal or a distraction from it.</p>
<h2>Deadlines</h2>
<p>Another great thing to add to your travel plan is an arrival time. For example:</p>
<blockquote>
<p><em>"We want to go the Grand Canyon and go pole vaulting by September 5th (3 days away)"</em></p>
</blockquote>
<p>While it may be tempting to again try to just add up all sub-destinations and expected stops to figure out how long it will take to get there, it doesn't work because if you ask, "what's all the stops along the way everyone <em>wants</em> to make?" people will all contribute their 10 tickets and you'll end up with a month-long road trip which is far more than you bargained for.</p>
<p>Counterintuitive as it may seem but adding a deadline <em>before</em> you plan all your stops (so long as it's unrealisticly short) actually helps a lot because it makes everyone in the car think twice before requesting any more stops along the way.</p>
<h2>Making this more concrete</h2>
<p>The problem with Kanban boards is they don't show you <strong>where you're going</strong>, only a bunch of "driving directions". They don't have a concept of a project because they make the assumption that you've already broken down the project (put your project description through a shredder) and that all the tickets that are in the sprint are cohesive and not just a bunch of competing priorities.</p>
<p>However, this is a bad assumption. Organizations are made up of lots of people, and as such, each department (support, developers, marketing, the executives, etc...) usually gets a relatively equal say in what tasks get prioritized. As such this means the development team gets pulled in many directions and often makes very slow progress because of it.</p>
<h2>See also:</h2>
<ul>
<li><a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">fixed time, variable scope</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/untitled-recording.webm.md" rel="noopener noreferrer">Untitled recording.webm</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.154 [debug] l:len=65

10:45:07.154 [debug] l:buf=34:<h1>Kanban Cards are a bunch of directions, but you need a MAP</h1>
<p>I wrote this up as an attempt to make it easier to describe the problems with never-ended Kanban boards. Would love some feedback to see what everyone thinks</p>
<hr>
<h2>Everyone driving the car</h2>
<p>the point of doing a "project" is that the company wants to make it to a "destination". Imagine that your whole team is in a car and the programmers are in the driver's seat.</p>
<p>At first, everyone would just yell out where to go, backseat driver style, but this just stressed out the driver and they wouldn't know who to listen to and subsequently made no progress.</p>
<h2>Taking Turns</h2>
<p>They solve this arguments by taking turns picking where to go. Each person picks a close-by destination, write it on a sticky-note and place it in a queue. The driver goes to them in order.</p>
<p>For instance:</p>
<ul>
<li>Ron: "Go to Walmart on main so I can get an apple"</li>
<li>Jess: "Go to the park on 27nd street, there's some low hanging fruit"</li>
<li>Ron: "Go back to Walmart on Main because I need another shrubbery"</li>
<li>Jerry: "Go to the car shop on 89th street, we need some fresh tires to avoid roll resistance"</li>
<li>Jess: "Drive to this gas station for some fuel, there's one right here"</li>
</ul>
<h2>Fair, but not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a></h2>
<p>This helps with the driver getting stressed out but also has some problems. Firstly, it's very unfocused. <strong>Everyone gets a turn to pick where to go, which is "fair" but isn't very <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</strong></p>
<p>All the different sticky-notes, while detailed, don't get them anywhere in particular when you added them up. The list is so verbose also so it took a very long time to read.</p>
<p>Secondly, there's no real check on each of these instruction cards to see if all of them are <em>truly necessary</em>. Anyone can just throw a card into the list that wants to. Sorting and throwing out bad ideas would help, but this is very time-intensive due to the sheer number of sticky-notes and the fast rate at which they are added.</p>
<h2>A map that everyone shares</h2>
<p>A better system is to have <strong>a map that everyone shares</strong>. Not only that but lay out a clear guideline on <em><strong>where</strong></em> exactly you want to go:</p>
<blockquote>
<p><em>"We want to discover Atlantis</em> 🤯*"*</p>
</blockquote>
<p>Wow! Sounds exciting, but nobody knows where Atlantis is. This would easily turn into a wild goose chase that could take years with no progress, there's just too much risk and too much ambiguity. Maybe pick something a bit more reasonable.</p>
<blockquote>
<p><em>"We want to go to the Grand Canyon and go poll vaulting"</em></p>
</blockquote>
<p>Much better! This is very good because as the driver thinks of where to go and deals with unexpected traffic problems he can make efficient adjustments. It's also nice because it becomes a clear way to measure if you're going in the right direction or not. While it might be tempting to take this and convert it back into the sticky note system this causes everyone to turn off their brains and blindly follow the instructions and it's unclear if each sticky note is contributing to the main goal or a distraction from it.</p>
<h2>Deadlines</h2>
<p>Another great thing to add to your travel plan is an arrival time. For example:</p>
<blockquote>
<p><em>"We want to go the Grand Canyon and go pole vaulting by September 5th (3 days away)"</em></p>
</blockquote>
<p>While it may be tempting to again try to just add up all sub-destinations and expected stops to figure out how long it will take to get there, it doesn't work because if you ask, "what's all the stops along the way everyone <em>wants</em> to make?" people will all contribute their 10 tickets and you'll end up with a month-long road trip which is far more than you bargained for.</p>
<p>Counterintuitive as it may seem but adding a deadline <em>before</em> you plan all your stops (so long as it's unrealisticly short) actually helps a lot because it makes everyone in the car think twice before requesting any more stops along the way.</p>
<h2>Making this more concrete</h2>
<p>The problem with Kanban boards is they don't show you <strong>where you're going</strong>, only a bunch of "driving directions". They don't have a concept of a project because they make the assumption that you've already broken down the project (put your project description through a shredder) and that all the tickets that are in the sprint are cohesive and not just a bunch of competing priorities.</p>
<p>However, this is a bad assumption. Organizations are made up of lots of people, and as such, each department (support, developers, marketing, the executives, etc...) usually gets a relatively equal say in what tasks get prioritized. As such this means the development team gets pulled in many directions and often makes very slow progress because of it.</p>
<h2>See also:</h2>
<ul>
<li><a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">fixed time, variable scope</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/untitled-recording.webm.md" rel="noopener noreferrer">Untitled recording.webm</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.154 [debug] l:len=653

10:45:07.154 [debug] l:buf=4:<h1>Kanban Cards are a bunch of directions, but you need a MAP</h1>
<p>I wrote this up as an attempt to make it easier to describe the problems with never-ended Kanban boards. Would love some feedback to see what everyone thinks</p>
<hr>
<h2>Everyone driving the car</h2>
<p>the point of doing a "project" is that the company wants to make it to a "destination". Imagine that your whole team is in a car and the programmers are in the driver's seat.</p>
<p>At first, everyone would just yell out where to go, backseat driver style, but this just stressed out the driver and they wouldn't know who to listen to and subsequently made no progress.</p>
<h2>Taking Turns</h2>
<p>They solve this arguments by taking turns picking where to go. Each person picks a close-by destination, write it on a sticky-note and place it in a queue. The driver goes to them in order.</p>
<p>For instance:</p>
<ul>
<li>Ron: "Go to Walmart on main so I can get an apple"</li>
<li>Jess: "Go to the park on 27nd street, there's some low hanging fruit"</li>
<li>Ron: "Go back to Walmart on Main because I need another shrubbery"</li>
<li>Jerry: "Go to the car shop on 89th street, we need some fresh tires to avoid roll resistance"</li>
<li>Jess: "Drive to this gas station for some fuel, there's one right here"</li>
</ul>
<h2>Fair, but not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a></h2>
<p>This helps with the driver getting stressed out but also has some problems. Firstly, it's very unfocused. <strong>Everyone gets a turn to pick where to go, which is "fair" but isn't very <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</strong></p>
<p>All the different sticky-notes, while detailed, don't get them anywhere in particular when you added them up. The list is so verbose also so it took a very long time to read.</p>
<p>Secondly, there's no real check on each of these instruction cards to see if all of them are <em>truly necessary</em>. Anyone can just throw a card into the list that wants to. Sorting and throwing out bad ideas would help, but this is very time-intensive due to the sheer number of sticky-notes and the fast rate at which they are added.</p>
<h2>A map that everyone shares</h2>
<p>A better system is to have <strong>a map that everyone shares</strong>. Not only that but lay out a clear guideline on <em><strong>where</strong></em> exactly you want to go:</p>
<blockquote>
<p><em>"We want to discover Atlantis</em> 🤯*"*</p>
</blockquote>
<p>Wow! Sounds exciting, but nobody knows where Atlantis is. This would easily turn into a wild goose chase that could take years with no progress, there's just too much risk and too much ambiguity. Maybe pick something a bit more reasonable.</p>
<blockquote>
<p><em>"We want to go to the Grand Canyon and go poll vaulting"</em></p>
</blockquote>
<p>Much better! This is very good because as the driver thinks of where to go and deals with unexpected traffic problems he can make efficient adjustments. It's also nice because it becomes a clear way to measure if you're going in the right direction or not. While it might be tempting to take this and convert it back into the sticky note system this causes everyone to turn off their brains and blindly follow the instructions and it's unclear if each sticky note is contributing to the main goal or a distraction from it.</p>
<h2>Deadlines</h2>
<p>Another great thing to add to your travel plan is an arrival time. For example:</p>
<blockquote>
<p><em>"We want to go the Grand Canyon and go pole vaulting by September 5th (3 days away)"</em></p>
</blockquote>
<p>While it may be tempting to again try to just add up all sub-destinations and expected stops to figure out how long it will take to get there, it doesn't work because if you ask, "what's all the stops along the way everyone <em>wants</em> to make?" people will all contribute their 10 tickets and you'll end up with a month-long road trip which is far more than you bargained for.</p>
<p>Counterintuitive as it may seem but adding a deadline <em>before</em> you plan all your stops (so long as it's unrealisticly short) actually helps a lot because it makes everyone in the car think twice before requesting any more stops along the way.</p>
<h2>Making this more concrete</h2>
<p>The problem with Kanban boards is they don't show you <strong>where you're going</strong>, only a bunch of "driving directions". They don't have a concept of a project because they make the assumption that you've already broken down the project (put your project description through a shredder) and that all the tickets that are in the sprint are cohesive and not just a bunch of competing priorities.</p>
<p>However, this is a bad assumption. Organizations are made up of lots of people, and as such, each department (support, developers, marketing, the executives, etc...) usually gets a relatively equal say in what tasks get prioritized. As such this means the development team gets pulled in many directions and often makes very slow progress because of it.</p>
<h2>See also:</h2>
<ul>
<li><a href="http://localhost:5000/fixed-time,-variable-scope" rel="noopener noreferrer">fixed time, variable scope</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/time-is-money" rel="noopener noreferrer">Time is money</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/untitled-recording.webm.md" rel="noopener noreferrer">Untitled recording.webm</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.154 [debug] l:len=

10:45:07.154 [debug] l:buf empty

10:45:07.154 [debug] l:len=

10:45:07.155 [debug] l:buf=231:<h1>servant-leader</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.155 [debug] l:len=2

10:45:07.155 [debug] l:buf=31:<h1>servant-leader</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.155 [debug] l:len=23

10:45:07.155 [debug] l:buf=1:<h1>servant-leader</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.155 [debug] l:len=

10:45:07.155 [debug] l:buf empty

10:45:07.155 [debug] l:len=

10:45:07.155 [debug] l:buf=521:<h1>Gifts V</h1>
<p>Gifts are things we don't deserve and didn't "earn". Those would be a Wage.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.155 [debug] l:len=5

10:45:07.155 [debug] l:buf=21:<h1>Gifts V</h1>
<p>Gifts are things we don't deserve and didn't "earn". Those would be a Wage.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.155 [debug] l:len=52

10:45:07.155 [debug] l:buf=1:<h1>Gifts V</h1>
<p>Gifts are things we don't deserve and didn't "earn". Those would be a Wage.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.155 [debug] l:len=

10:45:07.155 [debug] l:buf empty

10:45:07.155 [debug] l:len=

10:45:07.155 [debug] l:buf=104:<h1>Never Interupt a programmer (image)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.155 [debug] l:len=1

10:45:07.155 [debug] l:buf=04:<h1>Never Interupt a programmer (image)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.155 [debug] l:len=10

10:45:07.155 [debug] l:buf=4:<h1>Never Interupt a programmer (image)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.155 [debug] l:len=

10:45:07.155 [debug] l:buf empty

10:45:07.156 [debug] l:len=

10:45:07.156 [debug] l:buf=77:<h1>Socrates</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.156 [debug] l:len=7

10:45:07.156 [debug] l:buf=7:<h1>Socrates</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.156 [debug] l:len=

10:45:07.156 [debug] l:buf empty

10:45:07.156 [debug] l:len=

10:45:07.156 [debug] l:buf=4243:<h1>Teaching ReasonML</h1>
<blockquote>
<p>SWBAT: Write a todo list in ReasonML?</p>
</blockquote>
<h1>Why Reason?</h1>
<ul>
<li>Compiles to JS, <a href="https://github.com/jaredly/gravitron" rel="noopener noreferrer">Native mac/android/ios apps</a>, bytecode, even a <a href="https://mirage.io/" rel="noopener noreferrer">mini operating system</a>
<ul>
<li>ReactNative FRD someday</li>
</ul>
</li>
<li>The syntax by the <strong>creator of React</strong> + a 20 year old language used to power mission critical financial systems</li>
<li>Types without the typing (always inferred, 100% coverage)</li>
<li>Looks like JS 🤗</li>
<li>Facebook backs it</li>
<li>Gradual typing 2.0</li>
<li>λ Functional Programming by default, Imperative and Object-oriented for pragmatism reasons</li>
<li><strong>excels at handling inconsistency</strong></li>
<li>much more!</li>
</ul>
<h2>Basic Setup:</h2>
<p>Install build system</p>
<pre><code># provides the BuckleScript compiler
npm install -g bs-platform

# Provides integration with VScode or whatever
npm install -g reason-cli@3.1.0-darwin
</code></pre>
<p>Make a basic reason app:</p>
<pre><code># creates project my-first-app/ 
# ompiles to src/Demo.bs.js using BuckleScript compiler
# and runs the demo using NodeJS
bsb -init my-first-app -theme basic-reason  
cd my-first-app
npm run build
node src/Demo.bs.js
</code></pre>
<p>Make a ReasonReact app:</p>
<pre><code>bsb -init my-react-app -theme react.
</code></pre>
<h1>Basic types</h1>
<pre><code>/* immutable variable assigned to an int */
let a = 1;

/* immutable variable assigned to an float */
let b = 1.0;
</code></pre>
<h3>Lists</h3>
<p>Lists are linked lists they don't have random-access (you can't get the middle of them efficiently) but they are cheaper to add items to. Makes less of a difference in JS.</p>
<pre><code>let c = [1, 2, 3];
</code></pre>
<p>They don't allow different types in the same thing.</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/28A6BB82-0216-4200-9260-7ED07CB9E057.png" alt=""></p>
<h3>Tuples</h3>
<p>tuples are like elixir tuples. They use <code>()</code>'s though</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/490D5B5F-D2C7-4714-96C0-EF78CCFEAD33.png" alt=""></p>
<p>kind of like fixed length, polymorphic arrays. Or a struct were you're too lazy to name the fields.</p>
<h3>Arrays</h3>
<p>arrays have a different syntax  and they allow random access</p>
<pre><code>let d = [|1, 2, 3|];
</code></pre>
<p>This defines a struct. They have a <strong>fixed</strong> number of fields. They all must be present.</p>
<pre><code>type person = {
	name: string,
	age: string
};


let gage = {name: "gage"}
</code></pre>
<p><img src="http://localhost:5000/Teaching%20ReasonML/240A0D91-C108-4A29-B589-D157DBE9900F.png" alt=""></p>
<h1>Minting new types</h1>
<p><img src="http://localhost:5000/Teaching%20ReasonML/543CE6A4-9BFE-4CD2-B50D-00555ABA899B.png" alt=""></p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/AB3A7422-659F-489E-8140-C499B5E52EC1.png" alt="">
<a href="https://www.youtube.com/watch?v=AnZ0uTOerUI" rel="noopener noreferrer">GOTO 2018 • Unconditional Code • Michael Feathers - YouTube</a></p>
<blockquote>
<p>Don't be "stringly" typed...</p>
</blockquote>
<h3>Ode to the overloaded string...</h3>
<p>often used for</p>
<ul>
<li>a unique id: <code>var BLUE_COLOR = "blue"</code></li>
<li>an identifier into a data structure:</li>
</ul>
<pre><code>var BLUE = "blue";
var RED = "red";
var colors = [BLUE, RED] 
</code></pre>
<ul>
<li>the name of an object field: <code>person["age"] = 24</code></li>
<li>an enum: <code>if (audio.canPlayType() === 'probably') {...}</code> (yes this is an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType#Return_value" rel="noopener noreferrer">actual DOM API</a>)</li>
<li>other crazy patterns you'll soon find horrible, after getting used to Reason's alternatives.</li>
</ul>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.156 [debug] l:len=4

10:45:07.156 [debug] l:buf=243:<h1>Teaching ReasonML</h1>
<blockquote>
<p>SWBAT: Write a todo list in ReasonML?</p>
</blockquote>
<h1>Why Reason?</h1>
<ul>
<li>Compiles to JS, <a href="https://github.com/jaredly/gravitron" rel="noopener noreferrer">Native mac/android/ios apps</a>, bytecode, even a <a href="https://mirage.io/" rel="noopener noreferrer">mini operating system</a>
<ul>
<li>ReactNative FRD someday</li>
</ul>
</li>
<li>The syntax by the <strong>creator of React</strong> + a 20 year old language used to power mission critical financial systems</li>
<li>Types without the typing (always inferred, 100% coverage)</li>
<li>Looks like JS 🤗</li>
<li>Facebook backs it</li>
<li>Gradual typing 2.0</li>
<li>λ Functional Programming by default, Imperative and Object-oriented for pragmatism reasons</li>
<li><strong>excels at handling inconsistency</strong></li>
<li>much more!</li>
</ul>
<h2>Basic Setup:</h2>
<p>Install build system</p>
<pre><code># provides the BuckleScript compiler
npm install -g bs-platform

# Provides integration with VScode or whatever
npm install -g reason-cli@3.1.0-darwin
</code></pre>
<p>Make a basic reason app:</p>
<pre><code># creates project my-first-app/ 
# ompiles to src/Demo.bs.js using BuckleScript compiler
# and runs the demo using NodeJS
bsb -init my-first-app -theme basic-reason  
cd my-first-app
npm run build
node src/Demo.bs.js
</code></pre>
<p>Make a ReasonReact app:</p>
<pre><code>bsb -init my-react-app -theme react.
</code></pre>
<h1>Basic types</h1>
<pre><code>/* immutable variable assigned to an int */
let a = 1;

/* immutable variable assigned to an float */
let b = 1.0;
</code></pre>
<h3>Lists</h3>
<p>Lists are linked lists they don't have random-access (you can't get the middle of them efficiently) but they are cheaper to add items to. Makes less of a difference in JS.</p>
<pre><code>let c = [1, 2, 3];
</code></pre>
<p>They don't allow different types in the same thing.</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/28A6BB82-0216-4200-9260-7ED07CB9E057.png" alt=""></p>
<h3>Tuples</h3>
<p>tuples are like elixir tuples. They use <code>()</code>'s though</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/490D5B5F-D2C7-4714-96C0-EF78CCFEAD33.png" alt=""></p>
<p>kind of like fixed length, polymorphic arrays. Or a struct were you're too lazy to name the fields.</p>
<h3>Arrays</h3>
<p>arrays have a different syntax  and they allow random access</p>
<pre><code>let d = [|1, 2, 3|];
</code></pre>
<p>This defines a struct. They have a <strong>fixed</strong> number of fields. They all must be present.</p>
<pre><code>type person = {
	name: string,
	age: string
};


let gage = {name: "gage"}
</code></pre>
<p><img src="http://localhost:5000/Teaching%20ReasonML/240A0D91-C108-4A29-B589-D157DBE9900F.png" alt=""></p>
<h1>Minting new types</h1>
<p><img src="http://localhost:5000/Teaching%20ReasonML/543CE6A4-9BFE-4CD2-B50D-00555ABA899B.png" alt=""></p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/AB3A7422-659F-489E-8140-C499B5E52EC1.png" alt="">
<a href="https://www.youtube.com/watch?v=AnZ0uTOerUI" rel="noopener noreferrer">GOTO 2018 • Unconditional Code • Michael Feathers - YouTube</a></p>
<blockquote>
<p>Don't be "stringly" typed...</p>
</blockquote>
<h3>Ode to the overloaded string...</h3>
<p>often used for</p>
<ul>
<li>a unique id: <code>var BLUE_COLOR = "blue"</code></li>
<li>an identifier into a data structure:</li>
</ul>
<pre><code>var BLUE = "blue";
var RED = "red";
var colors = [BLUE, RED] 
</code></pre>
<ul>
<li>the name of an object field: <code>person["age"] = 24</code></li>
<li>an enum: <code>if (audio.canPlayType() === 'probably') {...}</code> (yes this is an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType#Return_value" rel="noopener noreferrer">actual DOM API</a>)</li>
<li>other crazy patterns you'll soon find horrible, after getting used to Reason's alternatives.</li>
</ul>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.156 [debug] l:len=42

10:45:07.156 [debug] l:buf=43:<h1>Teaching ReasonML</h1>
<blockquote>
<p>SWBAT: Write a todo list in ReasonML?</p>
</blockquote>
<h1>Why Reason?</h1>
<ul>
<li>Compiles to JS, <a href="https://github.com/jaredly/gravitron" rel="noopener noreferrer">Native mac/android/ios apps</a>, bytecode, even a <a href="https://mirage.io/" rel="noopener noreferrer">mini operating system</a>
<ul>
<li>ReactNative FRD someday</li>
</ul>
</li>
<li>The syntax by the <strong>creator of React</strong> + a 20 year old language used to power mission critical financial systems</li>
<li>Types without the typing (always inferred, 100% coverage)</li>
<li>Looks like JS 🤗</li>
<li>Facebook backs it</li>
<li>Gradual typing 2.0</li>
<li>λ Functional Programming by default, Imperative and Object-oriented for pragmatism reasons</li>
<li><strong>excels at handling inconsistency</strong></li>
<li>much more!</li>
</ul>
<h2>Basic Setup:</h2>
<p>Install build system</p>
<pre><code># provides the BuckleScript compiler
npm install -g bs-platform

# Provides integration with VScode or whatever
npm install -g reason-cli@3.1.0-darwin
</code></pre>
<p>Make a basic reason app:</p>
<pre><code># creates project my-first-app/ 
# ompiles to src/Demo.bs.js using BuckleScript compiler
# and runs the demo using NodeJS
bsb -init my-first-app -theme basic-reason  
cd my-first-app
npm run build
node src/Demo.bs.js
</code></pre>
<p>Make a ReasonReact app:</p>
<pre><code>bsb -init my-react-app -theme react.
</code></pre>
<h1>Basic types</h1>
<pre><code>/* immutable variable assigned to an int */
let a = 1;

/* immutable variable assigned to an float */
let b = 1.0;
</code></pre>
<h3>Lists</h3>
<p>Lists are linked lists they don't have random-access (you can't get the middle of them efficiently) but they are cheaper to add items to. Makes less of a difference in JS.</p>
<pre><code>let c = [1, 2, 3];
</code></pre>
<p>They don't allow different types in the same thing.</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/28A6BB82-0216-4200-9260-7ED07CB9E057.png" alt=""></p>
<h3>Tuples</h3>
<p>tuples are like elixir tuples. They use <code>()</code>'s though</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/490D5B5F-D2C7-4714-96C0-EF78CCFEAD33.png" alt=""></p>
<p>kind of like fixed length, polymorphic arrays. Or a struct were you're too lazy to name the fields.</p>
<h3>Arrays</h3>
<p>arrays have a different syntax  and they allow random access</p>
<pre><code>let d = [|1, 2, 3|];
</code></pre>
<p>This defines a struct. They have a <strong>fixed</strong> number of fields. They all must be present.</p>
<pre><code>type person = {
	name: string,
	age: string
};


let gage = {name: "gage"}
</code></pre>
<p><img src="http://localhost:5000/Teaching%20ReasonML/240A0D91-C108-4A29-B589-D157DBE9900F.png" alt=""></p>
<h1>Minting new types</h1>
<p><img src="http://localhost:5000/Teaching%20ReasonML/543CE6A4-9BFE-4CD2-B50D-00555ABA899B.png" alt=""></p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/AB3A7422-659F-489E-8140-C499B5E52EC1.png" alt="">
<a href="https://www.youtube.com/watch?v=AnZ0uTOerUI" rel="noopener noreferrer">GOTO 2018 • Unconditional Code • Michael Feathers - YouTube</a></p>
<blockquote>
<p>Don't be "stringly" typed...</p>
</blockquote>
<h3>Ode to the overloaded string...</h3>
<p>often used for</p>
<ul>
<li>a unique id: <code>var BLUE_COLOR = "blue"</code></li>
<li>an identifier into a data structure:</li>
</ul>
<pre><code>var BLUE = "blue";
var RED = "red";
var colors = [BLUE, RED] 
</code></pre>
<ul>
<li>the name of an object field: <code>person["age"] = 24</code></li>
<li>an enum: <code>if (audio.canPlayType() === 'probably') {...}</code> (yes this is an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType#Return_value" rel="noopener noreferrer">actual DOM API</a>)</li>
<li>other crazy patterns you'll soon find horrible, after getting used to Reason's alternatives.</li>
</ul>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.156 [debug] l:len=424

10:45:07.156 [debug] l:buf=3:<h1>Teaching ReasonML</h1>
<blockquote>
<p>SWBAT: Write a todo list in ReasonML?</p>
</blockquote>
<h1>Why Reason?</h1>
<ul>
<li>Compiles to JS, <a href="https://github.com/jaredly/gravitron" rel="noopener noreferrer">Native mac/android/ios apps</a>, bytecode, even a <a href="https://mirage.io/" rel="noopener noreferrer">mini operating system</a>
<ul>
<li>ReactNative FRD someday</li>
</ul>
</li>
<li>The syntax by the <strong>creator of React</strong> + a 20 year old language used to power mission critical financial systems</li>
<li>Types without the typing (always inferred, 100% coverage)</li>
<li>Looks like JS 🤗</li>
<li>Facebook backs it</li>
<li>Gradual typing 2.0</li>
<li>λ Functional Programming by default, Imperative and Object-oriented for pragmatism reasons</li>
<li><strong>excels at handling inconsistency</strong></li>
<li>much more!</li>
</ul>
<h2>Basic Setup:</h2>
<p>Install build system</p>
<pre><code># provides the BuckleScript compiler
npm install -g bs-platform

# Provides integration with VScode or whatever
npm install -g reason-cli@3.1.0-darwin
</code></pre>
<p>Make a basic reason app:</p>
<pre><code># creates project my-first-app/ 
# ompiles to src/Demo.bs.js using BuckleScript compiler
# and runs the demo using NodeJS
bsb -init my-first-app -theme basic-reason  
cd my-first-app
npm run build
node src/Demo.bs.js
</code></pre>
<p>Make a ReasonReact app:</p>
<pre><code>bsb -init my-react-app -theme react.
</code></pre>
<h1>Basic types</h1>
<pre><code>/* immutable variable assigned to an int */
let a = 1;

/* immutable variable assigned to an float */
let b = 1.0;
</code></pre>
<h3>Lists</h3>
<p>Lists are linked lists they don't have random-access (you can't get the middle of them efficiently) but they are cheaper to add items to. Makes less of a difference in JS.</p>
<pre><code>let c = [1, 2, 3];
</code></pre>
<p>They don't allow different types in the same thing.</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/28A6BB82-0216-4200-9260-7ED07CB9E057.png" alt=""></p>
<h3>Tuples</h3>
<p>tuples are like elixir tuples. They use <code>()</code>'s though</p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/490D5B5F-D2C7-4714-96C0-EF78CCFEAD33.png" alt=""></p>
<p>kind of like fixed length, polymorphic arrays. Or a struct were you're too lazy to name the fields.</p>
<h3>Arrays</h3>
<p>arrays have a different syntax  and they allow random access</p>
<pre><code>let d = [|1, 2, 3|];
</code></pre>
<p>This defines a struct. They have a <strong>fixed</strong> number of fields. They all must be present.</p>
<pre><code>type person = {
	name: string,
	age: string
};


let gage = {name: "gage"}
</code></pre>
<p><img src="http://localhost:5000/Teaching%20ReasonML/240A0D91-C108-4A29-B589-D157DBE9900F.png" alt=""></p>
<h1>Minting new types</h1>
<p><img src="http://localhost:5000/Teaching%20ReasonML/543CE6A4-9BFE-4CD2-B50D-00555ABA899B.png" alt=""></p>
<p><img src="http://localhost:5000/Teaching%20ReasonML/AB3A7422-659F-489E-8140-C499B5E52EC1.png" alt="">
<a href="https://www.youtube.com/watch?v=AnZ0uTOerUI" rel="noopener noreferrer">GOTO 2018 • Unconditional Code • Michael Feathers - YouTube</a></p>
<blockquote>
<p>Don't be "stringly" typed...</p>
</blockquote>
<h3>Ode to the overloaded string...</h3>
<p>often used for</p>
<ul>
<li>a unique id: <code>var BLUE_COLOR = "blue"</code></li>
<li>an identifier into a data structure:</li>
</ul>
<pre><code>var BLUE = "blue";
var RED = "red";
var colors = [BLUE, RED] 
</code></pre>
<ul>
<li>the name of an object field: <code>person["age"] = 24</code></li>
<li>an enum: <code>if (audio.canPlayType() === 'probably') {...}</code> (yes this is an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType#Return_value" rel="noopener noreferrer">actual DOM API</a>)</li>
<li>other crazy patterns you'll soon find horrible, after getting used to Reason's alternatives.</li>
</ul>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.156 [debug] l:len=

10:45:07.156 [debug] l:buf empty

10:45:07.156 [debug] l:len=

10:45:07.157 [debug] l:buf=284:<h1>essay</h1>
<ul>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> writing</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.157 [debug] l:len=2

10:45:07.157 [debug] l:buf=84:<h1>essay</h1>
<ul>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> writing</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.157 [debug] l:len=28

10:45:07.157 [debug] l:buf=4:<h1>essay</h1>
<ul>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> writing</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf empty

10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf=73:<h1>Ruby</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.157 [debug] l:len=7

10:45:07.157 [debug] l:buf=3:<h1>Ruby</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf empty

10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf=1293:<h1>synchronous communication</h1>
<p>The idea that when you are saying something people must be actively listening at that point in time to hear it.</p>
<p>Examples are:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>/<a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a> calls</li>
<li>Phone conversations</li>
<li>Many Slack conversations (due to the fact they will scroll away)</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/public-speaking" rel="noopener noreferrer">Public Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.157 [debug] l:len=1

10:45:07.157 [debug] l:buf=293:<h1>synchronous communication</h1>
<p>The idea that when you are saying something people must be actively listening at that point in time to hear it.</p>
<p>Examples are:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>/<a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a> calls</li>
<li>Phone conversations</li>
<li>Many Slack conversations (due to the fact they will scroll away)</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/public-speaking" rel="noopener noreferrer">Public Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.157 [debug] l:len=12

10:45:07.157 [debug] l:buf=93:<h1>synchronous communication</h1>
<p>The idea that when you are saying something people must be actively listening at that point in time to hear it.</p>
<p>Examples are:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>/<a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a> calls</li>
<li>Phone conversations</li>
<li>Many Slack conversations (due to the fact they will scroll away)</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/public-speaking" rel="noopener noreferrer">Public Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.157 [debug] l:len=129

10:45:07.157 [debug] l:buf=3:<h1>synchronous communication</h1>
<p>The idea that when you are saying something people must be actively listening at that point in time to hear it.</p>
<p>Examples are:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>/<a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a> calls</li>
<li>Phone conversations</li>
<li>Many Slack conversations (due to the fact they will scroll away)</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/public-speaking" rel="noopener noreferrer">Public Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf empty

10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf=543:<h1>Stress is caused by worry</h1>
<p><a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a> is not caused by hard work. Often we feel that our arduous effort is stressing us out. But that is an incorrect understanding. Stress develops when we are attached to a particular outcome and are worried that things may not turn out as we desire.</p>
<p>Ref: <a href="https://twitter.com/Sw_Mukundananda/status/1315298933581770757" rel="noopener noreferrer">https://twitter.com/Sw_Mukundananda/status/1315298933581770757</a></p>


10:45:07.157 [debug] l:len=5

10:45:07.157 [debug] l:buf=43:<h1>Stress is caused by worry</h1>
<p><a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a> is not caused by hard work. Often we feel that our arduous effort is stressing us out. But that is an incorrect understanding. Stress develops when we are attached to a particular outcome and are worried that things may not turn out as we desire.</p>
<p>Ref: <a href="https://twitter.com/Sw_Mukundananda/status/1315298933581770757" rel="noopener noreferrer">https://twitter.com/Sw_Mukundananda/status/1315298933581770757</a></p>


10:45:07.157 [debug] l:len=54

10:45:07.157 [debug] l:buf=3:<h1>Stress is caused by worry</h1>
<p><a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a> is not caused by hard work. Often we feel that our arduous effort is stressing us out. But that is an incorrect understanding. Stress develops when we are attached to a particular outcome and are worried that things may not turn out as we desire.</p>
<p>Ref: <a href="https://twitter.com/Sw_Mukundananda/status/1315298933581770757" rel="noopener noreferrer">https://twitter.com/Sw_Mukundananda/status/1315298933581770757</a></p>


10:45:07.157 [debug] l:len=

10:45:07.157 [debug] l:buf empty

10:45:07.158 [debug] l:len=

10:45:07.158 [debug] l:buf=585:<h1>Slack is hostile for the reader</h1>
<p>Slack <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.158 [debug] l:len=5

10:45:07.158 [debug] l:buf=85:<h1>Slack is hostile for the reader</h1>
<p>Slack <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.158 [debug] l:len=58

10:45:07.158 [debug] l:buf=5:<h1>Slack is hostile for the reader</h1>
<p>Slack <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.158 [debug] l:len=

10:45:07.158 [debug] l:buf empty

10:45:07.158 [debug] l:len=

10:45:07.158 [debug] l:buf=233:<h1>Basecamp Projects</h1>
<p>A light <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board for the <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a>.</p>


10:45:07.158 [debug] l:len=2

10:45:07.158 [debug] l:buf=33:<h1>Basecamp Projects</h1>
<p>A light <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board for the <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a>.</p>


10:45:07.158 [debug] l:len=23

10:45:07.158 [debug] l:buf=3:<h1>Basecamp Projects</h1>
<p>A light <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> board for the <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a>.</p>


10:45:07.158 [debug] l:len=

10:45:07.158 [debug] l:buf empty

10:45:07.158 [debug] l:len=

10:45:07.158 [debug] l:buf=471:<h1>reasonconf2019</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.159 [debug] l:len=4

10:45:07.159 [debug] l:buf=71:<h1>reasonconf2019</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.159 [debug] l:len=47

10:45:07.159 [debug] l:buf=1:<h1>reasonconf2019</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.159 [debug] l:len=

10:45:07.159 [debug] l:buf empty

10:45:07.159 [debug] l:len=

10:45:07.159 [debug] l:buf=879:<p>Don't follow best practices</p>
<p>I found out that the #1 trick is to not worry about doing things the right way. Building things server side generated was a huge productivity boost for me in an era where everyone is building a single page app. This way I don't have to pay for auth0 or firebase. It's not "best practice" but I found out what really matters is the user experience and that's much more dependent on effort and <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a> than tech.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>


10:45:07.159 [debug] l:len=8

10:45:07.159 [debug] l:buf=79:<p>Don't follow best practices</p>
<p>I found out that the #1 trick is to not worry about doing things the right way. Building things server side generated was a huge productivity boost for me in an era where everyone is building a single page app. This way I don't have to pay for auth0 or firebase. It's not "best practice" but I found out what really matters is the user experience and that's much more dependent on effort and <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a> than tech.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>


10:45:07.159 [debug] l:len=87

10:45:07.159 [debug] l:buf=9:<p>Don't follow best practices</p>
<p>I found out that the #1 trick is to not worry about doing things the right way. Building things server side generated was a huge productivity boost for me in an era where everyone is building a single page app. This way I don't have to pay for auth0 or firebase. It's not "best practice" but I found out what really matters is the user experience and that's much more dependent on effort and <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a> than tech.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>


10:45:07.159 [debug] l:len=

10:45:07.159 [debug] l:buf empty

10:45:07.159 [debug] l:len=

10:45:07.159 [debug] l:buf=248:<h1>titles</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.159 [debug] l:len=2

10:45:07.159 [debug] l:buf=48:<h1>titles</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.159 [debug] l:len=24

10:45:07.159 [debug] l:buf=8:<h1>titles</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.159 [debug] l:len=

10:45:07.159 [debug] l:buf empty

10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf=6352:<h1>MOC</h1>
<h1>MOCs (Maps of Content) - Intro</h1>
<ul>
<li>Step 1: Understand the paradigm of Maps of Content (MOCs): a game-changing thinking tool for knowledge management.</li>
<li>Step 2: Use MOCs to deepen and accelerate your ideation to greater levels.</li>
</ul>
<h2>Why use MOCs</h2>
<ul>
<li>MOCs relieve anxiety by allowing you a space to place related notes together</li>
<li>In that space, MOCs create an environment that encourages concentrated ideation: the rapid interact, exchange, and development of thoughts, notions, and ideas.</li>
<li><em>After</em> you've developed an MOC you're happy with, it becomes the template for whatever project you need to complete: an essay, a product, a summation of thought on a topic.</li>
<li>The MOC remains as a reliable navigational tool to the rest of your digital library.</li>
<li>The MOC also acts as a reminding tool on a subject. Years later you can quickly return to it and remember, "Oh I remember now, that's what I thought about the how the evolution of fonts related to the broader movements of Art History!"</li>
<li>The MOC remains ready to evolve as your thoughts grow, mature, develop complexity on a subject.</li>
<li>MOCs maintain their fluidity: As opposed to folders, MOCs are nondestructive, non-restrictive, non-limiting perspectives. Unlike a folder, you are not forced to use them to access your notes. MOCs are “overlays” that add relevant information but that don't affect the base content.</li>
<li>MOCs allow for limitless flexibility: Unlike folders or Table of Contents (TOC), MOCs are not hierarchical. They are <a href="http://localhost:5000/heterarchy" rel="noopener noreferrer">heterarchial</a>. This means that, <a href="http://localhost:5000/mocs-can-map-the-same-info-in-different-ways" rel="noopener noreferrer">multiple maps organizing the same info in different ways</a> to fit whatever persepective the note is for.</li>
<li>MOCs encourage "Relational Positioning": Don't argue with the Ancient Greeks and Romans about the value of spatial relationships. It helps us remember better when ideas are not floating in isolation, but as a part of a spatial constellation.[^1]</li>
</ul>
<h2>When to use MOCs</h2>
<p>Whenever you start to feel that tickle of overwhelm, that's when you need to <em>become a cartographer of your own content</em> and create a new MOC.</p>
<p>For example, let's say you have 20 scattered notes on the project you’re making. Just like putting 20 index cards on an inviting rustic workbench, putting links to all 20 notes into a new MOCs is the digital equivalent.</p>
<p>MOCs help you overcome <em>Mental Squeeze Points</em> and the dreaded "Project Slowdown".</p>
<ul>
<li>What is a mental squeeze point? It's when your unsorted knowledge becomes so messy it overwhelms and discourages you. Either you are equipped with frameworks to overcome the squeeze point, or you are discouraged and possibly abandon your project. This is usually followed by yet another search for the next app that will make all the difference.</li>
</ul>
<blockquote>
<p><em>The ability to know when and how to make an MOC is a key skill in overcoming overwhelm and project slowdown</em>.</p>
</blockquote>
<h2>How to use MOCs</h2>
<p>Maps of Content fill more purposes than initially meet the eye. Here are <a href="http://localhost:5000/the-3-phases-of-mocs" rel="noopener noreferrer">The 3 phases of MOCs</a>.</p>
<p>(1) <a href="http://localhost:5000/habits-moc---assembling-phase" rel="noopener noreferrer">Assembling Phase</a>: Imagine having a warehouse of limitless workbenches, and for each workbench you curate the notes placed on it. Whenever you feel you need to get a handle on a bunch of notes Subject XYZ,  just throw them all onto a new workbench—i.e. place their links into a new MOC note titled <code>Subject XYZ MOC</code>. Now it's easier to begin.</p>
<p>(2) <a href="http://localhost:5000/habits-moc---colliding-phase" rel="noopener noreferrer">Colliding Phase</a>: Once you have all your ideas in one MOC, use it like a crucible where ideas can battle it out for positioning, forcing you to grind them to their fundamental essence—thinking of their proximal importance to each other and building stronger connective tissue between them. Great work is accomplished during in this conceptual battleground. The product of this work is rarely one without satisfaction.</p>
<p>(2b) As you position these related notes, you might naturally form something that looks like a Table of Contents (TOC). TOCs are specific and linear. Depending on the project, you might need one as you get closer to a final product.</p>
<ul>
<li><strong>Map of Content = MOC</strong> - Use these as a thinking tool and to structure your digital library</li>
<li><strong>Table of Contents = TOC</strong> - Use these to structure more specific, near-final projects in a single, linear way</li>
</ul>
<p>(3) <a href="http://localhost:5000/habits-moc---unifying-phase" rel="noopener noreferrer">Unifying Phase</a>: As you finish work on an area of interest, the MOC remains as a renewable summation of thought for the future you. An MOC is your easy access point back into the topic—whether that's tomorrow or in ten years.</p>
<blockquote>
<p>In this way, the usage intensity of an MOC can mimic a 3-act structure: Setup, Confrontation, and Resolution.</p>
</blockquote>
<p>Want to get reps on this now? Try <a href="http://localhost:5000/walking-through-the-3-phases-of-mocs" rel="noopener noreferrer">Walking through the 3 phases of MOCs</a>.</p>
<hr>
<p>links: <a href="http://localhost:5000/imf-intro" rel="noopener noreferrer">IMF Intro</a>, <a href="http://localhost:5000/imf-moc" rel="noopener noreferrer">IMF MOC</a></p>
<p>[^1]: The Ancients filled their minds with tomes of knowledge that they could recall when needed. The underlying principle was the Method of Loci (loci being Latin for "places"), which is a strategy of memory enhancement by visualizing familiar spatial environments to improve the recall of information.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.160 [debug] l:len=6

10:45:07.160 [debug] l:buf=352:<h1>MOC</h1>
<h1>MOCs (Maps of Content) - Intro</h1>
<ul>
<li>Step 1: Understand the paradigm of Maps of Content (MOCs): a game-changing thinking tool for knowledge management.</li>
<li>Step 2: Use MOCs to deepen and accelerate your ideation to greater levels.</li>
</ul>
<h2>Why use MOCs</h2>
<ul>
<li>MOCs relieve anxiety by allowing you a space to place related notes together</li>
<li>In that space, MOCs create an environment that encourages concentrated ideation: the rapid interact, exchange, and development of thoughts, notions, and ideas.</li>
<li><em>After</em> you've developed an MOC you're happy with, it becomes the template for whatever project you need to complete: an essay, a product, a summation of thought on a topic.</li>
<li>The MOC remains as a reliable navigational tool to the rest of your digital library.</li>
<li>The MOC also acts as a reminding tool on a subject. Years later you can quickly return to it and remember, "Oh I remember now, that's what I thought about the how the evolution of fonts related to the broader movements of Art History!"</li>
<li>The MOC remains ready to evolve as your thoughts grow, mature, develop complexity on a subject.</li>
<li>MOCs maintain their fluidity: As opposed to folders, MOCs are nondestructive, non-restrictive, non-limiting perspectives. Unlike a folder, you are not forced to use them to access your notes. MOCs are “overlays” that add relevant information but that don't affect the base content.</li>
<li>MOCs allow for limitless flexibility: Unlike folders or Table of Contents (TOC), MOCs are not hierarchical. They are <a href="http://localhost:5000/heterarchy" rel="noopener noreferrer">heterarchial</a>. This means that, <a href="http://localhost:5000/mocs-can-map-the-same-info-in-different-ways" rel="noopener noreferrer">multiple maps organizing the same info in different ways</a> to fit whatever persepective the note is for.</li>
<li>MOCs encourage "Relational Positioning": Don't argue with the Ancient Greeks and Romans about the value of spatial relationships. It helps us remember better when ideas are not floating in isolation, but as a part of a spatial constellation.[^1]</li>
</ul>
<h2>When to use MOCs</h2>
<p>Whenever you start to feel that tickle of overwhelm, that's when you need to <em>become a cartographer of your own content</em> and create a new MOC.</p>
<p>For example, let's say you have 20 scattered notes on the project you’re making. Just like putting 20 index cards on an inviting rustic workbench, putting links to all 20 notes into a new MOCs is the digital equivalent.</p>
<p>MOCs help you overcome <em>Mental Squeeze Points</em> and the dreaded "Project Slowdown".</p>
<ul>
<li>What is a mental squeeze point? It's when your unsorted knowledge becomes so messy it overwhelms and discourages you. Either you are equipped with frameworks to overcome the squeeze point, or you are discouraged and possibly abandon your project. This is usually followed by yet another search for the next app that will make all the difference.</li>
</ul>
<blockquote>
<p><em>The ability to know when and how to make an MOC is a key skill in overcoming overwhelm and project slowdown</em>.</p>
</blockquote>
<h2>How to use MOCs</h2>
<p>Maps of Content fill more purposes than initially meet the eye. Here are <a href="http://localhost:5000/the-3-phases-of-mocs" rel="noopener noreferrer">The 3 phases of MOCs</a>.</p>
<p>(1) <a href="http://localhost:5000/habits-moc---assembling-phase" rel="noopener noreferrer">Assembling Phase</a>: Imagine having a warehouse of limitless workbenches, and for each workbench you curate the notes placed on it. Whenever you feel you need to get a handle on a bunch of notes Subject XYZ,  just throw them all onto a new workbench—i.e. place their links into a new MOC note titled <code>Subject XYZ MOC</code>. Now it's easier to begin.</p>
<p>(2) <a href="http://localhost:5000/habits-moc---colliding-phase" rel="noopener noreferrer">Colliding Phase</a>: Once you have all your ideas in one MOC, use it like a crucible where ideas can battle it out for positioning, forcing you to grind them to their fundamental essence—thinking of their proximal importance to each other and building stronger connective tissue between them. Great work is accomplished during in this conceptual battleground. The product of this work is rarely one without satisfaction.</p>
<p>(2b) As you position these related notes, you might naturally form something that looks like a Table of Contents (TOC). TOCs are specific and linear. Depending on the project, you might need one as you get closer to a final product.</p>
<ul>
<li><strong>Map of Content = MOC</strong> - Use these as a thinking tool and to structure your digital library</li>
<li><strong>Table of Contents = TOC</strong> - Use these to structure more specific, near-final projects in a single, linear way</li>
</ul>
<p>(3) <a href="http://localhost:5000/habits-moc---unifying-phase" rel="noopener noreferrer">Unifying Phase</a>: As you finish work on an area of interest, the MOC remains as a renewable summation of thought for the future you. An MOC is your easy access point back into the topic—whether that's tomorrow or in ten years.</p>
<blockquote>
<p>In this way, the usage intensity of an MOC can mimic a 3-act structure: Setup, Confrontation, and Resolution.</p>
</blockquote>
<p>Want to get reps on this now? Try <a href="http://localhost:5000/walking-through-the-3-phases-of-mocs" rel="noopener noreferrer">Walking through the 3 phases of MOCs</a>.</p>
<hr>
<p>links: <a href="http://localhost:5000/imf-intro" rel="noopener noreferrer">IMF Intro</a>, <a href="http://localhost:5000/imf-moc" rel="noopener noreferrer">IMF MOC</a></p>
<p>[^1]: The Ancients filled their minds with tomes of knowledge that they could recall when needed. The underlying principle was the Method of Loci (loci being Latin for "places"), which is a strategy of memory enhancement by visualizing familiar spatial environments to improve the recall of information.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.160 [debug] l:len=63

10:45:07.160 [debug] l:buf=52:<h1>MOC</h1>
<h1>MOCs (Maps of Content) - Intro</h1>
<ul>
<li>Step 1: Understand the paradigm of Maps of Content (MOCs): a game-changing thinking tool for knowledge management.</li>
<li>Step 2: Use MOCs to deepen and accelerate your ideation to greater levels.</li>
</ul>
<h2>Why use MOCs</h2>
<ul>
<li>MOCs relieve anxiety by allowing you a space to place related notes together</li>
<li>In that space, MOCs create an environment that encourages concentrated ideation: the rapid interact, exchange, and development of thoughts, notions, and ideas.</li>
<li><em>After</em> you've developed an MOC you're happy with, it becomes the template for whatever project you need to complete: an essay, a product, a summation of thought on a topic.</li>
<li>The MOC remains as a reliable navigational tool to the rest of your digital library.</li>
<li>The MOC also acts as a reminding tool on a subject. Years later you can quickly return to it and remember, "Oh I remember now, that's what I thought about the how the evolution of fonts related to the broader movements of Art History!"</li>
<li>The MOC remains ready to evolve as your thoughts grow, mature, develop complexity on a subject.</li>
<li>MOCs maintain their fluidity: As opposed to folders, MOCs are nondestructive, non-restrictive, non-limiting perspectives. Unlike a folder, you are not forced to use them to access your notes. MOCs are “overlays” that add relevant information but that don't affect the base content.</li>
<li>MOCs allow for limitless flexibility: Unlike folders or Table of Contents (TOC), MOCs are not hierarchical. They are <a href="http://localhost:5000/heterarchy" rel="noopener noreferrer">heterarchial</a>. This means that, <a href="http://localhost:5000/mocs-can-map-the-same-info-in-different-ways" rel="noopener noreferrer">multiple maps organizing the same info in different ways</a> to fit whatever persepective the note is for.</li>
<li>MOCs encourage "Relational Positioning": Don't argue with the Ancient Greeks and Romans about the value of spatial relationships. It helps us remember better when ideas are not floating in isolation, but as a part of a spatial constellation.[^1]</li>
</ul>
<h2>When to use MOCs</h2>
<p>Whenever you start to feel that tickle of overwhelm, that's when you need to <em>become a cartographer of your own content</em> and create a new MOC.</p>
<p>For example, let's say you have 20 scattered notes on the project you’re making. Just like putting 20 index cards on an inviting rustic workbench, putting links to all 20 notes into a new MOCs is the digital equivalent.</p>
<p>MOCs help you overcome <em>Mental Squeeze Points</em> and the dreaded "Project Slowdown".</p>
<ul>
<li>What is a mental squeeze point? It's when your unsorted knowledge becomes so messy it overwhelms and discourages you. Either you are equipped with frameworks to overcome the squeeze point, or you are discouraged and possibly abandon your project. This is usually followed by yet another search for the next app that will make all the difference.</li>
</ul>
<blockquote>
<p><em>The ability to know when and how to make an MOC is a key skill in overcoming overwhelm and project slowdown</em>.</p>
</blockquote>
<h2>How to use MOCs</h2>
<p>Maps of Content fill more purposes than initially meet the eye. Here are <a href="http://localhost:5000/the-3-phases-of-mocs" rel="noopener noreferrer">The 3 phases of MOCs</a>.</p>
<p>(1) <a href="http://localhost:5000/habits-moc---assembling-phase" rel="noopener noreferrer">Assembling Phase</a>: Imagine having a warehouse of limitless workbenches, and for each workbench you curate the notes placed on it. Whenever you feel you need to get a handle on a bunch of notes Subject XYZ,  just throw them all onto a new workbench—i.e. place their links into a new MOC note titled <code>Subject XYZ MOC</code>. Now it's easier to begin.</p>
<p>(2) <a href="http://localhost:5000/habits-moc---colliding-phase" rel="noopener noreferrer">Colliding Phase</a>: Once you have all your ideas in one MOC, use it like a crucible where ideas can battle it out for positioning, forcing you to grind them to their fundamental essence—thinking of their proximal importance to each other and building stronger connective tissue between them. Great work is accomplished during in this conceptual battleground. The product of this work is rarely one without satisfaction.</p>
<p>(2b) As you position these related notes, you might naturally form something that looks like a Table of Contents (TOC). TOCs are specific and linear. Depending on the project, you might need one as you get closer to a final product.</p>
<ul>
<li><strong>Map of Content = MOC</strong> - Use these as a thinking tool and to structure your digital library</li>
<li><strong>Table of Contents = TOC</strong> - Use these to structure more specific, near-final projects in a single, linear way</li>
</ul>
<p>(3) <a href="http://localhost:5000/habits-moc---unifying-phase" rel="noopener noreferrer">Unifying Phase</a>: As you finish work on an area of interest, the MOC remains as a renewable summation of thought for the future you. An MOC is your easy access point back into the topic—whether that's tomorrow or in ten years.</p>
<blockquote>
<p>In this way, the usage intensity of an MOC can mimic a 3-act structure: Setup, Confrontation, and Resolution.</p>
</blockquote>
<p>Want to get reps on this now? Try <a href="http://localhost:5000/walking-through-the-3-phases-of-mocs" rel="noopener noreferrer">Walking through the 3 phases of MOCs</a>.</p>
<hr>
<p>links: <a href="http://localhost:5000/imf-intro" rel="noopener noreferrer">IMF Intro</a>, <a href="http://localhost:5000/imf-moc" rel="noopener noreferrer">IMF MOC</a></p>
<p>[^1]: The Ancients filled their minds with tomes of knowledge that they could recall when needed. The underlying principle was the Method of Loci (loci being Latin for "places"), which is a strategy of memory enhancement by visualizing familiar spatial environments to improve the recall of information.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.160 [debug] l:len=635

10:45:07.160 [debug] l:buf=2:<h1>MOC</h1>
<h1>MOCs (Maps of Content) - Intro</h1>
<ul>
<li>Step 1: Understand the paradigm of Maps of Content (MOCs): a game-changing thinking tool for knowledge management.</li>
<li>Step 2: Use MOCs to deepen and accelerate your ideation to greater levels.</li>
</ul>
<h2>Why use MOCs</h2>
<ul>
<li>MOCs relieve anxiety by allowing you a space to place related notes together</li>
<li>In that space, MOCs create an environment that encourages concentrated ideation: the rapid interact, exchange, and development of thoughts, notions, and ideas.</li>
<li><em>After</em> you've developed an MOC you're happy with, it becomes the template for whatever project you need to complete: an essay, a product, a summation of thought on a topic.</li>
<li>The MOC remains as a reliable navigational tool to the rest of your digital library.</li>
<li>The MOC also acts as a reminding tool on a subject. Years later you can quickly return to it and remember, "Oh I remember now, that's what I thought about the how the evolution of fonts related to the broader movements of Art History!"</li>
<li>The MOC remains ready to evolve as your thoughts grow, mature, develop complexity on a subject.</li>
<li>MOCs maintain their fluidity: As opposed to folders, MOCs are nondestructive, non-restrictive, non-limiting perspectives. Unlike a folder, you are not forced to use them to access your notes. MOCs are “overlays” that add relevant information but that don't affect the base content.</li>
<li>MOCs allow for limitless flexibility: Unlike folders or Table of Contents (TOC), MOCs are not hierarchical. They are <a href="http://localhost:5000/heterarchy" rel="noopener noreferrer">heterarchial</a>. This means that, <a href="http://localhost:5000/mocs-can-map-the-same-info-in-different-ways" rel="noopener noreferrer">multiple maps organizing the same info in different ways</a> to fit whatever persepective the note is for.</li>
<li>MOCs encourage "Relational Positioning": Don't argue with the Ancient Greeks and Romans about the value of spatial relationships. It helps us remember better when ideas are not floating in isolation, but as a part of a spatial constellation.[^1]</li>
</ul>
<h2>When to use MOCs</h2>
<p>Whenever you start to feel that tickle of overwhelm, that's when you need to <em>become a cartographer of your own content</em> and create a new MOC.</p>
<p>For example, let's say you have 20 scattered notes on the project you’re making. Just like putting 20 index cards on an inviting rustic workbench, putting links to all 20 notes into a new MOCs is the digital equivalent.</p>
<p>MOCs help you overcome <em>Mental Squeeze Points</em> and the dreaded "Project Slowdown".</p>
<ul>
<li>What is a mental squeeze point? It's when your unsorted knowledge becomes so messy it overwhelms and discourages you. Either you are equipped with frameworks to overcome the squeeze point, or you are discouraged and possibly abandon your project. This is usually followed by yet another search for the next app that will make all the difference.</li>
</ul>
<blockquote>
<p><em>The ability to know when and how to make an MOC is a key skill in overcoming overwhelm and project slowdown</em>.</p>
</blockquote>
<h2>How to use MOCs</h2>
<p>Maps of Content fill more purposes than initially meet the eye. Here are <a href="http://localhost:5000/the-3-phases-of-mocs" rel="noopener noreferrer">The 3 phases of MOCs</a>.</p>
<p>(1) <a href="http://localhost:5000/habits-moc---assembling-phase" rel="noopener noreferrer">Assembling Phase</a>: Imagine having a warehouse of limitless workbenches, and for each workbench you curate the notes placed on it. Whenever you feel you need to get a handle on a bunch of notes Subject XYZ,  just throw them all onto a new workbench—i.e. place their links into a new MOC note titled <code>Subject XYZ MOC</code>. Now it's easier to begin.</p>
<p>(2) <a href="http://localhost:5000/habits-moc---colliding-phase" rel="noopener noreferrer">Colliding Phase</a>: Once you have all your ideas in one MOC, use it like a crucible where ideas can battle it out for positioning, forcing you to grind them to their fundamental essence—thinking of their proximal importance to each other and building stronger connective tissue between them. Great work is accomplished during in this conceptual battleground. The product of this work is rarely one without satisfaction.</p>
<p>(2b) As you position these related notes, you might naturally form something that looks like a Table of Contents (TOC). TOCs are specific and linear. Depending on the project, you might need one as you get closer to a final product.</p>
<ul>
<li><strong>Map of Content = MOC</strong> - Use these as a thinking tool and to structure your digital library</li>
<li><strong>Table of Contents = TOC</strong> - Use these to structure more specific, near-final projects in a single, linear way</li>
</ul>
<p>(3) <a href="http://localhost:5000/habits-moc---unifying-phase" rel="noopener noreferrer">Unifying Phase</a>: As you finish work on an area of interest, the MOC remains as a renewable summation of thought for the future you. An MOC is your easy access point back into the topic—whether that's tomorrow or in ten years.</p>
<blockquote>
<p>In this way, the usage intensity of an MOC can mimic a 3-act structure: Setup, Confrontation, and Resolution.</p>
</blockquote>
<p>Want to get reps on this now? Try <a href="http://localhost:5000/walking-through-the-3-phases-of-mocs" rel="noopener noreferrer">Walking through the 3 phases of MOCs</a>.</p>
<hr>
<p>links: <a href="http://localhost:5000/imf-intro" rel="noopener noreferrer">IMF Intro</a>, <a href="http://localhost:5000/imf-moc" rel="noopener noreferrer">IMF MOC</a></p>
<p>[^1]: The Ancients filled their minds with tomes of knowledge that they could recall when needed. The underlying principle was the Method of Loci (loci being Latin for "places"), which is a strategy of memory enhancement by visualizing familiar spatial environments to improve the recall of information.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf empty

10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf=240:<h1>curate</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.160 [debug] l:len=2

10:45:07.160 [debug] l:buf=40:<h1>curate</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.160 [debug] l:len=24

10:45:07.160 [debug] l:buf=0:<h1>curate</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf empty

10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf=249:<h1>Pasted image 20201019152812</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.160 [debug] l:len=2

10:45:07.160 [debug] l:buf=49:<h1>Pasted image 20201019152812</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.160 [debug] l:len=24

10:45:07.160 [debug] l:buf=9:<h1>Pasted image 20201019152812</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf empty

10:45:07.160 [debug] l:len=

10:45:07.160 [debug] l:buf=103:<h1>Fundamental law of road congestion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.161 [debug] l:len=1

10:45:07.161 [debug] l:buf=03:<h1>Fundamental law of road congestion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.161 [debug] l:len=10

10:45:07.161 [debug] l:buf=3:<h1>Fundamental law of road congestion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.161 [debug] l:len=

10:45:07.161 [debug] l:buf empty

10:45:07.161 [debug] l:len=

10:45:07.161 [debug] l:buf=553:<h1>Associative Thought</h1>
<p>Used in <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> where you link new ideas to old ideas and create a web of ideas.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.161 [debug] l:len=5

10:45:07.161 [debug] l:buf=53:<h1>Associative Thought</h1>
<p>Used in <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> where you link new ideas to old ideas and create a web of ideas.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.161 [debug] l:len=55

10:45:07.161 [debug] l:buf=3:<h1>Associative Thought</h1>
<p>Used in <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> where you link new ideas to old ideas and create a web of ideas.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.161 [debug] l:len=

10:45:07.161 [debug] l:buf empty

10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf=1352:<h1>fiddly</h1>
<p>when a particular UI interaction requires lots of clicks and thought to interact with it.</p>
<p>For instance in HEY! they use a simple stacking method for "later" stuff
![[Other/Attachments/Pasted image 1.png]]</p>
<p>Which is less fiddly than the typical "snooze" feature most email clients have started to implement:</p>
<p>![[Other/Attachments/Pasted image 2.png]]
<em>initial interaction</em></p>
<p>![[Other/Attachments/Pasted image 3.png]]
<em>date picker</em></p>
<p>They Hey thing only has very simple interactions:</p>
<ol>
<li>I don't want to forget about this, so I'll "set it aside" (place it in the stack)</li>
<li>I'm done with this email, so I'll remove it from the stack</li>
</ol>
<p>Whereas the "snooze" feature presents you with way too many choices and gets in your face much more than necessary</p>
<ol>
<li>Do you want to process it today, tomorrow, someday (never), next week, or any time in the world?</li>
<li>...Email shows up</li>
<li>Dang, can't look at this right now, I'll snooze it again... (loop)</li>
</ol>
<p>Link: <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.162 [debug] l:len=1

10:45:07.162 [debug] l:buf=352:<h1>fiddly</h1>
<p>when a particular UI interaction requires lots of clicks and thought to interact with it.</p>
<p>For instance in HEY! they use a simple stacking method for "later" stuff
![[Other/Attachments/Pasted image 1.png]]</p>
<p>Which is less fiddly than the typical "snooze" feature most email clients have started to implement:</p>
<p>![[Other/Attachments/Pasted image 2.png]]
<em>initial interaction</em></p>
<p>![[Other/Attachments/Pasted image 3.png]]
<em>date picker</em></p>
<p>They Hey thing only has very simple interactions:</p>
<ol>
<li>I don't want to forget about this, so I'll "set it aside" (place it in the stack)</li>
<li>I'm done with this email, so I'll remove it from the stack</li>
</ol>
<p>Whereas the "snooze" feature presents you with way too many choices and gets in your face much more than necessary</p>
<ol>
<li>Do you want to process it today, tomorrow, someday (never), next week, or any time in the world?</li>
<li>...Email shows up</li>
<li>Dang, can't look at this right now, I'll snooze it again... (loop)</li>
</ol>
<p>Link: <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.162 [debug] l:len=13

10:45:07.162 [debug] l:buf=52:<h1>fiddly</h1>
<p>when a particular UI interaction requires lots of clicks and thought to interact with it.</p>
<p>For instance in HEY! they use a simple stacking method for "later" stuff
![[Other/Attachments/Pasted image 1.png]]</p>
<p>Which is less fiddly than the typical "snooze" feature most email clients have started to implement:</p>
<p>![[Other/Attachments/Pasted image 2.png]]
<em>initial interaction</em></p>
<p>![[Other/Attachments/Pasted image 3.png]]
<em>date picker</em></p>
<p>They Hey thing only has very simple interactions:</p>
<ol>
<li>I don't want to forget about this, so I'll "set it aside" (place it in the stack)</li>
<li>I'm done with this email, so I'll remove it from the stack</li>
</ol>
<p>Whereas the "snooze" feature presents you with way too many choices and gets in your face much more than necessary</p>
<ol>
<li>Do you want to process it today, tomorrow, someday (never), next week, or any time in the world?</li>
<li>...Email shows up</li>
<li>Dang, can't look at this right now, I'll snooze it again... (loop)</li>
</ol>
<p>Link: <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.162 [debug] l:len=135

10:45:07.162 [debug] l:buf=2:<h1>fiddly</h1>
<p>when a particular UI interaction requires lots of clicks and thought to interact with it.</p>
<p>For instance in HEY! they use a simple stacking method for "later" stuff
![[Other/Attachments/Pasted image 1.png]]</p>
<p>Which is less fiddly than the typical "snooze" feature most email clients have started to implement:</p>
<p>![[Other/Attachments/Pasted image 2.png]]
<em>initial interaction</em></p>
<p>![[Other/Attachments/Pasted image 3.png]]
<em>date picker</em></p>
<p>They Hey thing only has very simple interactions:</p>
<ol>
<li>I don't want to forget about this, so I'll "set it aside" (place it in the stack)</li>
<li>I'm done with this email, so I'll remove it from the stack</li>
</ol>
<p>Whereas the "snooze" feature presents you with way too many choices and gets in your face much more than necessary</p>
<ol>
<li>Do you want to process it today, tomorrow, someday (never), next week, or any time in the world?</li>
<li>...Email shows up</li>
<li>Dang, can't look at this right now, I'll snooze it again... (loop)</li>
</ol>
<p>Link: <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf empty

10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf=17:<p>Adversity</p>


10:45:07.162 [debug] l:len=1

10:45:07.162 [debug] l:buf=7:<p>Adversity</p>


10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf empty

10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf=2359:<h1>Hacker mindset</h1>
<p>I would agree that hacking is an extremely creative activity. The requires the person that is hacking to think about the system as a whole that they've never seen the code of generally and think as the person writing the code with think. And requires us to think of new things that people have never tried before. Even to think of things that the system could be used for that people never realized. I believe it takes a lot of creativity to realize that you can pass SQL into a URL to extract the entire database on to a web page without ever seeing the code before although that's old news now.</p>
<p>This mindset reminds me a lot of the movie divergent where the main character has to think of ways to look past the obvious solutions and question the assumptions imposed by the tests such as  the glass wall being impenetrable. Divergent thinking requires us to think in terms of third alternatives when only an two options are presented. While often these skills are used for crimes to be committed they're the same skills that are often used the question our assumptions about the world and find new alternatives to problems that we thought we would never solve.  This is even the exact same mindset we use when we are debugging code. So much so there's even a book written called your code as a crime scene. It's the mindset of a detective that we all adored about Sherlock Holmes.</p>
<p>I also have to agree that science is a very creative act. In fact the <a href="http://localhost:5000/socrates" rel="noopener noreferrer">Socrates</a> method of questioning involved questioning other people's assumptions and challenging the way people thought about things (which people like just about as much as being hacked.) This method was a precursor to the scientific method.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/byui-i" rel="noopener noreferrer">BYUI-I</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li>[[Other/Old Notes/bear/Talk Ideas]]</li>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.162 [debug] l:len=2

10:45:07.162 [debug] l:buf=359:<h1>Hacker mindset</h1>
<p>I would agree that hacking is an extremely creative activity. The requires the person that is hacking to think about the system as a whole that they've never seen the code of generally and think as the person writing the code with think. And requires us to think of new things that people have never tried before. Even to think of things that the system could be used for that people never realized. I believe it takes a lot of creativity to realize that you can pass SQL into a URL to extract the entire database on to a web page without ever seeing the code before although that's old news now.</p>
<p>This mindset reminds me a lot of the movie divergent where the main character has to think of ways to look past the obvious solutions and question the assumptions imposed by the tests such as  the glass wall being impenetrable. Divergent thinking requires us to think in terms of third alternatives when only an two options are presented. While often these skills are used for crimes to be committed they're the same skills that are often used the question our assumptions about the world and find new alternatives to problems that we thought we would never solve.  This is even the exact same mindset we use when we are debugging code. So much so there's even a book written called your code as a crime scene. It's the mindset of a detective that we all adored about Sherlock Holmes.</p>
<p>I also have to agree that science is a very creative act. In fact the <a href="http://localhost:5000/socrates" rel="noopener noreferrer">Socrates</a> method of questioning involved questioning other people's assumptions and challenging the way people thought about things (which people like just about as much as being hacked.) This method was a precursor to the scientific method.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/byui-i" rel="noopener noreferrer">BYUI-I</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li>[[Other/Old Notes/bear/Talk Ideas]]</li>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.162 [debug] l:len=23

10:45:07.162 [debug] l:buf=59:<h1>Hacker mindset</h1>
<p>I would agree that hacking is an extremely creative activity. The requires the person that is hacking to think about the system as a whole that they've never seen the code of generally and think as the person writing the code with think. And requires us to think of new things that people have never tried before. Even to think of things that the system could be used for that people never realized. I believe it takes a lot of creativity to realize that you can pass SQL into a URL to extract the entire database on to a web page without ever seeing the code before although that's old news now.</p>
<p>This mindset reminds me a lot of the movie divergent where the main character has to think of ways to look past the obvious solutions and question the assumptions imposed by the tests such as  the glass wall being impenetrable. Divergent thinking requires us to think in terms of third alternatives when only an two options are presented. While often these skills are used for crimes to be committed they're the same skills that are often used the question our assumptions about the world and find new alternatives to problems that we thought we would never solve.  This is even the exact same mindset we use when we are debugging code. So much so there's even a book written called your code as a crime scene. It's the mindset of a detective that we all adored about Sherlock Holmes.</p>
<p>I also have to agree that science is a very creative act. In fact the <a href="http://localhost:5000/socrates" rel="noopener noreferrer">Socrates</a> method of questioning involved questioning other people's assumptions and challenging the way people thought about things (which people like just about as much as being hacked.) This method was a precursor to the scientific method.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/byui-i" rel="noopener noreferrer">BYUI-I</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li>[[Other/Old Notes/bear/Talk Ideas]]</li>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.162 [debug] l:len=235

10:45:07.162 [debug] l:buf=9:<h1>Hacker mindset</h1>
<p>I would agree that hacking is an extremely creative activity. The requires the person that is hacking to think about the system as a whole that they've never seen the code of generally and think as the person writing the code with think. And requires us to think of new things that people have never tried before. Even to think of things that the system could be used for that people never realized. I believe it takes a lot of creativity to realize that you can pass SQL into a URL to extract the entire database on to a web page without ever seeing the code before although that's old news now.</p>
<p>This mindset reminds me a lot of the movie divergent where the main character has to think of ways to look past the obvious solutions and question the assumptions imposed by the tests such as  the glass wall being impenetrable. Divergent thinking requires us to think in terms of third alternatives when only an two options are presented. While often these skills are used for crimes to be committed they're the same skills that are often used the question our assumptions about the world and find new alternatives to problems that we thought we would never solve.  This is even the exact same mindset we use when we are debugging code. So much so there's even a book written called your code as a crime scene. It's the mindset of a detective that we all adored about Sherlock Holmes.</p>
<p>I also have to agree that science is a very creative act. In fact the <a href="http://localhost:5000/socrates" rel="noopener noreferrer">Socrates</a> method of questioning involved questioning other people's assumptions and challenging the way people thought about things (which people like just about as much as being hacked.) This method was a precursor to the scientific method.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/byui-i" rel="noopener noreferrer">BYUI-I</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li>[[Other/Old Notes/bear/Talk Ideas]]</li>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf empty

10:45:07.162 [debug] l:len=

10:45:07.162 [debug] l:buf=360:<ul>
<li>Building the right thing often depends on
<ul>
<li>Seeing the <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">high level goals</a>.</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.162 [debug] l:len=3

10:45:07.162 [debug] l:buf=60:<ul>
<li>Building the right thing often depends on
<ul>
<li>Seeing the <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">high level goals</a>.</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.162 [debug] l:len=36

10:45:07.163 [debug] l:buf=0:<ul>
<li>Building the right thing often depends on
<ul>
<li>Seeing the <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">high level goals</a>.</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf empty

10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf=314:<h1>The Unbearable Lightness of Web Pages</h1>
<p>The web is a projector. What people write goes away as soon as the projector does.</p>
<p><a href="https://thelocalyarn.com/excursus/secretary/posts/web-books.html" rel="noopener noreferrer">https://thelocalyarn.com/excursus/secretary/posts/web-books.html</a></p>


10:45:07.163 [debug] l:len=3

10:45:07.163 [debug] l:buf=14:<h1>The Unbearable Lightness of Web Pages</h1>
<p>The web is a projector. What people write goes away as soon as the projector does.</p>
<p><a href="https://thelocalyarn.com/excursus/secretary/posts/web-books.html" rel="noopener noreferrer">https://thelocalyarn.com/excursus/secretary/posts/web-books.html</a></p>


10:45:07.163 [debug] l:len=31

10:45:07.163 [debug] l:buf=4:<h1>The Unbearable Lightness of Web Pages</h1>
<p>The web is a projector. What people write goes away as soon as the projector does.</p>
<p><a href="https://thelocalyarn.com/excursus/secretary/posts/web-books.html" rel="noopener noreferrer">https://thelocalyarn.com/excursus/secretary/posts/web-books.html</a></p>


10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf empty

10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf=480:<h1>organization</h1>
<p>What you should do after you declutter. Moving things into a more sensible structure</p>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.163 [debug] l:len=4

10:45:07.163 [debug] l:buf=80:<h1>organization</h1>
<p>What you should do after you declutter. Moving things into a more sensible structure</p>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.163 [debug] l:len=48

10:45:07.163 [debug] l:buf=0:<h1>organization</h1>
<p>What you should do after you declutter. Moving things into a more sensible structure</p>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf empty

10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf=97:<p>Refer them to gimbles</p>
<p>In miracle on 34th street Santa</p>
<p>Tags:
missionary-work</p>


10:45:07.163 [debug] l:len=9

10:45:07.163 [debug] l:buf=7:<p>Refer them to gimbles</p>
<p>In miracle on 34th street Santa</p>
<p>Tags:
missionary-work</p>


10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf empty

10:45:07.163 [debug] l:len=

10:45:07.163 [debug] l:buf=237:<h1>Honeycomb</h1>
<p>Introduction
<a href="https://docs.honeycomb.io/learning-about-observability/intro-to-observability/" rel="noopener noreferrer">https://docs.honeycomb.io/learning-about-observability/intro-to-observability/</a></p>


10:45:07.163 [debug] l:len=2

10:45:07.163 [debug] l:buf=37:<h1>Honeycomb</h1>
<p>Introduction
<a href="https://docs.honeycomb.io/learning-about-observability/intro-to-observability/" rel="noopener noreferrer">https://docs.honeycomb.io/learning-about-observability/intro-to-observability/</a></p>


10:45:07.163 [debug] l:len=23

10:45:07.163 [debug] l:buf=7:<h1>Honeycomb</h1>
<p>Introduction
<a href="https://docs.honeycomb.io/learning-about-observability/intro-to-observability/" rel="noopener noreferrer">https://docs.honeycomb.io/learning-about-observability/intro-to-observability/</a></p>


10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf empty

10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf=431:<h1>Cognitive resource theory</h1>
<blockquote>
<p>The essence of the theory is that stress is the enemy of rationality, damaging leaders' ability to think logically and analytically. However, the leader's experience and intelligence can lessen the influence of stress on his (or her) actions: intelligence is the main factor in low-stress situations, while experience counts for more during high-stress moments.</p>
</blockquote>


10:45:07.164 [debug] l:len=4

10:45:07.164 [debug] l:buf=31:<h1>Cognitive resource theory</h1>
<blockquote>
<p>The essence of the theory is that stress is the enemy of rationality, damaging leaders' ability to think logically and analytically. However, the leader's experience and intelligence can lessen the influence of stress on his (or her) actions: intelligence is the main factor in low-stress situations, while experience counts for more during high-stress moments.</p>
</blockquote>


10:45:07.164 [debug] l:len=43

10:45:07.164 [debug] l:buf=1:<h1>Cognitive resource theory</h1>
<blockquote>
<p>The essence of the theory is that stress is the enemy of rationality, damaging leaders' ability to think logically and analytically. However, the leader's experience and intelligence can lessen the influence of stress on his (or her) actions: intelligence is the main factor in low-stress situations, while experience counts for more during high-stress moments.</p>
</blockquote>


10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf empty

10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf=993:<h1>remote means they can't talk around a product, they have to talk in it</h1>
<p>When people do <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a> they often stand around a JIRA board or a Whiteboard. The communication happens around the product. People can point to a card with their finger or make comments anywhere on the page. You don't need to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because you can just do that with normal human facilities.</p>
<pre><code>[When you go remote everything is 2D.](when-you-go-remote-everything-is-2d.)
</code></pre>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.164 [debug] l:len=9

10:45:07.164 [debug] l:buf=93:<h1>remote means they can't talk around a product, they have to talk in it</h1>
<p>When people do <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a> they often stand around a JIRA board or a Whiteboard. The communication happens around the product. People can point to a card with their finger or make comments anywhere on the page. You don't need to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because you can just do that with normal human facilities.</p>
<pre><code>[When you go remote everything is 2D.](when-you-go-remote-everything-is-2d.)
</code></pre>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.164 [debug] l:len=99

10:45:07.164 [debug] l:buf=3:<h1>remote means they can't talk around a product, they have to talk in it</h1>
<p>When people do <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a> they often stand around a JIRA board or a Whiteboard. The communication happens around the product. People can point to a card with their finger or make comments anywhere on the page. You don't need to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because you can just do that with normal human facilities.</p>
<pre><code>[When you go remote everything is 2D.](when-you-go-remote-everything-is-2d.)
</code></pre>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf empty

10:45:07.164 [debug] l:len=

10:45:07.164 [debug] l:buf=721:<h1>announcements</h1>
<p>Often in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> announcements get mixed up in the normal flow of conversation. However in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> They tend not to because they have a place to live, AKA: the message board.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.164 [debug] l:len=7

10:45:07.165 [debug] l:buf=21:<h1>announcements</h1>
<p>Often in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> announcements get mixed up in the normal flow of conversation. However in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> They tend not to because they have a place to live, AKA: the message board.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.165 [debug] l:len=72

10:45:07.165 [debug] l:buf=1:<h1>announcements</h1>
<p>Often in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> announcements get mixed up in the normal flow of conversation. However in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> They tend not to because they have a place to live, AKA: the message board.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.165 [debug] l:len=

10:45:07.165 [debug] l:buf empty

10:45:07.165 [debug] l:len=

10:45:07.165 [debug] l:buf=250:<h1>JavaScript is not Maintainable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.165 [debug] l:len=2

10:45:07.165 [debug] l:buf=50:<h1>JavaScript is not Maintainable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.165 [debug] l:len=25

10:45:07.165 [debug] l:buf=0:<h1>JavaScript is not Maintainable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.165 [debug] l:len=

10:45:07.165 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=2794:<h1>Mar 12th -Customer Calls</h1>
<h1>Mar 12th - Bi-weekly engineering meeting</h1>
<h2>📊 <a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a> and commitment</h2>
<ul>
<li>Those numbers simply "tell a story"'</li>
<li>"What are you trying to get done this week to solve customer problems (and our own)?"</li>
<li>To celebrate successes.</li>
<li><strong>make sure they are reasonable goals</strong></li>
<li>-probably- means <strong>probably not</strong></li>
</ul>
<h2>📞 <a href="http://localhost:5000/customer" rel="noopener noreferrer">Customer</a> Calls</h2>
<ul>
<li>Watch to them doing things, rather than talk to them about doing things.</li>
<li><em>maybe</em> be the one talking sometimes.</li>
<li>Could be the person taking notes</li>
<li>💡 send the person a slack for them to ask questions to the customer</li>
<li>Reach out with messenger 💬</li>
<li><strong>Synthesis</strong>:
<ul>
<li>Do a debrief after call
<ul>
<li><strong>"Quote of the day"</strong> - verbatim from the customer</li>
<li>Where was their confusion</li>
<li>disregard, "happy talk" ("yeah I it's great.")</li>
<li>Look for the trends
<ul>
<li>Develop a gut for what customers want (can take years)</li>
</ul>
</li>
<li>Things that stood out</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>Product offsite planning</h2>
<ul>
<li><strong>Chelsea:</strong> Customer focused company
<ul>
<li>Qualitative / Quantitative</li>
<li>not done till we keep our goals</li>
<li>Keep in mind Mid-market
<ul>
<li>Org mode</li>
<li>...</li>
</ul>
</li>
<li><strong>Showing value</strong> for messenger</li>
</ul>
</li>
<li><strong>Brandon:</strong> How do we measure success:
<ul>
<li>Define success earlier, not done till we hit it
<ul>
<li>If adoption isn't there, iterate</li>
</ul>
</li>
<li>Generative learning</li>
</ul>
</li>
<li><strong>Adam Jacox:</strong>
<ul>
<li>Skyhook team, meta helping people to know how well our customers are doing, it's supper important
<ul>
<li>Make sure <strong>your</strong> metrics are there</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>"Sometimes we think we're smarter than the customer"</h1>
<blockquote>
<p>We should never "fall in love" with product 💔👨🏻‍⚖️, we shouldn't think it's amazing even though it isn't</p>
</blockquote>
<blockquote>
<p><em>"They are our boss"</em><br>
* Measure Happiness 😁😐😩 (with cstat)</p>
</blockquote>
<p>Everyone should have a voice</p>
<p><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project-management</a>.
<a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.166 [debug] l:len=2

10:45:07.166 [debug] l:buf=794:<h1>Mar 12th -Customer Calls</h1>
<h1>Mar 12th - Bi-weekly engineering meeting</h1>
<h2>📊 <a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a> and commitment</h2>
<ul>
<li>Those numbers simply "tell a story"'</li>
<li>"What are you trying to get done this week to solve customer problems (and our own)?"</li>
<li>To celebrate successes.</li>
<li><strong>make sure they are reasonable goals</strong></li>
<li>-probably- means <strong>probably not</strong></li>
</ul>
<h2>📞 <a href="http://localhost:5000/customer" rel="noopener noreferrer">Customer</a> Calls</h2>
<ul>
<li>Watch to them doing things, rather than talk to them about doing things.</li>
<li><em>maybe</em> be the one talking sometimes.</li>
<li>Could be the person taking notes</li>
<li>💡 send the person a slack for them to ask questions to the customer</li>
<li>Reach out with messenger 💬</li>
<li><strong>Synthesis</strong>:
<ul>
<li>Do a debrief after call
<ul>
<li><strong>"Quote of the day"</strong> - verbatim from the customer</li>
<li>Where was their confusion</li>
<li>disregard, "happy talk" ("yeah I it's great.")</li>
<li>Look for the trends
<ul>
<li>Develop a gut for what customers want (can take years)</li>
</ul>
</li>
<li>Things that stood out</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>Product offsite planning</h2>
<ul>
<li><strong>Chelsea:</strong> Customer focused company
<ul>
<li>Qualitative / Quantitative</li>
<li>not done till we keep our goals</li>
<li>Keep in mind Mid-market
<ul>
<li>Org mode</li>
<li>...</li>
</ul>
</li>
<li><strong>Showing value</strong> for messenger</li>
</ul>
</li>
<li><strong>Brandon:</strong> How do we measure success:
<ul>
<li>Define success earlier, not done till we hit it
<ul>
<li>If adoption isn't there, iterate</li>
</ul>
</li>
<li>Generative learning</li>
</ul>
</li>
<li><strong>Adam Jacox:</strong>
<ul>
<li>Skyhook team, meta helping people to know how well our customers are doing, it's supper important
<ul>
<li>Make sure <strong>your</strong> metrics are there</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>"Sometimes we think we're smarter than the customer"</h1>
<blockquote>
<p>We should never "fall in love" with product 💔👨🏻‍⚖️, we shouldn't think it's amazing even though it isn't</p>
</blockquote>
<blockquote>
<p><em>"They are our boss"</em><br>
* Measure Happiness 😁😐😩 (with cstat)</p>
</blockquote>
<p>Everyone should have a voice</p>
<p><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project-management</a>.
<a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.166 [debug] l:len=27

10:45:07.166 [debug] l:buf=94:<h1>Mar 12th -Customer Calls</h1>
<h1>Mar 12th - Bi-weekly engineering meeting</h1>
<h2>📊 <a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a> and commitment</h2>
<ul>
<li>Those numbers simply "tell a story"'</li>
<li>"What are you trying to get done this week to solve customer problems (and our own)?"</li>
<li>To celebrate successes.</li>
<li><strong>make sure they are reasonable goals</strong></li>
<li>-probably- means <strong>probably not</strong></li>
</ul>
<h2>📞 <a href="http://localhost:5000/customer" rel="noopener noreferrer">Customer</a> Calls</h2>
<ul>
<li>Watch to them doing things, rather than talk to them about doing things.</li>
<li><em>maybe</em> be the one talking sometimes.</li>
<li>Could be the person taking notes</li>
<li>💡 send the person a slack for them to ask questions to the customer</li>
<li>Reach out with messenger 💬</li>
<li><strong>Synthesis</strong>:
<ul>
<li>Do a debrief after call
<ul>
<li><strong>"Quote of the day"</strong> - verbatim from the customer</li>
<li>Where was their confusion</li>
<li>disregard, "happy talk" ("yeah I it's great.")</li>
<li>Look for the trends
<ul>
<li>Develop a gut for what customers want (can take years)</li>
</ul>
</li>
<li>Things that stood out</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>Product offsite planning</h2>
<ul>
<li><strong>Chelsea:</strong> Customer focused company
<ul>
<li>Qualitative / Quantitative</li>
<li>not done till we keep our goals</li>
<li>Keep in mind Mid-market
<ul>
<li>Org mode</li>
<li>...</li>
</ul>
</li>
<li><strong>Showing value</strong> for messenger</li>
</ul>
</li>
<li><strong>Brandon:</strong> How do we measure success:
<ul>
<li>Define success earlier, not done till we hit it
<ul>
<li>If adoption isn't there, iterate</li>
</ul>
</li>
<li>Generative learning</li>
</ul>
</li>
<li><strong>Adam Jacox:</strong>
<ul>
<li>Skyhook team, meta helping people to know how well our customers are doing, it's supper important
<ul>
<li>Make sure <strong>your</strong> metrics are there</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>"Sometimes we think we're smarter than the customer"</h1>
<blockquote>
<p>We should never "fall in love" with product 💔👨🏻‍⚖️, we shouldn't think it's amazing even though it isn't</p>
</blockquote>
<blockquote>
<p><em>"They are our boss"</em><br>
* Measure Happiness 😁😐😩 (with cstat)</p>
</blockquote>
<p>Everyone should have a voice</p>
<p><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project-management</a>.
<a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.166 [debug] l:len=279

10:45:07.166 [debug] l:buf=4:<h1>Mar 12th -Customer Calls</h1>
<h1>Mar 12th - Bi-weekly engineering meeting</h1>
<h2>📊 <a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a> and commitment</h2>
<ul>
<li>Those numbers simply "tell a story"'</li>
<li>"What are you trying to get done this week to solve customer problems (and our own)?"</li>
<li>To celebrate successes.</li>
<li><strong>make sure they are reasonable goals</strong></li>
<li>-probably- means <strong>probably not</strong></li>
</ul>
<h2>📞 <a href="http://localhost:5000/customer" rel="noopener noreferrer">Customer</a> Calls</h2>
<ul>
<li>Watch to them doing things, rather than talk to them about doing things.</li>
<li><em>maybe</em> be the one talking sometimes.</li>
<li>Could be the person taking notes</li>
<li>💡 send the person a slack for them to ask questions to the customer</li>
<li>Reach out with messenger 💬</li>
<li><strong>Synthesis</strong>:
<ul>
<li>Do a debrief after call
<ul>
<li><strong>"Quote of the day"</strong> - verbatim from the customer</li>
<li>Where was their confusion</li>
<li>disregard, "happy talk" ("yeah I it's great.")</li>
<li>Look for the trends
<ul>
<li>Develop a gut for what customers want (can take years)</li>
</ul>
</li>
<li>Things that stood out</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>Product offsite planning</h2>
<ul>
<li><strong>Chelsea:</strong> Customer focused company
<ul>
<li>Qualitative / Quantitative</li>
<li>not done till we keep our goals</li>
<li>Keep in mind Mid-market
<ul>
<li>Org mode</li>
<li>...</li>
</ul>
</li>
<li><strong>Showing value</strong> for messenger</li>
</ul>
</li>
<li><strong>Brandon:</strong> How do we measure success:
<ul>
<li>Define success earlier, not done till we hit it
<ul>
<li>If adoption isn't there, iterate</li>
</ul>
</li>
<li>Generative learning</li>
</ul>
</li>
<li><strong>Adam Jacox:</strong>
<ul>
<li>Skyhook team, meta helping people to know how well our customers are doing, it's supper important
<ul>
<li>Make sure <strong>your</strong> metrics are there</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>"Sometimes we think we're smarter than the customer"</h1>
<blockquote>
<p>We should never "fall in love" with product 💔👨🏻‍⚖️, we shouldn't think it's amazing even though it isn't</p>
</blockquote>
<blockquote>
<p><em>"They are our boss"</em><br>
* Measure Happiness 😁😐😩 (with cstat)</p>
</blockquote>
<p>Everyone should have a voice</p>
<p><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project-management</a>.
<a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=84:<h1>lack of context</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.166 [debug] l:len=8

10:45:07.166 [debug] l:buf=4:<h1>lack of context</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=236:<h1>2020-10-12</h1>
<ul>
<li>Wrote with my I-Pad a lot today, I like it. It's nice to create more visual notes.
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>
</li>
</ul>


10:45:07.166 [debug] l:len=2

10:45:07.166 [debug] l:buf=36:<h1>2020-10-12</h1>
<ul>
<li>Wrote with my I-Pad a lot today, I like it. It's nice to create more visual notes.
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>
</li>
</ul>


10:45:07.166 [debug] l:len=23

10:45:07.166 [debug] l:buf=6:<h1>2020-10-12</h1>
<ul>
<li>Wrote with my I-Pad a lot today, I like it. It's nice to create more visual notes.
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>
</li>
</ul>


10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=83:<h1>Nathaniel Drew</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.166 [debug] l:len=8

10:45:07.166 [debug] l:buf=3:<h1>Nathaniel Drew</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=281:<h1>Integration Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.166 [debug] l:len=2

10:45:07.166 [debug] l:buf=81:<h1>Integration Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.166 [debug] l:len=28

10:45:07.166 [debug] l:buf=1:<h1>Integration Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf empty

10:45:07.166 [debug] l:len=

10:45:07.166 [debug] l:buf=190:<h1>Fudge--SIWA support</h1>
<p>There's this library: <a href="https://github.com/loopsocial/ueberauth_apple" rel="noopener noreferrer">https://github.com/loopsocial/ueberauth_apple</a></p>


10:45:07.166 [debug] l:len=1

10:45:07.167 [debug] l:buf=90:<h1>Fudge--SIWA support</h1>
<p>There's this library: <a href="https://github.com/loopsocial/ueberauth_apple" rel="noopener noreferrer">https://github.com/loopsocial/ueberauth_apple</a></p>


10:45:07.167 [debug] l:len=19

10:45:07.167 [debug] l:buf=0:<h1>Fudge--SIWA support</h1>
<p>There's this library: <a href="https://github.com/loopsocial/ueberauth_apple" rel="noopener noreferrer">https://github.com/loopsocial/ueberauth_apple</a></p>


10:45:07.167 [debug] l:len=

10:45:07.167 [debug] l:buf empty

10:45:07.167 [debug] l:len=

10:45:07.167 [debug] l:buf=964:<h1>How to make a Codebase you Love 💗</h1>
<h2>No broken Windows</h2>
<h2>Find Missing Stair's</h2>
<h2>Documentation &amp; Organization</h2>
<p>These are often neglected, easily overlooked. Why? Because they aren't the "Product" we deliver. However they affect our velocity by a larger degree than you would like to admit.</p>
<h2>Why organize?</h2>
<p>Code organization is more than just putting things in MVC folders, you know this. It helps to segregate different kinds of code,</p>
<h2>How to Organize? Facade Pattern!</h2>
<p>What does the facade do?
* Provide an idea of "Privateness" in Elixir, this allows you to keep implementation details hidden from other parts of an app.
* Provides a "Nice" discoverable interface. Allows you to ignore 99% of the implementation details.
* Not specific to GraphQL or Mix Tasks, or Rabbit Queues. Nice to use on the command line.</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.167 [debug] l:len=9

10:45:07.167 [debug] l:buf=64:<h1>How to make a Codebase you Love 💗</h1>
<h2>No broken Windows</h2>
<h2>Find Missing Stair's</h2>
<h2>Documentation &amp; Organization</h2>
<p>These are often neglected, easily overlooked. Why? Because they aren't the "Product" we deliver. However they affect our velocity by a larger degree than you would like to admit.</p>
<h2>Why organize?</h2>
<p>Code organization is more than just putting things in MVC folders, you know this. It helps to segregate different kinds of code,</p>
<h2>How to Organize? Facade Pattern!</h2>
<p>What does the facade do?
* Provide an idea of "Privateness" in Elixir, this allows you to keep implementation details hidden from other parts of an app.
* Provides a "Nice" discoverable interface. Allows you to ignore 99% of the implementation details.
* Not specific to GraphQL or Mix Tasks, or Rabbit Queues. Nice to use on the command line.</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.167 [debug] l:len=96

10:45:07.167 [debug] l:buf=4:<h1>How to make a Codebase you Love 💗</h1>
<h2>No broken Windows</h2>
<h2>Find Missing Stair's</h2>
<h2>Documentation &amp; Organization</h2>
<p>These are often neglected, easily overlooked. Why? Because they aren't the "Product" we deliver. However they affect our velocity by a larger degree than you would like to admit.</p>
<h2>Why organize?</h2>
<p>Code organization is more than just putting things in MVC folders, you know this. It helps to segregate different kinds of code,</p>
<h2>How to Organize? Facade Pattern!</h2>
<p>What does the facade do?
* Provide an idea of "Privateness" in Elixir, this allows you to keep implementation details hidden from other parts of an app.
* Provides a "Nice" discoverable interface. Allows you to ignore 99% of the implementation details.
* Not specific to GraphQL or Mix Tasks, or Rabbit Queues. Nice to use on the command line.</p>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.167 [debug] l:len=

10:45:07.167 [debug] l:buf empty

10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf=1535:<h1>Learning <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></h1>
<p><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> is perhaps my favorite library I've ever found. I'm not even joking. Basically <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> means that I'm able to almost never write real css again. It just lets me create. It's like a magic paintbrush that 90% of what comes out of it is beautiful. The rest requires a little skill.</p>
<p>However I think a lot of people bounce off of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> at first blush. Perhaps it's the wireframey look of the website (at least near the top) but more likely it's the copious amounts of long strings of abreviated names.</p>
<h2>What happened <code>.button</code>?</h2>
<p>Well for one thing you don't have to give up "symantic" names entirely. I'm some cases your design is so uniform it makes sense making a global decision about things. However this is rarely the case. Much more often things I'm your app should <em>look cohesive</em>, having the same fonts, colors and similar spacing and size meaning they look like they go together. However, they rarely are exactly the same.</p>
<p>You're kidding yourself if you can specify the margin of anything and never change it. You may think that all the buttons look the same but just take a look around your app and I bet you'll find quite the large amount of variants.</p>


10:45:07.168 [debug] l:len=1

10:45:07.168 [debug] l:buf=535:<h1>Learning <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></h1>
<p><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> is perhaps my favorite library I've ever found. I'm not even joking. Basically <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> means that I'm able to almost never write real css again. It just lets me create. It's like a magic paintbrush that 90% of what comes out of it is beautiful. The rest requires a little skill.</p>
<p>However I think a lot of people bounce off of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> at first blush. Perhaps it's the wireframey look of the website (at least near the top) but more likely it's the copious amounts of long strings of abreviated names.</p>
<h2>What happened <code>.button</code>?</h2>
<p>Well for one thing you don't have to give up "symantic" names entirely. I'm some cases your design is so uniform it makes sense making a global decision about things. However this is rarely the case. Much more often things I'm your app should <em>look cohesive</em>, having the same fonts, colors and similar spacing and size meaning they look like they go together. However, they rarely are exactly the same.</p>
<p>You're kidding yourself if you can specify the margin of anything and never change it. You may think that all the buttons look the same but just take a look around your app and I bet you'll find quite the large amount of variants.</p>


10:45:07.168 [debug] l:len=15

10:45:07.168 [debug] l:buf=35:<h1>Learning <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></h1>
<p><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> is perhaps my favorite library I've ever found. I'm not even joking. Basically <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> means that I'm able to almost never write real css again. It just lets me create. It's like a magic paintbrush that 90% of what comes out of it is beautiful. The rest requires a little skill.</p>
<p>However I think a lot of people bounce off of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> at first blush. Perhaps it's the wireframey look of the website (at least near the top) but more likely it's the copious amounts of long strings of abreviated names.</p>
<h2>What happened <code>.button</code>?</h2>
<p>Well for one thing you don't have to give up "symantic" names entirely. I'm some cases your design is so uniform it makes sense making a global decision about things. However this is rarely the case. Much more often things I'm your app should <em>look cohesive</em>, having the same fonts, colors and similar spacing and size meaning they look like they go together. However, they rarely are exactly the same.</p>
<p>You're kidding yourself if you can specify the margin of anything and never change it. You may think that all the buttons look the same but just take a look around your app and I bet you'll find quite the large amount of variants.</p>


10:45:07.168 [debug] l:len=153

10:45:07.168 [debug] l:buf=5:<h1>Learning <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></h1>
<p><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> is perhaps my favorite library I've ever found. I'm not even joking. Basically <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> means that I'm able to almost never write real css again. It just lets me create. It's like a magic paintbrush that 90% of what comes out of it is beautiful. The rest requires a little skill.</p>
<p>However I think a lot of people bounce off of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> at first blush. Perhaps it's the wireframey look of the website (at least near the top) but more likely it's the copious amounts of long strings of abreviated names.</p>
<h2>What happened <code>.button</code>?</h2>
<p>Well for one thing you don't have to give up "symantic" names entirely. I'm some cases your design is so uniform it makes sense making a global decision about things. However this is rarely the case. Much more often things I'm your app should <em>look cohesive</em>, having the same fonts, colors and similar spacing and size meaning they look like they go together. However, they rarely are exactly the same.</p>
<p>You're kidding yourself if you can specify the margin of anything and never change it. You may think that all the buttons look the same but just take a look around your app and I bet you'll find quite the large amount of variants.</p>


10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf empty

10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf=331:<h1>Social Media</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.168 [debug] l:len=3

10:45:07.168 [debug] l:buf=31:<h1>Social Media</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.168 [debug] l:len=33

10:45:07.168 [debug] l:buf=1:<h1>Social Media</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf empty

10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf=252:<h1>MOCs can map the same info in different ways</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.168 [debug] l:len=2

10:45:07.168 [debug] l:buf=52:<h1>MOCs can map the same info in different ways</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.168 [debug] l:len=25

10:45:07.168 [debug] l:buf=2:<h1>MOCs can map the same info in different ways</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.168 [debug] l:len=

10:45:07.168 [debug] l:buf empty

10:45:07.169 [debug] l:len=

10:45:07.169 [debug] l:buf=376:<h1>Studio C - No Stupid Questions</h1>
<p>This is just awesome:
<a href="https://www.youtube.com/watch?v=RLt1HoAPniM" rel="noopener noreferrer">https://www.youtube.com/watch?v=RLt1HoAPniM</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></li>
</ul>


10:45:07.169 [debug] l:len=3

10:45:07.169 [debug] l:buf=76:<h1>Studio C - No Stupid Questions</h1>
<p>This is just awesome:
<a href="https://www.youtube.com/watch?v=RLt1HoAPniM" rel="noopener noreferrer">https://www.youtube.com/watch?v=RLt1HoAPniM</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></li>
</ul>


10:45:07.169 [debug] l:len=37

10:45:07.169 [debug] l:buf=6:<h1>Studio C - No Stupid Questions</h1>
<p>This is just awesome:
<a href="https://www.youtube.com/watch?v=RLt1HoAPniM" rel="noopener noreferrer">https://www.youtube.com/watch?v=RLt1HoAPniM</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></li>
</ul>


10:45:07.169 [debug] l:len=

10:45:07.169 [debug] l:buf empty

10:45:07.169 [debug] l:len=

10:45:07.169 [debug] l:buf=2782:<h1>Why Atomic css makes people mad</h1>
<p>I'm a fan of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> which is a functional CSS library. It basically follows an idea is making CSS classes do one thing and naming them after what they do. For example the <code>fr</code> class makes any object <code>float: right</code>. You can also do <code>fr-ns</code> to turn it off when it's on mobile (which works for about any class in <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>). There's also <code>-l</code> and <code>-m</code> file turning on styles for medium and large screens respectively.</p>
<p>This whole "name things by what they do" has an odd reaction in people.</p>
<p>As soon as they see the longer list of class names their blood starts to boil, they grab their pitchfork and their symantic CSS Bible and go to work to eradicate these wild and unnatural ideas from anyone reading the comments section.</p>
<p>Why is this?</p>
<p>One possible conclusion is that functional CSS is doing something that most people see as wrong. It seems dirty when you see HTML polluted with long lines of class-names as apposed to one clean one like <code>button</code>.</p>
<p>Worse that your class names aren't "semantic", a word meaning,</p>
<blockquote>
<p>"relating to meaning in language or logic." (google's dictionary)</p>
</blockquote>
<p>or in practice, <em>"the name that I made up after a few seconds of thinking about it".</em></p>
<p>However I think there's a deeper issue, I think perhaps functional CSS gets people angry because it's going against everything that they've been taught. About CSS maintainability.</p>
<p>We've all been taught that in the case of the "enviable" redesign we should only have to change a few CSS classes and the whole site would suddenly be different.</p>
<p>This argument could be true for some websites such as a blog or informational website. Why? Because these have basic layouts and follow basically the same structure on every page. Which means you'll have a few classes such as <code>.title</code>. you might even get away with styling the HTML elements themselves.</p>
<p>However I don't feel that web apps operate these days. I rarely get a ticket like: <em>"change all the buttons to square and make them blue"</em> and a lot more like <em>"add some extra space to the top of the button on the settlings page"</em></p>
<h1>The real reason</h1>
<p>I think that this is a case of people misunderstanding what functional CSS is about.</p>
<p>It's a change in the way we think about CSS.</p>
<p>At it's most basic level redefining the role of a stylesheet.</p>
<ul>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
</ul>


10:45:07.169 [debug] l:len=2

10:45:07.169 [debug] l:buf=782:<h1>Why Atomic css makes people mad</h1>
<p>I'm a fan of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> which is a functional CSS library. It basically follows an idea is making CSS classes do one thing and naming them after what they do. For example the <code>fr</code> class makes any object <code>float: right</code>. You can also do <code>fr-ns</code> to turn it off when it's on mobile (which works for about any class in <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>). There's also <code>-l</code> and <code>-m</code> file turning on styles for medium and large screens respectively.</p>
<p>This whole "name things by what they do" has an odd reaction in people.</p>
<p>As soon as they see the longer list of class names their blood starts to boil, they grab their pitchfork and their symantic CSS Bible and go to work to eradicate these wild and unnatural ideas from anyone reading the comments section.</p>
<p>Why is this?</p>
<p>One possible conclusion is that functional CSS is doing something that most people see as wrong. It seems dirty when you see HTML polluted with long lines of class-names as apposed to one clean one like <code>button</code>.</p>
<p>Worse that your class names aren't "semantic", a word meaning,</p>
<blockquote>
<p>"relating to meaning in language or logic." (google's dictionary)</p>
</blockquote>
<p>or in practice, <em>"the name that I made up after a few seconds of thinking about it".</em></p>
<p>However I think there's a deeper issue, I think perhaps functional CSS gets people angry because it's going against everything that they've been taught. About CSS maintainability.</p>
<p>We've all been taught that in the case of the "enviable" redesign we should only have to change a few CSS classes and the whole site would suddenly be different.</p>
<p>This argument could be true for some websites such as a blog or informational website. Why? Because these have basic layouts and follow basically the same structure on every page. Which means you'll have a few classes such as <code>.title</code>. you might even get away with styling the HTML elements themselves.</p>
<p>However I don't feel that web apps operate these days. I rarely get a ticket like: <em>"change all the buttons to square and make them blue"</em> and a lot more like <em>"add some extra space to the top of the button on the settlings page"</em></p>
<h1>The real reason</h1>
<p>I think that this is a case of people misunderstanding what functional CSS is about.</p>
<p>It's a change in the way we think about CSS.</p>
<p>At it's most basic level redefining the role of a stylesheet.</p>
<ul>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
</ul>


10:45:07.169 [debug] l:len=27

10:45:07.169 [debug] l:buf=82:<h1>Why Atomic css makes people mad</h1>
<p>I'm a fan of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> which is a functional CSS library. It basically follows an idea is making CSS classes do one thing and naming them after what they do. For example the <code>fr</code> class makes any object <code>float: right</code>. You can also do <code>fr-ns</code> to turn it off when it's on mobile (which works for about any class in <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>). There's also <code>-l</code> and <code>-m</code> file turning on styles for medium and large screens respectively.</p>
<p>This whole "name things by what they do" has an odd reaction in people.</p>
<p>As soon as they see the longer list of class names their blood starts to boil, they grab their pitchfork and their symantic CSS Bible and go to work to eradicate these wild and unnatural ideas from anyone reading the comments section.</p>
<p>Why is this?</p>
<p>One possible conclusion is that functional CSS is doing something that most people see as wrong. It seems dirty when you see HTML polluted with long lines of class-names as apposed to one clean one like <code>button</code>.</p>
<p>Worse that your class names aren't "semantic", a word meaning,</p>
<blockquote>
<p>"relating to meaning in language or logic." (google's dictionary)</p>
</blockquote>
<p>or in practice, <em>"the name that I made up after a few seconds of thinking about it".</em></p>
<p>However I think there's a deeper issue, I think perhaps functional CSS gets people angry because it's going against everything that they've been taught. About CSS maintainability.</p>
<p>We've all been taught that in the case of the "enviable" redesign we should only have to change a few CSS classes and the whole site would suddenly be different.</p>
<p>This argument could be true for some websites such as a blog or informational website. Why? Because these have basic layouts and follow basically the same structure on every page. Which means you'll have a few classes such as <code>.title</code>. you might even get away with styling the HTML elements themselves.</p>
<p>However I don't feel that web apps operate these days. I rarely get a ticket like: <em>"change all the buttons to square and make them blue"</em> and a lot more like <em>"add some extra space to the top of the button on the settlings page"</em></p>
<h1>The real reason</h1>
<p>I think that this is a case of people misunderstanding what functional CSS is about.</p>
<p>It's a change in the way we think about CSS.</p>
<p>At it's most basic level redefining the role of a stylesheet.</p>
<ul>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
</ul>


10:45:07.169 [debug] l:len=278

10:45:07.169 [debug] l:buf=2:<h1>Why Atomic css makes people mad</h1>
<p>I'm a fan of <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a> which is a functional CSS library. It basically follows an idea is making CSS classes do one thing and naming them after what they do. For example the <code>fr</code> class makes any object <code>float: right</code>. You can also do <code>fr-ns</code> to turn it off when it's on mobile (which works for about any class in <a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a>). There's also <code>-l</code> and <code>-m</code> file turning on styles for medium and large screens respectively.</p>
<p>This whole "name things by what they do" has an odd reaction in people.</p>
<p>As soon as they see the longer list of class names their blood starts to boil, they grab their pitchfork and their symantic CSS Bible and go to work to eradicate these wild and unnatural ideas from anyone reading the comments section.</p>
<p>Why is this?</p>
<p>One possible conclusion is that functional CSS is doing something that most people see as wrong. It seems dirty when you see HTML polluted with long lines of class-names as apposed to one clean one like <code>button</code>.</p>
<p>Worse that your class names aren't "semantic", a word meaning,</p>
<blockquote>
<p>"relating to meaning in language or logic." (google's dictionary)</p>
</blockquote>
<p>or in practice, <em>"the name that I made up after a few seconds of thinking about it".</em></p>
<p>However I think there's a deeper issue, I think perhaps functional CSS gets people angry because it's going against everything that they've been taught. About CSS maintainability.</p>
<p>We've all been taught that in the case of the "enviable" redesign we should only have to change a few CSS classes and the whole site would suddenly be different.</p>
<p>This argument could be true for some websites such as a blog or informational website. Why? Because these have basic layouts and follow basically the same structure on every page. Which means you'll have a few classes such as <code>.title</code>. you might even get away with styling the HTML elements themselves.</p>
<p>However I don't feel that web apps operate these days. I rarely get a ticket like: <em>"change all the buttons to square and make them blue"</em> and a lot more like <em>"add some extra space to the top of the button on the settlings page"</em></p>
<h1>The real reason</h1>
<p>I think that this is a case of people misunderstanding what functional CSS is about.</p>
<p>It's a change in the way we think about CSS.</p>
<p>At it's most basic level redefining the role of a stylesheet.</p>
<ul>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
</ul>


10:45:07.169 [debug] l:len=

10:45:07.169 [debug] l:buf empty

10:45:07.169 [debug] l:len=

10:45:07.170 [debug] l:buf=394:<h1>OCaml For Scientific Computing</h1>
<p><a href="https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf" rel="noopener noreferrer">https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf</a></p>
<p>Keywords: <a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a> <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>


10:45:07.170 [debug] l:len=3

10:45:07.170 [debug] l:buf=94:<h1>OCaml For Scientific Computing</h1>
<p><a href="https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf" rel="noopener noreferrer">https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf</a></p>
<p>Keywords: <a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a> <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>


10:45:07.170 [debug] l:len=39

10:45:07.170 [debug] l:buf=4:<h1>OCaml For Scientific Computing</h1>
<p><a href="https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf" rel="noopener noreferrer">https://ocaml.xyz/_downloads/fb4b6b2df3a933e0d679dbb8a3f72ff9/book.pdf</a></p>
<p>Keywords: <a href="http://localhost:5000/ocaml" rel="noopener noreferrer">OCaml</a> <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>


10:45:07.170 [debug] l:len=

10:45:07.170 [debug] l:buf empty

10:45:07.170 [debug] l:len=

10:45:07.170 [debug] l:buf=1701:<h1>Handling LastSeenAt/LastSeenUrl</h1>
<p>LastSeenAt is a value that's constantly updating and as such it seems too expensive and probably not worth it to store that in the event store.</p>
<h2>What do people really want</h2>
<ol>
<li>Know <strong>where</strong> the widget  is installed</li>
<li>Know <strong>if</strong> the widget is installed</li>
<li>Know if the widget has <strong>broken</strong> (kind of a late indicator)</li>
<li>Know if the widget is installed in <strong>multiple places &amp; they aren't paying</strong> for that.</li>
</ol>
<h2>Short-term solution</h2>
<p>The only use case right now is number <strong>1</strong> (and kind of <strong>2</strong>, although not in a very convenient format)</p>
<p>So to maintain this functionality we just store it outside of the event store in Redis. This is ok because this data is also stored in Kafka/S3 in our analytic data and even then it's not that hard to get it back because HTTP requests are constantly flowing into MindFlayer.</p>
<h2>Long-term solution: Idea 1</h2>
<p>It would be awesome to have reports of a widget being installed on multiple websites and compare that to the <code>webchat_limit</code> (not yet a thing)  to let throw up flags in Skyhook to ask people for more money..</p>
<p>This also would be nice to know all the places a config change will affect.</p>
<h2>Idea 2</h2>
<p>Save "Installed on", a list of unique domains it's installed on.</p>
<p>Also if we were able to scope by domain name that would also help us out.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.170 [debug] l:len=1

10:45:07.170 [debug] l:buf=701:<h1>Handling LastSeenAt/LastSeenUrl</h1>
<p>LastSeenAt is a value that's constantly updating and as such it seems too expensive and probably not worth it to store that in the event store.</p>
<h2>What do people really want</h2>
<ol>
<li>Know <strong>where</strong> the widget  is installed</li>
<li>Know <strong>if</strong> the widget is installed</li>
<li>Know if the widget has <strong>broken</strong> (kind of a late indicator)</li>
<li>Know if the widget is installed in <strong>multiple places &amp; they aren't paying</strong> for that.</li>
</ol>
<h2>Short-term solution</h2>
<p>The only use case right now is number <strong>1</strong> (and kind of <strong>2</strong>, although not in a very convenient format)</p>
<p>So to maintain this functionality we just store it outside of the event store in Redis. This is ok because this data is also stored in Kafka/S3 in our analytic data and even then it's not that hard to get it back because HTTP requests are constantly flowing into MindFlayer.</p>
<h2>Long-term solution: Idea 1</h2>
<p>It would be awesome to have reports of a widget being installed on multiple websites and compare that to the <code>webchat_limit</code> (not yet a thing)  to let throw up flags in Skyhook to ask people for more money..</p>
<p>This also would be nice to know all the places a config change will affect.</p>
<h2>Idea 2</h2>
<p>Save "Installed on", a list of unique domains it's installed on.</p>
<p>Also if we were able to scope by domain name that would also help us out.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.170 [debug] l:len=17

10:45:07.170 [debug] l:buf=01:<h1>Handling LastSeenAt/LastSeenUrl</h1>
<p>LastSeenAt is a value that's constantly updating and as such it seems too expensive and probably not worth it to store that in the event store.</p>
<h2>What do people really want</h2>
<ol>
<li>Know <strong>where</strong> the widget  is installed</li>
<li>Know <strong>if</strong> the widget is installed</li>
<li>Know if the widget has <strong>broken</strong> (kind of a late indicator)</li>
<li>Know if the widget is installed in <strong>multiple places &amp; they aren't paying</strong> for that.</li>
</ol>
<h2>Short-term solution</h2>
<p>The only use case right now is number <strong>1</strong> (and kind of <strong>2</strong>, although not in a very convenient format)</p>
<p>So to maintain this functionality we just store it outside of the event store in Redis. This is ok because this data is also stored in Kafka/S3 in our analytic data and even then it's not that hard to get it back because HTTP requests are constantly flowing into MindFlayer.</p>
<h2>Long-term solution: Idea 1</h2>
<p>It would be awesome to have reports of a widget being installed on multiple websites and compare that to the <code>webchat_limit</code> (not yet a thing)  to let throw up flags in Skyhook to ask people for more money..</p>
<p>This also would be nice to know all the places a config change will affect.</p>
<h2>Idea 2</h2>
<p>Save "Installed on", a list of unique domains it's installed on.</p>
<p>Also if we were able to scope by domain name that would also help us out.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.170 [debug] l:len=170

10:45:07.170 [debug] l:buf=1:<h1>Handling LastSeenAt/LastSeenUrl</h1>
<p>LastSeenAt is a value that's constantly updating and as such it seems too expensive and probably not worth it to store that in the event store.</p>
<h2>What do people really want</h2>
<ol>
<li>Know <strong>where</strong> the widget  is installed</li>
<li>Know <strong>if</strong> the widget is installed</li>
<li>Know if the widget has <strong>broken</strong> (kind of a late indicator)</li>
<li>Know if the widget is installed in <strong>multiple places &amp; they aren't paying</strong> for that.</li>
</ol>
<h2>Short-term solution</h2>
<p>The only use case right now is number <strong>1</strong> (and kind of <strong>2</strong>, although not in a very convenient format)</p>
<p>So to maintain this functionality we just store it outside of the event store in Redis. This is ok because this data is also stored in Kafka/S3 in our analytic data and even then it's not that hard to get it back because HTTP requests are constantly flowing into MindFlayer.</p>
<h2>Long-term solution: Idea 1</h2>
<p>It would be awesome to have reports of a widget being installed on multiple websites and compare that to the <code>webchat_limit</code> (not yet a thing)  to let throw up flags in Skyhook to ask people for more money..</p>
<p>This also would be nice to know all the places a config change will affect.</p>
<h2>Idea 2</h2>
<p>Save "Installed on", a list of unique domains it's installed on.</p>
<p>Also if we were able to scope by domain name that would also help us out.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.170 [debug] l:len=

10:45:07.170 [debug] l:buf empty

10:45:07.170 [debug] l:len=

10:45:07.170 [debug] l:buf=107:<h1>May 17</h1>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.170 [debug] l:len=1

10:45:07.170 [debug] l:buf=07:<h1>May 17</h1>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.170 [debug] l:len=10

10:45:07.170 [debug] l:buf=7:<h1>May 17</h1>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.170 [debug] l:len=

10:45:07.170 [debug] l:buf empty

10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf=454:<h1>Software as a relationship</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.171 [debug] l:len=4

10:45:07.171 [debug] l:buf=54:<h1>Software as a relationship</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.171 [debug] l:len=45

10:45:07.171 [debug] l:buf=4:<h1>Software as a relationship</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf empty

10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf=734:<h1>Toyota’s Lean Manufacturing Kanban</h1>
<ul>
<li><a href="https://kanbantool.com/kanban-guide/kanban-history" rel="noopener noreferrer">https://kanbantool.com/kanban-guide/kanban-history</a>
<ul>
<li><img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fgages-database%2F97v_O1VvVk.png?alt=media&amp;token=45d8a2bd-a759-439e-92af-99ede52adde4" alt=""></li>
<li>Waste
<ul>
<li>Transport</li>
<li>Inventory</li>
<li>Motion</li>
<li>Waiting</li>
<li>Overproduction</li>
<li>Over Processing</li>
<li>Defects</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.171 [debug] l:len=7

10:45:07.171 [debug] l:buf=34:<h1>Toyota’s Lean Manufacturing Kanban</h1>
<ul>
<li><a href="https://kanbantool.com/kanban-guide/kanban-history" rel="noopener noreferrer">https://kanbantool.com/kanban-guide/kanban-history</a>
<ul>
<li><img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fgages-database%2F97v_O1VvVk.png?alt=media&amp;token=45d8a2bd-a759-439e-92af-99ede52adde4" alt=""></li>
<li>Waste
<ul>
<li>Transport</li>
<li>Inventory</li>
<li>Motion</li>
<li>Waiting</li>
<li>Overproduction</li>
<li>Over Processing</li>
<li>Defects</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.171 [debug] l:len=73

10:45:07.171 [debug] l:buf=4:<h1>Toyota’s Lean Manufacturing Kanban</h1>
<ul>
<li><a href="https://kanbantool.com/kanban-guide/kanban-history" rel="noopener noreferrer">https://kanbantool.com/kanban-guide/kanban-history</a>
<ul>
<li><img src="https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fgages-database%2F97v_O1VvVk.png?alt=media&amp;token=45d8a2bd-a759-439e-92af-99ede52adde4" alt=""></li>
<li>Waste
<ul>
<li>Transport</li>
<li>Inventory</li>
<li>Motion</li>
<li>Waiting</li>
<li>Overproduction</li>
<li>Over Processing</li>
<li>Defects</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf empty

10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf=365:<h1>Bootstrap effect</h1>
<hr>
<h2>created: 2020-08-26T19:01:08-06:00
modified: 2020-08-26T19:02:17-06:00</h2>
<h1>Bootstrap effect</h1>
<p>Doesn't matter how easy a styling system is to customize and developer will always invariably use it with the stock defaults</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.171 [debug] l:len=3

10:45:07.171 [debug] l:buf=65:<h1>Bootstrap effect</h1>
<hr>
<h2>created: 2020-08-26T19:01:08-06:00
modified: 2020-08-26T19:02:17-06:00</h2>
<h1>Bootstrap effect</h1>
<p>Doesn't matter how easy a styling system is to customize and developer will always invariably use it with the stock defaults</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.171 [debug] l:len=36

10:45:07.171 [debug] l:buf=5:<h1>Bootstrap effect</h1>
<hr>
<h2>created: 2020-08-26T19:01:08-06:00
modified: 2020-08-26T19:02:17-06:00</h2>
<h1>Bootstrap effect</h1>
<p>Doesn't matter how easy a styling system is to customize and developer will always invariably use it with the stock defaults</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
</ul>


10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf empty

10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf=84:<h1>Pasted image 42</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.171 [debug] l:len=8

10:45:07.171 [debug] l:buf=4:<h1>Pasted image 42</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.171 [debug] l:len=

10:45:07.171 [debug] l:buf empty

10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf=81:<h1>Honesty</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.172 [debug] l:len=8

10:45:07.172 [debug] l:buf=1:<h1>Honesty</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf empty

10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf=117:<p>Comfort those that stand in need of comfort</p>
<p>They need:</p>
<ul>
<li>someone to listen</li>
<li></li>
</ul>


10:45:07.172 [debug] l:len=1

10:45:07.172 [debug] l:buf=17:<p>Comfort those that stand in need of comfort</p>
<p>They need:</p>
<ul>
<li>someone to listen</li>
<li></li>
</ul>


10:45:07.172 [debug] l:len=11

10:45:07.172 [debug] l:buf=7:<p>Comfort those that stand in need of comfort</p>
<p>They need:</p>
<ul>
<li>someone to listen</li>
<li></li>
</ul>


10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf empty

10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf=469:<h1>Rocket mortgage</h1>
<p>Could get us a rate of <code>3.75%</code></p>
<p>Save 55$ a month 27 years $1570/m
-27$ if house appraises higher</p>
<p>Save 120 for 30 year (increase term limit)</p>
<h2>He will need</h2>
<ul>
<li>W2</li>
<li>Declaration page</li>
</ul>
<h2>What will happen</h2>
<ul>
<li>Skip next mortgage</li>
<li>Escroo refund</li>
</ul>
<h2>Next steps:</h2>
<ul>
<li>He will email me</li>
<li>I should talk to wife about it (compare deals)</li>
</ul>


10:45:07.172 [debug] l:len=4

10:45:07.172 [debug] l:buf=69:<h1>Rocket mortgage</h1>
<p>Could get us a rate of <code>3.75%</code></p>
<p>Save 55$ a month 27 years $1570/m
-27$ if house appraises higher</p>
<p>Save 120 for 30 year (increase term limit)</p>
<h2>He will need</h2>
<ul>
<li>W2</li>
<li>Declaration page</li>
</ul>
<h2>What will happen</h2>
<ul>
<li>Skip next mortgage</li>
<li>Escroo refund</li>
</ul>
<h2>Next steps:</h2>
<ul>
<li>He will email me</li>
<li>I should talk to wife about it (compare deals)</li>
</ul>


10:45:07.172 [debug] l:len=46

10:45:07.172 [debug] l:buf=9:<h1>Rocket mortgage</h1>
<p>Could get us a rate of <code>3.75%</code></p>
<p>Save 55$ a month 27 years $1570/m
-27$ if house appraises higher</p>
<p>Save 120 for 30 year (increase term limit)</p>
<h2>He will need</h2>
<ul>
<li>W2</li>
<li>Declaration page</li>
</ul>
<h2>What will happen</h2>
<ul>
<li>Skip next mortgage</li>
<li>Escroo refund</li>
</ul>
<h2>Next steps:</h2>
<ul>
<li>He will email me</li>
<li>I should talk to wife about it (compare deals)</li>
</ul>


10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf empty

10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf=578:<h1>modivation</h1>
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.172 [debug] l:len=5

10:45:07.172 [debug] l:buf=78:<h1>modivation</h1>
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.172 [debug] l:len=57

10:45:07.172 [debug] l:buf=8:<h1>modivation</h1>
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf empty

10:45:07.172 [debug] l:len=

10:45:07.172 [debug] l:buf=565:<h1>The elephant inside the brain - book</h1>
<p>We all have selfish reasons why we do things. We often hide these motives even from ourselves.</p>
<p>Perhaps this is why I feel the strong need to advocate Basecamp. I might feel that I'm right and I want and need valuation from my peers for my ideas. I want people to respect me and my decisions and call me "brilliant" and thank me for showing them the light. Has far less to do with actual productivity</p>
<p><a href="https://youtu.be/_sothj2aipE" rel="noopener noreferrer">https://youtu.be/_sothj2aipE</a></p>


10:45:07.172 [debug] l:len=5

10:45:07.172 [debug] l:buf=65:<h1>The elephant inside the brain - book</h1>
<p>We all have selfish reasons why we do things. We often hide these motives even from ourselves.</p>
<p>Perhaps this is why I feel the strong need to advocate Basecamp. I might feel that I'm right and I want and need valuation from my peers for my ideas. I want people to respect me and my decisions and call me "brilliant" and thank me for showing them the light. Has far less to do with actual productivity</p>
<p><a href="https://youtu.be/_sothj2aipE" rel="noopener noreferrer">https://youtu.be/_sothj2aipE</a></p>


10:45:07.173 [debug] l:len=56

10:45:07.173 [debug] l:buf=5:<h1>The elephant inside the brain - book</h1>
<p>We all have selfish reasons why we do things. We often hide these motives even from ourselves.</p>
<p>Perhaps this is why I feel the strong need to advocate Basecamp. I might feel that I'm right and I want and need valuation from my peers for my ideas. I want people to respect me and my decisions and call me "brilliant" and thank me for showing them the light. Has far less to do with actual productivity</p>
<p><a href="https://youtu.be/_sothj2aipE" rel="noopener noreferrer">https://youtu.be/_sothj2aipE</a></p>


10:45:07.173 [debug] l:len=

10:45:07.173 [debug] l:buf empty

10:45:07.173 [debug] l:len=

10:45:07.173 [debug] l:buf=661:<h1>timebox</h1>
<ul>
<li>Scoping your work to a small set of time</li>
</ul>
<blockquote>
<p>"I care more about the timebox than the task"</p>
</blockquote>
<ul>
<li>often you'll ask, "is this still worth it" after each timebox</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.173 [debug] l:len=6

10:45:07.173 [debug] l:buf=61:<h1>timebox</h1>
<ul>
<li>Scoping your work to a small set of time</li>
</ul>
<blockquote>
<p>"I care more about the timebox than the task"</p>
</blockquote>
<ul>
<li>often you'll ask, "is this still worth it" after each timebox</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.173 [debug] l:len=66

10:45:07.173 [debug] l:buf=1:<h1>timebox</h1>
<ul>
<li>Scoping your work to a small set of time</li>
</ul>
<blockquote>
<p>"I care more about the timebox than the task"</p>
</blockquote>
<ul>
<li>often you'll ask, "is this still worth it" after each timebox</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.173 [debug] l:len=

10:45:07.173 [debug] l:buf empty

10:45:07.173 [debug] l:len=

10:45:07.173 [debug] l:buf=2900:<h1>Basecamp and Github Sync Project</h1>
<p>This is a project to use Code Review Live and my Basecamp Elixir Library to sync the two</p>
<h2>Problem</h2>
<p>Github Projects is a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> with <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a>. This is bad for team <a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">modivation</a>.</p>
<p>Also slack is a huge source of <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a> and <a href="http://localhost:5000/lack-of-context" rel="noopener noreferrer">lack of context</a> added to Issues where they belong.</p>
<p>I think <a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a> and encourages <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a> which helps us understand stuff.</p>
<h2>Measure of Success</h2>
<p>If Paul has no idea we're using BC, it's always up to date (because BC naturally makes sure things are up to date).</p>
<p>A final goal is that comments are</p>
<h2>Solution</h2>
<ol>
<li><strong>Linking Step</strong>: Look for all the tasks that aren't linked in the DB and link them</li>
<li><strong>Reactive</strong>: When you check off a Basecamp todo then it will drag the card to the right in <a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
</ol>
<h2>Rabbit holes</h2>
<blockquote>
<p>These are a bunch of simplifying decisions that will help people not waste too much time</p>
</blockquote>
<p>It's hard to know which of the two sources is more up to date. Ways we can get around this:</p>
<ul>
<li><strong>PR's status always wins</strong></li>
<li><strong>One directional Sync</strong>
<ul>
<li>Manually pick direction? (Mix task)</li>
<li>Board always wins because that's what we want to make sure is always up to date</li>
</ul>
</li>
<li><strong>Only reactive</strong>: When you get a webhook or people comment with magic commands.</li>
<li><strong>No Webhooks for Github</strong>: These aren't super hard to do perhaps but would complicate things and the GraphQL endpoint is much easier to use.</li>
</ul>
<p>It's hard to know that a Github thing is connected to a Basecamp thing. How do we solve this problem?</p>
<ul>
<li>Save the links in the DB
<ul>
<li>Manually link them</li>
</ul>
</li>
<li>Look for BC todos with a link to a Github thingy</li>
<li>Look for tasks with the same name</li>
<li>If you can't find it, create a new BC todo in an "unscoped" category</li>
</ul>
<h2>No-gos</h2>
<blockquote>
<p>These are things that we've explicitly fenced of as things we're not going to do.</p>
</blockquote>


10:45:07.173 [debug] l:len=2

10:45:07.174 [debug] l:buf=900:<h1>Basecamp and Github Sync Project</h1>
<p>This is a project to use Code Review Live and my Basecamp Elixir Library to sync the two</p>
<h2>Problem</h2>
<p>Github Projects is a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> with <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a>. This is bad for team <a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">modivation</a>.</p>
<p>Also slack is a huge source of <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a> and <a href="http://localhost:5000/lack-of-context" rel="noopener noreferrer">lack of context</a> added to Issues where they belong.</p>
<p>I think <a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a> and encourages <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a> which helps us understand stuff.</p>
<h2>Measure of Success</h2>
<p>If Paul has no idea we're using BC, it's always up to date (because BC naturally makes sure things are up to date).</p>
<p>A final goal is that comments are</p>
<h2>Solution</h2>
<ol>
<li><strong>Linking Step</strong>: Look for all the tasks that aren't linked in the DB and link them</li>
<li><strong>Reactive</strong>: When you check off a Basecamp todo then it will drag the card to the right in <a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
</ol>
<h2>Rabbit holes</h2>
<blockquote>
<p>These are a bunch of simplifying decisions that will help people not waste too much time</p>
</blockquote>
<p>It's hard to know which of the two sources is more up to date. Ways we can get around this:</p>
<ul>
<li><strong>PR's status always wins</strong></li>
<li><strong>One directional Sync</strong>
<ul>
<li>Manually pick direction? (Mix task)</li>
<li>Board always wins because that's what we want to make sure is always up to date</li>
</ul>
</li>
<li><strong>Only reactive</strong>: When you get a webhook or people comment with magic commands.</li>
<li><strong>No Webhooks for Github</strong>: These aren't super hard to do perhaps but would complicate things and the GraphQL endpoint is much easier to use.</li>
</ul>
<p>It's hard to know that a Github thing is connected to a Basecamp thing. How do we solve this problem?</p>
<ul>
<li>Save the links in the DB
<ul>
<li>Manually link them</li>
</ul>
</li>
<li>Look for BC todos with a link to a Github thingy</li>
<li>Look for tasks with the same name</li>
<li>If you can't find it, create a new BC todo in an "unscoped" category</li>
</ul>
<h2>No-gos</h2>
<blockquote>
<p>These are things that we've explicitly fenced of as things we're not going to do.</p>
</blockquote>


10:45:07.174 [debug] l:len=29

10:45:07.174 [debug] l:buf=00:<h1>Basecamp and Github Sync Project</h1>
<p>This is a project to use Code Review Live and my Basecamp Elixir Library to sync the two</p>
<h2>Problem</h2>
<p>Github Projects is a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> with <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a>. This is bad for team <a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">modivation</a>.</p>
<p>Also slack is a huge source of <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a> and <a href="http://localhost:5000/lack-of-context" rel="noopener noreferrer">lack of context</a> added to Issues where they belong.</p>
<p>I think <a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a> and encourages <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a> which helps us understand stuff.</p>
<h2>Measure of Success</h2>
<p>If Paul has no idea we're using BC, it's always up to date (because BC naturally makes sure things are up to date).</p>
<p>A final goal is that comments are</p>
<h2>Solution</h2>
<ol>
<li><strong>Linking Step</strong>: Look for all the tasks that aren't linked in the DB and link them</li>
<li><strong>Reactive</strong>: When you check off a Basecamp todo then it will drag the card to the right in <a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
</ol>
<h2>Rabbit holes</h2>
<blockquote>
<p>These are a bunch of simplifying decisions that will help people not waste too much time</p>
</blockquote>
<p>It's hard to know which of the two sources is more up to date. Ways we can get around this:</p>
<ul>
<li><strong>PR's status always wins</strong></li>
<li><strong>One directional Sync</strong>
<ul>
<li>Manually pick direction? (Mix task)</li>
<li>Board always wins because that's what we want to make sure is always up to date</li>
</ul>
</li>
<li><strong>Only reactive</strong>: When you get a webhook or people comment with magic commands.</li>
<li><strong>No Webhooks for Github</strong>: These aren't super hard to do perhaps but would complicate things and the GraphQL endpoint is much easier to use.</li>
</ul>
<p>It's hard to know that a Github thing is connected to a Basecamp thing. How do we solve this problem?</p>
<ul>
<li>Save the links in the DB
<ul>
<li>Manually link them</li>
</ul>
</li>
<li>Look for BC todos with a link to a Github thingy</li>
<li>Look for tasks with the same name</li>
<li>If you can't find it, create a new BC todo in an "unscoped" category</li>
</ul>
<h2>No-gos</h2>
<blockquote>
<p>These are things that we've explicitly fenced of as things we're not going to do.</p>
</blockquote>


10:45:07.174 [debug] l:len=290

10:45:07.174 [debug] l:buf=0:<h1>Basecamp and Github Sync Project</h1>
<p>This is a project to use Code Review Live and my Basecamp Elixir Library to sync the two</p>
<h2>Problem</h2>
<p>Github Projects is a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> with <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a>. This is bad for team <a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">modivation</a>.</p>
<p>Also slack is a huge source of <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a> and <a href="http://localhost:5000/lack-of-context" rel="noopener noreferrer">lack of context</a> added to Issues where they belong.</p>
<p>I think <a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a> and encourages <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a> which helps us understand stuff.</p>
<h2>Measure of Success</h2>
<p>If Paul has no idea we're using BC, it's always up to date (because BC naturally makes sure things are up to date).</p>
<p>A final goal is that comments are</p>
<h2>Solution</h2>
<ol>
<li><strong>Linking Step</strong>: Look for all the tasks that aren't linked in the DB and link them</li>
<li><strong>Reactive</strong>: When you check off a Basecamp todo then it will drag the card to the right in <a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
</ol>
<h2>Rabbit holes</h2>
<blockquote>
<p>These are a bunch of simplifying decisions that will help people not waste too much time</p>
</blockquote>
<p>It's hard to know which of the two sources is more up to date. Ways we can get around this:</p>
<ul>
<li><strong>PR's status always wins</strong></li>
<li><strong>One directional Sync</strong>
<ul>
<li>Manually pick direction? (Mix task)</li>
<li>Board always wins because that's what we want to make sure is always up to date</li>
</ul>
</li>
<li><strong>Only reactive</strong>: When you get a webhook or people comment with magic commands.</li>
<li><strong>No Webhooks for Github</strong>: These aren't super hard to do perhaps but would complicate things and the GraphQL endpoint is much easier to use.</li>
</ul>
<p>It's hard to know that a Github thing is connected to a Basecamp thing. How do we solve this problem?</p>
<ul>
<li>Save the links in the DB
<ul>
<li>Manually link them</li>
</ul>
</li>
<li>Look for BC todos with a link to a Github thingy</li>
<li>Look for tasks with the same name</li>
<li>If you can't find it, create a new BC todo in an "unscoped" category</li>
</ul>
<h2>No-gos</h2>
<blockquote>
<p>These are things that we've explicitly fenced of as things we're not going to do.</p>
</blockquote>


10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf empty

10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf=137:<p>Open enrollment</p>
<p>Don't pay any more</p>
<p>1095</p>
<p>(Up to a thousand dollars a year (per spouse), 3$) if you move more.</p>


10:45:07.174 [debug] l:len=1

10:45:07.174 [debug] l:buf=37:<p>Open enrollment</p>
<p>Don't pay any more</p>
<p>1095</p>
<p>(Up to a thousand dollars a year (per spouse), 3$) if you move more.</p>


10:45:07.174 [debug] l:len=13

10:45:07.174 [debug] l:buf=7:<p>Open enrollment</p>
<p>Don't pay any more</p>
<p>1095</p>
<p>(Up to a thousand dollars a year (per spouse), 3$) if you move more.</p>


10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf empty

10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf=665:<p>The Argument for CSS and HTML in React:</p>
<p>Keith J Grant:</p>
<blockquote>
<p>"This coupling is real, and it is unavoidable. We must bind event listeners to elements on the page. We must update elements on the page from our JavaScript. Our code must interact bidirectionally and in real-time with the elements of the DOM.</p>
</blockquote>
<p>... the mantra of React is to stop pretending the DOM and the JavaScript that controls it are separate concerns."</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a></li>
</ul>


10:45:07.174 [debug] l:len=6

10:45:07.174 [debug] l:buf=65:<p>The Argument for CSS and HTML in React:</p>
<p>Keith J Grant:</p>
<blockquote>
<p>"This coupling is real, and it is unavoidable. We must bind event listeners to elements on the page. We must update elements on the page from our JavaScript. Our code must interact bidirectionally and in real-time with the elements of the DOM.</p>
</blockquote>
<p>... the mantra of React is to stop pretending the DOM and the JavaScript that controls it are separate concerns."</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a></li>
</ul>


10:45:07.174 [debug] l:len=66

10:45:07.174 [debug] l:buf=5:<p>The Argument for CSS and HTML in React:</p>
<p>Keith J Grant:</p>
<blockquote>
<p>"This coupling is real, and it is unavoidable. We must bind event listeners to elements on the page. We must update elements on the page from our JavaScript. Our code must interact bidirectionally and in real-time with the elements of the DOM.</p>
</blockquote>
<p>... the mantra of React is to stop pretending the DOM and the JavaScript that controls it are separate concerns."</p>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a></li>
</ul>


10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf empty

10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf=78:<h1>asdf</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.174 [debug] l:len=7

10:45:07.174 [debug] l:buf=8:<h1>asdf</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf empty

10:45:07.174 [debug] l:len=

10:45:07.174 [debug] l:buf=81:<h1>winning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.174 [debug] l:len=8

10:45:07.174 [debug] l:buf=1:<h1>winning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.174 [debug] l:len=

10:45:07.175 [debug] l:buf empty

10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf=282:<h1>context switch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.175 [debug] l:len=2

10:45:07.175 [debug] l:buf=82:<h1>context switch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.175 [debug] l:len=28

10:45:07.175 [debug] l:buf=2:<h1>context switch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf empty

10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf=427:<h1>Real-time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.175 [debug] l:len=4

10:45:07.175 [debug] l:buf=27:<h1>Real-time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.175 [debug] l:len=42

10:45:07.175 [debug] l:buf=7:<h1>Real-time</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf empty

10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf=305:<h1>Pasted image 20200922163419</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.175 [debug] l:len=3

10:45:07.175 [debug] l:buf=05:<h1>Pasted image 20200922163419</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.175 [debug] l:len=30

10:45:07.175 [debug] l:buf=5:<h1>Pasted image 20200922163419</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf empty

10:45:07.175 [debug] l:len=

10:45:07.175 [debug] l:buf=120:<p>To-do: make a list of ppis based on home teaching</p>
<p>Meet with each member of the presidency 3 times a year.</p>


10:45:07.175 [debug] l:len=1

10:45:07.175 [debug] l:buf=20:<p>To-do: make a list of ppis based on home teaching</p>
<p>Meet with each member of the presidency 3 times a year.</p>


10:45:07.176 [debug] l:len=12

10:45:07.176 [debug] l:buf=0:<p>To-do: make a list of ppis based on home teaching</p>
<p>Meet with each member of the presidency 3 times a year.</p>


10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf empty

10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf=1208:<h1>Chatting with Glue</h1>
<p><a href="http://a9.io/glue-comic/" rel="noopener noreferrer">http://a9.io/glue-comic/</a></p>
<h1>Page 1</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922143823.png" rel="noopener noreferrer">Pasted image 20200922143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 2</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922144739.png" rel="noopener noreferrer">Pasted image 20200922144739</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 3 - Leaf Space</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152141.png" rel="noopener noreferrer">Pasted image 20200922152141</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 4: The Power of Paste</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152512.png" rel="noopener noreferrer">Pasted image 20200922152512</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.176 [debug] l:len=1

10:45:07.176 [debug] l:buf=208:<h1>Chatting with Glue</h1>
<p><a href="http://a9.io/glue-comic/" rel="noopener noreferrer">http://a9.io/glue-comic/</a></p>
<h1>Page 1</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922143823.png" rel="noopener noreferrer">Pasted image 20200922143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 2</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922144739.png" rel="noopener noreferrer">Pasted image 20200922144739</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 3 - Leaf Space</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152141.png" rel="noopener noreferrer">Pasted image 20200922152141</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 4: The Power of Paste</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152512.png" rel="noopener noreferrer">Pasted image 20200922152512</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.176 [debug] l:len=12

10:45:07.176 [debug] l:buf=08:<h1>Chatting with Glue</h1>
<p><a href="http://a9.io/glue-comic/" rel="noopener noreferrer">http://a9.io/glue-comic/</a></p>
<h1>Page 1</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922143823.png" rel="noopener noreferrer">Pasted image 20200922143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 2</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922144739.png" rel="noopener noreferrer">Pasted image 20200922144739</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 3 - Leaf Space</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152141.png" rel="noopener noreferrer">Pasted image 20200922152141</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 4: The Power of Paste</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152512.png" rel="noopener noreferrer">Pasted image 20200922152512</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.176 [debug] l:len=120

10:45:07.176 [debug] l:buf=8:<h1>Chatting with Glue</h1>
<p><a href="http://a9.io/glue-comic/" rel="noopener noreferrer">http://a9.io/glue-comic/</a></p>
<h1>Page 1</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922143823.png" rel="noopener noreferrer">Pasted image 20200922143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 2</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922144739.png" rel="noopener noreferrer">Pasted image 20200922144739</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 3 - Leaf Space</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152141.png" rel="noopener noreferrer">Pasted image 20200922152141</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>Page 4: The Power of Paste</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922152512.png" rel="noopener noreferrer">Pasted image 20200922152512</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf empty

10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf=836:<h1>Discourse</h1>
<p>Forum software: <a href="https://www.discourse.org/" rel="noopener noreferrer">Discourse</a> for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>
<p>Example of the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<p>You can See the <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.176 [debug] l:len=8

10:45:07.176 [debug] l:buf=36:<h1>Discourse</h1>
<p>Forum software: <a href="https://www.discourse.org/" rel="noopener noreferrer">Discourse</a> for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>
<p>Example of the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<p>You can See the <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.176 [debug] l:len=83

10:45:07.176 [debug] l:buf=6:<h1>Discourse</h1>
<p>Forum software: <a href="https://www.discourse.org/" rel="noopener noreferrer">Discourse</a> for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>
<p>Example of the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<p>You can See the <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf empty

10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf=410:<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a>, <a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a>, and <a href="http://localhost:5000/the-third-door" rel="noopener noreferrer">the third door</a>.</p>
<ul>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.176 [debug] l:len=4

10:45:07.176 [debug] l:buf=10:<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a>, <a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a>, and <a href="http://localhost:5000/the-third-door" rel="noopener noreferrer">the third door</a>.</p>
<ul>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.176 [debug] l:len=41

10:45:07.176 [debug] l:buf=0:<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a>, <a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a>, and <a href="http://localhost:5000/the-third-door" rel="noopener noreferrer">the third door</a>.</p>
<ul>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.176 [debug] l:len=

10:45:07.176 [debug] l:buf empty

10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf=235:<h1>Speare--to-a-document</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.177 [debug] l:len=2

10:45:07.177 [debug] l:buf=35:<h1>Speare--to-a-document</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.177 [debug] l:len=23

10:45:07.177 [debug] l:buf=5:<h1>Speare--to-a-document</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf empty

10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf=411:<h1>Functional Programming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.177 [debug] l:len=4

10:45:07.177 [debug] l:buf=11:<h1>Functional Programming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.177 [debug] l:len=41

10:45:07.177 [debug] l:buf=1:<h1>Functional Programming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf empty

10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf=277:<h1>2020-10-02</h1>
<p>Watched this video about <a href="http://localhost:5000/nathaniel-drew" rel="noopener noreferrer">Nathaniel Drew</a> about how he <a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">Took a break from Youtube</a></p>


10:45:07.177 [debug] l:len=2

10:45:07.177 [debug] l:buf=77:<h1>2020-10-02</h1>
<p>Watched this video about <a href="http://localhost:5000/nathaniel-drew" rel="noopener noreferrer">Nathaniel Drew</a> about how he <a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">Took a break from Youtube</a></p>


10:45:07.177 [debug] l:len=27

10:45:07.177 [debug] l:buf=7:<h1>2020-10-02</h1>
<p>Watched this video about <a href="http://localhost:5000/nathaniel-drew" rel="noopener noreferrer">Nathaniel Drew</a> about how he <a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">Took a break from Youtube</a></p>


10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf empty

10:45:07.177 [debug] l:len=

10:45:07.177 [debug] l:buf=305:<h1>Pasted image 20200922163518</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.177 [debug] l:len=3

10:45:07.178 [debug] l:buf=05:<h1>Pasted image 20200922163518</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.178 [debug] l:len=30

10:45:07.178 [debug] l:buf=5:<h1>Pasted image 20200922163518</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf empty

10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf=1103:<h1>Usability doesn't matter</h1>
<p>A lot of people say things like, "Doesn't matter how ugly it is, so long as it works!" While this might be true in some situations I think it discounts the idea that software's design can't affect our behavior. We all have <a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">a relationship with softare</a> in which we try to get it to do things, and it tries to get US to do things.</p>
<p>Software design uses <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a> and <a href="http://localhost:5000/ui-grease" rel="noopener noreferrer">UI grease</a> to make things easier and harder. These have a more of an influence over our behavior than we would like to admit.</p>
<h2>Examples</h2>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>
<h2>Links</h2>
<p>This is often used as an argument for <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></p>


10:45:07.178 [debug] l:len=1

10:45:07.178 [debug] l:buf=103:<h1>Usability doesn't matter</h1>
<p>A lot of people say things like, "Doesn't matter how ugly it is, so long as it works!" While this might be true in some situations I think it discounts the idea that software's design can't affect our behavior. We all have <a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">a relationship with softare</a> in which we try to get it to do things, and it tries to get US to do things.</p>
<p>Software design uses <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a> and <a href="http://localhost:5000/ui-grease" rel="noopener noreferrer">UI grease</a> to make things easier and harder. These have a more of an influence over our behavior than we would like to admit.</p>
<h2>Examples</h2>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>
<h2>Links</h2>
<p>This is often used as an argument for <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></p>


10:45:07.178 [debug] l:len=11

10:45:07.178 [debug] l:buf=03:<h1>Usability doesn't matter</h1>
<p>A lot of people say things like, "Doesn't matter how ugly it is, so long as it works!" While this might be true in some situations I think it discounts the idea that software's design can't affect our behavior. We all have <a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">a relationship with softare</a> in which we try to get it to do things, and it tries to get US to do things.</p>
<p>Software design uses <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a> and <a href="http://localhost:5000/ui-grease" rel="noopener noreferrer">UI grease</a> to make things easier and harder. These have a more of an influence over our behavior than we would like to admit.</p>
<h2>Examples</h2>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>
<h2>Links</h2>
<p>This is often used as an argument for <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></p>


10:45:07.178 [debug] l:len=110

10:45:07.178 [debug] l:buf=3:<h1>Usability doesn't matter</h1>
<p>A lot of people say things like, "Doesn't matter how ugly it is, so long as it works!" While this might be true in some situations I think it discounts the idea that software's design can't affect our behavior. We all have <a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">a relationship with softare</a> in which we try to get it to do things, and it tries to get US to do things.</p>
<p>Software design uses <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a> and <a href="http://localhost:5000/ui-grease" rel="noopener noreferrer">UI grease</a> to make things easier and harder. These have a more of an influence over our behavior than we would like to admit.</p>
<h2>Examples</h2>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>
<h2>Links</h2>
<p>This is often used as an argument for <a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></p>


10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf empty

10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf=80:<h1>Ignore</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.178 [debug] l:len=8

10:45:07.178 [debug] l:buf=0:<h1>Ignore</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf empty

10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf=86:<h1>opportunity costs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.178 [debug] l:len=8

10:45:07.178 [debug] l:buf=6:<h1>opportunity costs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf empty

10:45:07.178 [debug] l:len=

10:45:07.178 [debug] l:buf=241:<h1>Pasted image 20201012151608</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
</ul>


10:45:07.179 [debug] l:len=2

10:45:07.179 [debug] l:buf=41:<h1>Pasted image 20201012151608</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
</ul>


10:45:07.179 [debug] l:len=24

10:45:07.179 [debug] l:buf=1:<h1>Pasted image 20201012151608</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a></li>
</ul>


10:45:07.179 [debug] l:len=

10:45:07.179 [debug] l:buf empty

10:45:07.179 [debug] l:len=

10:45:07.179 [debug] l:buf=3395:<h1>Jeff Bezos Banned PowerPoint in Meetings in favor of narrative</h1>
<p><a href="https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html" rel="noopener noreferrer">https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html</a></p>
<blockquote>
<p>Instead of reading bullet points on a PowerPoint slide, everyone sits silently for about 30 minutes to read a "six-page memo that's narratively structured with real sentences, topic sentences, verbs, and nouns."</p>
<p>After everyone's done reading, they discuss the topic. "It's so much better than the typical PowerPoint presentation for so many reasons," Bezos added.</p>
</blockquote>
<p>--</p>
<blockquote>
<p>Aristotle is the father of persuasion. More than 2,000 years ago he revealed the three elements that all persuasive arguments must have to be effective. He called these elements "appeals." They are: ethos, logos, and pathos. Ethos is character and credibility. Logos is logic--an argument must appeal to reason. <em>But ethos and logos are irrelevant in the absence of pathos--emotion.</em></p>
<p>Emotion is not a bad thing. The greatest movements in history were triggered by speakers who were gifted at making rational and emotional appeals: Abraham Lincoln and&nbsp;Martin Luther King, Jr.;&nbsp;and John F. Kennedy, who blended science and emotion to inspire America's moon program.</p>
<p>Neuroscientists have found&nbsp;emotion is the fastest path to the brain.</p>
</blockquote>
<p>Interesting how the author also has an appeal to authority here, establishing how credibility.</p>
<blockquote>
<p>Amazon uses "a ton of metrics" to measure success, explained Bezos.&nbsp;"I've noticed&nbsp;<em>when the anecdotes and the metrics disagree, the anecdotes are usually right,"</em></p>
</blockquote>
<p>He also said that Google's CEO doesn't use bullet points.</p>
<blockquote>
<p>Bullets don't inspire. Stories do.</p>
<p>Simply put, the brain is not built to retain information that's structured as bullet points on a slide. It's well-known among neuroscientists that we recall things much better when when we see pictures of the object or topic than when we read text on a slide.</p>
</blockquote>
<p>Google's CEO said:</p>
<blockquote>
<p>"Since stories are best told with pictures, bullet points and text-heavy slides are increasingly avoided at Google,"</p>
</blockquote>
<p>Also they avoid text in general:</p>
<blockquote>
<p>we can't read text on the screen and listen to the speaker while retaining all of the information. It can't be done.</p>
</blockquote>
<blockquote>
<p>According to his book, Brain Rules, "We are incredible at remembering pictures. Hear a piece of information, and three days later you'll remember 10 percent of it. Add a picture and you'll remember 65 percent."</p>
</blockquote>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></li>
</ul>


10:45:07.179 [debug] l:len=3

10:45:07.179 [debug] l:buf=395:<h1>Jeff Bezos Banned PowerPoint in Meetings in favor of narrative</h1>
<p><a href="https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html" rel="noopener noreferrer">https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html</a></p>
<blockquote>
<p>Instead of reading bullet points on a PowerPoint slide, everyone sits silently for about 30 minutes to read a "six-page memo that's narratively structured with real sentences, topic sentences, verbs, and nouns."</p>
<p>After everyone's done reading, they discuss the topic. "It's so much better than the typical PowerPoint presentation for so many reasons," Bezos added.</p>
</blockquote>
<p>--</p>
<blockquote>
<p>Aristotle is the father of persuasion. More than 2,000 years ago he revealed the three elements that all persuasive arguments must have to be effective. He called these elements "appeals." They are: ethos, logos, and pathos. Ethos is character and credibility. Logos is logic--an argument must appeal to reason. <em>But ethos and logos are irrelevant in the absence of pathos--emotion.</em></p>
<p>Emotion is not a bad thing. The greatest movements in history were triggered by speakers who were gifted at making rational and emotional appeals: Abraham Lincoln and&nbsp;Martin Luther King, Jr.;&nbsp;and John F. Kennedy, who blended science and emotion to inspire America's moon program.</p>
<p>Neuroscientists have found&nbsp;emotion is the fastest path to the brain.</p>
</blockquote>
<p>Interesting how the author also has an appeal to authority here, establishing how credibility.</p>
<blockquote>
<p>Amazon uses "a ton of metrics" to measure success, explained Bezos.&nbsp;"I've noticed&nbsp;<em>when the anecdotes and the metrics disagree, the anecdotes are usually right,"</em></p>
</blockquote>
<p>He also said that Google's CEO doesn't use bullet points.</p>
<blockquote>
<p>Bullets don't inspire. Stories do.</p>
<p>Simply put, the brain is not built to retain information that's structured as bullet points on a slide. It's well-known among neuroscientists that we recall things much better when when we see pictures of the object or topic than when we read text on a slide.</p>
</blockquote>
<p>Google's CEO said:</p>
<blockquote>
<p>"Since stories are best told with pictures, bullet points and text-heavy slides are increasingly avoided at Google,"</p>
</blockquote>
<p>Also they avoid text in general:</p>
<blockquote>
<p>we can't read text on the screen and listen to the speaker while retaining all of the information. It can't be done.</p>
</blockquote>
<blockquote>
<p>According to his book, Brain Rules, "We are incredible at remembering pictures. Hear a piece of information, and three days later you'll remember 10 percent of it. Add a picture and you'll remember 65 percent."</p>
</blockquote>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></li>
</ul>


10:45:07.179 [debug] l:len=33

10:45:07.179 [debug] l:buf=95:<h1>Jeff Bezos Banned PowerPoint in Meetings in favor of narrative</h1>
<p><a href="https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html" rel="noopener noreferrer">https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html</a></p>
<blockquote>
<p>Instead of reading bullet points on a PowerPoint slide, everyone sits silently for about 30 minutes to read a "six-page memo that's narratively structured with real sentences, topic sentences, verbs, and nouns."</p>
<p>After everyone's done reading, they discuss the topic. "It's so much better than the typical PowerPoint presentation for so many reasons," Bezos added.</p>
</blockquote>
<p>--</p>
<blockquote>
<p>Aristotle is the father of persuasion. More than 2,000 years ago he revealed the three elements that all persuasive arguments must have to be effective. He called these elements "appeals." They are: ethos, logos, and pathos. Ethos is character and credibility. Logos is logic--an argument must appeal to reason. <em>But ethos and logos are irrelevant in the absence of pathos--emotion.</em></p>
<p>Emotion is not a bad thing. The greatest movements in history were triggered by speakers who were gifted at making rational and emotional appeals: Abraham Lincoln and&nbsp;Martin Luther King, Jr.;&nbsp;and John F. Kennedy, who blended science and emotion to inspire America's moon program.</p>
<p>Neuroscientists have found&nbsp;emotion is the fastest path to the brain.</p>
</blockquote>
<p>Interesting how the author also has an appeal to authority here, establishing how credibility.</p>
<blockquote>
<p>Amazon uses "a ton of metrics" to measure success, explained Bezos.&nbsp;"I've noticed&nbsp;<em>when the anecdotes and the metrics disagree, the anecdotes are usually right,"</em></p>
</blockquote>
<p>He also said that Google's CEO doesn't use bullet points.</p>
<blockquote>
<p>Bullets don't inspire. Stories do.</p>
<p>Simply put, the brain is not built to retain information that's structured as bullet points on a slide. It's well-known among neuroscientists that we recall things much better when when we see pictures of the object or topic than when we read text on a slide.</p>
</blockquote>
<p>Google's CEO said:</p>
<blockquote>
<p>"Since stories are best told with pictures, bullet points and text-heavy slides are increasingly avoided at Google,"</p>
</blockquote>
<p>Also they avoid text in general:</p>
<blockquote>
<p>we can't read text on the screen and listen to the speaker while retaining all of the information. It can't be done.</p>
</blockquote>
<blockquote>
<p>According to his book, Brain Rules, "We are incredible at remembering pictures. Hear a piece of information, and three days later you'll remember 10 percent of it. Add a picture and you'll remember 65 percent."</p>
</blockquote>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></li>
</ul>


10:45:07.179 [debug] l:len=339

10:45:07.179 [debug] l:buf=5:<h1>Jeff Bezos Banned PowerPoint in Meetings in favor of narrative</h1>
<p><a href="https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html" rel="noopener noreferrer">https://www.inc.com/carmine-gallo/jeff-bezos-bans-powerpoint-in-meetings-his-replacement-is-brilliant.html</a></p>
<blockquote>
<p>Instead of reading bullet points on a PowerPoint slide, everyone sits silently for about 30 minutes to read a "six-page memo that's narratively structured with real sentences, topic sentences, verbs, and nouns."</p>
<p>After everyone's done reading, they discuss the topic. "It's so much better than the typical PowerPoint presentation for so many reasons," Bezos added.</p>
</blockquote>
<p>--</p>
<blockquote>
<p>Aristotle is the father of persuasion. More than 2,000 years ago he revealed the three elements that all persuasive arguments must have to be effective. He called these elements "appeals." They are: ethos, logos, and pathos. Ethos is character and credibility. Logos is logic--an argument must appeal to reason. <em>But ethos and logos are irrelevant in the absence of pathos--emotion.</em></p>
<p>Emotion is not a bad thing. The greatest movements in history were triggered by speakers who were gifted at making rational and emotional appeals: Abraham Lincoln and&nbsp;Martin Luther King, Jr.;&nbsp;and John F. Kennedy, who blended science and emotion to inspire America's moon program.</p>
<p>Neuroscientists have found&nbsp;emotion is the fastest path to the brain.</p>
</blockquote>
<p>Interesting how the author also has an appeal to authority here, establishing how credibility.</p>
<blockquote>
<p>Amazon uses "a ton of metrics" to measure success, explained Bezos.&nbsp;"I've noticed&nbsp;<em>when the anecdotes and the metrics disagree, the anecdotes are usually right,"</em></p>
</blockquote>
<p>He also said that Google's CEO doesn't use bullet points.</p>
<blockquote>
<p>Bullets don't inspire. Stories do.</p>
<p>Simply put, the brain is not built to retain information that's structured as bullet points on a slide. It's well-known among neuroscientists that we recall things much better when when we see pictures of the object or topic than when we read text on a slide.</p>
</blockquote>
<p>Google's CEO said:</p>
<blockquote>
<p>"Since stories are best told with pictures, bullet points and text-heavy slides are increasingly avoided at Google,"</p>
</blockquote>
<p>Also they avoid text in general:</p>
<blockquote>
<p>we can't read text on the screen and listen to the speaker while retaining all of the information. It can't be done.</p>
</blockquote>
<blockquote>
<p>According to his book, Brain Rules, "We are incredible at remembering pictures. Hear a piece of information, and three days later you'll remember 10 percent of it. Add a picture and you'll remember 65 percent."</p>
</blockquote>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></li>
</ul>


10:45:07.179 [debug] l:len=

10:45:07.179 [debug] l:buf empty

10:45:07.179 [debug] l:len=

10:45:07.179 [debug] l:buf=414:<h1>tradeoffs</h1>
<p><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.179 [debug] l:len=4

10:45:07.179 [debug] l:buf=14:<h1>tradeoffs</h1>
<p><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.179 [debug] l:len=41

10:45:07.179 [debug] l:buf=4:<h1>tradeoffs</h1>
<p><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf empty

10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf=229:<h1>Hill Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.180 [debug] l:len=2

10:45:07.180 [debug] l:buf=29:<h1>Hill Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.180 [debug] l:len=22

10:45:07.180 [debug] l:buf=9:<h1>Hill Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf empty

10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf=82:<h1>microservices</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.180 [debug] l:len=8

10:45:07.180 [debug] l:buf=2:<h1>microservices</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf empty

10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf=831:<h1>Jeremy Jones</h1>
<p><a href="http://localhost:5000/speaker-series" rel="noopener noreferrer">speaker-series</a></p>
<blockquote>
<p>What doesn't kill you<br>
Doesn't kill you</p>
</blockquote>
<p>(what you do afterwards, decides if you die)</p>
<p>14 hour days even on small amount of now</p>
<p>Have to earn the patch</p>
<p>Being tuned up</p>
<p>Build a place that we loved</p>
<h1>Take-Aways</h1>
<ul>
<li>Instinct
<ul>
<li>"instincts are trust-able, especially when developed, well used and refined"</li>
</ul>
</li>
<li>Adapting
<ul>
<li>"Shift and move immediately with problems arising"</li>
</ul>
</li>
<li>Leading
<ul>
<li>"The Hard truth is, not everyone is going to be a leader, even"</li>
</ul>
</li>
<li>Resilency
<ul>
<li>"Remember you are only temporarily beaten, not permanently broken"</li>
</ul>
</li>
</ul>


10:45:07.180 [debug] l:len=8

10:45:07.180 [debug] l:buf=31:<h1>Jeremy Jones</h1>
<p><a href="http://localhost:5000/speaker-series" rel="noopener noreferrer">speaker-series</a></p>
<blockquote>
<p>What doesn't kill you<br>
Doesn't kill you</p>
</blockquote>
<p>(what you do afterwards, decides if you die)</p>
<p>14 hour days even on small amount of now</p>
<p>Have to earn the patch</p>
<p>Being tuned up</p>
<p>Build a place that we loved</p>
<h1>Take-Aways</h1>
<ul>
<li>Instinct
<ul>
<li>"instincts are trust-able, especially when developed, well used and refined"</li>
</ul>
</li>
<li>Adapting
<ul>
<li>"Shift and move immediately with problems arising"</li>
</ul>
</li>
<li>Leading
<ul>
<li>"The Hard truth is, not everyone is going to be a leader, even"</li>
</ul>
</li>
<li>Resilency
<ul>
<li>"Remember you are only temporarily beaten, not permanently broken"</li>
</ul>
</li>
</ul>


10:45:07.180 [debug] l:len=83

10:45:07.180 [debug] l:buf=1:<h1>Jeremy Jones</h1>
<p><a href="http://localhost:5000/speaker-series" rel="noopener noreferrer">speaker-series</a></p>
<blockquote>
<p>What doesn't kill you<br>
Doesn't kill you</p>
</blockquote>
<p>(what you do afterwards, decides if you die)</p>
<p>14 hour days even on small amount of now</p>
<p>Have to earn the patch</p>
<p>Being tuned up</p>
<p>Build a place that we loved</p>
<h1>Take-Aways</h1>
<ul>
<li>Instinct
<ul>
<li>"instincts are trust-able, especially when developed, well used and refined"</li>
</ul>
</li>
<li>Adapting
<ul>
<li>"Shift and move immediately with problems arising"</li>
</ul>
</li>
<li>Leading
<ul>
<li>"The Hard truth is, not everyone is going to be a leader, even"</li>
</ul>
</li>
<li>Resilency
<ul>
<li>"Remember you are only temporarily beaten, not permanently broken"</li>
</ul>
</li>
</ul>


10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf empty

10:45:07.180 [debug] l:len=

10:45:07.180 [debug] l:buf=253:<h1>following a plan</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.180 [debug] l:len=2

10:45:07.180 [debug] l:buf=53:<h1>following a plan</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.180 [debug] l:len=25

10:45:07.180 [debug] l:buf=3:<h1>following a plan</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.180 [debug] l:len=

10:45:07.181 [debug] l:buf empty

10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf=80:<h1>Instructure</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.181 [debug] l:len=8

10:45:07.181 [debug] l:buf=0:<h1>Instructure</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf empty

10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf=285:<h1>Scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
</ul>


10:45:07.181 [debug] l:len=2

10:45:07.181 [debug] l:buf=85:<h1>Scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
</ul>


10:45:07.181 [debug] l:len=28

10:45:07.181 [debug] l:buf=5:<h1>Scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
</ul>


10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf empty

10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf=1288:<h1>Please don't like this</h1>
<blockquote>
<p>Applause tells me nothing.</p>
</blockquote>
<p>There's a problem of somebody posting deep dives into a topic and nobody would say anything even though they liked it.</p>
<p>On the other side, if you add like buttons it becomes this weird competition of popularity, even worse when you consider that a CEO has more power or influences if he doesn't like your post then because I mean he doesn't like your project is it a competition of popularity do you post things in your work group that you just know people like more cuz it could shoot try to be funny here or to show off but mostly it's really big problem when it comes to this kind of like toxic culture of constantly kind of driving engagement inside of your project try to steal away people's times trying to get them to check it or constantly when reality really trying to make people more productively really just wants up when we interrupt them when something is really pertinent to them.</p>
<p>Also there's the mob mentality</p>
<hr>
<p>From <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s Rework podcast, which helped do the <a href="http://localhost:5000/basecamp's-boost-feature" rel="noopener noreferrer">Basecamp's boost feature</a>.</p>


10:45:07.181 [debug] l:len=1

10:45:07.181 [debug] l:buf=288:<h1>Please don't like this</h1>
<blockquote>
<p>Applause tells me nothing.</p>
</blockquote>
<p>There's a problem of somebody posting deep dives into a topic and nobody would say anything even though they liked it.</p>
<p>On the other side, if you add like buttons it becomes this weird competition of popularity, even worse when you consider that a CEO has more power or influences if he doesn't like your post then because I mean he doesn't like your project is it a competition of popularity do you post things in your work group that you just know people like more cuz it could shoot try to be funny here or to show off but mostly it's really big problem when it comes to this kind of like toxic culture of constantly kind of driving engagement inside of your project try to steal away people's times trying to get them to check it or constantly when reality really trying to make people more productively really just wants up when we interrupt them when something is really pertinent to them.</p>
<p>Also there's the mob mentality</p>
<hr>
<p>From <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s Rework podcast, which helped do the <a href="http://localhost:5000/basecamp's-boost-feature" rel="noopener noreferrer">Basecamp's boost feature</a>.</p>


10:45:07.181 [debug] l:len=12

10:45:07.181 [debug] l:buf=88:<h1>Please don't like this</h1>
<blockquote>
<p>Applause tells me nothing.</p>
</blockquote>
<p>There's a problem of somebody posting deep dives into a topic and nobody would say anything even though they liked it.</p>
<p>On the other side, if you add like buttons it becomes this weird competition of popularity, even worse when you consider that a CEO has more power or influences if he doesn't like your post then because I mean he doesn't like your project is it a competition of popularity do you post things in your work group that you just know people like more cuz it could shoot try to be funny here or to show off but mostly it's really big problem when it comes to this kind of like toxic culture of constantly kind of driving engagement inside of your project try to steal away people's times trying to get them to check it or constantly when reality really trying to make people more productively really just wants up when we interrupt them when something is really pertinent to them.</p>
<p>Also there's the mob mentality</p>
<hr>
<p>From <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s Rework podcast, which helped do the <a href="http://localhost:5000/basecamp's-boost-feature" rel="noopener noreferrer">Basecamp's boost feature</a>.</p>


10:45:07.181 [debug] l:len=128

10:45:07.181 [debug] l:buf=8:<h1>Please don't like this</h1>
<blockquote>
<p>Applause tells me nothing.</p>
</blockquote>
<p>There's a problem of somebody posting deep dives into a topic and nobody would say anything even though they liked it.</p>
<p>On the other side, if you add like buttons it becomes this weird competition of popularity, even worse when you consider that a CEO has more power or influences if he doesn't like your post then because I mean he doesn't like your project is it a competition of popularity do you post things in your work group that you just know people like more cuz it could shoot try to be funny here or to show off but mostly it's really big problem when it comes to this kind of like toxic culture of constantly kind of driving engagement inside of your project try to steal away people's times trying to get them to check it or constantly when reality really trying to make people more productively really just wants up when we interrupt them when something is really pertinent to them.</p>
<p>Also there's the mob mentality</p>
<hr>
<p>From <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s Rework podcast, which helped do the <a href="http://localhost:5000/basecamp's-boost-feature" rel="noopener noreferrer">Basecamp's boost feature</a>.</p>


10:45:07.181 [debug] l:len=

10:45:07.181 [debug] l:buf empty

10:45:07.182 [debug] l:len=

10:45:07.182 [debug] l:buf=871:<h1>There's no good way to use Slack threads</h1>
<p>Everyone thinks <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack threads</a> are awesome, but in reality just put a band-aid on the problem of <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a>. They slow down communication when it starts to get too hecktic. Same for <a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a>.</p>
<p>These are part of the <a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.182 [debug] l:len=8

10:45:07.182 [debug] l:buf=71:<h1>There's no good way to use Slack threads</h1>
<p>Everyone thinks <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack threads</a> are awesome, but in reality just put a band-aid on the problem of <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a>. They slow down communication when it starts to get too hecktic. Same for <a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a>.</p>
<p>These are part of the <a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.182 [debug] l:len=87

10:45:07.182 [debug] l:buf=1:<h1>There's no good way to use Slack threads</h1>
<p>Everyone thinks <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack threads</a> are awesome, but in reality just put a band-aid on the problem of <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a>. They slow down communication when it starts to get too hecktic. Same for <a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a>.</p>
<p>These are part of the <a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.182 [debug] l:len=

10:45:07.182 [debug] l:buf empty

10:45:07.182 [debug] l:len=

10:45:07.182 [debug] l:buf=1757:<h1>Scrum</h1>
<ul>
<li>An <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> process framework for managing complex knowledge work, with an initial emphasis on software development, although it has been used in other fields and is slowly starting to be explored for other complex work, research and advanced technologies.</li>
<li>It is designed for teams of ten or fewer members, who break their work into goals that can be completed within <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ed iterations, called <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>s, no longer than one month and most commonly two weeks, then track progress and re-plan in 15-minute time-boxed daily meetings, called daily scrums. At the end of the <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>, the team holds sprint review and sprint retrospective to review the work done and the process of the sprint.</li>
<li>Development team
<ul>
<li><a href="http://localhost:5000/scrum-master" rel="noopener noreferrer">scrum master</a></li>
<li>Development team
<ul>
<li>three to nine members</li>
</ul>
</li>
</ul>
</li>
<li>No work should come to the team except through the product owner</li>
<li>a <a href="http://localhost:5000/servant-leader" rel="noopener noreferrer">servant-leader</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.182 [debug] l:len=1

10:45:07.182 [debug] l:buf=757:<h1>Scrum</h1>
<ul>
<li>An <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> process framework for managing complex knowledge work, with an initial emphasis on software development, although it has been used in other fields and is slowly starting to be explored for other complex work, research and advanced technologies.</li>
<li>It is designed for teams of ten or fewer members, who break their work into goals that can be completed within <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ed iterations, called <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>s, no longer than one month and most commonly two weeks, then track progress and re-plan in 15-minute time-boxed daily meetings, called daily scrums. At the end of the <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>, the team holds sprint review and sprint retrospective to review the work done and the process of the sprint.</li>
<li>Development team
<ul>
<li><a href="http://localhost:5000/scrum-master" rel="noopener noreferrer">scrum master</a></li>
<li>Development team
<ul>
<li>three to nine members</li>
</ul>
</li>
</ul>
</li>
<li>No work should come to the team except through the product owner</li>
<li>a <a href="http://localhost:5000/servant-leader" rel="noopener noreferrer">servant-leader</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.182 [debug] l:len=17

10:45:07.182 [debug] l:buf=57:<h1>Scrum</h1>
<ul>
<li>An <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> process framework for managing complex knowledge work, with an initial emphasis on software development, although it has been used in other fields and is slowly starting to be explored for other complex work, research and advanced technologies.</li>
<li>It is designed for teams of ten or fewer members, who break their work into goals that can be completed within <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ed iterations, called <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>s, no longer than one month and most commonly two weeks, then track progress and re-plan in 15-minute time-boxed daily meetings, called daily scrums. At the end of the <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>, the team holds sprint review and sprint retrospective to review the work done and the process of the sprint.</li>
<li>Development team
<ul>
<li><a href="http://localhost:5000/scrum-master" rel="noopener noreferrer">scrum master</a></li>
<li>Development team
<ul>
<li>three to nine members</li>
</ul>
</li>
</ul>
</li>
<li>No work should come to the team except through the product owner</li>
<li>a <a href="http://localhost:5000/servant-leader" rel="noopener noreferrer">servant-leader</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.182 [debug] l:len=175

10:45:07.182 [debug] l:buf=7:<h1>Scrum</h1>
<ul>
<li>An <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> process framework for managing complex knowledge work, with an initial emphasis on software development, although it has been used in other fields and is slowly starting to be explored for other complex work, research and advanced technologies.</li>
<li>It is designed for teams of ten or fewer members, who break their work into goals that can be completed within <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ed iterations, called <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>s, no longer than one month and most commonly two weeks, then track progress and re-plan in 15-minute time-boxed daily meetings, called daily scrums. At the end of the <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>, the team holds sprint review and sprint retrospective to review the work done and the process of the sprint.</li>
<li>Development team
<ul>
<li><a href="http://localhost:5000/scrum-master" rel="noopener noreferrer">scrum master</a></li>
<li>Development team
<ul>
<li>three to nine members</li>
</ul>
</li>
</ul>
</li>
<li>No work should come to the team except through the product owner</li>
<li>a <a href="http://localhost:5000/servant-leader" rel="noopener noreferrer">servant-leader</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.182 [debug] l:len=

10:45:07.182 [debug] l:buf empty

10:45:07.182 [debug] l:len=

10:45:07.182 [debug] l:buf=369:<h1>Pasted image 20201020092443</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.182 [debug] l:len=3

10:45:07.182 [debug] l:buf=69:<h1>Pasted image 20201020092443</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.182 [debug] l:len=36

10:45:07.183 [debug] l:buf=9:<h1>Pasted image 20201020092443</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf empty

10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf=3297:<h1>Slack is a black hole of information</h1>
<p>What is a "<a href="http://localhost:5000/black-hole" rel="noopener noreferrer">black hole</a>"? Basically I mean:</p>
<ol>
<li>
<p>Slack destroys good information and encourages bad documentation habits</p>
<ul>
<li>It presents messages in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and in <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> which prioritizes new information over old.</li>
<li>Also Slack's has a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>, aka Channels which drive you to post new information. Making more channels doesn't help either because <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a> which ends up causing <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">channel bloat</a>.</li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a> and <a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a>.</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>
</li>
<li>
<p>As such the only way to keep up is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a>, or go through <a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a>.</p>
</li>
</ol>
<hr>
<h2>External Link:</h2>
<p><a href="https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm" rel="noopener noreferrer">https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.183 [debug] l:len=3

10:45:07.183 [debug] l:buf=297:<h1>Slack is a black hole of information</h1>
<p>What is a "<a href="http://localhost:5000/black-hole" rel="noopener noreferrer">black hole</a>"? Basically I mean:</p>
<ol>
<li>
<p>Slack destroys good information and encourages bad documentation habits</p>
<ul>
<li>It presents messages in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and in <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> which prioritizes new information over old.</li>
<li>Also Slack's has a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>, aka Channels which drive you to post new information. Making more channels doesn't help either because <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a> which ends up causing <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">channel bloat</a>.</li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a> and <a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a>.</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>
</li>
<li>
<p>As such the only way to keep up is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a>, or go through <a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a>.</p>
</li>
</ol>
<hr>
<h2>External Link:</h2>
<p><a href="https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm" rel="noopener noreferrer">https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.183 [debug] l:len=32

10:45:07.183 [debug] l:buf=97:<h1>Slack is a black hole of information</h1>
<p>What is a "<a href="http://localhost:5000/black-hole" rel="noopener noreferrer">black hole</a>"? Basically I mean:</p>
<ol>
<li>
<p>Slack destroys good information and encourages bad documentation habits</p>
<ul>
<li>It presents messages in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and in <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> which prioritizes new information over old.</li>
<li>Also Slack's has a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>, aka Channels which drive you to post new information. Making more channels doesn't help either because <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a> which ends up causing <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">channel bloat</a>.</li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a> and <a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a>.</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>
</li>
<li>
<p>As such the only way to keep up is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a>, or go through <a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a>.</p>
</li>
</ol>
<hr>
<h2>External Link:</h2>
<p><a href="https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm" rel="noopener noreferrer">https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.183 [debug] l:len=329

10:45:07.183 [debug] l:buf=7:<h1>Slack is a black hole of information</h1>
<p>What is a "<a href="http://localhost:5000/black-hole" rel="noopener noreferrer">black hole</a>"? Basically I mean:</p>
<ol>
<li>
<p>Slack destroys good information and encourages bad documentation habits</p>
<ul>
<li>It presents messages in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and in <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> which prioritizes new information over old.</li>
<li>Also Slack's has a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>, aka Channels which drive you to post new information. Making more channels doesn't help either because <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a> which ends up causing <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">channel bloat</a>.</li>
<li><a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a> and <a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a>.</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>
</li>
<li>
<p>As such the only way to keep up is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a>, or go through <a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a>.</p>
</li>
</ol>
<hr>
<h2>External Link:</h2>
<p><a href="https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm" rel="noopener noreferrer">https://knovigator.com/quest/Slack-is-a-black-hole-of-information-3gv621jm</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf empty

10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf=266:<h1>biweekly-meeting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.183 [debug] l:len=2

10:45:07.183 [debug] l:buf=66:<h1>biweekly-meeting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.183 [debug] l:len=26

10:45:07.183 [debug] l:buf=6:<h1>biweekly-meeting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf empty

10:45:07.183 [debug] l:len=

10:45:07.183 [debug] l:buf=232:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p>Tags:
links</p>


10:45:07.184 [debug] l:len=2

10:45:07.184 [debug] l:buf=32:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p>Tags:
links</p>


10:45:07.184 [debug] l:len=23

10:45:07.184 [debug] l:buf=2:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p>Tags:
links</p>


10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf empty

10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf=89:<h1>The power of a title</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.184 [debug] l:len=8

10:45:07.184 [debug] l:buf=9:<h1>The power of a title</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf empty

10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf=480:<h1>overlapping timelines</h1>
<p>In <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a> teams often don't have their <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> line up which means it's very hard to coordinate with each other. <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> dictates that all teams switch projects at the same time which helps a lot with this.</p>


10:45:07.184 [debug] l:len=4

10:45:07.184 [debug] l:buf=80:<h1>overlapping timelines</h1>
<p>In <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a> teams often don't have their <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> line up which means it's very hard to coordinate with each other. <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> dictates that all teams switch projects at the same time which helps a lot with this.</p>


10:45:07.184 [debug] l:len=48

10:45:07.184 [debug] l:buf=0:<h1>overlapping timelines</h1>
<p>In <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a> teams often don't have their <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> line up which means it's very hard to coordinate with each other. <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> dictates that all teams switch projects at the same time which helps a lot with this.</p>


10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf empty

10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf=673:<p>Android fundimentials</p>
<p>There are four different types of app components:</p>
<p>Activities (pages/screens)</p>
<p>Services</p>
<p>A&nbsp;service&nbsp;is a general-purpose entry point for keeping an app running in the background for all kinds of reasons. It is a component that runs in the background to perform long-running operations or to perform work for remote processes. A service does not provide a user interface. For example, a service might play music in the background while the user is in a different app, or it might fetch data over the network without blocking user interaction with an activity</p>
<p>Broadcast receivers</p>
<p>Content providers</p>


10:45:07.184 [debug] l:len=6

10:45:07.184 [debug] l:buf=73:<p>Android fundimentials</p>
<p>There are four different types of app components:</p>
<p>Activities (pages/screens)</p>
<p>Services</p>
<p>A&nbsp;service&nbsp;is a general-purpose entry point for keeping an app running in the background for all kinds of reasons. It is a component that runs in the background to perform long-running operations or to perform work for remote processes. A service does not provide a user interface. For example, a service might play music in the background while the user is in a different app, or it might fetch data over the network without blocking user interaction with an activity</p>
<p>Broadcast receivers</p>
<p>Content providers</p>


10:45:07.184 [debug] l:len=67

10:45:07.184 [debug] l:buf=3:<p>Android fundimentials</p>
<p>There are four different types of app components:</p>
<p>Activities (pages/screens)</p>
<p>Services</p>
<p>A&nbsp;service&nbsp;is a general-purpose entry point for keeping an app running in the background for all kinds of reasons. It is a component that runs in the background to perform long-running operations or to perform work for remote processes. A service does not provide a user interface. For example, a service might play music in the background while the user is in a different app, or it might fetch data over the network without blocking user interaction with an activity</p>
<p>Broadcast receivers</p>
<p>Content providers</p>


10:45:07.184 [debug] l:len=

10:45:07.184 [debug] l:buf empty

10:45:07.184 [debug] l:len=

10:45:07.185 [debug] l:buf=369:<h1>Dgraph</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
</ul>


10:45:07.185 [debug] l:len=3

10:45:07.185 [debug] l:buf=69:<h1>Dgraph</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
</ul>


10:45:07.185 [debug] l:len=36

10:45:07.185 [debug] l:buf=9:<h1>Dgraph</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
</ul>


10:45:07.185 [debug] l:len=

10:45:07.185 [debug] l:buf empty

10:45:07.185 [debug] l:len=

10:45:07.185 [debug] l:buf=225:<h1>Twitter</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.185 [debug] l:len=2

10:45:07.185 [debug] l:buf=25:<h1>Twitter</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.185 [debug] l:len=22

10:45:07.185 [debug] l:buf=5:<h1>Twitter</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
</ul>


10:45:07.185 [debug] l:len=

10:45:07.185 [debug] l:buf empty

10:45:07.185 [debug] l:len=

10:45:07.185 [debug] l:buf=89:<h1>Tech Confrence Talks</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.185 [debug] l:len=8

10:45:07.185 [debug] l:buf=9:<h1>Tech Confrence Talks</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.185 [debug] l:len=

10:45:07.185 [debug] l:buf empty

10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf=848:<h1>values as a software developer</h1>
<ul>
<li>build for extension</li>
<li>always be vigilant
<ul>
<li>be humble and suspicious of your mistakes</li>
</ul>
</li>
<li>boring is better than fancy
<ul>
<li>code shouldn't be like poetry, interesting and hard to comprehend, it should be an obvious statement</li>
<li>always separate pure from side effecting
<ul>
<li>easier to test</li>
<li>easier to understand</li>
<li>easier to extend</li>
<li>etc..</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Tags:
software</p>
<ul>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a>,</li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
</ul>


10:45:07.186 [debug] l:len=8

10:45:07.186 [debug] l:buf=48:<h1>values as a software developer</h1>
<ul>
<li>build for extension</li>
<li>always be vigilant
<ul>
<li>be humble and suspicious of your mistakes</li>
</ul>
</li>
<li>boring is better than fancy
<ul>
<li>code shouldn't be like poetry, interesting and hard to comprehend, it should be an obvious statement</li>
<li>always separate pure from side effecting
<ul>
<li>easier to test</li>
<li>easier to understand</li>
<li>easier to extend</li>
<li>etc..</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Tags:
software</p>
<ul>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a>,</li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
</ul>


10:45:07.186 [debug] l:len=84

10:45:07.186 [debug] l:buf=8:<h1>values as a software developer</h1>
<ul>
<li>build for extension</li>
<li>always be vigilant
<ul>
<li>be humble and suspicious of your mistakes</li>
</ul>
</li>
<li>boring is better than fancy
<ul>
<li>code shouldn't be like poetry, interesting and hard to comprehend, it should be an obvious statement</li>
<li>always separate pure from side effecting
<ul>
<li>easier to test</li>
<li>easier to understand</li>
<li>easier to extend</li>
<li>etc..</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Tags:
software</p>
<ul>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a>,</li>
<li><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></li>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
</ul>


10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf empty

10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf=84:<h1>Pasted image 39</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.186 [debug] l:len=8

10:45:07.186 [debug] l:buf=4:<h1>Pasted image 39</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf empty

10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf=360:<h1>Trello</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.186 [debug] l:len=3

10:45:07.186 [debug] l:buf=60:<h1>Trello</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.186 [debug] l:len=36

10:45:07.186 [debug] l:buf=0:<h1>Trello</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf empty

10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf=766:<h1>Gitlab's Values</h1>
<p>Gitlab has a ton of great values that can be found on <a href="https://about.gitlab.com/handbook/values/#why-our-values-are-public" rel="noopener noreferrer">this page</a>.</p>
<blockquote>
<p>GitLab's six values are</p>
<ul>
<li>🤝 Collaboration</li>
<li>📈 Results</li>
<li>⏱️ Efficiency</li>
<li>🌐 Diversity, Inclusion &amp; Belonging</li>
<li>👣 Iteration</li>
<li>👁️ Transparency</li>
</ul>
<p>Together they spell the CREDIT we give each other by <a href="http://localhost:5000/assuming-good-intent" rel="noopener noreferrer">assuming good intent</a>.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.186 [debug] l:len=7

10:45:07.186 [debug] l:buf=66:<h1>Gitlab's Values</h1>
<p>Gitlab has a ton of great values that can be found on <a href="https://about.gitlab.com/handbook/values/#why-our-values-are-public" rel="noopener noreferrer">this page</a>.</p>
<blockquote>
<p>GitLab's six values are</p>
<ul>
<li>🤝 Collaboration</li>
<li>📈 Results</li>
<li>⏱️ Efficiency</li>
<li>🌐 Diversity, Inclusion &amp; Belonging</li>
<li>👣 Iteration</li>
<li>👁️ Transparency</li>
</ul>
<p>Together they spell the CREDIT we give each other by <a href="http://localhost:5000/assuming-good-intent" rel="noopener noreferrer">assuming good intent</a>.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.186 [debug] l:len=76

10:45:07.186 [debug] l:buf=6:<h1>Gitlab's Values</h1>
<p>Gitlab has a ton of great values that can be found on <a href="https://about.gitlab.com/handbook/values/#why-our-values-are-public" rel="noopener noreferrer">this page</a>.</p>
<blockquote>
<p>GitLab's six values are</p>
<ul>
<li>🤝 Collaboration</li>
<li>📈 Results</li>
<li>⏱️ Efficiency</li>
<li>🌐 Diversity, Inclusion &amp; Belonging</li>
<li>👣 Iteration</li>
<li>👁️ Transparency</li>
</ul>
<p>Together they spell the CREDIT we give each other by <a href="http://localhost:5000/assuming-good-intent" rel="noopener noreferrer">assuming good intent</a>.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf empty

10:45:07.186 [debug] l:len=

10:45:07.186 [debug] l:buf=76:<h1>Android</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.187 [debug] l:len=7

10:45:07.187 [debug] l:buf=6:<h1>Android</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf empty

10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf=319:<h1>Seek First to Understand, Then to Be Understood</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.187 [debug] l:len=3

10:45:07.187 [debug] l:buf=19:<h1>Seek First to Understand, Then to Be Understood</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.187 [debug] l:len=31

10:45:07.187 [debug] l:buf=9:<h1>Seek First to Understand, Then to Be Understood</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf empty

10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf=258:<h1>Customer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.187 [debug] l:len=2

10:45:07.187 [debug] l:buf=58:<h1>Customer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.187 [debug] l:len=25

10:45:07.187 [debug] l:buf=8:<h1>Customer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf empty

10:45:07.187 [debug] l:len=

10:45:07.187 [debug] l:buf=264:<h1>open office design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.187 [debug] l:len=2

10:45:07.187 [debug] l:buf=64:<h1>open office design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.187 [debug] l:len=26

10:45:07.187 [debug] l:buf=4:<h1>open office design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.187 [debug] l:len=

10:45:07.188 [debug] l:buf empty

10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf=352:<h1>Pasted image 20201009143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.188 [debug] l:len=3

10:45:07.188 [debug] l:buf=52:<h1>Pasted image 20201009143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.188 [debug] l:len=35

10:45:07.188 [debug] l:buf=2:<h1>Pasted image 20201009143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf empty

10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf=83:<h1>footnotes</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.188 [debug] l:len=8

10:45:07.188 [debug] l:buf=3:<h1>footnotes</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf empty

10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf=83:<h1>Word of wisdom</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.188 [debug] l:len=8

10:45:07.188 [debug] l:buf=3:<h1>Word of wisdom</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf empty

10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf=246:<h1>Reading list</h1>
<ul>
<li><a href="https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592" rel="noopener noreferrer">https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592</a></li>
<li></li>
</ul>


10:45:07.188 [debug] l:len=2

10:45:07.188 [debug] l:buf=46:<h1>Reading list</h1>
<ul>
<li><a href="https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592" rel="noopener noreferrer">https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592</a></li>
<li></li>
</ul>


10:45:07.188 [debug] l:len=24

10:45:07.188 [debug] l:buf=6:<h1>Reading list</h1>
<ul>
<li><a href="https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592" rel="noopener noreferrer">https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592</a></li>
<li></li>
</ul>


10:45:07.188 [debug] l:len=

10:45:07.188 [debug] l:buf empty

10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf=1335:<h1>why slack has spammy notifications</h1>
<p>Notifications in Slack can't be gradual because any channels are a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. DMs are likewise ambiguous. This is probably for two reasons:</p>
<ol>
<li>They want to keep their design "simple" (really <a href="http://localhost:5000/simplistic" rel="noopener noreferrer">simplistic</a>) so that people don't get confused.</li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a> allow more <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> which <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
</ol>
<p>Links: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.189 [debug] l:len=1

10:45:07.189 [debug] l:buf=335:<h1>why slack has spammy notifications</h1>
<p>Notifications in Slack can't be gradual because any channels are a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. DMs are likewise ambiguous. This is probably for two reasons:</p>
<ol>
<li>They want to keep their design "simple" (really <a href="http://localhost:5000/simplistic" rel="noopener noreferrer">simplistic</a>) so that people don't get confused.</li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a> allow more <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> which <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
</ol>
<p>Links: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.189 [debug] l:len=13

10:45:07.189 [debug] l:buf=35:<h1>why slack has spammy notifications</h1>
<p>Notifications in Slack can't be gradual because any channels are a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. DMs are likewise ambiguous. This is probably for two reasons:</p>
<ol>
<li>They want to keep their design "simple" (really <a href="http://localhost:5000/simplistic" rel="noopener noreferrer">simplistic</a>) so that people don't get confused.</li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a> allow more <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> which <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
</ol>
<p>Links: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.189 [debug] l:len=133

10:45:07.189 [debug] l:buf=5:<h1>why slack has spammy notifications</h1>
<p>Notifications in Slack can't be gradual because any channels are a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. DMs are likewise ambiguous. This is probably for two reasons:</p>
<ol>
<li>They want to keep their design "simple" (really <a href="http://localhost:5000/simplistic" rel="noopener noreferrer">simplistic</a>) so that people don't get confused.</li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a> allow more <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> which <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
</ol>
<p>Links: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf empty

10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf=262:<h1>Stress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.189 [debug] l:len=2

10:45:07.189 [debug] l:buf=62:<h1>Stress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.189 [debug] l:len=26

10:45:07.189 [debug] l:buf=2:<h1>Stress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf empty

10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf=84:<h1>Unit tests suck</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.189 [debug] l:len=8

10:45:07.189 [debug] l:buf=4:<h1>Unit tests suck</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf empty

10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf=690:<h1>And just as Steve loved ideas, and loved</h1>
<blockquote>
<p>And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
</blockquote>
<p>Links:</p>
<ul>
<li>#quotes</li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.189 [debug] l:len=6

10:45:07.189 [debug] l:buf=90:<h1>And just as Steve loved ideas, and loved</h1>
<blockquote>
<p>And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
</blockquote>
<p>Links:</p>
<ul>
<li>#quotes</li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.189 [debug] l:len=69

10:45:07.189 [debug] l:buf=0:<h1>And just as Steve loved ideas, and loved</h1>
<blockquote>
<p>And just as Steve loved ideas, and loved making stuff, he treated the process of creativity with a rare and a wonderful reverence. You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
</blockquote>
<p>Links:</p>
<ul>
<li>#quotes</li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
<li><a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a></li>
</ul>


10:45:07.189 [debug] l:len=

10:45:07.189 [debug] l:buf empty

10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf=313:<h1>short term thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.190 [debug] l:len=3

10:45:07.190 [debug] l:buf=13:<h1>short term thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.190 [debug] l:len=31

10:45:07.190 [debug] l:buf=3:<h1>short term thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf empty

10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf=238:<h1>Six-week cycles</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.190 [debug] l:len=2

10:45:07.190 [debug] l:buf=38:<h1>Six-week cycles</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.190 [debug] l:len=23

10:45:07.190 [debug] l:buf=8:<h1>Six-week cycles</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf empty

10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf=667:<p><img src="http://localhost:5000/microsoftTeamsIsBetter.gif" alt="Microsoft Teams Design Queues"></p>
<p>Microsoft teams understands <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a>. It's come up with some awesome design queues to help fix the problems with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp#slacks-input-box" rel="noopener noreferrer">Slack's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
</ul>


10:45:07.190 [debug] l:len=6

10:45:07.190 [debug] l:buf=67:<p><img src="http://localhost:5000/microsoftTeamsIsBetter.gif" alt="Microsoft Teams Design Queues"></p>
<p>Microsoft teams understands <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a>. It's come up with some awesome design queues to help fix the problems with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp#slacks-input-box" rel="noopener noreferrer">Slack's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
</ul>


10:45:07.190 [debug] l:len=66

10:45:07.190 [debug] l:buf=7:<p><img src="http://localhost:5000/microsoftTeamsIsBetter.gif" alt="Microsoft Teams Design Queues"></p>
<p>Microsoft teams understands <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a>. It's come up with some awesome design queues to help fix the problems with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp#slacks-input-box" rel="noopener noreferrer">Slack's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
</ul>


10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf empty

10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf=422:<h1>2020-08-26-22-06-27</h1>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> requires writing in your own words like you're explaining it to someone else, <strong>because future you is someone else</strong>. Also, you're going to be turning things into blog posts.</p>
<p>Ref: <a href="https://youtu.be/wMOACjJzfgM" rel="noopener noreferrer">https://youtu.be/wMOACjJzfgM</a></p>


10:45:07.190 [debug] l:len=4

10:45:07.190 [debug] l:buf=22:<h1>2020-08-26-22-06-27</h1>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> requires writing in your own words like you're explaining it to someone else, <strong>because future you is someone else</strong>. Also, you're going to be turning things into blog posts.</p>
<p>Ref: <a href="https://youtu.be/wMOACjJzfgM" rel="noopener noreferrer">https://youtu.be/wMOACjJzfgM</a></p>


10:45:07.190 [debug] l:len=42

10:45:07.190 [debug] l:buf=2:<h1>2020-08-26-22-06-27</h1>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> requires writing in your own words like you're explaining it to someone else, <strong>because future you is someone else</strong>. Also, you're going to be turning things into blog posts.</p>
<p>Ref: <a href="https://youtu.be/wMOACjJzfgM" rel="noopener noreferrer">https://youtu.be/wMOACjJzfgM</a></p>


10:45:07.190 [debug] l:len=

10:45:07.190 [debug] l:buf empty

10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf=305:<h1>Pasted image 20200922163529</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.191 [debug] l:len=3

10:45:07.191 [debug] l:buf=05:<h1>Pasted image 20200922163529</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.191 [debug] l:len=30

10:45:07.191 [debug] l:buf=5:<h1>Pasted image 20200922163529</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf empty

10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf=233:<h1>If your thoughts are fragmentation, you are fragmented</h1>
<hr>
<h2>created: 2020-08-27T20:29:49-06:00
modified: 2020-08-27T20:30:29-06:00</h2>
<h1>If your thoughts are fragmentation, you are fragmented</h1>
<p>Depoc Chopra</p>


10:45:07.191 [debug] l:len=2

10:45:07.191 [debug] l:buf=33:<h1>If your thoughts are fragmentation, you are fragmented</h1>
<hr>
<h2>created: 2020-08-27T20:29:49-06:00
modified: 2020-08-27T20:30:29-06:00</h2>
<h1>If your thoughts are fragmentation, you are fragmented</h1>
<p>Depoc Chopra</p>


10:45:07.191 [debug] l:len=23

10:45:07.191 [debug] l:buf=3:<h1>If your thoughts are fragmentation, you are fragmented</h1>
<hr>
<h2>created: 2020-08-27T20:29:49-06:00
modified: 2020-08-27T20:30:29-06:00</h2>
<h1>If your thoughts are fragmentation, you are fragmented</h1>
<p>Depoc Chopra</p>


10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf empty

10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf=2214:<h1>Why <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is better for business</h1>
<h2>Elm breaks less</h2>
<p><a href="http://localhost:5000/javascript" rel="noopener noreferrer">JavaScript</a> has thousands of ways to create runtime exceptions. These are costly to maintain and get far worse as time goes on. Almost every time  exceptions causes the application to misbehave. Causes things to not load or a button to do nothing, perhaps even deletes the users content they worked so hard to create. It just makes things feel crappy and cheep. When it happens more than a few times it's hard not to wonder if anyone cares at all about the product.</p>
<p>Elm has effectively no runtime exceptions. No red ink has had it in production for years now and literally never experienced it. This is good for business.</p>
<h2>Elm shows all the edge cases.</h2>
<p>What is an edge-case? Basically situations that happen less often that the programmer could easily forget. For instance when the Internet isn't connected so your http request fails, or when the user tries to push the back button in a place you didn't expect, or puts letters in a phone number field, or loading states, when the user goes to a place they shouldn't have permission to view. The list goes on.</p>
<p>Because Elm has no cop-out of runtime exceptions it forces the programmer to have to handle those edge-cases. While it's true that it doesn't make them handle them well at least you know you had to think about it.</p>
<p>One beautiful thing about Elm is option types. These basically let your enforce people using your code to think about the different situations that can happen.</p>
<p>This is beneficial both when people write new code or when the number of edge-cases change. In the latter situation all you would have to do is add one line of code then the the compiler would tell you all the places you need to change. Literally.</p>
<h2>Elm attracts good developers</h2>
<p>There's benefits to being one of the only companies that have discovered a Programming language that thousands of developers want desperately to work in, but can't.</p>
<p>Not only that but it grantees that the developers know how to</p>


10:45:07.191 [debug] l:len=2

10:45:07.191 [debug] l:buf=214:<h1>Why <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is better for business</h1>
<h2>Elm breaks less</h2>
<p><a href="http://localhost:5000/javascript" rel="noopener noreferrer">JavaScript</a> has thousands of ways to create runtime exceptions. These are costly to maintain and get far worse as time goes on. Almost every time  exceptions causes the application to misbehave. Causes things to not load or a button to do nothing, perhaps even deletes the users content they worked so hard to create. It just makes things feel crappy and cheep. When it happens more than a few times it's hard not to wonder if anyone cares at all about the product.</p>
<p>Elm has effectively no runtime exceptions. No red ink has had it in production for years now and literally never experienced it. This is good for business.</p>
<h2>Elm shows all the edge cases.</h2>
<p>What is an edge-case? Basically situations that happen less often that the programmer could easily forget. For instance when the Internet isn't connected so your http request fails, or when the user tries to push the back button in a place you didn't expect, or puts letters in a phone number field, or loading states, when the user goes to a place they shouldn't have permission to view. The list goes on.</p>
<p>Because Elm has no cop-out of runtime exceptions it forces the programmer to have to handle those edge-cases. While it's true that it doesn't make them handle them well at least you know you had to think about it.</p>
<p>One beautiful thing about Elm is option types. These basically let your enforce people using your code to think about the different situations that can happen.</p>
<p>This is beneficial both when people write new code or when the number of edge-cases change. In the latter situation all you would have to do is add one line of code then the the compiler would tell you all the places you need to change. Literally.</p>
<h2>Elm attracts good developers</h2>
<p>There's benefits to being one of the only companies that have discovered a Programming language that thousands of developers want desperately to work in, but can't.</p>
<p>Not only that but it grantees that the developers know how to</p>


10:45:07.191 [debug] l:len=22

10:45:07.191 [debug] l:buf=14:<h1>Why <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is better for business</h1>
<h2>Elm breaks less</h2>
<p><a href="http://localhost:5000/javascript" rel="noopener noreferrer">JavaScript</a> has thousands of ways to create runtime exceptions. These are costly to maintain and get far worse as time goes on. Almost every time  exceptions causes the application to misbehave. Causes things to not load or a button to do nothing, perhaps even deletes the users content they worked so hard to create. It just makes things feel crappy and cheep. When it happens more than a few times it's hard not to wonder if anyone cares at all about the product.</p>
<p>Elm has effectively no runtime exceptions. No red ink has had it in production for years now and literally never experienced it. This is good for business.</p>
<h2>Elm shows all the edge cases.</h2>
<p>What is an edge-case? Basically situations that happen less often that the programmer could easily forget. For instance when the Internet isn't connected so your http request fails, or when the user tries to push the back button in a place you didn't expect, or puts letters in a phone number field, or loading states, when the user goes to a place they shouldn't have permission to view. The list goes on.</p>
<p>Because Elm has no cop-out of runtime exceptions it forces the programmer to have to handle those edge-cases. While it's true that it doesn't make them handle them well at least you know you had to think about it.</p>
<p>One beautiful thing about Elm is option types. These basically let your enforce people using your code to think about the different situations that can happen.</p>
<p>This is beneficial both when people write new code or when the number of edge-cases change. In the latter situation all you would have to do is add one line of code then the the compiler would tell you all the places you need to change. Literally.</p>
<h2>Elm attracts good developers</h2>
<p>There's benefits to being one of the only companies that have discovered a Programming language that thousands of developers want desperately to work in, but can't.</p>
<p>Not only that but it grantees that the developers know how to</p>


10:45:07.191 [debug] l:len=221

10:45:07.191 [debug] l:buf=4:<h1>Why <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is better for business</h1>
<h2>Elm breaks less</h2>
<p><a href="http://localhost:5000/javascript" rel="noopener noreferrer">JavaScript</a> has thousands of ways to create runtime exceptions. These are costly to maintain and get far worse as time goes on. Almost every time  exceptions causes the application to misbehave. Causes things to not load or a button to do nothing, perhaps even deletes the users content they worked so hard to create. It just makes things feel crappy and cheep. When it happens more than a few times it's hard not to wonder if anyone cares at all about the product.</p>
<p>Elm has effectively no runtime exceptions. No red ink has had it in production for years now and literally never experienced it. This is good for business.</p>
<h2>Elm shows all the edge cases.</h2>
<p>What is an edge-case? Basically situations that happen less often that the programmer could easily forget. For instance when the Internet isn't connected so your http request fails, or when the user tries to push the back button in a place you didn't expect, or puts letters in a phone number field, or loading states, when the user goes to a place they shouldn't have permission to view. The list goes on.</p>
<p>Because Elm has no cop-out of runtime exceptions it forces the programmer to have to handle those edge-cases. While it's true that it doesn't make them handle them well at least you know you had to think about it.</p>
<p>One beautiful thing about Elm is option types. These basically let your enforce people using your code to think about the different situations that can happen.</p>
<p>This is beneficial both when people write new code or when the number of edge-cases change. In the latter situation all you would have to do is add one line of code then the the compiler would tell you all the places you need to change. Literally.</p>
<h2>Elm attracts good developers</h2>
<p>There's benefits to being one of the only companies that have discovered a Programming language that thousands of developers want desperately to work in, but can't.</p>
<p>Not only that but it grantees that the developers know how to</p>


10:45:07.191 [debug] l:len=

10:45:07.191 [debug] l:buf empty

10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf=1061:<h1>why we choose profit</h1>
<p><a href="https://m.signalvnoise.com/why-we-choose-profit/" rel="noopener noreferrer">https://m.signalvnoise.com/why-we-choose-profit/</a></p>
<blockquote>
<p>FU money isn’t about buying an island, it’s about being an island — your own sustainable entity</p>
</blockquote>
<blockquote>
<p>Remember 2008? 2009? The nuclear winters of funding? Those were some of our best years! Profits insulated us from jittery investors, and our customers still kept paying for Basecamp.</p>
</blockquote>
<blockquote>
<p>We’re still an LLC at Basecamp. The simplest pass-through structure you can have at our size. That means fewer lawyers, fewer accountants, less paperwork, less hoop-jumping. Our books are so silly simple, our operating agreement hasn’t changed in a decade.</p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li>[[2.Wiki/Basecamp]]</li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/funding" rel="noopener noreferrer">Funding</a></li>
</ul>


10:45:07.192 [debug] l:len=1

10:45:07.192 [debug] l:buf=061:<h1>why we choose profit</h1>
<p><a href="https://m.signalvnoise.com/why-we-choose-profit/" rel="noopener noreferrer">https://m.signalvnoise.com/why-we-choose-profit/</a></p>
<blockquote>
<p>FU money isn’t about buying an island, it’s about being an island — your own sustainable entity</p>
</blockquote>
<blockquote>
<p>Remember 2008? 2009? The nuclear winters of funding? Those were some of our best years! Profits insulated us from jittery investors, and our customers still kept paying for Basecamp.</p>
</blockquote>
<blockquote>
<p>We’re still an LLC at Basecamp. The simplest pass-through structure you can have at our size. That means fewer lawyers, fewer accountants, less paperwork, less hoop-jumping. Our books are so silly simple, our operating agreement hasn’t changed in a decade.</p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li>[[2.Wiki/Basecamp]]</li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/funding" rel="noopener noreferrer">Funding</a></li>
</ul>


10:45:07.192 [debug] l:len=10

10:45:07.192 [debug] l:buf=61:<h1>why we choose profit</h1>
<p><a href="https://m.signalvnoise.com/why-we-choose-profit/" rel="noopener noreferrer">https://m.signalvnoise.com/why-we-choose-profit/</a></p>
<blockquote>
<p>FU money isn’t about buying an island, it’s about being an island — your own sustainable entity</p>
</blockquote>
<blockquote>
<p>Remember 2008? 2009? The nuclear winters of funding? Those were some of our best years! Profits insulated us from jittery investors, and our customers still kept paying for Basecamp.</p>
</blockquote>
<blockquote>
<p>We’re still an LLC at Basecamp. The simplest pass-through structure you can have at our size. That means fewer lawyers, fewer accountants, less paperwork, less hoop-jumping. Our books are so silly simple, our operating agreement hasn’t changed in a decade.</p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li>[[2.Wiki/Basecamp]]</li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/funding" rel="noopener noreferrer">Funding</a></li>
</ul>


10:45:07.192 [debug] l:len=106

10:45:07.192 [debug] l:buf=1:<h1>why we choose profit</h1>
<p><a href="https://m.signalvnoise.com/why-we-choose-profit/" rel="noopener noreferrer">https://m.signalvnoise.com/why-we-choose-profit/</a></p>
<blockquote>
<p>FU money isn’t about buying an island, it’s about being an island — your own sustainable entity</p>
</blockquote>
<blockquote>
<p>Remember 2008? 2009? The nuclear winters of funding? Those were some of our best years! Profits insulated us from jittery investors, and our customers still kept paying for Basecamp.</p>
</blockquote>
<blockquote>
<p>We’re still an LLC at Basecamp. The simplest pass-through structure you can have at our size. That means fewer lawyers, fewer accountants, less paperwork, less hoop-jumping. Our books are so silly simple, our operating agreement hasn’t changed in a decade.</p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li>[[2.Wiki/Basecamp]]</li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/funding" rel="noopener noreferrer">Funding</a></li>
</ul>


10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf empty

10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf=229:<h1>Demand Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.192 [debug] l:len=2

10:45:07.192 [debug] l:buf=29:<h1>Demand Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.192 [debug] l:len=22

10:45:07.192 [debug] l:buf=9:<h1>Demand Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf empty

10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf=724:<h1>Selling requires a Moment of Struggle</h1>
<p>People will never want to buy something if they don't have a moment of struggle. If they aren't struggling with something they probably don't need it.</p>
<p>This is why selling <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is hard, it doesn't really solve a, "job to be done". Nobody needs "static typing" that's a feature. They need less errors that loose people's data? Yeah that might be true.</p>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>
<p>#jtbd</p>


10:45:07.192 [debug] l:len=7

10:45:07.192 [debug] l:buf=24:<h1>Selling requires a Moment of Struggle</h1>
<p>People will never want to buy something if they don't have a moment of struggle. If they aren't struggling with something they probably don't need it.</p>
<p>This is why selling <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is hard, it doesn't really solve a, "job to be done". Nobody needs "static typing" that's a feature. They need less errors that loose people's data? Yeah that might be true.</p>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>
<p>#jtbd</p>


10:45:07.192 [debug] l:len=72

10:45:07.192 [debug] l:buf=4:<h1>Selling requires a Moment of Struggle</h1>
<p>People will never want to buy something if they don't have a moment of struggle. If they aren't struggling with something they probably don't need it.</p>
<p>This is why selling <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is hard, it doesn't really solve a, "job to be done". Nobody needs "static typing" that's a feature. They need less errors that loose people's data? Yeah that might be true.</p>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a></li>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>
<p>#jtbd</p>


10:45:07.192 [debug] l:len=

10:45:07.192 [debug] l:buf empty

10:45:07.193 [debug] l:len=

10:45:07.193 [debug] l:buf=2257:<h1>Speare</h1>
<p><em>URL</em>: <a href="https://app.speare.com/" rel="noopener noreferrer">https://app.speare.com/</a></p>
<p>This is a cool app that calls itself a <a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processor</a> as opposed to a "word processor".</p>
<p>It looks kind of like this:</p>
<hr>
<h2><a href="http://localhost:5000/speare--overview.png" rel="noopener noreferrer">Speare--overview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It's kind of hard to show how it works in just a picture, but basically every paragraph is a "card" thing. They can be nested and nested things can be dragged from place to place.</p>
<h3>Turning into a document</h3>
<p>Interestingly it makes it easy to turn into a blog post by pushing the page button at the top of a swim lane:</p>
<hr>
<h2><a href="http://localhost:5000/speare--to-a-document.png" rel="noopener noreferrer">Speare--to-a-document</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Revise: Rewording a thought non-destructively</h3>
<p>Another unique idea is that you can easily make alternatives to a thought by right clicking on a card and clicking the revise button:</p>
<hr>
<h2><a href="http://localhost:5000/speare--revisions.png" rel="noopener noreferrer">Speare--revisions</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Insert at a particular spot</h3>
<p>Another Interesting although not unique thing is the ability to insert stuff at a particular spot using dragging:</p>
<hr>
<h2><a href="http://localhost:5000/speare--drag-to-insert.gif" rel="noopener noreferrer">Speare--drag-to-insert</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Sentence Splitting</h3>
<p>In Speare you can split a sentence into sub-cards and re-arrange it.</p>
<hr>
<h2><a href="http://localhost:5000/speare--sentence-splititng.gif" rel="noopener noreferrer">Speare--sentence-splititng</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.193 [debug] l:len=2

10:45:07.193 [debug] l:buf=257:<h1>Speare</h1>
<p><em>URL</em>: <a href="https://app.speare.com/" rel="noopener noreferrer">https://app.speare.com/</a></p>
<p>This is a cool app that calls itself a <a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processor</a> as opposed to a "word processor".</p>
<p>It looks kind of like this:</p>
<hr>
<h2><a href="http://localhost:5000/speare--overview.png" rel="noopener noreferrer">Speare--overview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It's kind of hard to show how it works in just a picture, but basically every paragraph is a "card" thing. They can be nested and nested things can be dragged from place to place.</p>
<h3>Turning into a document</h3>
<p>Interestingly it makes it easy to turn into a blog post by pushing the page button at the top of a swim lane:</p>
<hr>
<h2><a href="http://localhost:5000/speare--to-a-document.png" rel="noopener noreferrer">Speare--to-a-document</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Revise: Rewording a thought non-destructively</h3>
<p>Another unique idea is that you can easily make alternatives to a thought by right clicking on a card and clicking the revise button:</p>
<hr>
<h2><a href="http://localhost:5000/speare--revisions.png" rel="noopener noreferrer">Speare--revisions</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Insert at a particular spot</h3>
<p>Another Interesting although not unique thing is the ability to insert stuff at a particular spot using dragging:</p>
<hr>
<h2><a href="http://localhost:5000/speare--drag-to-insert.gif" rel="noopener noreferrer">Speare--drag-to-insert</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Sentence Splitting</h3>
<p>In Speare you can split a sentence into sub-cards and re-arrange it.</p>
<hr>
<h2><a href="http://localhost:5000/speare--sentence-splititng.gif" rel="noopener noreferrer">Speare--sentence-splititng</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.193 [debug] l:len=22

10:45:07.193 [debug] l:buf=57:<h1>Speare</h1>
<p><em>URL</em>: <a href="https://app.speare.com/" rel="noopener noreferrer">https://app.speare.com/</a></p>
<p>This is a cool app that calls itself a <a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processor</a> as opposed to a "word processor".</p>
<p>It looks kind of like this:</p>
<hr>
<h2><a href="http://localhost:5000/speare--overview.png" rel="noopener noreferrer">Speare--overview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It's kind of hard to show how it works in just a picture, but basically every paragraph is a "card" thing. They can be nested and nested things can be dragged from place to place.</p>
<h3>Turning into a document</h3>
<p>Interestingly it makes it easy to turn into a blog post by pushing the page button at the top of a swim lane:</p>
<hr>
<h2><a href="http://localhost:5000/speare--to-a-document.png" rel="noopener noreferrer">Speare--to-a-document</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Revise: Rewording a thought non-destructively</h3>
<p>Another unique idea is that you can easily make alternatives to a thought by right clicking on a card and clicking the revise button:</p>
<hr>
<h2><a href="http://localhost:5000/speare--revisions.png" rel="noopener noreferrer">Speare--revisions</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Insert at a particular spot</h3>
<p>Another Interesting although not unique thing is the ability to insert stuff at a particular spot using dragging:</p>
<hr>
<h2><a href="http://localhost:5000/speare--drag-to-insert.gif" rel="noopener noreferrer">Speare--drag-to-insert</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Sentence Splitting</h3>
<p>In Speare you can split a sentence into sub-cards and re-arrange it.</p>
<hr>
<h2><a href="http://localhost:5000/speare--sentence-splititng.gif" rel="noopener noreferrer">Speare--sentence-splititng</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.193 [debug] l:len=225

10:45:07.193 [debug] l:buf=7:<h1>Speare</h1>
<p><em>URL</em>: <a href="https://app.speare.com/" rel="noopener noreferrer">https://app.speare.com/</a></p>
<p>This is a cool app that calls itself a <a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processor</a> as opposed to a "word processor".</p>
<p>It looks kind of like this:</p>
<hr>
<h2><a href="http://localhost:5000/speare--overview.png" rel="noopener noreferrer">Speare--overview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It's kind of hard to show how it works in just a picture, but basically every paragraph is a "card" thing. They can be nested and nested things can be dragged from place to place.</p>
<h3>Turning into a document</h3>
<p>Interestingly it makes it easy to turn into a blog post by pushing the page button at the top of a swim lane:</p>
<hr>
<h2><a href="http://localhost:5000/speare--to-a-document.png" rel="noopener noreferrer">Speare--to-a-document</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Revise: Rewording a thought non-destructively</h3>
<p>Another unique idea is that you can easily make alternatives to a thought by right clicking on a card and clicking the revise button:</p>
<hr>
<h2><a href="http://localhost:5000/speare--revisions.png" rel="noopener noreferrer">Speare--revisions</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Insert at a particular spot</h3>
<p>Another Interesting although not unique thing is the ability to insert stuff at a particular spot using dragging:</p>
<hr>
<h2><a href="http://localhost:5000/speare--drag-to-insert.gif" rel="noopener noreferrer">Speare--drag-to-insert</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Sentence Splitting</h3>
<p>In Speare you can split a sentence into sub-cards and re-arrange it.</p>
<hr>
<h2><a href="http://localhost:5000/speare--sentence-splititng.gif" rel="noopener noreferrer">Speare--sentence-splititng</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.193 [debug] l:len=

10:45:07.193 [debug] l:buf empty

10:45:07.193 [debug] l:len=

10:45:07.193 [debug] l:buf=85:<h1>Business success</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.193 [debug] l:len=8

10:45:07.193 [debug] l:buf=5:<h1>Business success</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.193 [debug] l:len=

10:45:07.193 [debug] l:buf empty

10:45:07.193 [debug] l:len=

10:45:07.193 [debug] l:buf=386:<h1>Chronological Order V.S. Reverse Chronological Order</h1>
<p>The idea is in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> everything is <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> to emulate a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>".</p>


10:45:07.193 [debug] l:len=3

10:45:07.193 [debug] l:buf=86:<h1>Chronological Order V.S. Reverse Chronological Order</h1>
<p>The idea is in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> everything is <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> to emulate a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>".</p>


10:45:07.193 [debug] l:len=38

10:45:07.193 [debug] l:buf=6:<h1>Chronological Order V.S. Reverse Chronological Order</h1>
<p>The idea is in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> everything is <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a> to emulate a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>".</p>


10:45:07.193 [debug] l:len=

10:45:07.194 [debug] l:buf empty

10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf=332:<h1>product</h1>
<p>Often the department that handles <a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a> in an <a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a>. Also often does <a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a>.</p>


10:45:07.194 [debug] l:len=3

10:45:07.194 [debug] l:buf=32:<h1>product</h1>
<p>Often the department that handles <a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a> in an <a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a>. Also often does <a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a>.</p>


10:45:07.194 [debug] l:len=33

10:45:07.194 [debug] l:buf=2:<h1>product</h1>
<p>Often the department that handles <a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a> in an <a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a>. Also often does <a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a>.</p>


10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf empty

10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf=333:<h1>option in finance</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	said:</p>
<blockquote>
<p>It's definitely worth learning what an option in finance is and looking at all the many ways in every day life that it applies. Extremely useful broadly applicable concept.</p>
</blockquote>


10:45:07.194 [debug] l:len=3

10:45:07.194 [debug] l:buf=33:<h1>option in finance</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	said:</p>
<blockquote>
<p>It's definitely worth learning what an option in finance is and looking at all the many ways in every day life that it applies. Extremely useful broadly applicable concept.</p>
</blockquote>


10:45:07.194 [debug] l:len=33

10:45:07.194 [debug] l:buf=3:<h1>option in finance</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	said:</p>
<blockquote>
<p>It's definitely worth learning what an option in finance is and looking at all the many ways in every day life that it applies. Extremely useful broadly applicable concept.</p>
</blockquote>


10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf empty

10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf=298:<h1>Slack is your real project management tool</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.194 [debug] l:len=2

10:45:07.194 [debug] l:buf=98:<h1>Slack is your real project management tool</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.194 [debug] l:len=29

10:45:07.194 [debug] l:buf=8:<h1>Slack is your real project management tool</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf empty

10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf=79:<h1>Automation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.194 [debug] l:len=7

10:45:07.194 [debug] l:buf=9:<h1>Automation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.194 [debug] l:len=

10:45:07.194 [debug] l:buf empty

10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf=512:<h1>topic fragmentation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.195 [debug] l:len=5

10:45:07.195 [debug] l:buf=12:<h1>topic fragmentation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.195 [debug] l:len=51

10:45:07.195 [debug] l:buf=2:<h1>topic fragmentation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf empty

10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf=217:<h1>IMF Intro</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.195 [debug] l:len=2

10:45:07.195 [debug] l:buf=17:<h1>IMF Intro</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.195 [debug] l:len=21

10:45:07.195 [debug] l:buf=7:<h1>IMF Intro</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf empty

10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf=399:<h1>Attention is a limited resource</h1>
<p><a href="https://wordtothewise.com/2010/11/attention-is-a-limited-resource/" rel="noopener noreferrer">https://wordtothewise.com/2010/11/attention-is-a-limited-resource/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.195 [debug] l:len=3

10:45:07.195 [debug] l:buf=99:<h1>Attention is a limited resource</h1>
<p><a href="https://wordtothewise.com/2010/11/attention-is-a-limited-resource/" rel="noopener noreferrer">https://wordtothewise.com/2010/11/attention-is-a-limited-resource/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.195 [debug] l:len=39

10:45:07.195 [debug] l:buf=9:<h1>Attention is a limited resource</h1>
<p><a href="https://wordtothewise.com/2010/11/attention-is-a-limited-resource/" rel="noopener noreferrer">https://wordtothewise.com/2010/11/attention-is-a-limited-resource/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.195 [debug] l:len=

10:45:07.195 [debug] l:buf empty

10:45:07.196 [debug] l:len=

10:45:07.196 [debug] l:buf=79:<h1>Trust</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.196 [debug] l:len=7

10:45:07.196 [debug] l:buf=9:<h1>Trust</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.196 [debug] l:len=

10:45:07.196 [debug] l:buf empty

10:45:07.196 [debug] l:len=

10:45:07.196 [debug] l:buf=2666:<h1>No right turns (Your Undivided Attention Podcast Notes)</h1>
<p>This podcast talks about cassinos and the way they're desiged. People who gamble are sucked into the slot machine, the most popular machine, for hours. They feel a weightlessness, they even sometimes forget they're in their body. They Are drawn by it's strong magnetic pull.</p>
<p>What makes them so intreinging? What pulls people in so hard? The design of the machine exploits the way the human brain works. It's <em>hacking our biology, it's hacking <strong>us</strong></em>.</p>
<p>When they get into a cassino, it does everything in it's power to lead them along and, most importantly, stop them from thinking or questioning what they are doing. The capets wind around and focus in on the slot machines, they lead you to them using their visual and spacial design. The ceilings are designed to be low enough they give you a cacoon feeling, even the room is designed to avoid distracting you with sound of other people. Then in this chair you sit and only have to lift one finger to give your money away. It leads you along with it's intermitten stimulation, teasing you, taunting you, giving you money then taking it away, some more money, take it away. Naturally the net amount is always negitive. It uses sounds and lights and the promise of winning to suck you in.</p>
<p>"No right turns" applies to carpets because if you have a hard sharp line it breaks you out of that concentration and forces you to start thinking and</p>
<p>This is really not all that unlike social media, video services, and smartphones in general. They are all designed, subtly without you realizing it, to keep you in that flow.</p>
<p>Some examples of this:</p>
<ul>
<li>Infinite scroll. Not hitting that "next page" button means they don't stop and think... Should I continue?</li>
<li>Auto loading Next Episode in Netflix (and every one). Again, the show loads before you can make a concious choice to stop.</li>
<li>The mysteroius red number.</li>
</ul>
<h1>Design</h1>
<p>Anti-patterns</p>
<ol>
<li><strong>Lonliness</strong>, nobody to question your decisions</li>
<li><strong>Fast-feedback</strong>, you get those dopimine hits really fast. Batched notifications at the end of the day.</li>
<li><strong>Random-rewards and Ambiguity</strong>: Your phone buzzes, who is it? House on fire, or Youtube with new videos.</li>
<li><strong>Continuity with non-resolution</strong> (no end) Slowdown the farther down the list you go. Randomly slower so you can't detect it.</li>
</ol>
<blockquote>
<p>Don't tie the cat to the bacon. Not better notifications settings, just make it less distracting.</p>
</blockquote>


10:45:07.196 [debug] l:len=2

10:45:07.196 [debug] l:buf=666:<h1>No right turns (Your Undivided Attention Podcast Notes)</h1>
<p>This podcast talks about cassinos and the way they're desiged. People who gamble are sucked into the slot machine, the most popular machine, for hours. They feel a weightlessness, they even sometimes forget they're in their body. They Are drawn by it's strong magnetic pull.</p>
<p>What makes them so intreinging? What pulls people in so hard? The design of the machine exploits the way the human brain works. It's <em>hacking our biology, it's hacking <strong>us</strong></em>.</p>
<p>When they get into a cassino, it does everything in it's power to lead them along and, most importantly, stop them from thinking or questioning what they are doing. The capets wind around and focus in on the slot machines, they lead you to them using their visual and spacial design. The ceilings are designed to be low enough they give you a cacoon feeling, even the room is designed to avoid distracting you with sound of other people. Then in this chair you sit and only have to lift one finger to give your money away. It leads you along with it's intermitten stimulation, teasing you, taunting you, giving you money then taking it away, some more money, take it away. Naturally the net amount is always negitive. It uses sounds and lights and the promise of winning to suck you in.</p>
<p>"No right turns" applies to carpets because if you have a hard sharp line it breaks you out of that concentration and forces you to start thinking and</p>
<p>This is really not all that unlike social media, video services, and smartphones in general. They are all designed, subtly without you realizing it, to keep you in that flow.</p>
<p>Some examples of this:</p>
<ul>
<li>Infinite scroll. Not hitting that "next page" button means they don't stop and think... Should I continue?</li>
<li>Auto loading Next Episode in Netflix (and every one). Again, the show loads before you can make a concious choice to stop.</li>
<li>The mysteroius red number.</li>
</ul>
<h1>Design</h1>
<p>Anti-patterns</p>
<ol>
<li><strong>Lonliness</strong>, nobody to question your decisions</li>
<li><strong>Fast-feedback</strong>, you get those dopimine hits really fast. Batched notifications at the end of the day.</li>
<li><strong>Random-rewards and Ambiguity</strong>: Your phone buzzes, who is it? House on fire, or Youtube with new videos.</li>
<li><strong>Continuity with non-resolution</strong> (no end) Slowdown the farther down the list you go. Randomly slower so you can't detect it.</li>
</ol>
<blockquote>
<p>Don't tie the cat to the bacon. Not better notifications settings, just make it less distracting.</p>
</blockquote>


10:45:07.196 [debug] l:len=26

10:45:07.196 [debug] l:buf=66:<h1>No right turns (Your Undivided Attention Podcast Notes)</h1>
<p>This podcast talks about cassinos and the way they're desiged. People who gamble are sucked into the slot machine, the most popular machine, for hours. They feel a weightlessness, they even sometimes forget they're in their body. They Are drawn by it's strong magnetic pull.</p>
<p>What makes them so intreinging? What pulls people in so hard? The design of the machine exploits the way the human brain works. It's <em>hacking our biology, it's hacking <strong>us</strong></em>.</p>
<p>When they get into a cassino, it does everything in it's power to lead them along and, most importantly, stop them from thinking or questioning what they are doing. The capets wind around and focus in on the slot machines, they lead you to them using their visual and spacial design. The ceilings are designed to be low enough they give you a cacoon feeling, even the room is designed to avoid distracting you with sound of other people. Then in this chair you sit and only have to lift one finger to give your money away. It leads you along with it's intermitten stimulation, teasing you, taunting you, giving you money then taking it away, some more money, take it away. Naturally the net amount is always negitive. It uses sounds and lights and the promise of winning to suck you in.</p>
<p>"No right turns" applies to carpets because if you have a hard sharp line it breaks you out of that concentration and forces you to start thinking and</p>
<p>This is really not all that unlike social media, video services, and smartphones in general. They are all designed, subtly without you realizing it, to keep you in that flow.</p>
<p>Some examples of this:</p>
<ul>
<li>Infinite scroll. Not hitting that "next page" button means they don't stop and think... Should I continue?</li>
<li>Auto loading Next Episode in Netflix (and every one). Again, the show loads before you can make a concious choice to stop.</li>
<li>The mysteroius red number.</li>
</ul>
<h1>Design</h1>
<p>Anti-patterns</p>
<ol>
<li><strong>Lonliness</strong>, nobody to question your decisions</li>
<li><strong>Fast-feedback</strong>, you get those dopimine hits really fast. Batched notifications at the end of the day.</li>
<li><strong>Random-rewards and Ambiguity</strong>: Your phone buzzes, who is it? House on fire, or Youtube with new videos.</li>
<li><strong>Continuity with non-resolution</strong> (no end) Slowdown the farther down the list you go. Randomly slower so you can't detect it.</li>
</ol>
<blockquote>
<p>Don't tie the cat to the bacon. Not better notifications settings, just make it less distracting.</p>
</blockquote>


10:45:07.196 [debug] l:len=266

10:45:07.196 [debug] l:buf=6:<h1>No right turns (Your Undivided Attention Podcast Notes)</h1>
<p>This podcast talks about cassinos and the way they're desiged. People who gamble are sucked into the slot machine, the most popular machine, for hours. They feel a weightlessness, they even sometimes forget they're in their body. They Are drawn by it's strong magnetic pull.</p>
<p>What makes them so intreinging? What pulls people in so hard? The design of the machine exploits the way the human brain works. It's <em>hacking our biology, it's hacking <strong>us</strong></em>.</p>
<p>When they get into a cassino, it does everything in it's power to lead them along and, most importantly, stop them from thinking or questioning what they are doing. The capets wind around and focus in on the slot machines, they lead you to them using their visual and spacial design. The ceilings are designed to be low enough they give you a cacoon feeling, even the room is designed to avoid distracting you with sound of other people. Then in this chair you sit and only have to lift one finger to give your money away. It leads you along with it's intermitten stimulation, teasing you, taunting you, giving you money then taking it away, some more money, take it away. Naturally the net amount is always negitive. It uses sounds and lights and the promise of winning to suck you in.</p>
<p>"No right turns" applies to carpets because if you have a hard sharp line it breaks you out of that concentration and forces you to start thinking and</p>
<p>This is really not all that unlike social media, video services, and smartphones in general. They are all designed, subtly without you realizing it, to keep you in that flow.</p>
<p>Some examples of this:</p>
<ul>
<li>Infinite scroll. Not hitting that "next page" button means they don't stop and think... Should I continue?</li>
<li>Auto loading Next Episode in Netflix (and every one). Again, the show loads before you can make a concious choice to stop.</li>
<li>The mysteroius red number.</li>
</ul>
<h1>Design</h1>
<p>Anti-patterns</p>
<ol>
<li><strong>Lonliness</strong>, nobody to question your decisions</li>
<li><strong>Fast-feedback</strong>, you get those dopimine hits really fast. Batched notifications at the end of the day.</li>
<li><strong>Random-rewards and Ambiguity</strong>: Your phone buzzes, who is it? House on fire, or Youtube with new videos.</li>
<li><strong>Continuity with non-resolution</strong> (no end) Slowdown the farther down the list you go. Randomly slower so you can't detect it.</li>
</ol>
<blockquote>
<p>Don't tie the cat to the bacon. Not better notifications settings, just make it less distracting.</p>
</blockquote>


10:45:07.196 [debug] l:len=

10:45:07.196 [debug] l:buf empty

10:45:07.197 [debug] l:len=

10:45:07.197 [debug] l:buf=4918:<h1>Slack's design of it's input box V</h1>
<p>Slack's input box is designed for <a href="http://localhost:5000/short-term-thinking" rel="noopener noreferrer">short term thinking</a> and make it as easy as possible to send messages as fast as possible (to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>).</p>
<h2>Slacks Input box</h2>
<p>Let's break it down:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-4.png" rel="noopener noreferrer">Pasted image 4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>The fact that all you have to do is push "enter" makes it faster to send <a href="http://localhost:5000/rapid-fire-messages-then-send-one-well-thought-out-one" rel="noopener noreferrer">rapid fire messages then send one well thought out one</a>. It makes it hard to write multi-paragraph messages like you would normally do in <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> which means you have, it's basically only "<a href="http://localhost:5000/super-users" rel="noopener noreferrer">super users</a>" that realize that this is even possible.</li>
<li>The size of the text box encourages you to only write a few lines of text, and at a certain point even stops growing (about 20 lines on a normal mac screen or when it starts taking up 2/3rds of the screen)</li>
<li>There's an indicator when someone is about to send a message which effectively <strong>forces you to send your message before it becomes irrelevant</strong> (not helped by the fact that)</li>
<li>There's new messages popping up as you're trying to send yours pushing you to rush your sending as well.</li>
<li>(not highlighted) there is some formatting options for text, but there's no place for headings which are required to help make long messages make sense.</li>
<li>There's no <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">title</a></li>
<li>Only about ~10 messages can be seen without scrolling, far less if someone posts an image (see: <a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a>)</li>
<li>Images don't show inline, but always get posted above the message, this forces you to break up your message if you wanted an image in the middle which means people could interject before you have a full thought out</li>
</ol>
<h2>Basecamp's Input box(es)</h2>
<p>Basecamp has multiple different ways and places you can write content. Let's look at the most different first, the Message board post:</p>
<h3>Basecamp Message Board Post</h3>
<p>If you want to write an <a href="http://localhost:5000/announcements" rel="noopener noreferrer">annoucment</a> or <em>start</em> a new <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic</a> then it looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-5.png" rel="noopener noreferrer">Pasted image 5</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>It has a clear title that will be used to distinguish it and guide the discussion</li>
<li>It has a full page worth of room to write out what you want</li>
<li>There's no indication that other people are also writing announcements or other distractions that force you to "<em>hurry up and post!</em>".</li>
<li>There's headers which allows you to create sections which is useful for longer posts.</li>
<li>pushing "enter" doesn't send a message but do a newline, allowing for more methodical sending.</li>
<li>The box grows infinitely and you never have to scroll inside a small box to see your whole message.</li>
</ol>
<h3>Basecamp Comments</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-6.png" rel="noopener noreferrer">Pasted image 6</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>The box is very big by default encouraging you to write more</li>
<li>pushing enter doesn't send, but is a newline</li>
<li>headers and many formatting options are available.</li>
<li>Images show inline</li>
<li>Other comments do show up in realtime but there's no typing indicators to rush you.</li>
<li>The comment hangs off a message board post or todo with a title which scopes your comment to one discussion. This helps you get your thought out without any fear that the channel will go a different direction before you have the chance to post.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.197 [debug] l:len=4

10:45:07.197 [debug] l:buf=918:<h1>Slack's design of it's input box V</h1>
<p>Slack's input box is designed for <a href="http://localhost:5000/short-term-thinking" rel="noopener noreferrer">short term thinking</a> and make it as easy as possible to send messages as fast as possible (to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>).</p>
<h2>Slacks Input box</h2>
<p>Let's break it down:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-4.png" rel="noopener noreferrer">Pasted image 4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>The fact that all you have to do is push "enter" makes it faster to send <a href="http://localhost:5000/rapid-fire-messages-then-send-one-well-thought-out-one" rel="noopener noreferrer">rapid fire messages then send one well thought out one</a>. It makes it hard to write multi-paragraph messages like you would normally do in <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> which means you have, it's basically only "<a href="http://localhost:5000/super-users" rel="noopener noreferrer">super users</a>" that realize that this is even possible.</li>
<li>The size of the text box encourages you to only write a few lines of text, and at a certain point even stops growing (about 20 lines on a normal mac screen or when it starts taking up 2/3rds of the screen)</li>
<li>There's an indicator when someone is about to send a message which effectively <strong>forces you to send your message before it becomes irrelevant</strong> (not helped by the fact that)</li>
<li>There's new messages popping up as you're trying to send yours pushing you to rush your sending as well.</li>
<li>(not highlighted) there is some formatting options for text, but there's no place for headings which are required to help make long messages make sense.</li>
<li>There's no <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">title</a></li>
<li>Only about ~10 messages can be seen without scrolling, far less if someone posts an image (see: <a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a>)</li>
<li>Images don't show inline, but always get posted above the message, this forces you to break up your message if you wanted an image in the middle which means people could interject before you have a full thought out</li>
</ol>
<h2>Basecamp's Input box(es)</h2>
<p>Basecamp has multiple different ways and places you can write content. Let's look at the most different first, the Message board post:</p>
<h3>Basecamp Message Board Post</h3>
<p>If you want to write an <a href="http://localhost:5000/announcements" rel="noopener noreferrer">annoucment</a> or <em>start</em> a new <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic</a> then it looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-5.png" rel="noopener noreferrer">Pasted image 5</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>It has a clear title that will be used to distinguish it and guide the discussion</li>
<li>It has a full page worth of room to write out what you want</li>
<li>There's no indication that other people are also writing announcements or other distractions that force you to "<em>hurry up and post!</em>".</li>
<li>There's headers which allows you to create sections which is useful for longer posts.</li>
<li>pushing "enter" doesn't send a message but do a newline, allowing for more methodical sending.</li>
<li>The box grows infinitely and you never have to scroll inside a small box to see your whole message.</li>
</ol>
<h3>Basecamp Comments</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-6.png" rel="noopener noreferrer">Pasted image 6</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>The box is very big by default encouraging you to write more</li>
<li>pushing enter doesn't send, but is a newline</li>
<li>headers and many formatting options are available.</li>
<li>Images show inline</li>
<li>Other comments do show up in realtime but there's no typing indicators to rush you.</li>
<li>The comment hangs off a message board post or todo with a title which scopes your comment to one discussion. This helps you get your thought out without any fear that the channel will go a different direction before you have the chance to post.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.197 [debug] l:len=49

10:45:07.197 [debug] l:buf=18:<h1>Slack's design of it's input box V</h1>
<p>Slack's input box is designed for <a href="http://localhost:5000/short-term-thinking" rel="noopener noreferrer">short term thinking</a> and make it as easy as possible to send messages as fast as possible (to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>).</p>
<h2>Slacks Input box</h2>
<p>Let's break it down:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-4.png" rel="noopener noreferrer">Pasted image 4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>The fact that all you have to do is push "enter" makes it faster to send <a href="http://localhost:5000/rapid-fire-messages-then-send-one-well-thought-out-one" rel="noopener noreferrer">rapid fire messages then send one well thought out one</a>. It makes it hard to write multi-paragraph messages like you would normally do in <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> which means you have, it's basically only "<a href="http://localhost:5000/super-users" rel="noopener noreferrer">super users</a>" that realize that this is even possible.</li>
<li>The size of the text box encourages you to only write a few lines of text, and at a certain point even stops growing (about 20 lines on a normal mac screen or when it starts taking up 2/3rds of the screen)</li>
<li>There's an indicator when someone is about to send a message which effectively <strong>forces you to send your message before it becomes irrelevant</strong> (not helped by the fact that)</li>
<li>There's new messages popping up as you're trying to send yours pushing you to rush your sending as well.</li>
<li>(not highlighted) there is some formatting options for text, but there's no place for headings which are required to help make long messages make sense.</li>
<li>There's no <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">title</a></li>
<li>Only about ~10 messages can be seen without scrolling, far less if someone posts an image (see: <a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a>)</li>
<li>Images don't show inline, but always get posted above the message, this forces you to break up your message if you wanted an image in the middle which means people could interject before you have a full thought out</li>
</ol>
<h2>Basecamp's Input box(es)</h2>
<p>Basecamp has multiple different ways and places you can write content. Let's look at the most different first, the Message board post:</p>
<h3>Basecamp Message Board Post</h3>
<p>If you want to write an <a href="http://localhost:5000/announcements" rel="noopener noreferrer">annoucment</a> or <em>start</em> a new <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic</a> then it looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-5.png" rel="noopener noreferrer">Pasted image 5</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>It has a clear title that will be used to distinguish it and guide the discussion</li>
<li>It has a full page worth of room to write out what you want</li>
<li>There's no indication that other people are also writing announcements or other distractions that force you to "<em>hurry up and post!</em>".</li>
<li>There's headers which allows you to create sections which is useful for longer posts.</li>
<li>pushing "enter" doesn't send a message but do a newline, allowing for more methodical sending.</li>
<li>The box grows infinitely and you never have to scroll inside a small box to see your whole message.</li>
</ol>
<h3>Basecamp Comments</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-6.png" rel="noopener noreferrer">Pasted image 6</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>The box is very big by default encouraging you to write more</li>
<li>pushing enter doesn't send, but is a newline</li>
<li>headers and many formatting options are available.</li>
<li>Images show inline</li>
<li>Other comments do show up in realtime but there's no typing indicators to rush you.</li>
<li>The comment hangs off a message board post or todo with a title which scopes your comment to one discussion. This helps you get your thought out without any fear that the channel will go a different direction before you have the chance to post.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.197 [debug] l:len=491

10:45:07.197 [debug] l:buf=8:<h1>Slack's design of it's input box V</h1>
<p>Slack's input box is designed for <a href="http://localhost:5000/short-term-thinking" rel="noopener noreferrer">short term thinking</a> and make it as easy as possible to send messages as fast as possible (to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>).</p>
<h2>Slacks Input box</h2>
<p>Let's break it down:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-4.png" rel="noopener noreferrer">Pasted image 4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>The fact that all you have to do is push "enter" makes it faster to send <a href="http://localhost:5000/rapid-fire-messages-then-send-one-well-thought-out-one" rel="noopener noreferrer">rapid fire messages then send one well thought out one</a>. It makes it hard to write multi-paragraph messages like you would normally do in <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> which means you have, it's basically only "<a href="http://localhost:5000/super-users" rel="noopener noreferrer">super users</a>" that realize that this is even possible.</li>
<li>The size of the text box encourages you to only write a few lines of text, and at a certain point even stops growing (about 20 lines on a normal mac screen or when it starts taking up 2/3rds of the screen)</li>
<li>There's an indicator when someone is about to send a message which effectively <strong>forces you to send your message before it becomes irrelevant</strong> (not helped by the fact that)</li>
<li>There's new messages popping up as you're trying to send yours pushing you to rush your sending as well.</li>
<li>(not highlighted) there is some formatting options for text, but there's no place for headings which are required to help make long messages make sense.</li>
<li>There's no <a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">title</a></li>
<li>Only about ~10 messages can be seen without scrolling, far less if someone posts an image (see: <a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a>)</li>
<li>Images don't show inline, but always get posted above the message, this forces you to break up your message if you wanted an image in the middle which means people could interject before you have a full thought out</li>
</ol>
<h2>Basecamp's Input box(es)</h2>
<p>Basecamp has multiple different ways and places you can write content. Let's look at the most different first, the Message board post:</p>
<h3>Basecamp Message Board Post</h3>
<p>If you want to write an <a href="http://localhost:5000/announcements" rel="noopener noreferrer">annoucment</a> or <em>start</em> a new <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic</a> then it looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-5.png" rel="noopener noreferrer">Pasted image 5</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>It has a clear title that will be used to distinguish it and guide the discussion</li>
<li>It has a full page worth of room to write out what you want</li>
<li>There's no indication that other people are also writing announcements or other distractions that force you to "<em>hurry up and post!</em>".</li>
<li>There's headers which allows you to create sections which is useful for longer posts.</li>
<li>pushing "enter" doesn't send a message but do a newline, allowing for more methodical sending.</li>
<li>The box grows infinitely and you never have to scroll inside a small box to see your whole message.</li>
</ol>
<h3>Basecamp Comments</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-6.png" rel="noopener noreferrer">Pasted image 6</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Things to note:</p>
<ol>
<li>The box is very big by default encouraging you to write more</li>
<li>pushing enter doesn't send, but is a newline</li>
<li>headers and many formatting options are available.</li>
<li>Images show inline</li>
<li>Other comments do show up in realtime but there's no typing indicators to rush you.</li>
<li>The comment hangs off a message board post or todo with a title which scopes your comment to one discussion. This helps you get your thought out without any fear that the channel will go a different direction before you have the chance to post.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.197 [debug] l:len=

10:45:07.197 [debug] l:buf empty

10:45:07.197 [debug] l:len=

10:45:07.197 [debug] l:buf=594:<h1>topic</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>For instance a topic could be, "Is a hotdog a sandwitch"</p>
<p>See: <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></p>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
</ul>


10:45:07.197 [debug] l:len=5

10:45:07.197 [debug] l:buf=94:<h1>topic</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>For instance a topic could be, "Is a hotdog a sandwitch"</p>
<p>See: <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></p>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
</ul>


10:45:07.197 [debug] l:len=59

10:45:07.197 [debug] l:buf=4:<h1>topic</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>For instance a topic could be, "Is a hotdog a sandwitch"</p>
<p>See: <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">on topic V.S. off topic</a></p>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
</ul>


10:45:07.197 [debug] l:len=

10:45:07.197 [debug] l:buf empty

10:45:07.197 [debug] l:len=

10:45:07.197 [debug] l:buf=343:<h1>simplistic</h1>
<p>When something is simplified so much that it's not good enough to solve the problem anymore, or at least not well.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.198 [debug] l:len=3

10:45:07.198 [debug] l:buf=43:<h1>simplistic</h1>
<p>When something is simplified so much that it's not good enough to solve the problem anymore, or at least not well.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.198 [debug] l:len=34

10:45:07.198 [debug] l:buf=3:<h1>simplistic</h1>
<p>When something is simplified so much that it's not good enough to solve the problem anymore, or at least not well.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.198 [debug] l:len=

10:45:07.198 [debug] l:buf empty

10:45:07.198 [debug] l:len=

10:45:07.198 [debug] l:buf=3334:<p>Elm V.S. JavaScript, a honest look</p>
<p><em>Edit:</em> looking back this is written when I was trying to rewrite stormcrow in <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a>. This is basically the first sizable project in Elm. As such, I think I gravitated far more towards new and fun abstractions. This I think accounts for most of my distraction. It happens with any new programing language or thing. Elm is actually all about fast feedback. It does force you to think about edge cases early but these are just educational experiences. They round out design. Do they slow down development? Probably. However they don't stop you from handling things badly. You can do that if you wish, you just tend to handle stuff better than when it's obvious and in your face. It forces you to put less faith in the idea that there will be no bugs. Gives you more empathy for that 1% that did happen to get the system in a bad state. Not only that, in Elm it gives you the power to actually change things confidently. Renaming? easy! pulling things out into a file, trivial. Changing how you store state to a more convenient data store? Completely protected.
Logic errors are mostly all that's left. That's so much less to worry about! The power to change, confidently.</p>
<p>This was a more stark contrast when I started to refactor the JS. it was horribly painful! Very error prone, had to constantly try it out and go back and forth between the browser and my editor. I still don't know if it works under all situations.</p>
<hr>
<p>Elm trades convince for stability. It forces you to handle every edge-case. This is great for the fact that the product will never break in certain ways, however there is a tradeoff. That is of making things take a little longer to make. Elm is less interactive and less GTD oriented. I find often I lean towards playing with the type system for hours rather than just hacking something together. Many times the simplest, even simplistic solution is the best because it avoids a huge amount of distraction that comes by over abstracting.</p>
<p>The main time that JavaScript becomes scary is when you refactor. In dynamic languages we don't rename things. Renaming something would be dreadful to the system. It's like impossible to find everything and very nerve racking!</p>
<p>However that matters little to the business. They need features and care little for the edge-cases. They don't want things to totally suck but they mostly need things to work in the happy path.</p>
<p>Nobody is going to care that much if they mess with a data picker for too long they can get it into a bad state, but they will care that they have a date picker. JS can give the latter a lot faster.</p>
<p>It's like the craigslist model. It's not optimal but it's good enough, and it's popular and <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>. It's not crazy smooth but if anything goes wrong it's on either party to handle that.</p>
<p>The thing I love about JS is that it lets you fail fast with little resistance to get to a solution. Being a dynamic language it lets you play in runtime very often. You can see it working or not working. You're using the interface that the user is using more often than not. You're doing integration testing all the time.</p>


10:45:07.198 [debug] l:len=3

10:45:07.198 [debug] l:buf=334:<p>Elm V.S. JavaScript, a honest look</p>
<p><em>Edit:</em> looking back this is written when I was trying to rewrite stormcrow in <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a>. This is basically the first sizable project in Elm. As such, I think I gravitated far more towards new and fun abstractions. This I think accounts for most of my distraction. It happens with any new programing language or thing. Elm is actually all about fast feedback. It does force you to think about edge cases early but these are just educational experiences. They round out design. Do they slow down development? Probably. However they don't stop you from handling things badly. You can do that if you wish, you just tend to handle stuff better than when it's obvious and in your face. It forces you to put less faith in the idea that there will be no bugs. Gives you more empathy for that 1% that did happen to get the system in a bad state. Not only that, in Elm it gives you the power to actually change things confidently. Renaming? easy! pulling things out into a file, trivial. Changing how you store state to a more convenient data store? Completely protected.
Logic errors are mostly all that's left. That's so much less to worry about! The power to change, confidently.</p>
<p>This was a more stark contrast when I started to refactor the JS. it was horribly painful! Very error prone, had to constantly try it out and go back and forth between the browser and my editor. I still don't know if it works under all situations.</p>
<hr>
<p>Elm trades convince for stability. It forces you to handle every edge-case. This is great for the fact that the product will never break in certain ways, however there is a tradeoff. That is of making things take a little longer to make. Elm is less interactive and less GTD oriented. I find often I lean towards playing with the type system for hours rather than just hacking something together. Many times the simplest, even simplistic solution is the best because it avoids a huge amount of distraction that comes by over abstracting.</p>
<p>The main time that JavaScript becomes scary is when you refactor. In dynamic languages we don't rename things. Renaming something would be dreadful to the system. It's like impossible to find everything and very nerve racking!</p>
<p>However that matters little to the business. They need features and care little for the edge-cases. They don't want things to totally suck but they mostly need things to work in the happy path.</p>
<p>Nobody is going to care that much if they mess with a data picker for too long they can get it into a bad state, but they will care that they have a date picker. JS can give the latter a lot faster.</p>
<p>It's like the craigslist model. It's not optimal but it's good enough, and it's popular and <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>. It's not crazy smooth but if anything goes wrong it's on either party to handle that.</p>
<p>The thing I love about JS is that it lets you fail fast with little resistance to get to a solution. Being a dynamic language it lets you play in runtime very often. You can see it working or not working. You're using the interface that the user is using more often than not. You're doing integration testing all the time.</p>


10:45:07.198 [debug] l:len=33

10:45:07.198 [debug] l:buf=34:<p>Elm V.S. JavaScript, a honest look</p>
<p><em>Edit:</em> looking back this is written when I was trying to rewrite stormcrow in <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a>. This is basically the first sizable project in Elm. As such, I think I gravitated far more towards new and fun abstractions. This I think accounts for most of my distraction. It happens with any new programing language or thing. Elm is actually all about fast feedback. It does force you to think about edge cases early but these are just educational experiences. They round out design. Do they slow down development? Probably. However they don't stop you from handling things badly. You can do that if you wish, you just tend to handle stuff better than when it's obvious and in your face. It forces you to put less faith in the idea that there will be no bugs. Gives you more empathy for that 1% that did happen to get the system in a bad state. Not only that, in Elm it gives you the power to actually change things confidently. Renaming? easy! pulling things out into a file, trivial. Changing how you store state to a more convenient data store? Completely protected.
Logic errors are mostly all that's left. That's so much less to worry about! The power to change, confidently.</p>
<p>This was a more stark contrast when I started to refactor the JS. it was horribly painful! Very error prone, had to constantly try it out and go back and forth between the browser and my editor. I still don't know if it works under all situations.</p>
<hr>
<p>Elm trades convince for stability. It forces you to handle every edge-case. This is great for the fact that the product will never break in certain ways, however there is a tradeoff. That is of making things take a little longer to make. Elm is less interactive and less GTD oriented. I find often I lean towards playing with the type system for hours rather than just hacking something together. Many times the simplest, even simplistic solution is the best because it avoids a huge amount of distraction that comes by over abstracting.</p>
<p>The main time that JavaScript becomes scary is when you refactor. In dynamic languages we don't rename things. Renaming something would be dreadful to the system. It's like impossible to find everything and very nerve racking!</p>
<p>However that matters little to the business. They need features and care little for the edge-cases. They don't want things to totally suck but they mostly need things to work in the happy path.</p>
<p>Nobody is going to care that much if they mess with a data picker for too long they can get it into a bad state, but they will care that they have a date picker. JS can give the latter a lot faster.</p>
<p>It's like the craigslist model. It's not optimal but it's good enough, and it's popular and <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>. It's not crazy smooth but if anything goes wrong it's on either party to handle that.</p>
<p>The thing I love about JS is that it lets you fail fast with little resistance to get to a solution. Being a dynamic language it lets you play in runtime very often. You can see it working or not working. You're using the interface that the user is using more often than not. You're doing integration testing all the time.</p>


10:45:07.198 [debug] l:len=333

10:45:07.198 [debug] l:buf=4:<p>Elm V.S. JavaScript, a honest look</p>
<p><em>Edit:</em> looking back this is written when I was trying to rewrite stormcrow in <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a>. This is basically the first sizable project in Elm. As such, I think I gravitated far more towards new and fun abstractions. This I think accounts for most of my distraction. It happens with any new programing language or thing. Elm is actually all about fast feedback. It does force you to think about edge cases early but these are just educational experiences. They round out design. Do they slow down development? Probably. However they don't stop you from handling things badly. You can do that if you wish, you just tend to handle stuff better than when it's obvious and in your face. It forces you to put less faith in the idea that there will be no bugs. Gives you more empathy for that 1% that did happen to get the system in a bad state. Not only that, in Elm it gives you the power to actually change things confidently. Renaming? easy! pulling things out into a file, trivial. Changing how you store state to a more convenient data store? Completely protected.
Logic errors are mostly all that's left. That's so much less to worry about! The power to change, confidently.</p>
<p>This was a more stark contrast when I started to refactor the JS. it was horribly painful! Very error prone, had to constantly try it out and go back and forth between the browser and my editor. I still don't know if it works under all situations.</p>
<hr>
<p>Elm trades convince for stability. It forces you to handle every edge-case. This is great for the fact that the product will never break in certain ways, however there is a tradeoff. That is of making things take a little longer to make. Elm is less interactive and less GTD oriented. I find often I lean towards playing with the type system for hours rather than just hacking something together. Many times the simplest, even simplistic solution is the best because it avoids a huge amount of distraction that comes by over abstracting.</p>
<p>The main time that JavaScript becomes scary is when you refactor. In dynamic languages we don't rename things. Renaming something would be dreadful to the system. It's like impossible to find everything and very nerve racking!</p>
<p>However that matters little to the business. They need features and care little for the edge-cases. They don't want things to totally suck but they mostly need things to work in the happy path.</p>
<p>Nobody is going to care that much if they mess with a data picker for too long they can get it into a bad state, but they will care that they have a date picker. JS can give the latter a lot faster.</p>
<p>It's like the craigslist model. It's not optimal but it's good enough, and it's popular and <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>. It's not crazy smooth but if anything goes wrong it's on either party to handle that.</p>
<p>The thing I love about JS is that it lets you fail fast with little resistance to get to a solution. Being a dynamic language it lets you play in runtime very often. You can see it working or not working. You're using the interface that the user is using more often than not. You're doing integration testing all the time.</p>


10:45:07.198 [debug] l:len=

10:45:07.198 [debug] l:buf empty

10:45:07.198 [debug] l:len=

10:45:07.198 [debug] l:buf=789:<h1>Cult of productivity</h1>
<p>Being productive means you increase the speed of which you are producing some artifact. It seems that speed can never be bad right? However speed is often a distraction for progress. you think a lot about how fast we are climbing the ladder not where the ladder is against the right wall. I'm trying to type code faster but we don't think about if the code is the what we should be writing. Think about how fast tickets get through the pipeline and not work all the tickets add up to.</p>
<ul>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/pipeline-efficency-is-no-longer-our-problem" rel="noopener noreferrer">Pipeline Efficency is no longer our problem</a></li>
</ul>


10:45:07.198 [debug] l:len=7

10:45:07.198 [debug] l:buf=89:<h1>Cult of productivity</h1>
<p>Being productive means you increase the speed of which you are producing some artifact. It seems that speed can never be bad right? However speed is often a distraction for progress. you think a lot about how fast we are climbing the ladder not where the ladder is against the right wall. I'm trying to type code faster but we don't think about if the code is the what we should be writing. Think about how fast tickets get through the pipeline and not work all the tickets add up to.</p>
<ul>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/pipeline-efficency-is-no-longer-our-problem" rel="noopener noreferrer">Pipeline Efficency is no longer our problem</a></li>
</ul>


10:45:07.198 [debug] l:len=78

10:45:07.198 [debug] l:buf=9:<h1>Cult of productivity</h1>
<p>Being productive means you increase the speed of which you are producing some artifact. It seems that speed can never be bad right? However speed is often a distraction for progress. you think a lot about how fast we are climbing the ladder not where the ladder is against the right wall. I'm trying to type code faster but we don't think about if the code is the what we should be writing. Think about how fast tickets get through the pipeline and not work all the tickets add up to.</p>
<ul>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/pipeline-efficency-is-no-longer-our-problem" rel="noopener noreferrer">Pipeline Efficency is no longer our problem</a></li>
</ul>


10:45:07.198 [debug] l:len=

10:45:07.199 [debug] l:buf empty

10:45:07.199 [debug] l:len=

10:45:07.199 [debug] l:buf=398:<h1>hustle</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.199 [debug] l:len=3

10:45:07.199 [debug] l:buf=98:<h1>hustle</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.199 [debug] l:len=39

10:45:07.199 [debug] l:buf=8:<h1>hustle</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.199 [debug] l:len=

10:45:07.199 [debug] l:buf empty

10:45:07.199 [debug] l:len=

10:45:07.199 [debug] l:buf=228:<h1>emulate the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>


10:45:07.199 [debug] l:len=2

10:45:07.199 [debug] l:buf=28:<h1>emulate the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>


10:45:07.199 [debug] l:len=22

10:45:07.199 [debug] l:buf=8:<h1>emulate the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>


10:45:07.199 [debug] l:len=

10:45:07.199 [debug] l:buf empty

10:45:07.199 [debug] l:len=

10:45:07.199 [debug] l:buf=3525:<h1>Functional CSS</h1>
<h2>What is it?</h2>
<p>it makes HTML powerful enough to define its style not just content.</p>
<p>It usually has tons of basic classes for typeography, spacing, color, grid systems, and more. They tend to have obvious names like <code>.red</code> or <code>.hide</code> align many use shorthand like <code>.dn</code> for <code>display none</code>.</p>
<p>For convincing on why this is important, <a href="http://mrmrs.io/writing/2016/03/24/scalable-css/" rel="noopener noreferrer">read this article</a> by John Gold. Don't just skim it, read the whole thing, every word.</p>
<h2>Problem with CSS</h2>
<p>originally for "style sheets" aka: you want the same content to look different depending on the theme</p>
<p>cascading was supposed to be awesome at styling components in complex ways. Unfortunately it accomplished that was "complex", in the bad sense, and lead to hard to debug code (where is this style coming from? How do I override it?)</p>
<p>CSS was created with this assumption that the style was more likely to change than the HTML. That you where more likely to retheme HTML than add a new type of UI. That's a bad bet. Rethemes happen, just not very often. HTML is not usually set in stone either.</p>
<h2>Pros:</h2>
<ul>
<li>speed
<ul>
<li>the CSS the browser loads is almost exactly the amount that it uses. Or pretty darn close.</li>
<li>your CSS files are tiny!</li>
</ul>
</li>
<li>your CSS is reusable and obvious</li>
<li>Better design
<ul>
<li>it keeps a natural rythm to the page</li>
<li>easier to make responsive</li>
<li>easier for designers to make something easy to port</li>
</ul>
</li>
<li>scalable
<ul>
<li>no cascade (confusing and error prone, avoids using long names to override other styles)</li>
<li>your CSS file stops growing after a while</li>
</ul>
</li>
<li>more likely to be reused
<ul>
<li>it's easy to find patterns in other HTML and reuse it.</li>
</ul>
</li>
<li>faster development</li>
<li>less context switching</li>
<li>natural browser compatibility</li>
<li>you can use it easily on plain HTML files which is great for marketing websites and prototyping</li>
<li>doesn't require a build step usually because you rarely change css.</li>
<li>it's flexible enough to be used across all your apps. Again less context switching</li>
<li>realistic</li>
<li>Takes into account the way CSS is developed</li>
<li>let's you just get your JIRA ticket done by slapping on a few classes rather than appending css to the bottom of the file.</li>
<li>let's you develop in the chrome debugger by changing class names and quickly seeing how it reacts. Then it's straightforward to copy it over.</li>
<li>Flexible
<ul>
<li>makes a sort of Lodash for css.</li>
</ul>
</li>
</ul>
<h2>Cons:</h2>
<ul>
<li>"pollutes" class props of HTML with lots of names instead of just one</li>
<li>you have to wrap css itself in many cases such as <code>float: right</code> -&gt; <code>float-right</code> which provides a small level of indirection</li>
<li>still pollutes the global scope with it's few selectors (all CSS is pretty much global though, css modules just generate unlikely names)</li>
<li>many times have cryptic class names that you have to memorize (but once you do it's easy)</li>
</ul>
<p>Tags:
css, functional-programing</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.199 [debug] l:len=3

10:45:07.199 [debug] l:buf=525:<h1>Functional CSS</h1>
<h2>What is it?</h2>
<p>it makes HTML powerful enough to define its style not just content.</p>
<p>It usually has tons of basic classes for typeography, spacing, color, grid systems, and more. They tend to have obvious names like <code>.red</code> or <code>.hide</code> align many use shorthand like <code>.dn</code> for <code>display none</code>.</p>
<p>For convincing on why this is important, <a href="http://mrmrs.io/writing/2016/03/24/scalable-css/" rel="noopener noreferrer">read this article</a> by John Gold. Don't just skim it, read the whole thing, every word.</p>
<h2>Problem with CSS</h2>
<p>originally for "style sheets" aka: you want the same content to look different depending on the theme</p>
<p>cascading was supposed to be awesome at styling components in complex ways. Unfortunately it accomplished that was "complex", in the bad sense, and lead to hard to debug code (where is this style coming from? How do I override it?)</p>
<p>CSS was created with this assumption that the style was more likely to change than the HTML. That you where more likely to retheme HTML than add a new type of UI. That's a bad bet. Rethemes happen, just not very often. HTML is not usually set in stone either.</p>
<h2>Pros:</h2>
<ul>
<li>speed
<ul>
<li>the CSS the browser loads is almost exactly the amount that it uses. Or pretty darn close.</li>
<li>your CSS files are tiny!</li>
</ul>
</li>
<li>your CSS is reusable and obvious</li>
<li>Better design
<ul>
<li>it keeps a natural rythm to the page</li>
<li>easier to make responsive</li>
<li>easier for designers to make something easy to port</li>
</ul>
</li>
<li>scalable
<ul>
<li>no cascade (confusing and error prone, avoids using long names to override other styles)</li>
<li>your CSS file stops growing after a while</li>
</ul>
</li>
<li>more likely to be reused
<ul>
<li>it's easy to find patterns in other HTML and reuse it.</li>
</ul>
</li>
<li>faster development</li>
<li>less context switching</li>
<li>natural browser compatibility</li>
<li>you can use it easily on plain HTML files which is great for marketing websites and prototyping</li>
<li>doesn't require a build step usually because you rarely change css.</li>
<li>it's flexible enough to be used across all your apps. Again less context switching</li>
<li>realistic</li>
<li>Takes into account the way CSS is developed</li>
<li>let's you just get your JIRA ticket done by slapping on a few classes rather than appending css to the bottom of the file.</li>
<li>let's you develop in the chrome debugger by changing class names and quickly seeing how it reacts. Then it's straightforward to copy it over.</li>
<li>Flexible
<ul>
<li>makes a sort of Lodash for css.</li>
</ul>
</li>
</ul>
<h2>Cons:</h2>
<ul>
<li>"pollutes" class props of HTML with lots of names instead of just one</li>
<li>you have to wrap css itself in many cases such as <code>float: right</code> -&gt; <code>float-right</code> which provides a small level of indirection</li>
<li>still pollutes the global scope with it's few selectors (all CSS is pretty much global though, css modules just generate unlikely names)</li>
<li>many times have cryptic class names that you have to memorize (but once you do it's easy)</li>
</ul>
<p>Tags:
css, functional-programing</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.199 [debug] l:len=35

10:45:07.200 [debug] l:buf=25:<h1>Functional CSS</h1>
<h2>What is it?</h2>
<p>it makes HTML powerful enough to define its style not just content.</p>
<p>It usually has tons of basic classes for typeography, spacing, color, grid systems, and more. They tend to have obvious names like <code>.red</code> or <code>.hide</code> align many use shorthand like <code>.dn</code> for <code>display none</code>.</p>
<p>For convincing on why this is important, <a href="http://mrmrs.io/writing/2016/03/24/scalable-css/" rel="noopener noreferrer">read this article</a> by John Gold. Don't just skim it, read the whole thing, every word.</p>
<h2>Problem with CSS</h2>
<p>originally for "style sheets" aka: you want the same content to look different depending on the theme</p>
<p>cascading was supposed to be awesome at styling components in complex ways. Unfortunately it accomplished that was "complex", in the bad sense, and lead to hard to debug code (where is this style coming from? How do I override it?)</p>
<p>CSS was created with this assumption that the style was more likely to change than the HTML. That you where more likely to retheme HTML than add a new type of UI. That's a bad bet. Rethemes happen, just not very often. HTML is not usually set in stone either.</p>
<h2>Pros:</h2>
<ul>
<li>speed
<ul>
<li>the CSS the browser loads is almost exactly the amount that it uses. Or pretty darn close.</li>
<li>your CSS files are tiny!</li>
</ul>
</li>
<li>your CSS is reusable and obvious</li>
<li>Better design
<ul>
<li>it keeps a natural rythm to the page</li>
<li>easier to make responsive</li>
<li>easier for designers to make something easy to port</li>
</ul>
</li>
<li>scalable
<ul>
<li>no cascade (confusing and error prone, avoids using long names to override other styles)</li>
<li>your CSS file stops growing after a while</li>
</ul>
</li>
<li>more likely to be reused
<ul>
<li>it's easy to find patterns in other HTML and reuse it.</li>
</ul>
</li>
<li>faster development</li>
<li>less context switching</li>
<li>natural browser compatibility</li>
<li>you can use it easily on plain HTML files which is great for marketing websites and prototyping</li>
<li>doesn't require a build step usually because you rarely change css.</li>
<li>it's flexible enough to be used across all your apps. Again less context switching</li>
<li>realistic</li>
<li>Takes into account the way CSS is developed</li>
<li>let's you just get your JIRA ticket done by slapping on a few classes rather than appending css to the bottom of the file.</li>
<li>let's you develop in the chrome debugger by changing class names and quickly seeing how it reacts. Then it's straightforward to copy it over.</li>
<li>Flexible
<ul>
<li>makes a sort of Lodash for css.</li>
</ul>
</li>
</ul>
<h2>Cons:</h2>
<ul>
<li>"pollutes" class props of HTML with lots of names instead of just one</li>
<li>you have to wrap css itself in many cases such as <code>float: right</code> -&gt; <code>float-right</code> which provides a small level of indirection</li>
<li>still pollutes the global scope with it's few selectors (all CSS is pretty much global though, css modules just generate unlikely names)</li>
<li>many times have cryptic class names that you have to memorize (but once you do it's easy)</li>
</ul>
<p>Tags:
css, functional-programing</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.200 [debug] l:len=352

10:45:07.200 [debug] l:buf=5:<h1>Functional CSS</h1>
<h2>What is it?</h2>
<p>it makes HTML powerful enough to define its style not just content.</p>
<p>It usually has tons of basic classes for typeography, spacing, color, grid systems, and more. They tend to have obvious names like <code>.red</code> or <code>.hide</code> align many use shorthand like <code>.dn</code> for <code>display none</code>.</p>
<p>For convincing on why this is important, <a href="http://mrmrs.io/writing/2016/03/24/scalable-css/" rel="noopener noreferrer">read this article</a> by John Gold. Don't just skim it, read the whole thing, every word.</p>
<h2>Problem with CSS</h2>
<p>originally for "style sheets" aka: you want the same content to look different depending on the theme</p>
<p>cascading was supposed to be awesome at styling components in complex ways. Unfortunately it accomplished that was "complex", in the bad sense, and lead to hard to debug code (where is this style coming from? How do I override it?)</p>
<p>CSS was created with this assumption that the style was more likely to change than the HTML. That you where more likely to retheme HTML than add a new type of UI. That's a bad bet. Rethemes happen, just not very often. HTML is not usually set in stone either.</p>
<h2>Pros:</h2>
<ul>
<li>speed
<ul>
<li>the CSS the browser loads is almost exactly the amount that it uses. Or pretty darn close.</li>
<li>your CSS files are tiny!</li>
</ul>
</li>
<li>your CSS is reusable and obvious</li>
<li>Better design
<ul>
<li>it keeps a natural rythm to the page</li>
<li>easier to make responsive</li>
<li>easier for designers to make something easy to port</li>
</ul>
</li>
<li>scalable
<ul>
<li>no cascade (confusing and error prone, avoids using long names to override other styles)</li>
<li>your CSS file stops growing after a while</li>
</ul>
</li>
<li>more likely to be reused
<ul>
<li>it's easy to find patterns in other HTML and reuse it.</li>
</ul>
</li>
<li>faster development</li>
<li>less context switching</li>
<li>natural browser compatibility</li>
<li>you can use it easily on plain HTML files which is great for marketing websites and prototyping</li>
<li>doesn't require a build step usually because you rarely change css.</li>
<li>it's flexible enough to be used across all your apps. Again less context switching</li>
<li>realistic</li>
<li>Takes into account the way CSS is developed</li>
<li>let's you just get your JIRA ticket done by slapping on a few classes rather than appending css to the bottom of the file.</li>
<li>let's you develop in the chrome debugger by changing class names and quickly seeing how it reacts. Then it's straightforward to copy it over.</li>
<li>Flexible
<ul>
<li>makes a sort of Lodash for css.</li>
</ul>
</li>
</ul>
<h2>Cons:</h2>
<ul>
<li>"pollutes" class props of HTML with lots of names instead of just one</li>
<li>you have to wrap css itself in many cases such as <code>float: right</code> -&gt; <code>float-right</code> which provides a small level of indirection</li>
<li>still pollutes the global scope with it's few selectors (all CSS is pretty much global though, css modules just generate unlikely names)</li>
<li>many times have cryptic class names that you have to memorize (but once you do it's easy)</li>
</ul>
<p>Tags:
css, functional-programing</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf empty

10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf=211:<h1>Digital wellbeing experiment</h1>
<p><a href="https://experiments.withgoogle.com/collection/digitalwellbeing" rel="noopener noreferrer">https://experiments.withgoogle.com/collection/digitalwellbeing</a></p>


10:45:07.200 [debug] l:len=2

10:45:07.200 [debug] l:buf=11:<h1>Digital wellbeing experiment</h1>
<p><a href="https://experiments.withgoogle.com/collection/digitalwellbeing" rel="noopener noreferrer">https://experiments.withgoogle.com/collection/digitalwellbeing</a></p>


10:45:07.200 [debug] l:len=21

10:45:07.200 [debug] l:buf=1:<h1>Digital wellbeing experiment</h1>
<p><a href="https://experiments.withgoogle.com/collection/digitalwellbeing" rel="noopener noreferrer">https://experiments.withgoogle.com/collection/digitalwellbeing</a></p>


10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf empty

10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf=335:<h1>Zappier</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.200 [debug] l:len=3

10:45:07.200 [debug] l:buf=35:<h1>Zappier</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.200 [debug] l:len=33

10:45:07.200 [debug] l:buf=5:<h1>Zappier</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf empty

10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf=237:<h1>Obsidian--reference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.200 [debug] l:len=2

10:45:07.200 [debug] l:buf=37:<h1>Obsidian--reference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.200 [debug] l:len=23

10:45:07.200 [debug] l:buf=7:<h1>Obsidian--reference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf empty

10:45:07.200 [debug] l:len=

10:45:07.200 [debug] l:buf=174:<p>Why, Hawaii, why.</p>
<p>We're at 54-179 Kawaipuna st. Hauula. We have street parking. We have two spots right in front of my house that my tenants typically park in.</p>


10:45:07.200 [debug] l:len=1

10:45:07.200 [debug] l:buf=74:<p>Why, Hawaii, why.</p>
<p>We're at 54-179 Kawaipuna st. Hauula. We have street parking. We have two spots right in front of my house that my tenants typically park in.</p>


10:45:07.201 [debug] l:len=17

10:45:07.201 [debug] l:buf=4:<p>Why, Hawaii, why.</p>
<p>We're at 54-179 Kawaipuna st. Hauula. We have street parking. We have two spots right in front of my house that my tenants typically park in.</p>


10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf empty

10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf=372:<h1>Johnathan Blow on deep work</h1>
<p><a href="https://youtu.be/ryB_VQ__KeE" rel="noopener noreferrer">https://youtu.be/ryB_VQ__KeE</a></p>
<p>deep work requires knowing that people won't distract you. If our brain feels like it's going to the interrupted it will be more likely to spend the effort needs to become focused cuz it feels like a waste of effort to it.</p>


10:45:07.201 [debug] l:len=3

10:45:07.201 [debug] l:buf=72:<h1>Johnathan Blow on deep work</h1>
<p><a href="https://youtu.be/ryB_VQ__KeE" rel="noopener noreferrer">https://youtu.be/ryB_VQ__KeE</a></p>
<p>deep work requires knowing that people won't distract you. If our brain feels like it's going to the interrupted it will be more likely to spend the effort needs to become focused cuz it feels like a waste of effort to it.</p>


10:45:07.201 [debug] l:len=37

10:45:07.201 [debug] l:buf=2:<h1>Johnathan Blow on deep work</h1>
<p><a href="https://youtu.be/ryB_VQ__KeE" rel="noopener noreferrer">https://youtu.be/ryB_VQ__KeE</a></p>
<p>deep work requires knowing that people won't distract you. If our brain feels like it's going to the interrupted it will be more likely to spend the effort needs to become focused cuz it feels like a waste of effort to it.</p>


10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf empty

10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf=87:<h1>Pest Control</h1>
<p>Hunter Hughes</p>
<p>H2 Pest Controll</p>
<p>801-369-3668</p>


10:45:07.201 [debug] l:len=8

10:45:07.201 [debug] l:buf=7:<h1>Pest Control</h1>
<p>Hunter Hughes</p>
<p>H2 Pest Controll</p>
<p>801-369-3668</p>


10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf empty

10:45:07.201 [debug] l:len=

10:45:07.201 [debug] l:buf=227:<h1>scrum master</h1>
<p>expected to protect the team from too much distraction</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.201 [debug] l:len=2

10:45:07.201 [debug] l:buf=27:<h1>scrum master</h1>
<p>expected to protect the team from too much distraction</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.202 [debug] l:len=22

10:45:07.202 [debug] l:buf=7:<h1>scrum master</h1>
<p>expected to protect the team from too much distraction</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
</ul>


10:45:07.202 [debug] l:len=

10:45:07.202 [debug] l:buf empty

10:45:07.202 [debug] l:len=

10:45:07.202 [debug] l:buf=5531:<h1>Reason ML - ready for production satire</h1>
<p>ReasonML has a lot of hype these days, all the cool kids seem to be using it, but it's it any good? Unlikely. We'll talk about this today in this totally not a satire, way.</p>
<h2>1. Developers can't learn new languages</h2>
<p>You see this is a little known fact but when a developers learns a new language, it changes their brain to be usable in only that language. If a person learns JavaScript they <em>become</em> a JavaScript developer. They are now only useful for that now. A good way I like to explain it is that you're brain is like a ball of clay, then when you learn your first language then it's like putting the clay into the oven and basking in into a hardened clay pot. Completely irreversible. That thing is never going to be a clay plate.</p>
<p>Sometimes, in rare cases, you can technically learn 2 languages so long as your brain hasn't been quite cooled down yet. We call these, "Full stack" developers, however this can only happen if they haven't taken a job yet and are still paying to learn. Luckily job listings tell you what what language they have been imprinted with 😌.</p>
<h2>ReasonML's lack of developer factories</h2>
<p>You see, ReasonML is nice for those lucky few that have soft clay brains got it in the ReasonML oven, however this is rare due to the fact thare is no schools that teach it exclusively. To teaching a developer a new language would be like going to the Moon and walking around in it, it's never been done before, and it's probably not worth it (<a href="http://localhost:5000/moonlandingwasfake" rel="noopener noreferrer">moonlandingwasfake</a>).</p>
<p>After all, programmers <strong>never</strong> have to learn new things. JavaScript libraries haven't changed for months, days even. Plus reading the company's code could hardly be called "learning". After all it doesn't change daily and is <em>very</em> well documented.</p>
<p>Many people say that software development is where you do the same repetitive task over and over again, like laying clay bricks to make a house (but not the ones being used for developers brains, obviously) this is the reason that software development is so easy to estimate.</p>
<h2>Learning on the job only benefits the employee</h2>
<p>Learning new technologies <em>can</em> help widen a perspective of a developer and help them be a better developer in the long run, but does that benefit the company? Hardly. We just need developers that will come to work and not ask questions, we hired them that way and don't want them to every change, especially their salary 🤞. After all people only stick around for a little while, why invest? It's obviously not anything we've done to make them go.</p>
<h2>Having to contribute to open source</h2>
<p>You see when you're working in a smaller community there is a high likelihood that someone hasn't made some bindings to a JavaScript library you obviously need (I heart you redux form). At this time you'll realize that you might have to contribute back to the community, this is bad for business because what if you're competitor is using redux form and they also happen to be using ReasonML and they win even more If the market (not that they are, if you would like to provide us with the next round of funding please email me at <a href="mailto:john@satirefinance.com" rel="noopener noreferrer">john@satirefinance.com</a>). This is a very reasonable fear.</p>
<p>Even worse by doing this you might end up actually paying for software that you're used too being free. I mean I have no idea if there is any people behind those nicely documented GitHub repos but if there is, I want them to keep working for free. Relationships where you take all the vegetables that other people put in the pot is what I want to have. <a href="http://localhost:5000/winning" rel="noopener noreferrer">winning</a></p>
<h2>Inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></h2>
<p>Your don't seem that convinced... Maybe we should talk about some of the features of ReasonML just to help solidify that there's no reason to let your developers learn or use it.</p>
<p>Take inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> for instance, for one thing that's a mouthful and two why would you need static types that get figured out automatically even you can just use something we're more familiar like proptypes! These are great because they allow you document only your components that prints warning messages that you can easily ignore and can join a proud clan of "normal errors" in your browsers console.</p>
<p>That may not sound like a good thing but it basically becomes a not as expensive jira backlog that's integrated into the browser, neat! Plus it's so much easier to only document the props you want people to know about (or remember to). Plus there's no way to verify functions have the right arguments or return types which is just one less thing I have to worry about. Basically it means I can look really busy without much consequence!</p>
<h2>ReasonML means you have to find your own bugs</h2>
<p>I'm not super good at finding bugs, but my customers are! They find them all day, and they pay me to do it! I know, in very lucky. If we adopted Reason then we be presented with all those issues more quickly instead of fixing them in the next project. If that's technical debt than I say, "just put it on the credit card!"</p>
<p>Tags:
ReasonML</p>


10:45:07.202 [debug] l:len=5

10:45:07.202 [debug] l:buf=531:<h1>Reason ML - ready for production satire</h1>
<p>ReasonML has a lot of hype these days, all the cool kids seem to be using it, but it's it any good? Unlikely. We'll talk about this today in this totally not a satire, way.</p>
<h2>1. Developers can't learn new languages</h2>
<p>You see this is a little known fact but when a developers learns a new language, it changes their brain to be usable in only that language. If a person learns JavaScript they <em>become</em> a JavaScript developer. They are now only useful for that now. A good way I like to explain it is that you're brain is like a ball of clay, then when you learn your first language then it's like putting the clay into the oven and basking in into a hardened clay pot. Completely irreversible. That thing is never going to be a clay plate.</p>
<p>Sometimes, in rare cases, you can technically learn 2 languages so long as your brain hasn't been quite cooled down yet. We call these, "Full stack" developers, however this can only happen if they haven't taken a job yet and are still paying to learn. Luckily job listings tell you what what language they have been imprinted with 😌.</p>
<h2>ReasonML's lack of developer factories</h2>
<p>You see, ReasonML is nice for those lucky few that have soft clay brains got it in the ReasonML oven, however this is rare due to the fact thare is no schools that teach it exclusively. To teaching a developer a new language would be like going to the Moon and walking around in it, it's never been done before, and it's probably not worth it (<a href="http://localhost:5000/moonlandingwasfake" rel="noopener noreferrer">moonlandingwasfake</a>).</p>
<p>After all, programmers <strong>never</strong> have to learn new things. JavaScript libraries haven't changed for months, days even. Plus reading the company's code could hardly be called "learning". After all it doesn't change daily and is <em>very</em> well documented.</p>
<p>Many people say that software development is where you do the same repetitive task over and over again, like laying clay bricks to make a house (but not the ones being used for developers brains, obviously) this is the reason that software development is so easy to estimate.</p>
<h2>Learning on the job only benefits the employee</h2>
<p>Learning new technologies <em>can</em> help widen a perspective of a developer and help them be a better developer in the long run, but does that benefit the company? Hardly. We just need developers that will come to work and not ask questions, we hired them that way and don't want them to every change, especially their salary 🤞. After all people only stick around for a little while, why invest? It's obviously not anything we've done to make them go.</p>
<h2>Having to contribute to open source</h2>
<p>You see when you're working in a smaller community there is a high likelihood that someone hasn't made some bindings to a JavaScript library you obviously need (I heart you redux form). At this time you'll realize that you might have to contribute back to the community, this is bad for business because what if you're competitor is using redux form and they also happen to be using ReasonML and they win even more If the market (not that they are, if you would like to provide us with the next round of funding please email me at <a href="mailto:john@satirefinance.com" rel="noopener noreferrer">john@satirefinance.com</a>). This is a very reasonable fear.</p>
<p>Even worse by doing this you might end up actually paying for software that you're used too being free. I mean I have no idea if there is any people behind those nicely documented GitHub repos but if there is, I want them to keep working for free. Relationships where you take all the vegetables that other people put in the pot is what I want to have. <a href="http://localhost:5000/winning" rel="noopener noreferrer">winning</a></p>
<h2>Inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></h2>
<p>Your don't seem that convinced... Maybe we should talk about some of the features of ReasonML just to help solidify that there's no reason to let your developers learn or use it.</p>
<p>Take inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> for instance, for one thing that's a mouthful and two why would you need static types that get figured out automatically even you can just use something we're more familiar like proptypes! These are great because they allow you document only your components that prints warning messages that you can easily ignore and can join a proud clan of "normal errors" in your browsers console.</p>
<p>That may not sound like a good thing but it basically becomes a not as expensive jira backlog that's integrated into the browser, neat! Plus it's so much easier to only document the props you want people to know about (or remember to). Plus there's no way to verify functions have the right arguments or return types which is just one less thing I have to worry about. Basically it means I can look really busy without much consequence!</p>
<h2>ReasonML means you have to find your own bugs</h2>
<p>I'm not super good at finding bugs, but my customers are! They find them all day, and they pay me to do it! I know, in very lucky. If we adopted Reason then we be presented with all those issues more quickly instead of fixing them in the next project. If that's technical debt than I say, "just put it on the credit card!"</p>
<p>Tags:
ReasonML</p>


10:45:07.202 [debug] l:len=55

10:45:07.202 [debug] l:buf=31:<h1>Reason ML - ready for production satire</h1>
<p>ReasonML has a lot of hype these days, all the cool kids seem to be using it, but it's it any good? Unlikely. We'll talk about this today in this totally not a satire, way.</p>
<h2>1. Developers can't learn new languages</h2>
<p>You see this is a little known fact but when a developers learns a new language, it changes their brain to be usable in only that language. If a person learns JavaScript they <em>become</em> a JavaScript developer. They are now only useful for that now. A good way I like to explain it is that you're brain is like a ball of clay, then when you learn your first language then it's like putting the clay into the oven and basking in into a hardened clay pot. Completely irreversible. That thing is never going to be a clay plate.</p>
<p>Sometimes, in rare cases, you can technically learn 2 languages so long as your brain hasn't been quite cooled down yet. We call these, "Full stack" developers, however this can only happen if they haven't taken a job yet and are still paying to learn. Luckily job listings tell you what what language they have been imprinted with 😌.</p>
<h2>ReasonML's lack of developer factories</h2>
<p>You see, ReasonML is nice for those lucky few that have soft clay brains got it in the ReasonML oven, however this is rare due to the fact thare is no schools that teach it exclusively. To teaching a developer a new language would be like going to the Moon and walking around in it, it's never been done before, and it's probably not worth it (<a href="http://localhost:5000/moonlandingwasfake" rel="noopener noreferrer">moonlandingwasfake</a>).</p>
<p>After all, programmers <strong>never</strong> have to learn new things. JavaScript libraries haven't changed for months, days even. Plus reading the company's code could hardly be called "learning". After all it doesn't change daily and is <em>very</em> well documented.</p>
<p>Many people say that software development is where you do the same repetitive task over and over again, like laying clay bricks to make a house (but not the ones being used for developers brains, obviously) this is the reason that software development is so easy to estimate.</p>
<h2>Learning on the job only benefits the employee</h2>
<p>Learning new technologies <em>can</em> help widen a perspective of a developer and help them be a better developer in the long run, but does that benefit the company? Hardly. We just need developers that will come to work and not ask questions, we hired them that way and don't want them to every change, especially their salary 🤞. After all people only stick around for a little while, why invest? It's obviously not anything we've done to make them go.</p>
<h2>Having to contribute to open source</h2>
<p>You see when you're working in a smaller community there is a high likelihood that someone hasn't made some bindings to a JavaScript library you obviously need (I heart you redux form). At this time you'll realize that you might have to contribute back to the community, this is bad for business because what if you're competitor is using redux form and they also happen to be using ReasonML and they win even more If the market (not that they are, if you would like to provide us with the next round of funding please email me at <a href="mailto:john@satirefinance.com" rel="noopener noreferrer">john@satirefinance.com</a>). This is a very reasonable fear.</p>
<p>Even worse by doing this you might end up actually paying for software that you're used too being free. I mean I have no idea if there is any people behind those nicely documented GitHub repos but if there is, I want them to keep working for free. Relationships where you take all the vegetables that other people put in the pot is what I want to have. <a href="http://localhost:5000/winning" rel="noopener noreferrer">winning</a></p>
<h2>Inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></h2>
<p>Your don't seem that convinced... Maybe we should talk about some of the features of ReasonML just to help solidify that there's no reason to let your developers learn or use it.</p>
<p>Take inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> for instance, for one thing that's a mouthful and two why would you need static types that get figured out automatically even you can just use something we're more familiar like proptypes! These are great because they allow you document only your components that prints warning messages that you can easily ignore and can join a proud clan of "normal errors" in your browsers console.</p>
<p>That may not sound like a good thing but it basically becomes a not as expensive jira backlog that's integrated into the browser, neat! Plus it's so much easier to only document the props you want people to know about (or remember to). Plus there's no way to verify functions have the right arguments or return types which is just one less thing I have to worry about. Basically it means I can look really busy without much consequence!</p>
<h2>ReasonML means you have to find your own bugs</h2>
<p>I'm not super good at finding bugs, but my customers are! They find them all day, and they pay me to do it! I know, in very lucky. If we adopted Reason then we be presented with all those issues more quickly instead of fixing them in the next project. If that's technical debt than I say, "just put it on the credit card!"</p>
<p>Tags:
ReasonML</p>


10:45:07.202 [debug] l:len=553

10:45:07.202 [debug] l:buf=1:<h1>Reason ML - ready for production satire</h1>
<p>ReasonML has a lot of hype these days, all the cool kids seem to be using it, but it's it any good? Unlikely. We'll talk about this today in this totally not a satire, way.</p>
<h2>1. Developers can't learn new languages</h2>
<p>You see this is a little known fact but when a developers learns a new language, it changes their brain to be usable in only that language. If a person learns JavaScript they <em>become</em> a JavaScript developer. They are now only useful for that now. A good way I like to explain it is that you're brain is like a ball of clay, then when you learn your first language then it's like putting the clay into the oven and basking in into a hardened clay pot. Completely irreversible. That thing is never going to be a clay plate.</p>
<p>Sometimes, in rare cases, you can technically learn 2 languages so long as your brain hasn't been quite cooled down yet. We call these, "Full stack" developers, however this can only happen if they haven't taken a job yet and are still paying to learn. Luckily job listings tell you what what language they have been imprinted with 😌.</p>
<h2>ReasonML's lack of developer factories</h2>
<p>You see, ReasonML is nice for those lucky few that have soft clay brains got it in the ReasonML oven, however this is rare due to the fact thare is no schools that teach it exclusively. To teaching a developer a new language would be like going to the Moon and walking around in it, it's never been done before, and it's probably not worth it (<a href="http://localhost:5000/moonlandingwasfake" rel="noopener noreferrer">moonlandingwasfake</a>).</p>
<p>After all, programmers <strong>never</strong> have to learn new things. JavaScript libraries haven't changed for months, days even. Plus reading the company's code could hardly be called "learning". After all it doesn't change daily and is <em>very</em> well documented.</p>
<p>Many people say that software development is where you do the same repetitive task over and over again, like laying clay bricks to make a house (but not the ones being used for developers brains, obviously) this is the reason that software development is so easy to estimate.</p>
<h2>Learning on the job only benefits the employee</h2>
<p>Learning new technologies <em>can</em> help widen a perspective of a developer and help them be a better developer in the long run, but does that benefit the company? Hardly. We just need developers that will come to work and not ask questions, we hired them that way and don't want them to every change, especially their salary 🤞. After all people only stick around for a little while, why invest? It's obviously not anything we've done to make them go.</p>
<h2>Having to contribute to open source</h2>
<p>You see when you're working in a smaller community there is a high likelihood that someone hasn't made some bindings to a JavaScript library you obviously need (I heart you redux form). At this time you'll realize that you might have to contribute back to the community, this is bad for business because what if you're competitor is using redux form and they also happen to be using ReasonML and they win even more If the market (not that they are, if you would like to provide us with the next round of funding please email me at <a href="mailto:john@satirefinance.com" rel="noopener noreferrer">john@satirefinance.com</a>). This is a very reasonable fear.</p>
<p>Even worse by doing this you might end up actually paying for software that you're used too being free. I mean I have no idea if there is any people behind those nicely documented GitHub repos but if there is, I want them to keep working for free. Relationships where you take all the vegetables that other people put in the pot is what I want to have. <a href="http://localhost:5000/winning" rel="noopener noreferrer">winning</a></p>
<h2>Inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></h2>
<p>Your don't seem that convinced... Maybe we should talk about some of the features of ReasonML just to help solidify that there's no reason to let your developers learn or use it.</p>
<p>Take inferred <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> for instance, for one thing that's a mouthful and two why would you need static types that get figured out automatically even you can just use something we're more familiar like proptypes! These are great because they allow you document only your components that prints warning messages that you can easily ignore and can join a proud clan of "normal errors" in your browsers console.</p>
<p>That may not sound like a good thing but it basically becomes a not as expensive jira backlog that's integrated into the browser, neat! Plus it's so much easier to only document the props you want people to know about (or remember to). Plus there's no way to verify functions have the right arguments or return types which is just one less thing I have to worry about. Basically it means I can look really busy without much consequence!</p>
<h2>ReasonML means you have to find your own bugs</h2>
<p>I'm not super good at finding bugs, but my customers are! They find them all day, and they pay me to do it! I know, in very lucky. If we adopted Reason then we be presented with all those issues more quickly instead of fixing them in the next project. If that's technical debt than I say, "just put it on the credit card!"</p>
<p>Tags:
ReasonML</p>


10:45:07.202 [debug] l:len=

10:45:07.202 [debug] l:buf empty

10:45:07.202 [debug] l:len=

10:45:07.202 [debug] l:buf=1553:<h1>Slack's broken hierarchy of priority</h1>
<p>Priority:</p>
<ol>
<li>Newest messages are shown first</li>
<li>GIFs are the most eye catching AND dominate vertical space</li>
<li>Images also dominate vertical space</li>
<li>Large messages also dominate vertical space but are actually not as powerful as you think because often people are trained to be so A.D.D. when it comes to reading stuff in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> they are unlikely to finish even one large paragraph</li>
<li><code>@channel</code>  and less so <code>@here</code> are very important</li>
<li>Group Chats and Private messages are higher priority than channels, even though they shouldn't be. They will notify you on every message by default (although it is possible to change them.)</li>
</ol>
<h2>Links</h2>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.203 [debug] l:len=1

10:45:07.203 [debug] l:buf=553:<h1>Slack's broken hierarchy of priority</h1>
<p>Priority:</p>
<ol>
<li>Newest messages are shown first</li>
<li>GIFs are the most eye catching AND dominate vertical space</li>
<li>Images also dominate vertical space</li>
<li>Large messages also dominate vertical space but are actually not as powerful as you think because often people are trained to be so A.D.D. when it comes to reading stuff in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> they are unlikely to finish even one large paragraph</li>
<li><code>@channel</code>  and less so <code>@here</code> are very important</li>
<li>Group Chats and Private messages are higher priority than channels, even though they shouldn't be. They will notify you on every message by default (although it is possible to change them.)</li>
</ol>
<h2>Links</h2>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.203 [debug] l:len=15

10:45:07.203 [debug] l:buf=53:<h1>Slack's broken hierarchy of priority</h1>
<p>Priority:</p>
<ol>
<li>Newest messages are shown first</li>
<li>GIFs are the most eye catching AND dominate vertical space</li>
<li>Images also dominate vertical space</li>
<li>Large messages also dominate vertical space but are actually not as powerful as you think because often people are trained to be so A.D.D. when it comes to reading stuff in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> they are unlikely to finish even one large paragraph</li>
<li><code>@channel</code>  and less so <code>@here</code> are very important</li>
<li>Group Chats and Private messages are higher priority than channels, even though they shouldn't be. They will notify you on every message by default (although it is possible to change them.)</li>
</ol>
<h2>Links</h2>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.203 [debug] l:len=155

10:45:07.203 [debug] l:buf=3:<h1>Slack's broken hierarchy of priority</h1>
<p>Priority:</p>
<ol>
<li>Newest messages are shown first</li>
<li>GIFs are the most eye catching AND dominate vertical space</li>
<li>Images also dominate vertical space</li>
<li>Large messages also dominate vertical space but are actually not as powerful as you think because often people are trained to be so A.D.D. when it comes to reading stuff in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> they are unlikely to finish even one large paragraph</li>
<li><code>@channel</code>  and less so <code>@here</code> are very important</li>
<li>Group Chats and Private messages are higher priority than channels, even though they shouldn't be. They will notify you on every message by default (although it is possible to change them.)</li>
</ol>
<h2>Links</h2>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.203 [debug] l:len=

10:45:07.203 [debug] l:buf empty

10:45:07.203 [debug] l:len=

10:45:07.203 [debug] l:buf=244:<h1>Teamchat Threads - Pitch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.203 [debug] l:len=2

10:45:07.203 [debug] l:buf=44:<h1>Teamchat Threads - Pitch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.203 [debug] l:len=24

10:45:07.203 [debug] l:buf=4:<h1>Teamchat Threads - Pitch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.203 [debug] l:len=

10:45:07.203 [debug] l:buf empty

10:45:07.203 [debug] l:len=

10:45:07.203 [debug] l:buf=123:<h1>Response to Pablo about doing product reaserch all day</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.203 [debug] l:len=1

10:45:07.203 [debug] l:buf=23:<h1>Response to Pablo about doing product reaserch all day</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.203 [debug] l:len=12

10:45:07.203 [debug] l:buf=3:<h1>Response to Pablo about doing product reaserch all day</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.203 [debug] l:len=

10:45:07.203 [debug] l:buf empty

10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf=2695:<h1>Folders V</h1>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<hr>
<h2><a href="http://localhost:5000/folders.png" rel="noopener noreferrer">Folders</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<hr>
<h2><a href="http://localhost:5000/tagging.png" rel="noopener noreferrer">Tagging</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<hr>
<h2><a href="http://localhost:5000/graph-of-notes.png" rel="noopener noreferrer">Graph of Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.204 [debug] l:len=2

10:45:07.204 [debug] l:buf=695:<h1>Folders V</h1>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<hr>
<h2><a href="http://localhost:5000/folders.png" rel="noopener noreferrer">Folders</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<hr>
<h2><a href="http://localhost:5000/tagging.png" rel="noopener noreferrer">Tagging</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<hr>
<h2><a href="http://localhost:5000/graph-of-notes.png" rel="noopener noreferrer">Graph of Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.204 [debug] l:len=26

10:45:07.204 [debug] l:buf=95:<h1>Folders V</h1>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<hr>
<h2><a href="http://localhost:5000/folders.png" rel="noopener noreferrer">Folders</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<hr>
<h2><a href="http://localhost:5000/tagging.png" rel="noopener noreferrer">Tagging</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<hr>
<h2><a href="http://localhost:5000/graph-of-notes.png" rel="noopener noreferrer">Graph of Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.204 [debug] l:len=269

10:45:07.204 [debug] l:buf=5:<h1>Folders V</h1>
<h2>Folders</h2>
<p>Each item can only be on one folder at a time, often the support <a href="http://localhost:5000/nesting" rel="noopener noreferrer">nesting</a> in a <a href="http://localhost:5000/tree" rel="noopener noreferrer">tree</a>. This is often too rigid to be useful.</p>
<hr>
<h2><a href="http://localhost:5000/folders.png" rel="noopener noreferrer">Folders</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Tagging</h2>
<p><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">Tagging</a> allows one note to be attached to many tags. These are much more flexible, BUT often leads to a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>.</p>
<hr>
<h2><a href="http://localhost:5000/tagging.png" rel="noopener noreferrer">Tagging</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Graph</h2>
<p>A graph is when you take the notes and you directly connect them to one another so while the graph may be complex if you look at the local graph (just the notes that are connected to one note) then you can more easily explore related ideas leading to inspiration</p>
<hr>
<h2><a href="http://localhost:5000/graph-of-notes.png" rel="noopener noreferrer">Graph of Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Ref: <a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
<li><a href="http://localhost:5000/computer-science" rel="noopener noreferrer">Computer Science</a></li>
<li><a href="http://localhost:5000/data-structures" rel="noopener noreferrer">Data Structures</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/medium--zettelkasten-%E2%80%94-how-one-german-scholar-was-so-freakishly-productive" rel="noopener noreferrer">Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li>
<li><a href="http://localhost:5000/youtube--this-note-taking-app-is-a-game-changer---roam-research" rel="noopener noreferrer">Youtube--This Note-Taking App is a Game Changer - Roam Research</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf empty

10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf=475:<h1>Missive</h1>
<p><a href="https://missiveapp.com/slack-vs-missive" rel="noopener noreferrer">https://missiveapp.com/slack-vs-missive</a></p>
<p>This is a <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> competitor. allows you to combine external communication such as <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a> and <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> into the same app.</p>


10:45:07.204 [debug] l:len=4

10:45:07.204 [debug] l:buf=75:<h1>Missive</h1>
<p><a href="https://missiveapp.com/slack-vs-missive" rel="noopener noreferrer">https://missiveapp.com/slack-vs-missive</a></p>
<p>This is a <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> competitor. allows you to combine external communication such as <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a> and <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> into the same app.</p>


10:45:07.204 [debug] l:len=47

10:45:07.204 [debug] l:buf=5:<h1>Missive</h1>
<p><a href="https://missiveapp.com/slack-vs-missive" rel="noopener noreferrer">https://missiveapp.com/slack-vs-missive</a></p>
<p>This is a <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> competitor. allows you to combine external communication such as <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a> and <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> into the same app.</p>


10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf empty

10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf=75:<h1>Monads</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.204 [debug] l:len=7

10:45:07.204 [debug] l:buf=5:<h1>Monads</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf empty

10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf=265:<h1>Confusion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.204 [debug] l:len=2

10:45:07.204 [debug] l:buf=65:<h1>Confusion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.204 [debug] l:len=26

10:45:07.204 [debug] l:buf=5:<h1>Confusion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.204 [debug] l:len=

10:45:07.204 [debug] l:buf empty

10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf=496:<h1>Abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.205 [debug] l:len=4

10:45:07.205 [debug] l:buf=96:<h1>Abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.205 [debug] l:len=49

10:45:07.205 [debug] l:buf=6:<h1>Abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
</ul>


10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf empty

10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf=780:<h1>Basecamp 4 Features</h1>
<hr>
<h2><a href="http://localhost:5000/bc4.png" rel="noopener noreferrer">BC4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295562706661994496/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295562706661994496/photo/1</a></p>
<hr>
<h2><a href="http://localhost:5000/bc4-myplace.png" rel="noopener noreferrer">BC4-MyPlace</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295820553857585152/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295820553857585152/photo/1</a></p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.205 [debug] l:len=7

10:45:07.205 [debug] l:buf=80:<h1>Basecamp 4 Features</h1>
<hr>
<h2><a href="http://localhost:5000/bc4.png" rel="noopener noreferrer">BC4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295562706661994496/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295562706661994496/photo/1</a></p>
<hr>
<h2><a href="http://localhost:5000/bc4-myplace.png" rel="noopener noreferrer">BC4-MyPlace</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295820553857585152/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295820553857585152/photo/1</a></p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.205 [debug] l:len=78

10:45:07.205 [debug] l:buf=0:<h1>Basecamp 4 Features</h1>
<hr>
<h2><a href="http://localhost:5000/bc4.png" rel="noopener noreferrer">BC4</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295562706661994496/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295562706661994496/photo/1</a></p>
<hr>
<h2><a href="http://localhost:5000/bc4-myplace.png" rel="noopener noreferrer">BC4-MyPlace</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1295820553857585152/photo/1" rel="noopener noreferrer">https://twitter.com/rjs/status/1295820553857585152/photo/1</a></p>
<p><a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf empty

10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf=938:<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.205 [debug] l:len=9

10:45:07.205 [debug] l:buf=38:<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.205 [debug] l:len=93

10:45:07.205 [debug] l:buf=8:<h1>Journal VS <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p>Journal has a fixed linear structure where you always put information at the end. It's like you're posting information to a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> on facebook. Append-only.</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> is about constantly putting information in the middle.</p>
<p>Creating branches of thought. Also IDs are there too to help it be even more flexible to make it a full graph.</p>
<hr>
<p>See also: <a href="http://localhost:5000/youtube----building-on-ideas-zettelkasten" rel="noopener noreferrer">Youtube -- Building on ideas Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.205 [debug] l:len=

10:45:07.205 [debug] l:buf empty

10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf=88:<h1>Old Become New</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.206 [debug] l:len=8

10:45:07.206 [debug] l:buf=8:<h1>Old Become New</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf empty

10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf=249:<h1>Top 3 reasons I like Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.206 [debug] l:len=2

10:45:07.206 [debug] l:buf=49:<h1>Top 3 reasons I like Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.206 [debug] l:len=24

10:45:07.206 [debug] l:buf=9:<h1>Top 3 reasons I like Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf empty

10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf=156:<h1>It is more difficult to retain and assimilate information you have no immediate use for</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.206 [debug] l:len=1

10:45:07.206 [debug] l:buf=56:<h1>It is more difficult to retain and assimilate information you have no immediate use for</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.206 [debug] l:len=15

10:45:07.206 [debug] l:buf=6:<h1>It is more difficult to retain and assimilate information you have no immediate use for</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf empty

10:45:07.206 [debug] l:len=

10:45:07.206 [debug] l:buf=248:<h1>Wikis</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.206 [debug] l:len=2

10:45:07.206 [debug] l:buf=48:<h1>Wikis</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.206 [debug] l:len=24

10:45:07.206 [debug] l:buf=8:<h1>Wikis</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.206 [debug] l:len=

10:45:07.207 [debug] l:buf empty

10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf=94:<h1>Fudge--Sycables Endpoints</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.207 [debug] l:len=9

10:45:07.207 [debug] l:buf=4:<h1>Fudge--Sycables Endpoints</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf empty

10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf=243:<h1>summarize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.207 [debug] l:len=2

10:45:07.207 [debug] l:buf=43:<h1>summarize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.207 [debug] l:len=24

10:45:07.207 [debug] l:buf=3:<h1>summarize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf empty

10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf=811:<h1>passive notification</h1>
<p>the idea is showing a "red dot" or other indicator without a sound or push notification. This is nice because it allows for <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>Some examples of this:</p>
<ol>
<li>Hey doesn't notify you at all when any email comes in by default</li>
</ol>
<p>Links: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.207 [debug] l:len=8

10:45:07.207 [debug] l:buf=11:<h1>passive notification</h1>
<p>the idea is showing a "red dot" or other indicator without a sound or push notification. This is nice because it allows for <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>Some examples of this:</p>
<ol>
<li>Hey doesn't notify you at all when any email comes in by default</li>
</ol>
<p>Links: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.207 [debug] l:len=81

10:45:07.207 [debug] l:buf=1:<h1>passive notification</h1>
<p>the idea is showing a "red dot" or other indicator without a sound or push notification. This is nice because it allows for <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>Some examples of this:</p>
<ol>
<li>Hey doesn't notify you at all when any email comes in by default</li>
</ol>
<p>Links: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.207 [debug] l:len=

10:45:07.207 [debug] l:buf empty

10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf=551:<h1>Slack doesn't have a back burner</h1>
<hr>
<h2>created: 2020-08-29T11:25:53-06:00
modified: 2020-08-29T11:32:27-06:00</h2>
<h1>Slack doesn't have a back burner</h1>
<p>Slack is kind of the brains of an organization, but unlike a real brain it can't mull things over a long period of time or even remember them for longer than a day or two. Sure it stores stuff, it does that like crazy, but it doesn't really remember or help the user to properly process stuff.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>


10:45:07.208 [debug] l:len=5

10:45:07.208 [debug] l:buf=51:<h1>Slack doesn't have a back burner</h1>
<hr>
<h2>created: 2020-08-29T11:25:53-06:00
modified: 2020-08-29T11:32:27-06:00</h2>
<h1>Slack doesn't have a back burner</h1>
<p>Slack is kind of the brains of an organization, but unlike a real brain it can't mull things over a long period of time or even remember them for longer than a day or two. Sure it stores stuff, it does that like crazy, but it doesn't really remember or help the user to properly process stuff.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>


10:45:07.208 [debug] l:len=55

10:45:07.208 [debug] l:buf=1:<h1>Slack doesn't have a back burner</h1>
<hr>
<h2>created: 2020-08-29T11:25:53-06:00
modified: 2020-08-29T11:32:27-06:00</h2>
<h1>Slack doesn't have a back burner</h1>
<p>Slack is kind of the brains of an organization, but unlike a real brain it can't mull things over a long period of time or even remember them for longer than a day or two. Sure it stores stuff, it does that like crazy, but it doesn't really remember or help the user to properly process stuff.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>


10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf empty

10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf=340:<hr>
<h2>created: 2020-08-26T19:56:04-06:00
modified: 2020-08-26T19:57:05-06:00</h2>
<p>Late bloomers book
The dip</p>
<p>About quitting</p>
<p><a href="https://youtu.be/Q4JqjbQZ6_Q" rel="noopener noreferrer">https://youtu.be/Q4JqjbQZ6_Q</a></p>
<ul>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>


10:45:07.208 [debug] l:len=3

10:45:07.208 [debug] l:buf=40:<hr>
<h2>created: 2020-08-26T19:56:04-06:00
modified: 2020-08-26T19:57:05-06:00</h2>
<p>Late bloomers book
The dip</p>
<p>About quitting</p>
<p><a href="https://youtu.be/Q4JqjbQZ6_Q" rel="noopener noreferrer">https://youtu.be/Q4JqjbQZ6_Q</a></p>
<ul>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>


10:45:07.208 [debug] l:len=34

10:45:07.208 [debug] l:buf=0:<hr>
<h2>created: 2020-08-26T19:56:04-06:00
modified: 2020-08-26T19:57:05-06:00</h2>
<p>Late bloomers book
The dip</p>
<p>About quitting</p>
<p><a href="https://youtu.be/Q4JqjbQZ6_Q" rel="noopener noreferrer">https://youtu.be/Q4JqjbQZ6_Q</a></p>
<ul>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>


10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf empty

10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf=76:<h1>gamedev</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.208 [debug] l:len=7

10:45:07.208 [debug] l:buf=6:<h1>gamedev</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf empty

10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf=830:<h1>Article--Distributed Work’s Five Levels of Autonomy</h1>
<p>Matt of <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> shared this graphic:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201026113815.png" rel="noopener noreferrer">Pasted image 20201026113815</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Level 4 deals with <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>.  They know about this because they built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></p>
<p><a href="https://ma.tt/2020/04/five-levels-of-autonomy/" rel="noopener noreferrer">https://ma.tt/2020/04/five-levels-of-autonomy/</a></p>


10:45:07.208 [debug] l:len=8

10:45:07.208 [debug] l:buf=30:<h1>Article--Distributed Work’s Five Levels of Autonomy</h1>
<p>Matt of <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> shared this graphic:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201026113815.png" rel="noopener noreferrer">Pasted image 20201026113815</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Level 4 deals with <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>.  They know about this because they built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></p>
<p><a href="https://ma.tt/2020/04/five-levels-of-autonomy/" rel="noopener noreferrer">https://ma.tt/2020/04/five-levels-of-autonomy/</a></p>


10:45:07.208 [debug] l:len=83

10:45:07.208 [debug] l:buf=0:<h1>Article--Distributed Work’s Five Levels of Autonomy</h1>
<p>Matt of <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> shared this graphic:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201026113815.png" rel="noopener noreferrer">Pasted image 20201026113815</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Level 4 deals with <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>.  They know about this because they built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></p>
<p><a href="https://ma.tt/2020/04/five-levels-of-autonomy/" rel="noopener noreferrer">https://ma.tt/2020/04/five-levels-of-autonomy/</a></p>


10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf empty

10:45:07.208 [debug] l:len=

10:45:07.208 [debug] l:buf=80:<h1>UX research</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.208 [debug] l:len=8

10:45:07.209 [debug] l:buf=0:<h1>UX research</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf empty

10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf=1063:<h1>Amazing video on Christopher Alexander's work</h1>
<p><a href="https://youtu.be/XLsTZXT0FlM" rel="noopener noreferrer">https://youtu.be/XLsTZXT0FlM</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>.</p>
<ul>
<li>Form: the UI, the house, the thing we are working on in physical form</li>
<li>Context: What's going on in the world, why are you eating the Snickers bar?</li>
<li>Fit: Does our solution make the world better?</li>
</ul>
<p>If you talk about something you want done in terms of form oftentimes you have no fit function, meaning you have no way to tell if it's actually solving a problem or not because you just went ahead and implemented it the way the customer described it on the screen. However Christopher Alexander is not about doing things that people ask so much as making the world better in whatever corner we are working in.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.209 [debug] l:len=1

10:45:07.209 [debug] l:buf=063:<h1>Amazing video on Christopher Alexander's work</h1>
<p><a href="https://youtu.be/XLsTZXT0FlM" rel="noopener noreferrer">https://youtu.be/XLsTZXT0FlM</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>.</p>
<ul>
<li>Form: the UI, the house, the thing we are working on in physical form</li>
<li>Context: What's going on in the world, why are you eating the Snickers bar?</li>
<li>Fit: Does our solution make the world better?</li>
</ul>
<p>If you talk about something you want done in terms of form oftentimes you have no fit function, meaning you have no way to tell if it's actually solving a problem or not because you just went ahead and implemented it the way the customer described it on the screen. However Christopher Alexander is not about doing things that people ask so much as making the world better in whatever corner we are working in.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.209 [debug] l:len=10

10:45:07.209 [debug] l:buf=63:<h1>Amazing video on Christopher Alexander's work</h1>
<p><a href="https://youtu.be/XLsTZXT0FlM" rel="noopener noreferrer">https://youtu.be/XLsTZXT0FlM</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>.</p>
<ul>
<li>Form: the UI, the house, the thing we are working on in physical form</li>
<li>Context: What's going on in the world, why are you eating the Snickers bar?</li>
<li>Fit: Does our solution make the world better?</li>
</ul>
<p>If you talk about something you want done in terms of form oftentimes you have no fit function, meaning you have no way to tell if it's actually solving a problem or not because you just went ahead and implemented it the way the customer described it on the screen. However Christopher Alexander is not about doing things that people ask so much as making the world better in whatever corner we are working in.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.209 [debug] l:len=106

10:45:07.209 [debug] l:buf=3:<h1>Amazing video on Christopher Alexander's work</h1>
<p><a href="https://youtu.be/XLsTZXT0FlM" rel="noopener noreferrer">https://youtu.be/XLsTZXT0FlM</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>.</p>
<ul>
<li>Form: the UI, the house, the thing we are working on in physical form</li>
<li>Context: What's going on in the world, why are you eating the Snickers bar?</li>
<li>Fit: Does our solution make the world better?</li>
</ul>
<p>If you talk about something you want done in terms of form oftentimes you have no fit function, meaning you have no way to tell if it's actually solving a problem or not because you just went ahead and implemented it the way the customer described it on the screen. However Christopher Alexander is not about doing things that people ask so much as making the world better in whatever corner we are working in.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf empty

10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf=308:<h1>divergence</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.209 [debug] l:len=3

10:45:07.209 [debug] l:buf=08:<h1>divergence</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.209 [debug] l:len=30

10:45:07.209 [debug] l:buf=8:<h1>divergence</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf empty

10:45:07.209 [debug] l:len=

10:45:07.209 [debug] l:buf=416:<p>Preparing to teach</p>
<ul>
<li>if we do not have the spirit we do not teach.
<ul>
<li>(Because he is the one carries it unto our hearts)</li>
</ul>
</li>
<li>Prepare ourselves
<ul>
<li>Encoperate in all our daily study</li>
</ul>
</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a>, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.209 [debug] l:len=4

10:45:07.209 [debug] l:buf=16:<p>Preparing to teach</p>
<ul>
<li>if we do not have the spirit we do not teach.
<ul>
<li>(Because he is the one carries it unto our hearts)</li>
</ul>
</li>
<li>Prepare ourselves
<ul>
<li>Encoperate in all our daily study</li>
</ul>
</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a>, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.210 [debug] l:len=41

10:45:07.210 [debug] l:buf=6:<p>Preparing to teach</p>
<ul>
<li>if we do not have the spirit we do not teach.
<ul>
<li>(Because he is the one carries it unto our hearts)</li>
</ul>
</li>
<li>Prepare ourselves
<ul>
<li>Encoperate in all our daily study</li>
</ul>
</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a>, <a href="http://localhost:5000/chruch" rel="noopener noreferrer">chruch</a></p>


10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf empty

10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf=95:<h1>close to the customer</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.210 [debug] l:len=9

10:45:07.210 [debug] l:buf=5:<h1>close to the customer</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf empty

10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf=586:<h1>Try the weird stuff first</h1>
<p>ref: <a href="https://twitter.com/jasonfried/status/1311712798502645760?s=09" rel="noopener noreferrer">https://twitter.com/jasonfried/status/1311712798502645760?s=09</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> <a href="http://localhost:5000/product-design" rel="noopener noreferrer">product design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.210 [debug] l:len=5

10:45:07.210 [debug] l:buf=86:<h1>Try the weird stuff first</h1>
<p>ref: <a href="https://twitter.com/jasonfried/status/1311712798502645760?s=09" rel="noopener noreferrer">https://twitter.com/jasonfried/status/1311712798502645760?s=09</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> <a href="http://localhost:5000/product-design" rel="noopener noreferrer">product design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.210 [debug] l:len=58

10:45:07.210 [debug] l:buf=6:<h1>Try the weird stuff first</h1>
<p>ref: <a href="https://twitter.com/jasonfried/status/1311712798502645760?s=09" rel="noopener noreferrer">https://twitter.com/jasonfried/status/1311712798502645760?s=09</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> <a href="http://localhost:5000/product-design" rel="noopener noreferrer">product design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf empty

10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf=277:<h1>Basecamp beige old fassioned but friendly</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.210 [debug] l:len=2

10:45:07.210 [debug] l:buf=77:<h1>Basecamp beige old fassioned but friendly</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.210 [debug] l:len=27

10:45:07.210 [debug] l:buf=7:<h1>Basecamp beige old fassioned but friendly</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf empty

10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf=279:<h1>Refactoring</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.210 [debug] l:len=2

10:45:07.210 [debug] l:buf=79:<h1>Refactoring</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.210 [debug] l:len=27

10:45:07.210 [debug] l:buf=9:<h1>Refactoring</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
</ul>


10:45:07.210 [debug] l:len=

10:45:07.210 [debug] l:buf empty

10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf=87:<h1>Agile Stories</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.211 [debug] l:len=8

10:45:07.211 [debug] l:buf=7:<h1>Agile Stories</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf empty

10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf=757:<h1>encourage checking it later</h1>
<p>In design it's good to realize that most things don't have to be checked <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>, most things can be <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> when a person has a spare moment.</p>
<p>It's a good idea to hide things away while someone is working on something.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
</ul>


10:45:07.211 [debug] l:len=7

10:45:07.211 [debug] l:buf=57:<h1>encourage checking it later</h1>
<p>In design it's good to realize that most things don't have to be checked <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>, most things can be <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> when a person has a spare moment.</p>
<p>It's a good idea to hide things away while someone is working on something.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
</ul>


10:45:07.211 [debug] l:len=75

10:45:07.211 [debug] l:buf=7:<h1>encourage checking it later</h1>
<p>In design it's good to realize that most things don't have to be checked <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>, most things can be <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> when a person has a spare moment.</p>
<p>It's a good idea to hide things away while someone is working on something.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
</ul>


10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf empty

10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf=352:<h1>Generative Thought</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.211 [debug] l:len=3

10:45:07.211 [debug] l:buf=52:<h1>Generative Thought</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.211 [debug] l:len=35

10:45:07.211 [debug] l:buf=2:<h1>Generative Thought</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf empty

10:45:07.211 [debug] l:len=

10:45:07.211 [debug] l:buf=415:<h1>Prod Cha-cha-changes</h1>
<h3>Happened</h3>
<p><strong>We don't change things till somebody gets hurt</strong> 🤕</p>
<p>We're going to screw up again, <strong>what matters is how we respond.</strong></p>
<p><strong>Speak up</strong> if you messed up</p>
<h1>DON'T MAKE DATA CHANGES IN A RUBY CONSOLE</h1>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.211 [debug] l:len=4

10:45:07.211 [debug] l:buf=15:<h1>Prod Cha-cha-changes</h1>
<h3>Happened</h3>
<p><strong>We don't change things till somebody gets hurt</strong> 🤕</p>
<p>We're going to screw up again, <strong>what matters is how we respond.</strong></p>
<p><strong>Speak up</strong> if you messed up</p>
<h1>DON'T MAKE DATA CHANGES IN A RUBY CONSOLE</h1>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.211 [debug] l:len=41

10:45:07.212 [debug] l:buf=5:<h1>Prod Cha-cha-changes</h1>
<h3>Happened</h3>
<p><strong>We don't change things till somebody gets hurt</strong> 🤕</p>
<p>We're going to screw up again, <strong>what matters is how we respond.</strong></p>
<p><strong>Speak up</strong> if you messed up</p>
<h1>DON'T MAKE DATA CHANGES IN A RUBY CONSOLE</h1>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf empty

10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf=1346:<h1>Why Elm is good for us.</h1>
<h2>1. JavaScript is hard to keep maintainable over time</h2>
<ul>
<li>When you try to refactor things you rely on the fact that you can <code>ag</code> it effectively.</li>
<li>Runtime exceptions are hard to find</li>
</ul>
<p>Elms solves this because:</p>
<ul>
<li>It pushes all runtime exceptions to compile time</li>
<li>When Refactoring it's easy to know if it broke something, it's a compile time error</li>
</ul>
<h2>2. <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is simpler than JavaScript + all the frameworks</h2>
<ul>
<li>Elm is a small language, far smaller than JavaScript</li>
<li>Elm has React and Redux built in. There's no question on which framework to use or any temptation to stray from the right path</li>
<li>You have to be a lot less disciplined to keep your code working.</li>
</ul>
<h2>3. Elm has better tooling than JavaScript</h2>
<h2>4. Compile time is shorter</h2>
<p>Compiling all the JavaScript code takes forever, Elm is a lot faster which would aid in developer productivity.</p>
<h2>4. It's a lot less setup</h2>
<ul>
<li>There's no standard way to set up a React project. It's hard to wire everything together</li>
</ul>
<h2>5. Added benefits</h2>
<p>The time traveling debugger even works with side-effecting things. This makes QAing a lot nicer.</p>


10:45:07.212 [debug] l:len=1

10:45:07.212 [debug] l:buf=346:<h1>Why Elm is good for us.</h1>
<h2>1. JavaScript is hard to keep maintainable over time</h2>
<ul>
<li>When you try to refactor things you rely on the fact that you can <code>ag</code> it effectively.</li>
<li>Runtime exceptions are hard to find</li>
</ul>
<p>Elms solves this because:</p>
<ul>
<li>It pushes all runtime exceptions to compile time</li>
<li>When Refactoring it's easy to know if it broke something, it's a compile time error</li>
</ul>
<h2>2. <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is simpler than JavaScript + all the frameworks</h2>
<ul>
<li>Elm is a small language, far smaller than JavaScript</li>
<li>Elm has React and Redux built in. There's no question on which framework to use or any temptation to stray from the right path</li>
<li>You have to be a lot less disciplined to keep your code working.</li>
</ul>
<h2>3. Elm has better tooling than JavaScript</h2>
<h2>4. Compile time is shorter</h2>
<p>Compiling all the JavaScript code takes forever, Elm is a lot faster which would aid in developer productivity.</p>
<h2>4. It's a lot less setup</h2>
<ul>
<li>There's no standard way to set up a React project. It's hard to wire everything together</li>
</ul>
<h2>5. Added benefits</h2>
<p>The time traveling debugger even works with side-effecting things. This makes QAing a lot nicer.</p>


10:45:07.212 [debug] l:len=13

10:45:07.212 [debug] l:buf=46:<h1>Why Elm is good for us.</h1>
<h2>1. JavaScript is hard to keep maintainable over time</h2>
<ul>
<li>When you try to refactor things you rely on the fact that you can <code>ag</code> it effectively.</li>
<li>Runtime exceptions are hard to find</li>
</ul>
<p>Elms solves this because:</p>
<ul>
<li>It pushes all runtime exceptions to compile time</li>
<li>When Refactoring it's easy to know if it broke something, it's a compile time error</li>
</ul>
<h2>2. <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is simpler than JavaScript + all the frameworks</h2>
<ul>
<li>Elm is a small language, far smaller than JavaScript</li>
<li>Elm has React and Redux built in. There's no question on which framework to use or any temptation to stray from the right path</li>
<li>You have to be a lot less disciplined to keep your code working.</li>
</ul>
<h2>3. Elm has better tooling than JavaScript</h2>
<h2>4. Compile time is shorter</h2>
<p>Compiling all the JavaScript code takes forever, Elm is a lot faster which would aid in developer productivity.</p>
<h2>4. It's a lot less setup</h2>
<ul>
<li>There's no standard way to set up a React project. It's hard to wire everything together</li>
</ul>
<h2>5. Added benefits</h2>
<p>The time traveling debugger even works with side-effecting things. This makes QAing a lot nicer.</p>


10:45:07.212 [debug] l:len=134

10:45:07.212 [debug] l:buf=6:<h1>Why Elm is good for us.</h1>
<h2>1. JavaScript is hard to keep maintainable over time</h2>
<ul>
<li>When you try to refactor things you rely on the fact that you can <code>ag</code> it effectively.</li>
<li>Runtime exceptions are hard to find</li>
</ul>
<p>Elms solves this because:</p>
<ul>
<li>It pushes all runtime exceptions to compile time</li>
<li>When Refactoring it's easy to know if it broke something, it's a compile time error</li>
</ul>
<h2>2. <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is simpler than JavaScript + all the frameworks</h2>
<ul>
<li>Elm is a small language, far smaller than JavaScript</li>
<li>Elm has React and Redux built in. There's no question on which framework to use or any temptation to stray from the right path</li>
<li>You have to be a lot less disciplined to keep your code working.</li>
</ul>
<h2>3. Elm has better tooling than JavaScript</h2>
<h2>4. Compile time is shorter</h2>
<p>Compiling all the JavaScript code takes forever, Elm is a lot faster which would aid in developer productivity.</p>
<h2>4. It's a lot less setup</h2>
<ul>
<li>There's no standard way to set up a React project. It's hard to wire everything together</li>
</ul>
<h2>5. Added benefits</h2>
<p>The time traveling debugger even works with side-effecting things. This makes QAing a lot nicer.</p>


10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf empty

10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf=1294:<h1>Email's slow decent</h1>
<ol>
<li>Email started out as a thing that people would just talk to people</li>
<li>Email started to be used for work</li>
<li>Then people realized that they could advertise to people via Email</li>
<li>People realized that this was a valuable attention real estate and notifications stared to go there too</li>
<li>Gmail tried to differentiate the different types of emails, but to poor success</li>
<li>Gmail stopped innovating and even killed of it's internal competitor "Inbox"</li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> came along and fixed a ton of problems that it caused</li>
</ol>
<p>Reasons Email failed:</p>
<ul>
<li>There's no differentiation between emails that have to be read now and those that can be read whenever (newsletters)</li>
<li>Email lacks <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a> because of <a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.212 [debug] l:len=1

10:45:07.212 [debug] l:buf=294:<h1>Email's slow decent</h1>
<ol>
<li>Email started out as a thing that people would just talk to people</li>
<li>Email started to be used for work</li>
<li>Then people realized that they could advertise to people via Email</li>
<li>People realized that this was a valuable attention real estate and notifications stared to go there too</li>
<li>Gmail tried to differentiate the different types of emails, but to poor success</li>
<li>Gmail stopped innovating and even killed of it's internal competitor "Inbox"</li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> came along and fixed a ton of problems that it caused</li>
</ol>
<p>Reasons Email failed:</p>
<ul>
<li>There's no differentiation between emails that have to be read now and those that can be read whenever (newsletters)</li>
<li>Email lacks <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a> because of <a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.212 [debug] l:len=12

10:45:07.212 [debug] l:buf=94:<h1>Email's slow decent</h1>
<ol>
<li>Email started out as a thing that people would just talk to people</li>
<li>Email started to be used for work</li>
<li>Then people realized that they could advertise to people via Email</li>
<li>People realized that this was a valuable attention real estate and notifications stared to go there too</li>
<li>Gmail tried to differentiate the different types of emails, but to poor success</li>
<li>Gmail stopped innovating and even killed of it's internal competitor "Inbox"</li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> came along and fixed a ton of problems that it caused</li>
</ol>
<p>Reasons Email failed:</p>
<ul>
<li>There's no differentiation between emails that have to be read now and those that can be read whenever (newsletters)</li>
<li>Email lacks <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a> because of <a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.212 [debug] l:len=129

10:45:07.212 [debug] l:buf=4:<h1>Email's slow decent</h1>
<ol>
<li>Email started out as a thing that people would just talk to people</li>
<li>Email started to be used for work</li>
<li>Then people realized that they could advertise to people via Email</li>
<li>People realized that this was a valuable attention real estate and notifications stared to go there too</li>
<li>Gmail tried to differentiate the different types of emails, but to poor success</li>
<li>Gmail stopped innovating and even killed of it's internal competitor "Inbox"</li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a> came along and fixed a ton of problems that it caused</li>
</ol>
<p>Reasons Email failed:</p>
<ul>
<li>There's no differentiation between emails that have to be read now and those that can be read whenever (newsletters)</li>
<li>Email lacks <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a> because of <a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf empty

10:45:07.212 [debug] l:len=

10:45:07.212 [debug] l:buf=973:<h1>You should care what's in the hot dog</h1>
<p>Most people don't care very much about who makes a particular piece of software why it is made a particular way... But they should.</p>
<p>The main reason is just like a hot dog you when you use software you are essentially consuming it when you consume it it's becoming part of your organization and you and everyone in it. Affects you in deep ways and influence you for the worse or the better.</p>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a>, <a href="http://localhost:5000/privacy" rel="noopener noreferrer">Privacy</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.213 [debug] l:len=9

10:45:07.213 [debug] l:buf=73:<h1>You should care what's in the hot dog</h1>
<p>Most people don't care very much about who makes a particular piece of software why it is made a particular way... But they should.</p>
<p>The main reason is just like a hot dog you when you use software you are essentially consuming it when you consume it it's becoming part of your organization and you and everyone in it. Affects you in deep ways and influence you for the worse or the better.</p>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a>, <a href="http://localhost:5000/privacy" rel="noopener noreferrer">Privacy</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.213 [debug] l:len=97

10:45:07.213 [debug] l:buf=3:<h1>You should care what's in the hot dog</h1>
<p>Most people don't care very much about who makes a particular piece of software why it is made a particular way... But they should.</p>
<p>The main reason is just like a hot dog you when you use software you are essentially consuming it when you consume it it's becoming part of your organization and you and everyone in it. Affects you in deep ways and influence you for the worse or the better.</p>
<p><a href="http://localhost:5000/programming" rel="noopener noreferrer">Programming</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/empathy" rel="noopener noreferrer">empathy</a>, <a href="http://localhost:5000/privacy" rel="noopener noreferrer">Privacy</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.213 [debug] l:len=

10:45:07.213 [debug] l:buf empty

10:45:07.213 [debug] l:len=

10:45:07.213 [debug] l:buf=3230:<h1>Achieving Reusability</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<h2>Why Reusability?</h2>
<h3>When it goes Good</h3>
<ol>
<li>Eases later implementations (hopefully)</li>
<li>Might make calling code much more readable.</li>
<li>Less lines of code overall (hopefully)</li>
<li><strong>Work at a higher level,</strong> if you feel like you're writing the same code over and over, STOP! You're wasting your time.</li>
</ol>
<h3>When it goes Bad</h3>
<ol>
<li>It might not end up being that reusable</li>
<li>It might make it less readable</li>
<li>It can be time consuming</li>
</ol>
<h3>The Ugly</h3>
<ol>
<li>It can make code very hard to understand</li>
<li>Makes code very indirect and hard to follow</li>
</ol>
<h2>Word of caution...</h2>
<blockquote>
<p>duplication is far cheaper than the wrong abstraction</p>
</blockquote>
<p>However to that I say</p>
<blockquote>
<p>Being afraid of making the wrong abstraction is a poor excuse to never do it.</p>
</blockquote>
<p>I think the real problem is:</p>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<h2>How to make things reusable?</h2>
<h3>0. Recognize Duplication</h3>
<p>If you see some code that's just <strong>feels</strong> like you've written it before or you've seen it before, just look for it!</p>
<pre><code>* Have you written your own component for something that looks very similar on another page?
</code></pre>
<h3>1. Smaller Abstraction</h3>
<p><strong>SRP</strong></p>
<p>Think Single Responsibility principle!</p>
<p>Tell-tell signs you're doing it wrong:
1. You add arguments for new use cases (read_message)
2. You have to name it with "and" <code>UserCanDoThisAndThat</code> <code>CreateMessageAndSendEmail</code></p>
<h3>2. Make API's easy to remember and use</h3>
<blockquote>
<p>The best modules are deep: <strong>they have a lot of functionality hidden behind a simple interface.</strong> A deep module is a good abstraction because only a small fraction of its internal complexity is visible to its users. A shallow module is one whose interface is relatively complex in comparison to the functionality that it provides.</p>
</blockquote>
<h3>3. Reusable Naming</h3>
<h3>4. Good documentation</h3>
<h3>5. Good code organization</h3>
<h3>6. Tell people about it!</h3>
<h3>7. Use the platform</h3>
<p>Know the standard lib! Using an esoteric standard lib function is <strong>good</strong> you might not know it yet, but you can learn. Thousands of libraries? Not so good.</p>
<h2>Practical Example:</h2>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li>#organization</li>
</ul>


10:45:07.213 [debug] l:len=3

10:45:07.213 [debug] l:buf=230:<h1>Achieving Reusability</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<h2>Why Reusability?</h2>
<h3>When it goes Good</h3>
<ol>
<li>Eases later implementations (hopefully)</li>
<li>Might make calling code much more readable.</li>
<li>Less lines of code overall (hopefully)</li>
<li><strong>Work at a higher level,</strong> if you feel like you're writing the same code over and over, STOP! You're wasting your time.</li>
</ol>
<h3>When it goes Bad</h3>
<ol>
<li>It might not end up being that reusable</li>
<li>It might make it less readable</li>
<li>It can be time consuming</li>
</ol>
<h3>The Ugly</h3>
<ol>
<li>It can make code very hard to understand</li>
<li>Makes code very indirect and hard to follow</li>
</ol>
<h2>Word of caution...</h2>
<blockquote>
<p>duplication is far cheaper than the wrong abstraction</p>
</blockquote>
<p>However to that I say</p>
<blockquote>
<p>Being afraid of making the wrong abstraction is a poor excuse to never do it.</p>
</blockquote>
<p>I think the real problem is:</p>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<h2>How to make things reusable?</h2>
<h3>0. Recognize Duplication</h3>
<p>If you see some code that's just <strong>feels</strong> like you've written it before or you've seen it before, just look for it!</p>
<pre><code>* Have you written your own component for something that looks very similar on another page?
</code></pre>
<h3>1. Smaller Abstraction</h3>
<p><strong>SRP</strong></p>
<p>Think Single Responsibility principle!</p>
<p>Tell-tell signs you're doing it wrong:
1. You add arguments for new use cases (read_message)
2. You have to name it with "and" <code>UserCanDoThisAndThat</code> <code>CreateMessageAndSendEmail</code></p>
<h3>2. Make API's easy to remember and use</h3>
<blockquote>
<p>The best modules are deep: <strong>they have a lot of functionality hidden behind a simple interface.</strong> A deep module is a good abstraction because only a small fraction of its internal complexity is visible to its users. A shallow module is one whose interface is relatively complex in comparison to the functionality that it provides.</p>
</blockquote>
<h3>3. Reusable Naming</h3>
<h3>4. Good documentation</h3>
<h3>5. Good code organization</h3>
<h3>6. Tell people about it!</h3>
<h3>7. Use the platform</h3>
<p>Know the standard lib! Using an esoteric standard lib function is <strong>good</strong> you might not know it yet, but you can learn. Thousands of libraries? Not so good.</p>
<h2>Practical Example:</h2>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li>#organization</li>
</ul>


10:45:07.213 [debug] l:len=32

10:45:07.213 [debug] l:buf=30:<h1>Achieving Reusability</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<h2>Why Reusability?</h2>
<h3>When it goes Good</h3>
<ol>
<li>Eases later implementations (hopefully)</li>
<li>Might make calling code much more readable.</li>
<li>Less lines of code overall (hopefully)</li>
<li><strong>Work at a higher level,</strong> if you feel like you're writing the same code over and over, STOP! You're wasting your time.</li>
</ol>
<h3>When it goes Bad</h3>
<ol>
<li>It might not end up being that reusable</li>
<li>It might make it less readable</li>
<li>It can be time consuming</li>
</ol>
<h3>The Ugly</h3>
<ol>
<li>It can make code very hard to understand</li>
<li>Makes code very indirect and hard to follow</li>
</ol>
<h2>Word of caution...</h2>
<blockquote>
<p>duplication is far cheaper than the wrong abstraction</p>
</blockquote>
<p>However to that I say</p>
<blockquote>
<p>Being afraid of making the wrong abstraction is a poor excuse to never do it.</p>
</blockquote>
<p>I think the real problem is:</p>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<h2>How to make things reusable?</h2>
<h3>0. Recognize Duplication</h3>
<p>If you see some code that's just <strong>feels</strong> like you've written it before or you've seen it before, just look for it!</p>
<pre><code>* Have you written your own component for something that looks very similar on another page?
</code></pre>
<h3>1. Smaller Abstraction</h3>
<p><strong>SRP</strong></p>
<p>Think Single Responsibility principle!</p>
<p>Tell-tell signs you're doing it wrong:
1. You add arguments for new use cases (read_message)
2. You have to name it with "and" <code>UserCanDoThisAndThat</code> <code>CreateMessageAndSendEmail</code></p>
<h3>2. Make API's easy to remember and use</h3>
<blockquote>
<p>The best modules are deep: <strong>they have a lot of functionality hidden behind a simple interface.</strong> A deep module is a good abstraction because only a small fraction of its internal complexity is visible to its users. A shallow module is one whose interface is relatively complex in comparison to the functionality that it provides.</p>
</blockquote>
<h3>3. Reusable Naming</h3>
<h3>4. Good documentation</h3>
<h3>5. Good code organization</h3>
<h3>6. Tell people about it!</h3>
<h3>7. Use the platform</h3>
<p>Know the standard lib! Using an esoteric standard lib function is <strong>good</strong> you might not know it yet, but you can learn. Thousands of libraries? Not so good.</p>
<h2>Practical Example:</h2>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li>#organization</li>
</ul>


10:45:07.213 [debug] l:len=323

10:45:07.213 [debug] l:buf=0:<h1>Achieving Reusability</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>
<h2>Why Reusability?</h2>
<h3>When it goes Good</h3>
<ol>
<li>Eases later implementations (hopefully)</li>
<li>Might make calling code much more readable.</li>
<li>Less lines of code overall (hopefully)</li>
<li><strong>Work at a higher level,</strong> if you feel like you're writing the same code over and over, STOP! You're wasting your time.</li>
</ol>
<h3>When it goes Bad</h3>
<ol>
<li>It might not end up being that reusable</li>
<li>It might make it less readable</li>
<li>It can be time consuming</li>
</ol>
<h3>The Ugly</h3>
<ol>
<li>It can make code very hard to understand</li>
<li>Makes code very indirect and hard to follow</li>
</ol>
<h2>Word of caution...</h2>
<blockquote>
<p>duplication is far cheaper than the wrong abstraction</p>
</blockquote>
<p>However to that I say</p>
<blockquote>
<p>Being afraid of making the wrong abstraction is a poor excuse to never do it.</p>
</blockquote>
<p>I think the real problem is:</p>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<h2>How to make things reusable?</h2>
<h3>0. Recognize Duplication</h3>
<p>If you see some code that's just <strong>feels</strong> like you've written it before or you've seen it before, just look for it!</p>
<pre><code>* Have you written your own component for something that looks very similar on another page?
</code></pre>
<h3>1. Smaller Abstraction</h3>
<p><strong>SRP</strong></p>
<p>Think Single Responsibility principle!</p>
<p>Tell-tell signs you're doing it wrong:
1. You add arguments for new use cases (read_message)
2. You have to name it with "and" <code>UserCanDoThisAndThat</code> <code>CreateMessageAndSendEmail</code></p>
<h3>2. Make API's easy to remember and use</h3>
<blockquote>
<p>The best modules are deep: <strong>they have a lot of functionality hidden behind a simple interface.</strong> A deep module is a good abstraction because only a small fraction of its internal complexity is visible to its users. A shallow module is one whose interface is relatively complex in comparison to the functionality that it provides.</p>
</blockquote>
<h3>3. Reusable Naming</h3>
<h3>4. Good documentation</h3>
<h3>5. Good code organization</h3>
<h3>6. Tell people about it!</h3>
<h3>7. Use the platform</h3>
<p>Know the standard lib! Using an esoteric standard lib function is <strong>good</strong> you might not know it yet, but you can learn. Thousands of libraries? Not so good.</p>
<h2>Practical Example:</h2>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li>#organization</li>
</ul>


10:45:07.213 [debug] l:len=

10:45:07.213 [debug] l:buf empty

10:45:07.213 [debug] l:len=

10:45:07.213 [debug] l:buf=239:<h1>Folders V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a></li>
</ul>


10:45:07.213 [debug] l:len=2

10:45:07.213 [debug] l:buf=39:<h1>Folders V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a></li>
</ul>


10:45:07.213 [debug] l:len=23

10:45:07.213 [debug] l:buf=9:<h1>Folders V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a></li>
</ul>


10:45:07.213 [debug] l:len=

10:45:07.213 [debug] l:buf empty

10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf=343:<h1>Goal systems</h1>
<p>I succeeded at a few, but I failed at a lot of them. Eventually, I began to realize that my results had very little to do with the goals I set and nearly everything to do with the systems I followed.
<a href="https://jamesclear.com/goals-systems" rel="noopener noreferrer">https://jamesclear.com/goals-systems</a></p>


10:45:07.214 [debug] l:len=3

10:45:07.214 [debug] l:buf=43:<h1>Goal systems</h1>
<p>I succeeded at a few, but I failed at a lot of them. Eventually, I began to realize that my results had very little to do with the goals I set and nearly everything to do with the systems I followed.
<a href="https://jamesclear.com/goals-systems" rel="noopener noreferrer">https://jamesclear.com/goals-systems</a></p>


10:45:07.214 [debug] l:len=34

10:45:07.214 [debug] l:buf=3:<h1>Goal systems</h1>
<p>I succeeded at a few, but I failed at a lot of them. Eventually, I began to realize that my results had very little to do with the goals I set and nearly everything to do with the systems I followed.
<a href="https://jamesclear.com/goals-systems" rel="noopener noreferrer">https://jamesclear.com/goals-systems</a></p>


10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf empty

10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf=1718:<h1>shy of public channels</h1>
<p>Channels in <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> are "super public", they are like an <a href="http://localhost:5000/open-office-design" rel="noopener noreferrer">open office design</a>. And just like open office design they actually make people talk less, not more.</p>
<p>This is because by saying anything in a channel you are using up "<a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">airtime</a>" that could be used for other things.</p>
<p>This is made worse by the fact that Slack uses <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> to force people to read stuff <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a> which means you can't quietly make something public, if you share it <em><strong>now</strong></em> you're going to interrupt someones' <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <em><strong>now</strong></em>. By using airtime, you're spending people's <a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">limited pool of attention</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>


10:45:07.214 [debug] l:len=1

10:45:07.214 [debug] l:buf=718:<h1>shy of public channels</h1>
<p>Channels in <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> are "super public", they are like an <a href="http://localhost:5000/open-office-design" rel="noopener noreferrer">open office design</a>. And just like open office design they actually make people talk less, not more.</p>
<p>This is because by saying anything in a channel you are using up "<a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">airtime</a>" that could be used for other things.</p>
<p>This is made worse by the fact that Slack uses <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> to force people to read stuff <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a> which means you can't quietly make something public, if you share it <em><strong>now</strong></em> you're going to interrupt someones' <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <em><strong>now</strong></em>. By using airtime, you're spending people's <a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">limited pool of attention</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>


10:45:07.214 [debug] l:len=17

10:45:07.214 [debug] l:buf=18:<h1>shy of public channels</h1>
<p>Channels in <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> are "super public", they are like an <a href="http://localhost:5000/open-office-design" rel="noopener noreferrer">open office design</a>. And just like open office design they actually make people talk less, not more.</p>
<p>This is because by saying anything in a channel you are using up "<a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">airtime</a>" that could be used for other things.</p>
<p>This is made worse by the fact that Slack uses <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> to force people to read stuff <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a> which means you can't quietly make something public, if you share it <em><strong>now</strong></em> you're going to interrupt someones' <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <em><strong>now</strong></em>. By using airtime, you're spending people's <a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">limited pool of attention</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>


10:45:07.214 [debug] l:len=171

10:45:07.214 [debug] l:buf=8:<h1>shy of public channels</h1>
<p>Channels in <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> are "super public", they are like an <a href="http://localhost:5000/open-office-design" rel="noopener noreferrer">open office design</a>. And just like open office design they actually make people talk less, not more.</p>
<p>This is because by saying anything in a channel you are using up "<a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">airtime</a>" that could be used for other things.</p>
<p>This is made worse by the fact that Slack uses <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> to force people to read stuff <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a> which means you can't quietly make something public, if you share it <em><strong>now</strong></em> you're going to interrupt someones' <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <em><strong>now</strong></em>. By using airtime, you're spending people's <a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">limited pool of attention</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
</ul>


10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf empty

10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf=735:<h1>Basecamp's single page design</h1>
<p>Basecamp doesn't like 3 column design or even 2 column design because it distracts you from the task at hand. Your mind is always going to the sidebar and checking to see if there's another <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> waiting to be read.</p>
<p>This design allows for more <a href="http://localhost:5000/calm" rel="noopener noreferrer">calm</a> and <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> to happen.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
</ul>


10:45:07.214 [debug] l:len=7

10:45:07.214 [debug] l:buf=35:<h1>Basecamp's single page design</h1>
<p>Basecamp doesn't like 3 column design or even 2 column design because it distracts you from the task at hand. Your mind is always going to the sidebar and checking to see if there's another <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> waiting to be read.</p>
<p>This design allows for more <a href="http://localhost:5000/calm" rel="noopener noreferrer">calm</a> and <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> to happen.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
</ul>


10:45:07.214 [debug] l:len=73

10:45:07.214 [debug] l:buf=5:<h1>Basecamp's single page design</h1>
<p>Basecamp doesn't like 3 column design or even 2 column design because it distracts you from the task at hand. Your mind is always going to the sidebar and checking to see if there's another <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> waiting to be read.</p>
<p>This design allows for more <a href="http://localhost:5000/calm" rel="noopener noreferrer">calm</a> and <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> to happen.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
</ul>


10:45:07.214 [debug] l:len=

10:45:07.214 [debug] l:buf empty

10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf=73:<h1>Data</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.215 [debug] l:len=7

10:45:07.215 [debug] l:buf=3:<h1>Data</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf empty

10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf=329:<h1>Great Artists Steal</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.215 [debug] l:len=3

10:45:07.215 [debug] l:buf=29:<h1>Great Artists Steal</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.215 [debug] l:len=32

10:45:07.215 [debug] l:buf=9:<h1>Great Artists Steal</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf empty

10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf=102:<h1>Screen Recording 2020-10-21 at 01</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.215 [debug] l:len=1

10:45:07.215 [debug] l:buf=02:<h1>Screen Recording 2020-10-21 at 01</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.215 [debug] l:len=10

10:45:07.215 [debug] l:buf=2:<h1>Screen Recording 2020-10-21 at 01</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf empty

10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf=249:<h1>Walking through the 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.215 [debug] l:len=2

10:45:07.215 [debug] l:buf=49:<h1>Walking through the 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.215 [debug] l:len=24

10:45:07.215 [debug] l:buf=9:<h1>Walking through the 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.215 [debug] l:len=

10:45:07.215 [debug] l:buf empty

10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf=435:<h1>Slack water-cooler (The Arc of collaboration)</h1>
<p><a href="https://kwokchain.com/2019/08/16/the-arc-of-collaboration/" rel="noopener noreferrer">https://kwokchain.com/2019/08/16/the-arc-of-collaboration/</a></p>
<blockquote>
<p>...there are fewer and fewer exceptions that need Slack. In fact, a sign of a maturing company is one that progressively removes the need to use Slack for more and more situations.</p>
</blockquote>


10:45:07.216 [debug] l:len=4

10:45:07.216 [debug] l:buf=35:<h1>Slack water-cooler (The Arc of collaboration)</h1>
<p><a href="https://kwokchain.com/2019/08/16/the-arc-of-collaboration/" rel="noopener noreferrer">https://kwokchain.com/2019/08/16/the-arc-of-collaboration/</a></p>
<blockquote>
<p>...there are fewer and fewer exceptions that need Slack. In fact, a sign of a maturing company is one that progressively removes the need to use Slack for more and more situations.</p>
</blockquote>


10:45:07.216 [debug] l:len=43

10:45:07.216 [debug] l:buf=5:<h1>Slack water-cooler (The Arc of collaboration)</h1>
<p><a href="https://kwokchain.com/2019/08/16/the-arc-of-collaboration/" rel="noopener noreferrer">https://kwokchain.com/2019/08/16/the-arc-of-collaboration/</a></p>
<blockquote>
<p>...there are fewer and fewer exceptions that need Slack. In fact, a sign of a maturing company is one that progressively removes the need to use Slack for more and more situations.</p>
</blockquote>


10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf empty

10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf=704:<h1>Even though writing is slower, it's faster to read</h1>
<p>Writing may be quite a bit slower, people can only write at about 70wpm on average, they can about far faster than then can listen, especially considering they can <em>skim</em> when they read.</p>
<p><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></li>
<li><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">Write once, read many times</a></li>
</ul>


10:45:07.216 [debug] l:len=7

10:45:07.216 [debug] l:buf=04:<h1>Even though writing is slower, it's faster to read</h1>
<p>Writing may be quite a bit slower, people can only write at about 70wpm on average, they can about far faster than then can listen, especially considering they can <em>skim</em> when they read.</p>
<p><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></li>
<li><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">Write once, read many times</a></li>
</ul>


10:45:07.216 [debug] l:len=70

10:45:07.216 [debug] l:buf=4:<h1>Even though writing is slower, it's faster to read</h1>
<p>Writing may be quite a bit slower, people can only write at about 70wpm on average, they can about far faster than then can listen, especially considering they can <em>skim</em> when they read.</p>
<p><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/prefer-writing-over-speaking" rel="noopener noreferrer">Prefer Writing over Speaking</a></li>
<li><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">Write once, read many times</a></li>
</ul>


10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf empty

10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf=259:<h1>UI grease</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.216 [debug] l:len=2

10:45:07.216 [debug] l:buf=59:<h1>UI grease</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.216 [debug] l:len=25

10:45:07.216 [debug] l:buf=9:<h1>UI grease</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf empty

10:45:07.216 [debug] l:len=

10:45:07.216 [debug] l:buf=78:<h1>JAM Stack</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.216 [debug] l:len=7

10:45:07.216 [debug] l:buf=8:<h1>JAM Stack</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf empty

10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf=84:<h1>Pasted image 18</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.217 [debug] l:len=8

10:45:07.217 [debug] l:buf=4:<h1>Pasted image 18</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf empty

10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf=2608:<h1>The Reductionist Mentality in Programming</h1>
<h2>What is a Reductionist?</h2>
<blockquote>
<p>a person who analyzes and describes a complex phenomenon in terms of its simple or fundamental constituents.<br>
~ Google Dictionary</p>
</blockquote>
<h1>What are the dangers?</h1>
<p>The main problem with having a reductionist mentality is the fact that we're trying to make a decision based on incomplete data. Programming languages for instance are highly interconnected with social and interpersonal communications between programmers. This is why, in my opinion, we care so much about them as programmers. They define both the language that we get to express business problems either eloquently or not in and also the means of communication to our future colleagues and ourselves. Oh yeah, and they end up producing the products we can sell.</p>
<p>There's many ways to look at a programming language. There's the actual experience of how easy it is to create a abstraction, or paradigm. There's the idea how easy it is to change that paradigm once it becomes obsolete. There's also the aspect of how hard is it to find a piece of code (which has both the chosen organization structure but also the tooling to make this easier). Once you've found a piece of code, can you find all the places it's used easily? Is the way you write code obvious to the programmer who will read it? Any advanced concepts may alienate the reader but also might make the code more efficient to expressive once understood. How easy is it to teach to people that have a traditional background? How is the community that is centered around the language? Is it toxic or not? Are these the kinds of programmers you want helping you? Is it Object Oriented or Functional? How many people know it currently?</p>
<p>The hard part about most talks about programming languages is the fact they tend to focus on one level of detail. The experience of writing and refactoring it as a single programmer. However I think it's far less interesting than the larger picture.</p>
<p>Keywords: <a href="http://localhost:5000/overcoming-the-destructive-effects-of-" rel="noopener noreferrer">Overcoming the destructive effects of </a>, <a href="http://localhost:5000/data" rel="noopener noreferrer">Data</a>, <a href="http://localhost:5000/bullying" rel="noopener noreferrer">Bullying</a>, <a href="http://localhost:5000/gating" rel="noopener noreferrer">Gating</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/community" rel="noopener noreferrer">Community</a></p>


10:45:07.217 [debug] l:len=2

10:45:07.217 [debug] l:buf=608:<h1>The Reductionist Mentality in Programming</h1>
<h2>What is a Reductionist?</h2>
<blockquote>
<p>a person who analyzes and describes a complex phenomenon in terms of its simple or fundamental constituents.<br>
~ Google Dictionary</p>
</blockquote>
<h1>What are the dangers?</h1>
<p>The main problem with having a reductionist mentality is the fact that we're trying to make a decision based on incomplete data. Programming languages for instance are highly interconnected with social and interpersonal communications between programmers. This is why, in my opinion, we care so much about them as programmers. They define both the language that we get to express business problems either eloquently or not in and also the means of communication to our future colleagues and ourselves. Oh yeah, and they end up producing the products we can sell.</p>
<p>There's many ways to look at a programming language. There's the actual experience of how easy it is to create a abstraction, or paradigm. There's the idea how easy it is to change that paradigm once it becomes obsolete. There's also the aspect of how hard is it to find a piece of code (which has both the chosen organization structure but also the tooling to make this easier). Once you've found a piece of code, can you find all the places it's used easily? Is the way you write code obvious to the programmer who will read it? Any advanced concepts may alienate the reader but also might make the code more efficient to expressive once understood. How easy is it to teach to people that have a traditional background? How is the community that is centered around the language? Is it toxic or not? Are these the kinds of programmers you want helping you? Is it Object Oriented or Functional? How many people know it currently?</p>
<p>The hard part about most talks about programming languages is the fact they tend to focus on one level of detail. The experience of writing and refactoring it as a single programmer. However I think it's far less interesting than the larger picture.</p>
<p>Keywords: <a href="http://localhost:5000/overcoming-the-destructive-effects-of-" rel="noopener noreferrer">Overcoming the destructive effects of </a>, <a href="http://localhost:5000/data" rel="noopener noreferrer">Data</a>, <a href="http://localhost:5000/bullying" rel="noopener noreferrer">Bullying</a>, <a href="http://localhost:5000/gating" rel="noopener noreferrer">Gating</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/community" rel="noopener noreferrer">Community</a></p>


10:45:07.217 [debug] l:len=26

10:45:07.217 [debug] l:buf=08:<h1>The Reductionist Mentality in Programming</h1>
<h2>What is a Reductionist?</h2>
<blockquote>
<p>a person who analyzes and describes a complex phenomenon in terms of its simple or fundamental constituents.<br>
~ Google Dictionary</p>
</blockquote>
<h1>What are the dangers?</h1>
<p>The main problem with having a reductionist mentality is the fact that we're trying to make a decision based on incomplete data. Programming languages for instance are highly interconnected with social and interpersonal communications between programmers. This is why, in my opinion, we care so much about them as programmers. They define both the language that we get to express business problems either eloquently or not in and also the means of communication to our future colleagues and ourselves. Oh yeah, and they end up producing the products we can sell.</p>
<p>There's many ways to look at a programming language. There's the actual experience of how easy it is to create a abstraction, or paradigm. There's the idea how easy it is to change that paradigm once it becomes obsolete. There's also the aspect of how hard is it to find a piece of code (which has both the chosen organization structure but also the tooling to make this easier). Once you've found a piece of code, can you find all the places it's used easily? Is the way you write code obvious to the programmer who will read it? Any advanced concepts may alienate the reader but also might make the code more efficient to expressive once understood. How easy is it to teach to people that have a traditional background? How is the community that is centered around the language? Is it toxic or not? Are these the kinds of programmers you want helping you? Is it Object Oriented or Functional? How many people know it currently?</p>
<p>The hard part about most talks about programming languages is the fact they tend to focus on one level of detail. The experience of writing and refactoring it as a single programmer. However I think it's far less interesting than the larger picture.</p>
<p>Keywords: <a href="http://localhost:5000/overcoming-the-destructive-effects-of-" rel="noopener noreferrer">Overcoming the destructive effects of </a>, <a href="http://localhost:5000/data" rel="noopener noreferrer">Data</a>, <a href="http://localhost:5000/bullying" rel="noopener noreferrer">Bullying</a>, <a href="http://localhost:5000/gating" rel="noopener noreferrer">Gating</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/community" rel="noopener noreferrer">Community</a></p>


10:45:07.217 [debug] l:len=260

10:45:07.217 [debug] l:buf=8:<h1>The Reductionist Mentality in Programming</h1>
<h2>What is a Reductionist?</h2>
<blockquote>
<p>a person who analyzes and describes a complex phenomenon in terms of its simple or fundamental constituents.<br>
~ Google Dictionary</p>
</blockquote>
<h1>What are the dangers?</h1>
<p>The main problem with having a reductionist mentality is the fact that we're trying to make a decision based on incomplete data. Programming languages for instance are highly interconnected with social and interpersonal communications between programmers. This is why, in my opinion, we care so much about them as programmers. They define both the language that we get to express business problems either eloquently or not in and also the means of communication to our future colleagues and ourselves. Oh yeah, and they end up producing the products we can sell.</p>
<p>There's many ways to look at a programming language. There's the actual experience of how easy it is to create a abstraction, or paradigm. There's the idea how easy it is to change that paradigm once it becomes obsolete. There's also the aspect of how hard is it to find a piece of code (which has both the chosen organization structure but also the tooling to make this easier). Once you've found a piece of code, can you find all the places it's used easily? Is the way you write code obvious to the programmer who will read it? Any advanced concepts may alienate the reader but also might make the code more efficient to expressive once understood. How easy is it to teach to people that have a traditional background? How is the community that is centered around the language? Is it toxic or not? Are these the kinds of programmers you want helping you? Is it Object Oriented or Functional? How many people know it currently?</p>
<p>The hard part about most talks about programming languages is the fact they tend to focus on one level of detail. The experience of writing and refactoring it as a single programmer. However I think it's far less interesting than the larger picture.</p>
<p>Keywords: <a href="http://localhost:5000/overcoming-the-destructive-effects-of-" rel="noopener noreferrer">Overcoming the destructive effects of </a>, <a href="http://localhost:5000/data" rel="noopener noreferrer">Data</a>, <a href="http://localhost:5000/bullying" rel="noopener noreferrer">Bullying</a>, <a href="http://localhost:5000/gating" rel="noopener noreferrer">Gating</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/community" rel="noopener noreferrer">Community</a></p>


10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf empty

10:45:07.217 [debug] l:len=

10:45:07.217 [debug] l:buf=1062:<h1>Convincing Coworkers about <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>1. Know the proposal</h2>
<h3>The idea:</h3>
<blockquote>
<p>Elm should be a viable option for people to use in projects</p>
</blockquote>
<p>Why?</p>
<blockquote>
<p>Elm is likely going to help us to move faster in the long run by reducing the time needed to maintian and modify old code. Old code will continue to grow forever and if that code happens to be high matinance or is poorly designed it needs to be changed. As such a type system like Elm's is ideal for helping make these changes far safer. Elm in particular also garentees there will be no runtime exceptions which brings all code to a higher level of quality.</p>
</blockquote>
<h3>Steps to implement it:</h3>
<ol>
<li>....</li>
</ol>
<h3>The needs it meets</h3>
<p>...</p>
<h3>Weakneesses and ways to mitigate them</h3>
<p>...</p>
<h3></h3>
<h2>2. People that could help me</h2>
<h2>3. Decision Makers</h2>
<h3>Decision Makers needs</h3>
<h3>How Elm fills/goes against said needs</h3>


10:45:07.217 [debug] l:len=1

10:45:07.217 [debug] l:buf=062:<h1>Convincing Coworkers about <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>1. Know the proposal</h2>
<h3>The idea:</h3>
<blockquote>
<p>Elm should be a viable option for people to use in projects</p>
</blockquote>
<p>Why?</p>
<blockquote>
<p>Elm is likely going to help us to move faster in the long run by reducing the time needed to maintian and modify old code. Old code will continue to grow forever and if that code happens to be high matinance or is poorly designed it needs to be changed. As such a type system like Elm's is ideal for helping make these changes far safer. Elm in particular also garentees there will be no runtime exceptions which brings all code to a higher level of quality.</p>
</blockquote>
<h3>Steps to implement it:</h3>
<ol>
<li>....</li>
</ol>
<h3>The needs it meets</h3>
<p>...</p>
<h3>Weakneesses and ways to mitigate them</h3>
<p>...</p>
<h3></h3>
<h2>2. People that could help me</h2>
<h2>3. Decision Makers</h2>
<h3>Decision Makers needs</h3>
<h3>How Elm fills/goes against said needs</h3>


10:45:07.217 [debug] l:len=10

10:45:07.217 [debug] l:buf=62:<h1>Convincing Coworkers about <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>1. Know the proposal</h2>
<h3>The idea:</h3>
<blockquote>
<p>Elm should be a viable option for people to use in projects</p>
</blockquote>
<p>Why?</p>
<blockquote>
<p>Elm is likely going to help us to move faster in the long run by reducing the time needed to maintian and modify old code. Old code will continue to grow forever and if that code happens to be high matinance or is poorly designed it needs to be changed. As such a type system like Elm's is ideal for helping make these changes far safer. Elm in particular also garentees there will be no runtime exceptions which brings all code to a higher level of quality.</p>
</blockquote>
<h3>Steps to implement it:</h3>
<ol>
<li>....</li>
</ol>
<h3>The needs it meets</h3>
<p>...</p>
<h3>Weakneesses and ways to mitigate them</h3>
<p>...</p>
<h3></h3>
<h2>2. People that could help me</h2>
<h2>3. Decision Makers</h2>
<h3>Decision Makers needs</h3>
<h3>How Elm fills/goes against said needs</h3>


10:45:07.217 [debug] l:len=106

10:45:07.217 [debug] l:buf=2:<h1>Convincing Coworkers about <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>1. Know the proposal</h2>
<h3>The idea:</h3>
<blockquote>
<p>Elm should be a viable option for people to use in projects</p>
</blockquote>
<p>Why?</p>
<blockquote>
<p>Elm is likely going to help us to move faster in the long run by reducing the time needed to maintian and modify old code. Old code will continue to grow forever and if that code happens to be high matinance or is poorly designed it needs to be changed. As such a type system like Elm's is ideal for helping make these changes far safer. Elm in particular also garentees there will be no runtime exceptions which brings all code to a higher level of quality.</p>
</blockquote>
<h3>Steps to implement it:</h3>
<ol>
<li>....</li>
</ol>
<h3>The needs it meets</h3>
<p>...</p>
<h3>Weakneesses and ways to mitigate them</h3>
<p>...</p>
<h3></h3>
<h2>2. People that could help me</h2>
<h2>3. Decision Makers</h2>
<h3>Decision Makers needs</h3>
<h3>How Elm fills/goes against said needs</h3>


10:45:07.217 [debug] l:len=

10:45:07.218 [debug] l:buf empty

10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf=253:<h1>the messy drawer of communication</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.218 [debug] l:len=2

10:45:07.218 [debug] l:buf=53:<h1>the messy drawer of communication</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.218 [debug] l:len=25

10:45:07.218 [debug] l:buf=3:<h1>the messy drawer of communication</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf empty

10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf=487:<h1>home notes</h1>
<p>🏠 notes</p>
<p>Everything is quarter turn on/off.</p>
<p>Seal the counter tops one a year</p>
<p>Smoke detectors once a year</p>
<p>Filter 1 per month for first year</p>
<p>Oakwood super intendent —  801-232-3396</p>
<h1>Before we move in</h1>
<p>Put in our name</p>
<ul>
<li>Dominion power (gass)</li>
<li>Rocky mountain power (electricity)</li>
<li>American fork garbage thing</li>
<li>Yellowish building</li>
<li>Transfer address at post office</li>
</ul>


10:45:07.218 [debug] l:len=4

10:45:07.218 [debug] l:buf=87:<h1>home notes</h1>
<p>🏠 notes</p>
<p>Everything is quarter turn on/off.</p>
<p>Seal the counter tops one a year</p>
<p>Smoke detectors once a year</p>
<p>Filter 1 per month for first year</p>
<p>Oakwood super intendent —  801-232-3396</p>
<h1>Before we move in</h1>
<p>Put in our name</p>
<ul>
<li>Dominion power (gass)</li>
<li>Rocky mountain power (electricity)</li>
<li>American fork garbage thing</li>
<li>Yellowish building</li>
<li>Transfer address at post office</li>
</ul>


10:45:07.218 [debug] l:len=48

10:45:07.218 [debug] l:buf=7:<h1>home notes</h1>
<p>🏠 notes</p>
<p>Everything is quarter turn on/off.</p>
<p>Seal the counter tops one a year</p>
<p>Smoke detectors once a year</p>
<p>Filter 1 per month for first year</p>
<p>Oakwood super intendent —  801-232-3396</p>
<h1>Before we move in</h1>
<p>Put in our name</p>
<ul>
<li>Dominion power (gass)</li>
<li>Rocky mountain power (electricity)</li>
<li>American fork garbage thing</li>
<li>Yellowish building</li>
<li>Transfer address at post office</li>
</ul>


10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf empty

10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf=96:<h1>Pasted image 20201021133903</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.218 [debug] l:len=9

10:45:07.218 [debug] l:buf=6:<h1>Pasted image 20201021133903</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf empty

10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf=780:<h1>can find anything in Basecamp instantly</h1>
<p>Basecamp provides <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> by not making everything a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>. This means once you learn it <a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp becomes like a town that get's easier to navigate over time</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.218 [debug] l:len=7

10:45:07.218 [debug] l:buf=80:<h1>can find anything in Basecamp instantly</h1>
<p>Basecamp provides <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> by not making everything a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>. This means once you learn it <a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp becomes like a town that get's easier to navigate over time</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.218 [debug] l:len=78

10:45:07.218 [debug] l:buf=0:<h1>can find anything in Basecamp instantly</h1>
<p>Basecamp provides <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> by not making everything a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>. This means once you learn it <a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp becomes like a town that get's easier to navigate over time</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.218 [debug] l:len=

10:45:07.218 [debug] l:buf empty

10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf=431:<h1>fixed time, variable scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.219 [debug] l:len=4

10:45:07.219 [debug] l:buf=31:<h1>fixed time, variable scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.219 [debug] l:len=43

10:45:07.219 [debug] l:buf=1:<h1>fixed time, variable scope</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>


10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf empty

10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf=298:<h1>Begin with the End in Mind</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.219 [debug] l:len=2

10:45:07.219 [debug] l:buf=98:<h1>Begin with the End in Mind</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.219 [debug] l:len=29

10:45:07.219 [debug] l:buf=8:<h1>Begin with the End in Mind</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf empty

10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf=283:<h1>Pasted image 20200925155049</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.219 [debug] l:len=2

10:45:07.219 [debug] l:buf=83:<h1>Pasted image 20200925155049</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.219 [debug] l:len=28

10:45:07.219 [debug] l:buf=3:<h1>Pasted image 20200925155049</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf empty

10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf=255:<h1>Asana</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.219 [debug] l:len=2

10:45:07.219 [debug] l:buf=55:<h1>Asana</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.219 [debug] l:len=25

10:45:07.219 [debug] l:buf=5:<h1>Asana</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf empty

10:45:07.219 [debug] l:len=

10:45:07.219 [debug] l:buf=570:<p><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.220 [debug] l:len=5

10:45:07.220 [debug] l:buf=70:<p><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.220 [debug] l:len=57

10:45:07.220 [debug] l:buf=0:<p><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf empty

10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf=266:<h1>high level goals</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>


10:45:07.220 [debug] l:len=2

10:45:07.220 [debug] l:buf=66:<h1>high level goals</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>


10:45:07.220 [debug] l:len=26

10:45:07.220 [debug] l:buf=6:<h1>high level goals</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>


10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf empty

10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf=448:<h1>Slack is only better than what you already know</h1>
<p>People's arguments for slack seem to focus around, "Well it's better than Email at least!" Or "We used to use a whatsapp group and this is way better". That's like saying a root canal is better than extraction with a set of differently sized pliers. I mean it is... but it's still not ideal. (<a href="https://news.ycombinator.com/item?id=14732786" rel="noopener noreferrer">ref</a>)</p>


10:45:07.220 [debug] l:len=4

10:45:07.220 [debug] l:buf=48:<h1>Slack is only better than what you already know</h1>
<p>People's arguments for slack seem to focus around, "Well it's better than Email at least!" Or "We used to use a whatsapp group and this is way better". That's like saying a root canal is better than extraction with a set of differently sized pliers. I mean it is... but it's still not ideal. (<a href="https://news.ycombinator.com/item?id=14732786" rel="noopener noreferrer">ref</a>)</p>


10:45:07.220 [debug] l:len=44

10:45:07.220 [debug] l:buf=8:<h1>Slack is only better than what you already know</h1>
<p>People's arguments for slack seem to focus around, "Well it's better than Email at least!" Or "We used to use a whatsapp group and this is way better". That's like saying a root canal is better than extraction with a set of differently sized pliers. I mean it is... but it's still not ideal. (<a href="https://news.ycombinator.com/item?id=14732786" rel="noopener noreferrer">ref</a>)</p>


10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf empty

10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf=237:<h1>Blog post ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.220 [debug] l:len=2

10:45:07.220 [debug] l:buf=37:<h1>Blog post ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.220 [debug] l:len=23

10:45:07.220 [debug] l:buf=7:<h1>Blog post ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.220 [debug] l:len=

10:45:07.220 [debug] l:buf empty

10:45:07.221 [debug] l:len=

10:45:07.221 [debug] l:buf=3510:<h1>Shape Up</h1>
<ul>
<li>
<p>Kind of a <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></p>
</li>
<li>
<p><a href="http://localhost:5000/shape-up-first-chapter-notes" rel="noopener noreferrer">Shape Up First Chapter Notes</a></p>
</li>
</ul>
<p>Written by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>
<p>Also see the forum: <a href="https://discourse.learnshapeup.com/" rel="noopener noreferrer">https://discourse.learnshapeup.com/</a></p>
<h2>Key Concepts</h2>
<ul>
<li><a href="http://localhost:5000/schaping" rel="noopener noreferrer">Schaping</a> and <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></li>
<li><a href="http://localhost:5000/hill-charts" rel="noopener noreferrer">Hill Charts</a></li>
<li><a href="http://localhost:5000/fat-tailed-risk,-fin-tailed-risk" rel="noopener noreferrer">Fat Tailed Risk, Fin Tailed Risk</a></li>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a> V.S. <a href="http://localhost:5000/supply-side" rel="noopener noreferrer">Supply Side</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a> on projects</li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>es</li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>
<hr>
<p><strong>Keywords</strong></p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/breadboarding" rel="noopener noreferrer">breadboarding</a></li>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
<li><a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Six-week cycles</a></li>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.221 [debug] l:len=3

10:45:07.221 [debug] l:buf=510:<h1>Shape Up</h1>
<ul>
<li>
<p>Kind of a <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></p>
</li>
<li>
<p><a href="http://localhost:5000/shape-up-first-chapter-notes" rel="noopener noreferrer">Shape Up First Chapter Notes</a></p>
</li>
</ul>
<p>Written by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>
<p>Also see the forum: <a href="https://discourse.learnshapeup.com/" rel="noopener noreferrer">https://discourse.learnshapeup.com/</a></p>
<h2>Key Concepts</h2>
<ul>
<li><a href="http://localhost:5000/schaping" rel="noopener noreferrer">Schaping</a> and <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></li>
<li><a href="http://localhost:5000/hill-charts" rel="noopener noreferrer">Hill Charts</a></li>
<li><a href="http://localhost:5000/fat-tailed-risk,-fin-tailed-risk" rel="noopener noreferrer">Fat Tailed Risk, Fin Tailed Risk</a></li>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a> V.S. <a href="http://localhost:5000/supply-side" rel="noopener noreferrer">Supply Side</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a> on projects</li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>es</li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>
<hr>
<p><strong>Keywords</strong></p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/breadboarding" rel="noopener noreferrer">breadboarding</a></li>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
<li><a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Six-week cycles</a></li>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.221 [debug] l:len=35

10:45:07.221 [debug] l:buf=10:<h1>Shape Up</h1>
<ul>
<li>
<p>Kind of a <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></p>
</li>
<li>
<p><a href="http://localhost:5000/shape-up-first-chapter-notes" rel="noopener noreferrer">Shape Up First Chapter Notes</a></p>
</li>
</ul>
<p>Written by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>
<p>Also see the forum: <a href="https://discourse.learnshapeup.com/" rel="noopener noreferrer">https://discourse.learnshapeup.com/</a></p>
<h2>Key Concepts</h2>
<ul>
<li><a href="http://localhost:5000/schaping" rel="noopener noreferrer">Schaping</a> and <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></li>
<li><a href="http://localhost:5000/hill-charts" rel="noopener noreferrer">Hill Charts</a></li>
<li><a href="http://localhost:5000/fat-tailed-risk,-fin-tailed-risk" rel="noopener noreferrer">Fat Tailed Risk, Fin Tailed Risk</a></li>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a> V.S. <a href="http://localhost:5000/supply-side" rel="noopener noreferrer">Supply Side</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a> on projects</li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>es</li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>
<hr>
<p><strong>Keywords</strong></p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/breadboarding" rel="noopener noreferrer">breadboarding</a></li>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
<li><a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Six-week cycles</a></li>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.221 [debug] l:len=351

10:45:07.221 [debug] l:buf=0:<h1>Shape Up</h1>
<ul>
<li>
<p>Kind of a <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></p>
</li>
<li>
<p><a href="http://localhost:5000/shape-up-first-chapter-notes" rel="noopener noreferrer">Shape Up First Chapter Notes</a></p>
</li>
</ul>
<p>Written by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>
<p>Also see the forum: <a href="https://discourse.learnshapeup.com/" rel="noopener noreferrer">https://discourse.learnshapeup.com/</a></p>
<h2>Key Concepts</h2>
<ul>
<li><a href="http://localhost:5000/schaping" rel="noopener noreferrer">Schaping</a> and <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></li>
<li><a href="http://localhost:5000/hill-charts" rel="noopener noreferrer">Hill Charts</a></li>
<li><a href="http://localhost:5000/fat-tailed-risk,-fin-tailed-risk" rel="noopener noreferrer">Fat Tailed Risk, Fin Tailed Risk</a></li>
<li><a href="http://localhost:5000/demand-side" rel="noopener noreferrer">Demand Side</a> V.S. <a href="http://localhost:5000/supply-side" rel="noopener noreferrer">Supply Side</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a> on projects</li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>es</li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
</ul>
<hr>
<p><strong>Keywords</strong></p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/betting" rel="noopener noreferrer">Betting</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/breadboarding" rel="noopener noreferrer">breadboarding</a></li>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
<li><a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Six-week cycles</a></li>
<li><a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
<li><a href="http://localhost:5000/pitches" rel="noopener noreferrer">Pitches</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.221 [debug] l:len=

10:45:07.221 [debug] l:buf empty

10:45:07.221 [debug] l:len=

10:45:07.221 [debug] l:buf=248:<h1>price of entry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.221 [debug] l:len=2

10:45:07.221 [debug] l:buf=48:<h1>price of entry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.221 [debug] l:len=24

10:45:07.221 [debug] l:buf=8:<h1>price of entry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
</ul>


10:45:07.221 [debug] l:len=

10:45:07.221 [debug] l:buf empty

10:45:07.221 [debug] l:len=

10:45:07.221 [debug] l:buf=636:<h1>Copy Pasta</h1>
<p>I created this error:</p>
<hr>
<h2><a href="http://localhost:5000/copypasta.png" rel="noopener noreferrer">CopyPasta</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can see this is caused by a line being duplicated. This is common and a hard thing to see if you don't have a super diligent code reviewer.</p>
<p>However it could have been easily caught by <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>.</p>
<p>Leads me to think about how <a href="http://localhost:5000/code-is-a-liability" rel="noopener noreferrer">Code is a liability</a>.</p>


10:45:07.221 [debug] l:len=6

10:45:07.222 [debug] l:buf=36:<h1>Copy Pasta</h1>
<p>I created this error:</p>
<hr>
<h2><a href="http://localhost:5000/copypasta.png" rel="noopener noreferrer">CopyPasta</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can see this is caused by a line being duplicated. This is common and a hard thing to see if you don't have a super diligent code reviewer.</p>
<p>However it could have been easily caught by <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>.</p>
<p>Leads me to think about how <a href="http://localhost:5000/code-is-a-liability" rel="noopener noreferrer">Code is a liability</a>.</p>


10:45:07.222 [debug] l:len=63

10:45:07.222 [debug] l:buf=6:<h1>Copy Pasta</h1>
<p>I created this error:</p>
<hr>
<h2><a href="http://localhost:5000/copypasta.png" rel="noopener noreferrer">CopyPasta</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can see this is caused by a line being duplicated. This is common and a hard thing to see if you don't have a super diligent code reviewer.</p>
<p>However it could have been easily caught by <a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a>.</p>
<p>Leads me to think about how <a href="http://localhost:5000/code-is-a-liability" rel="noopener noreferrer">Code is a liability</a>.</p>


10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf empty

10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf=505:<h1>Slack's volume over the weekend</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201007090920.png" rel="noopener noreferrer">Pasted image 20201007090920</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>234 + 9 + 7 + 4 + 5 + 1 +17 + 22 + 17 + 4 = 320 messages to read (2 days + weekend</p>
<p>~ 2,240 messages a week?</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.222 [debug] l:len=5

10:45:07.222 [debug] l:buf=05:<h1>Slack's volume over the weekend</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201007090920.png" rel="noopener noreferrer">Pasted image 20201007090920</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>234 + 9 + 7 + 4 + 5 + 1 +17 + 22 + 17 + 4 = 320 messages to read (2 days + weekend</p>
<p>~ 2,240 messages a week?</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.222 [debug] l:len=50

10:45:07.222 [debug] l:buf=5:<h1>Slack's volume over the weekend</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201007090920.png" rel="noopener noreferrer">Pasted image 20201007090920</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>234 + 9 + 7 + 4 + 5 + 1 +17 + 22 + 17 + 4 = 320 messages to read (2 days + weekend</p>
<p>~ 2,240 messages a week?</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
</ul>


10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf empty

10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf=349:<h1>2020-09-19-13-57-41</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>


10:45:07.222 [debug] l:len=3

10:45:07.222 [debug] l:buf=49:<h1>2020-09-19-13-57-41</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>


10:45:07.222 [debug] l:len=34

10:45:07.222 [debug] l:buf=9:<h1>2020-09-19-13-57-41</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>


10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf empty

10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf=339:<h1>Pasted image 27</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.222 [debug] l:len=3

10:45:07.222 [debug] l:buf=39:<h1>Pasted image 27</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.222 [debug] l:len=33

10:45:07.222 [debug] l:buf=9:<h1>Pasted image 27</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.222 [debug] l:len=

10:45:07.222 [debug] l:buf empty

10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf=462:<h1>interruptions</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.223 [debug] l:len=4

10:45:07.223 [debug] l:buf=62:<h1>interruptions</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.223 [debug] l:len=46

10:45:07.223 [debug] l:buf=2:<h1>interruptions</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf empty

10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf=257:<h1>ClickUp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.223 [debug] l:len=2

10:45:07.223 [debug] l:buf=57:<h1>ClickUp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.223 [debug] l:len=25

10:45:07.223 [debug] l:buf=7:<h1>ClickUp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf empty

10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf=80:<h1>Programming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.223 [debug] l:len=8

10:45:07.223 [debug] l:buf=0:<h1>Programming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf empty

10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf=814:<h1>Seeing labels matter</h1>
<p><img src="http://localhost:5000/image_picker1847105101644464215.jpg" alt="Image">
These spices used to be impossible to find because the only way to see the ones behind was to move the ones in the front. Simply lifting then up meant they never needed to move to look through them. Which makes them crazy easy to find. You would remember where the popular ones are and go back to them easily.</p>
<p>Similar to the messy drawer of communication.</p>
<p><a href="http://localhost:5000/the-power-of-a-title" rel="noopener noreferrer">The power of a title</a></p>
<p><a href="http://localhost:5000/newafeed" rel="noopener noreferrer">newafeed</a>a are like the the original cabinet because you need to move away the old messages to find the new ones. Nothing has a permanent home.</p>


10:45:07.223 [debug] l:len=8

10:45:07.223 [debug] l:buf=14:<h1>Seeing labels matter</h1>
<p><img src="http://localhost:5000/image_picker1847105101644464215.jpg" alt="Image">
These spices used to be impossible to find because the only way to see the ones behind was to move the ones in the front. Simply lifting then up meant they never needed to move to look through them. Which makes them crazy easy to find. You would remember where the popular ones are and go back to them easily.</p>
<p>Similar to the messy drawer of communication.</p>
<p><a href="http://localhost:5000/the-power-of-a-title" rel="noopener noreferrer">The power of a title</a></p>
<p><a href="http://localhost:5000/newafeed" rel="noopener noreferrer">newafeed</a>a are like the the original cabinet because you need to move away the old messages to find the new ones. Nothing has a permanent home.</p>


10:45:07.223 [debug] l:len=81

10:45:07.223 [debug] l:buf=4:<h1>Seeing labels matter</h1>
<p><img src="http://localhost:5000/image_picker1847105101644464215.jpg" alt="Image">
These spices used to be impossible to find because the only way to see the ones behind was to move the ones in the front. Simply lifting then up meant they never needed to move to look through them. Which makes them crazy easy to find. You would remember where the popular ones are and go back to them easily.</p>
<p>Similar to the messy drawer of communication.</p>
<p><a href="http://localhost:5000/the-power-of-a-title" rel="noopener noreferrer">The power of a title</a></p>
<p><a href="http://localhost:5000/newafeed" rel="noopener noreferrer">newafeed</a>a are like the the original cabinet because you need to move away the old messages to find the new ones. Nothing has a permanent home.</p>


10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf empty

10:45:07.223 [debug] l:len=

10:45:07.223 [debug] l:buf=84:<h1>Untitled 2</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.223 [debug] l:len=8

10:45:07.223 [debug] l:buf=4:<h1>Untitled 2</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf empty

10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf=2509:<h1>The Second Brain - A Life-Changing Productivity System</h1>
<p>ref: <a href="https://www.youtube.com/watch?v=OP3dA2GcAh8" rel="noopener noreferrer">https://www.youtube.com/watch?v=OP3dA2GcAh8</a></p>
<p>Ideas:</p>
<ol>
<li><strong>Borrowed creativity</strong>: creativity is about mixing stuff up that</li>
<li><strong>Capture Ideas</strong>: Are brains are for having ideas, not storing them</li>
<li><strong>Idea Recycling</strong>: Ideas can be re-used in different contexts</li>
<li><strong>Projects over categories</strong>: Don't do folders that are in broad categories, but in a project category, a thing you'll build on</li>
<li><strong>Slow Burns</strong>: Heavy Lift (herculean effort: go to a cabin in the woods), Slow Burns: lots of work in pieces that you can put together easily.</li>
<li><strong>Start with abundance</strong>: Blank pages don't work, if you've collected a bunch of stuff you're always starting from stuff in your second brain.</li>
<li><strong>Intermediate Packets</strong>: And Essays are made of lots of little 5-8 "packets" (paragraph) of knowledge. These are reusable and it's easier to just get it done.</li>
<li><strong>Only know what you make</strong>: You can consume all you want, but you have to reword things yourself and summarize.</li>
<li><strong>Make it easier on your future self</strong>: Don't assume you'll know what you meant, you need to make the note stand on it's own.</li>
<li><strong>Keep your ideas moving</strong>: Don't try to make your "perfect system", just make sure you <em><strong>use it</strong></em>. Imperfection is prefect if you're using it.</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, <a href="http://localhost:5000/great-artists-steal" rel="noopener noreferrer">Great Artists Steal</a>, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a>, <a href="http://localhost:5000/second-brain" rel="noopener noreferrer">Second Brain</a>, <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
<p><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.224 [debug] l:len=2

10:45:07.224 [debug] l:buf=509:<h1>The Second Brain - A Life-Changing Productivity System</h1>
<p>ref: <a href="https://www.youtube.com/watch?v=OP3dA2GcAh8" rel="noopener noreferrer">https://www.youtube.com/watch?v=OP3dA2GcAh8</a></p>
<p>Ideas:</p>
<ol>
<li><strong>Borrowed creativity</strong>: creativity is about mixing stuff up that</li>
<li><strong>Capture Ideas</strong>: Are brains are for having ideas, not storing them</li>
<li><strong>Idea Recycling</strong>: Ideas can be re-used in different contexts</li>
<li><strong>Projects over categories</strong>: Don't do folders that are in broad categories, but in a project category, a thing you'll build on</li>
<li><strong>Slow Burns</strong>: Heavy Lift (herculean effort: go to a cabin in the woods), Slow Burns: lots of work in pieces that you can put together easily.</li>
<li><strong>Start with abundance</strong>: Blank pages don't work, if you've collected a bunch of stuff you're always starting from stuff in your second brain.</li>
<li><strong>Intermediate Packets</strong>: And Essays are made of lots of little 5-8 "packets" (paragraph) of knowledge. These are reusable and it's easier to just get it done.</li>
<li><strong>Only know what you make</strong>: You can consume all you want, but you have to reword things yourself and summarize.</li>
<li><strong>Make it easier on your future self</strong>: Don't assume you'll know what you meant, you need to make the note stand on it's own.</li>
<li><strong>Keep your ideas moving</strong>: Don't try to make your "perfect system", just make sure you <em><strong>use it</strong></em>. Imperfection is prefect if you're using it.</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, <a href="http://localhost:5000/great-artists-steal" rel="noopener noreferrer">Great Artists Steal</a>, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a>, <a href="http://localhost:5000/second-brain" rel="noopener noreferrer">Second Brain</a>, <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
<p><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.224 [debug] l:len=25

10:45:07.224 [debug] l:buf=09:<h1>The Second Brain - A Life-Changing Productivity System</h1>
<p>ref: <a href="https://www.youtube.com/watch?v=OP3dA2GcAh8" rel="noopener noreferrer">https://www.youtube.com/watch?v=OP3dA2GcAh8</a></p>
<p>Ideas:</p>
<ol>
<li><strong>Borrowed creativity</strong>: creativity is about mixing stuff up that</li>
<li><strong>Capture Ideas</strong>: Are brains are for having ideas, not storing them</li>
<li><strong>Idea Recycling</strong>: Ideas can be re-used in different contexts</li>
<li><strong>Projects over categories</strong>: Don't do folders that are in broad categories, but in a project category, a thing you'll build on</li>
<li><strong>Slow Burns</strong>: Heavy Lift (herculean effort: go to a cabin in the woods), Slow Burns: lots of work in pieces that you can put together easily.</li>
<li><strong>Start with abundance</strong>: Blank pages don't work, if you've collected a bunch of stuff you're always starting from stuff in your second brain.</li>
<li><strong>Intermediate Packets</strong>: And Essays are made of lots of little 5-8 "packets" (paragraph) of knowledge. These are reusable and it's easier to just get it done.</li>
<li><strong>Only know what you make</strong>: You can consume all you want, but you have to reword things yourself and summarize.</li>
<li><strong>Make it easier on your future self</strong>: Don't assume you'll know what you meant, you need to make the note stand on it's own.</li>
<li><strong>Keep your ideas moving</strong>: Don't try to make your "perfect system", just make sure you <em><strong>use it</strong></em>. Imperfection is prefect if you're using it.</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, <a href="http://localhost:5000/great-artists-steal" rel="noopener noreferrer">Great Artists Steal</a>, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a>, <a href="http://localhost:5000/second-brain" rel="noopener noreferrer">Second Brain</a>, <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
<p><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.224 [debug] l:len=250

10:45:07.224 [debug] l:buf=9:<h1>The Second Brain - A Life-Changing Productivity System</h1>
<p>ref: <a href="https://www.youtube.com/watch?v=OP3dA2GcAh8" rel="noopener noreferrer">https://www.youtube.com/watch?v=OP3dA2GcAh8</a></p>
<p>Ideas:</p>
<ol>
<li><strong>Borrowed creativity</strong>: creativity is about mixing stuff up that</li>
<li><strong>Capture Ideas</strong>: Are brains are for having ideas, not storing them</li>
<li><strong>Idea Recycling</strong>: Ideas can be re-used in different contexts</li>
<li><strong>Projects over categories</strong>: Don't do folders that are in broad categories, but in a project category, a thing you'll build on</li>
<li><strong>Slow Burns</strong>: Heavy Lift (herculean effort: go to a cabin in the woods), Slow Burns: lots of work in pieces that you can put together easily.</li>
<li><strong>Start with abundance</strong>: Blank pages don't work, if you've collected a bunch of stuff you're always starting from stuff in your second brain.</li>
<li><strong>Intermediate Packets</strong>: And Essays are made of lots of little 5-8 "packets" (paragraph) of knowledge. These are reusable and it's easier to just get it done.</li>
<li><strong>Only know what you make</strong>: You can consume all you want, but you have to reword things yourself and summarize.</li>
<li><strong>Make it easier on your future self</strong>: Don't assume you'll know what you meant, you need to make the note stand on it's own.</li>
<li><strong>Keep your ideas moving</strong>: Don't try to make your "perfect system", just make sure you <em><strong>use it</strong></em>. Imperfection is prefect if you're using it.</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, <a href="http://localhost:5000/great-artists-steal" rel="noopener noreferrer">Great Artists Steal</a>, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a>, <a href="http://localhost:5000/second-brain" rel="noopener noreferrer">Second Brain</a>, <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
<p><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf empty

10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf=524:<h1>Data Discoverability</h1>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.224 [debug] l:len=5

10:45:07.224 [debug] l:buf=24:<h1>Data Discoverability</h1>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.224 [debug] l:len=52

10:45:07.224 [debug] l:buf=4:<h1>Data Discoverability</h1>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf empty

10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf=96:<h1>Pasted image 20200923062710</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.224 [debug] l:len=9

10:45:07.224 [debug] l:buf=6:<h1>Pasted image 20200923062710</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.224 [debug] l:len=

10:45:07.224 [debug] l:buf empty

10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf=288:<h1>Slack's design of it's input box V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.225 [debug] l:len=2

10:45:07.225 [debug] l:buf=88:<h1>Slack's design of it's input box V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.225 [debug] l:len=28

10:45:07.225 [debug] l:buf=8:<h1>Slack's design of it's input box V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a></li>
</ul>


10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf empty

10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf=246:<h1>Obsidian -- markdown preview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.225 [debug] l:len=2

10:45:07.225 [debug] l:buf=46:<h1>Obsidian -- markdown preview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.225 [debug] l:len=24

10:45:07.225 [debug] l:buf=6:<h1>Obsidian -- markdown preview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf empty

10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf=111:<h1>Answering Paul's Argument against Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.225 [debug] l:len=1

10:45:07.225 [debug] l:buf=11:<h1>Answering Paul's Argument against Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.225 [debug] l:len=11

10:45:07.225 [debug] l:buf=1:<h1>Answering Paul's Argument against Basecamp</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.225 [debug] l:len=

10:45:07.225 [debug] l:buf empty

10:45:07.226 [debug] l:len=

10:45:07.226 [debug] l:buf=3309:<h1>Youtube -- Introduction to  Zettelkasten</h1>
<p><a href="https://www.youtube.com/watch?v=rOSZOCoqOo8" rel="noopener noreferrer">https://www.youtube.com/watch?v=rOSZOCoqOo8</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-2.png" rel="noopener noreferrer">Pasted image 2</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><strong>Types of Notes</strong>:</p>
<ol>
<li>Literature Notes</li>
<li>Reference Notes</li>
<li>Permanent Notes</li>
</ol>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-items.png" rel="noopener noreferrer">Zettelkasten-items</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/zattelkasten-boxes.png" rel="noopener noreferrer">Zattelkasten-Boxes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Literature Notes</h2>
<p>Basically explain something you just read/watched in your own words. These are collecting ideas.</p>
<hr>
<h2><a href="http://localhost:5000/litteriture-notes.png" rel="noopener noreferrer">Litteriture Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Reference Notes</h2>
<p>Basically you just write a <em>summary</em> of the literature notes (like an abstract).</p>
<hr>
<h2><a href="http://localhost:5000/reference-notes.png" rel="noopener noreferrer">Reference Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Permanent notes</h2>
<p>Next you compile the knowledge you gained into a single "thing".</p>
<p>Pull out "ideas" into another note.</p>
<p>![[./Pasted image 1.png]]</p>
<p>![[./Pasted image.png]]</p>
<p>Finding Meaningful Connections:</p>
<ol>
<li>How does this idea fit into what I already know?</li>
<li>Can this be explained by something else?</li>
<li>What does X mean for Y?</li>
</ol>
<p>Write in complete sentences.</p>
<h2>Finding Keywords</h2>
<p>Keywords are essentially "tags" but you should avoid saying, "there does this thing belong" this leads to broad categories like, "Essays" or "Day one", rather you want to use them to say, "In what situation would I want to remember this note?" or "How will I <em>use</em> this idea?" Think, what <em>Topic</em> is this related to?</p>
<p>Example:</p>
<ul>
<li>"Deep work"</li>
<li>"Async Communication"</li>
<li>"Remote Work"</li>
<li>"How to Journal"</li>
</ul>
<h2>Adding to "the main box"</h2>
<ol>
<li>File each one behind relevent notes</li>
<li>Add links to relevant notes</li>
<li>Index them for easy discovery (may not be needed)</li>
</ol>
<h2>Fleeting Notes:</h2>
<p>Write down things that you don't want to forget that you'll go over.</p>
<hr>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/note-taking-systems" rel="noopener noreferrer">Note Taking Systems</a></li>
<li>#organization</li>
<li><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.226 [debug] l:len=3

10:45:07.226 [debug] l:buf=309:<h1>Youtube -- Introduction to  Zettelkasten</h1>
<p><a href="https://www.youtube.com/watch?v=rOSZOCoqOo8" rel="noopener noreferrer">https://www.youtube.com/watch?v=rOSZOCoqOo8</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-2.png" rel="noopener noreferrer">Pasted image 2</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><strong>Types of Notes</strong>:</p>
<ol>
<li>Literature Notes</li>
<li>Reference Notes</li>
<li>Permanent Notes</li>
</ol>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-items.png" rel="noopener noreferrer">Zettelkasten-items</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/zattelkasten-boxes.png" rel="noopener noreferrer">Zattelkasten-Boxes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Literature Notes</h2>
<p>Basically explain something you just read/watched in your own words. These are collecting ideas.</p>
<hr>
<h2><a href="http://localhost:5000/litteriture-notes.png" rel="noopener noreferrer">Litteriture Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Reference Notes</h2>
<p>Basically you just write a <em>summary</em> of the literature notes (like an abstract).</p>
<hr>
<h2><a href="http://localhost:5000/reference-notes.png" rel="noopener noreferrer">Reference Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Permanent notes</h2>
<p>Next you compile the knowledge you gained into a single "thing".</p>
<p>Pull out "ideas" into another note.</p>
<p>![[./Pasted image 1.png]]</p>
<p>![[./Pasted image.png]]</p>
<p>Finding Meaningful Connections:</p>
<ol>
<li>How does this idea fit into what I already know?</li>
<li>Can this be explained by something else?</li>
<li>What does X mean for Y?</li>
</ol>
<p>Write in complete sentences.</p>
<h2>Finding Keywords</h2>
<p>Keywords are essentially "tags" but you should avoid saying, "there does this thing belong" this leads to broad categories like, "Essays" or "Day one", rather you want to use them to say, "In what situation would I want to remember this note?" or "How will I <em>use</em> this idea?" Think, what <em>Topic</em> is this related to?</p>
<p>Example:</p>
<ul>
<li>"Deep work"</li>
<li>"Async Communication"</li>
<li>"Remote Work"</li>
<li>"How to Journal"</li>
</ul>
<h2>Adding to "the main box"</h2>
<ol>
<li>File each one behind relevent notes</li>
<li>Add links to relevant notes</li>
<li>Index them for easy discovery (may not be needed)</li>
</ol>
<h2>Fleeting Notes:</h2>
<p>Write down things that you don't want to forget that you'll go over.</p>
<hr>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/note-taking-systems" rel="noopener noreferrer">Note Taking Systems</a></li>
<li>#organization</li>
<li><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.226 [debug] l:len=33

10:45:07.226 [debug] l:buf=09:<h1>Youtube -- Introduction to  Zettelkasten</h1>
<p><a href="https://www.youtube.com/watch?v=rOSZOCoqOo8" rel="noopener noreferrer">https://www.youtube.com/watch?v=rOSZOCoqOo8</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-2.png" rel="noopener noreferrer">Pasted image 2</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><strong>Types of Notes</strong>:</p>
<ol>
<li>Literature Notes</li>
<li>Reference Notes</li>
<li>Permanent Notes</li>
</ol>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-items.png" rel="noopener noreferrer">Zettelkasten-items</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/zattelkasten-boxes.png" rel="noopener noreferrer">Zattelkasten-Boxes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Literature Notes</h2>
<p>Basically explain something you just read/watched in your own words. These are collecting ideas.</p>
<hr>
<h2><a href="http://localhost:5000/litteriture-notes.png" rel="noopener noreferrer">Litteriture Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Reference Notes</h2>
<p>Basically you just write a <em>summary</em> of the literature notes (like an abstract).</p>
<hr>
<h2><a href="http://localhost:5000/reference-notes.png" rel="noopener noreferrer">Reference Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Permanent notes</h2>
<p>Next you compile the knowledge you gained into a single "thing".</p>
<p>Pull out "ideas" into another note.</p>
<p>![[./Pasted image 1.png]]</p>
<p>![[./Pasted image.png]]</p>
<p>Finding Meaningful Connections:</p>
<ol>
<li>How does this idea fit into what I already know?</li>
<li>Can this be explained by something else?</li>
<li>What does X mean for Y?</li>
</ol>
<p>Write in complete sentences.</p>
<h2>Finding Keywords</h2>
<p>Keywords are essentially "tags" but you should avoid saying, "there does this thing belong" this leads to broad categories like, "Essays" or "Day one", rather you want to use them to say, "In what situation would I want to remember this note?" or "How will I <em>use</em> this idea?" Think, what <em>Topic</em> is this related to?</p>
<p>Example:</p>
<ul>
<li>"Deep work"</li>
<li>"Async Communication"</li>
<li>"Remote Work"</li>
<li>"How to Journal"</li>
</ul>
<h2>Adding to "the main box"</h2>
<ol>
<li>File each one behind relevent notes</li>
<li>Add links to relevant notes</li>
<li>Index them for easy discovery (may not be needed)</li>
</ol>
<h2>Fleeting Notes:</h2>
<p>Write down things that you don't want to forget that you'll go over.</p>
<hr>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/note-taking-systems" rel="noopener noreferrer">Note Taking Systems</a></li>
<li>#organization</li>
<li><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.226 [debug] l:len=330

10:45:07.226 [debug] l:buf=9:<h1>Youtube -- Introduction to  Zettelkasten</h1>
<p><a href="https://www.youtube.com/watch?v=rOSZOCoqOo8" rel="noopener noreferrer">https://www.youtube.com/watch?v=rOSZOCoqOo8</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-2.png" rel="noopener noreferrer">Pasted image 2</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><strong>Types of Notes</strong>:</p>
<ol>
<li>Literature Notes</li>
<li>Reference Notes</li>
<li>Permanent Notes</li>
</ol>
<hr>
<h2><a href="http://localhost:5000/zettelkasten-items.png" rel="noopener noreferrer">Zettelkasten-items</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/zattelkasten-boxes.png" rel="noopener noreferrer">Zattelkasten-Boxes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Literature Notes</h2>
<p>Basically explain something you just read/watched in your own words. These are collecting ideas.</p>
<hr>
<h2><a href="http://localhost:5000/litteriture-notes.png" rel="noopener noreferrer">Litteriture Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Reference Notes</h2>
<p>Basically you just write a <em>summary</em> of the literature notes (like an abstract).</p>
<hr>
<h2><a href="http://localhost:5000/reference-notes.png" rel="noopener noreferrer">Reference Notes</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Permanent notes</h2>
<p>Next you compile the knowledge you gained into a single "thing".</p>
<p>Pull out "ideas" into another note.</p>
<p>![[./Pasted image 1.png]]</p>
<p>![[./Pasted image.png]]</p>
<p>Finding Meaningful Connections:</p>
<ol>
<li>How does this idea fit into what I already know?</li>
<li>Can this be explained by something else?</li>
<li>What does X mean for Y?</li>
</ol>
<p>Write in complete sentences.</p>
<h2>Finding Keywords</h2>
<p>Keywords are essentially "tags" but you should avoid saying, "there does this thing belong" this leads to broad categories like, "Essays" or "Day one", rather you want to use them to say, "In what situation would I want to remember this note?" or "How will I <em>use</em> this idea?" Think, what <em>Topic</em> is this related to?</p>
<p>Example:</p>
<ul>
<li>"Deep work"</li>
<li>"Async Communication"</li>
<li>"Remote Work"</li>
<li>"How to Journal"</li>
</ul>
<h2>Adding to "the main box"</h2>
<ol>
<li>File each one behind relevent notes</li>
<li>Add links to relevant notes</li>
<li>Index them for easy discovery (may not be needed)</li>
</ol>
<h2>Fleeting Notes:</h2>
<p>Write down things that you don't want to forget that you'll go over.</p>
<hr>
<p>Keywords:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/note-taking-systems" rel="noopener noreferrer">Note Taking Systems</a></li>
<li>#organization</li>
<li><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.226 [debug] l:len=

10:45:07.226 [debug] l:buf empty

10:45:07.226 [debug] l:len=

10:45:07.226 [debug] l:buf=1976:<h1>Slack makes information Available but not Discoverable</h1>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.227 [debug] l:len=1

10:45:07.227 [debug] l:buf=976:<h1>Slack makes information Available but not Discoverable</h1>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.227 [debug] l:len=19

10:45:07.227 [debug] l:buf=76:<h1>Slack makes information Available but not Discoverable</h1>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.227 [debug] l:len=197

10:45:07.227 [debug] l:buf=6:<h1>Slack makes information Available but not Discoverable</h1>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf empty

10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf=76:<h1>Funding</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.227 [debug] l:len=7

10:45:07.227 [debug] l:buf=6:<h1>Funding</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf empty

10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf=874:<h1>Notion</h1>
<h2>Notion doesn't work for <a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012151608.png" rel="noopener noreferrer">Pasted image 20201012151608</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.227 [debug] l:len=8

10:45:07.227 [debug] l:buf=74:<h1>Notion</h1>
<h2>Notion doesn't work for <a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012151608.png" rel="noopener noreferrer">Pasted image 20201012151608</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.227 [debug] l:len=87

10:45:07.227 [debug] l:buf=4:<h1>Notion</h1>
<h2>Notion doesn't work for <a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201012151608.png" rel="noopener noreferrer">Pasted image 20201012151608</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf empty

10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf=271:<h1>Twist Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.227 [debug] l:len=2

10:45:07.227 [debug] l:buf=71:<h1>Twist Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.227 [debug] l:len=27

10:45:07.227 [debug] l:buf=1:<h1>Twist Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.227 [debug] l:len=

10:45:07.227 [debug] l:buf empty

10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf=159:<h1>2020-09-09</h1>
<ul>
<li> Timebox my day</li>
<li> Dig into tickets and understand them</li>
<li> Break tickets apart</li>
<li> Scripture study</li>
</ul>


10:45:07.228 [debug] l:len=1

10:45:07.228 [debug] l:buf=59:<h1>2020-09-09</h1>
<ul>
<li> Timebox my day</li>
<li> Dig into tickets and understand them</li>
<li> Break tickets apart</li>
<li> Scripture study</li>
</ul>


10:45:07.228 [debug] l:len=15

10:45:07.228 [debug] l:buf=9:<h1>2020-09-09</h1>
<ul>
<li> Timebox my day</li>
<li> Dig into tickets and understand them</li>
<li> Break tickets apart</li>
<li> Scripture study</li>
</ul>


10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf empty

10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf=312:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.228 [debug] l:len=3

10:45:07.228 [debug] l:buf=12:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.228 [debug] l:len=31

10:45:07.228 [debug] l:buf=2:<p><a href="http://localhost:5000/bashi-boards-" rel="noopener noreferrer"> Rexburg Longboards </a>| Home</p>
<p><a href="http://www.bashiboards.com/" rel="noopener noreferrer">http://www.bashiboards.com/</a></p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf empty

10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf=300:<h1>Zattelkasten-Boxes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.228 [debug] l:len=3

10:45:07.228 [debug] l:buf=00:<h1>Zattelkasten-Boxes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.228 [debug] l:len=30

10:45:07.228 [debug] l:buf=0:<h1>Zattelkasten-Boxes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf empty

10:45:07.228 [debug] l:len=

10:45:07.228 [debug] l:buf=1022:<h1>When you go remote everything is 2D</h1>
<p>It's also interesting that this is facilitated by the fact that the screen is 2D and we are 3D, we can easily point to anything on the screen because an office is a 3D environment.</p>
<pre><code>When you go remote everything ends up necessitating [make comments in context](make-comments-in-context).
</code></pre>
<p>Keywords: <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>, <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>, <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.228 [debug] l:len=1

10:45:07.229 [debug] l:buf=022:<h1>When you go remote everything is 2D</h1>
<p>It's also interesting that this is facilitated by the fact that the screen is 2D and we are 3D, we can easily point to anything on the screen because an office is a 3D environment.</p>
<pre><code>When you go remote everything ends up necessitating [make comments in context](make-comments-in-context).
</code></pre>
<p>Keywords: <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>, <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>, <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.229 [debug] l:len=10

10:45:07.229 [debug] l:buf=22:<h1>When you go remote everything is 2D</h1>
<p>It's also interesting that this is facilitated by the fact that the screen is 2D and we are 3D, we can easily point to anything on the screen because an office is a 3D environment.</p>
<pre><code>When you go remote everything ends up necessitating [make comments in context](make-comments-in-context).
</code></pre>
<p>Keywords: <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>, <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>, <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.229 [debug] l:len=102

10:45:07.229 [debug] l:buf=2:<h1>When you go remote everything is 2D</h1>
<p>It's also interesting that this is facilitated by the fact that the screen is 2D and we are 3D, we can easily point to anything on the screen because an office is a 3D environment.</p>
<pre><code>When you go remote everything ends up necessitating [make comments in context](make-comments-in-context).
</code></pre>
<p>Keywords: <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>, <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>, <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf empty

10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf=881:<p>Plan of happiness by Boyd K packer</p>
<p>Marriage is not about two individuals.</p>
<p>Why do we come to earth? To get a body. Being able to overcome your body is the test.</p>
<p>Passion is like gasoline. It can either blow you up it drive your marriage forward.</p>
<p>The commandment to multiply and replenish the earth has not ended.</p>
<p>There are no Gay couples in heaven</p>
<p>True love requires this reservation</p>
<p>Bridle all your passions that you may be filled with love</p>
<p>Alma 39:5</p>
<p>Every sin committed must be paid to the utmost farthing.</p>
<p>If you exercise your restraint or don't it spreads. Any large lack brings you down and any large restraint will bring you up. The <a href="http://localhost:5000/word-of-wisdom" rel="noopener noreferrer">Word of wisdom</a>, chastity, controlling our anger are all related.</p>
<p>Tags:
natural-man</p>


10:45:07.229 [debug] l:len=8

10:45:07.229 [debug] l:buf=81:<p>Plan of happiness by Boyd K packer</p>
<p>Marriage is not about two individuals.</p>
<p>Why do we come to earth? To get a body. Being able to overcome your body is the test.</p>
<p>Passion is like gasoline. It can either blow you up it drive your marriage forward.</p>
<p>The commandment to multiply and replenish the earth has not ended.</p>
<p>There are no Gay couples in heaven</p>
<p>True love requires this reservation</p>
<p>Bridle all your passions that you may be filled with love</p>
<p>Alma 39:5</p>
<p>Every sin committed must be paid to the utmost farthing.</p>
<p>If you exercise your restraint or don't it spreads. Any large lack brings you down and any large restraint will bring you up. The <a href="http://localhost:5000/word-of-wisdom" rel="noopener noreferrer">Word of wisdom</a>, chastity, controlling our anger are all related.</p>
<p>Tags:
natural-man</p>


10:45:07.229 [debug] l:len=88

10:45:07.229 [debug] l:buf=1:<p>Plan of happiness by Boyd K packer</p>
<p>Marriage is not about two individuals.</p>
<p>Why do we come to earth? To get a body. Being able to overcome your body is the test.</p>
<p>Passion is like gasoline. It can either blow you up it drive your marriage forward.</p>
<p>The commandment to multiply and replenish the earth has not ended.</p>
<p>There are no Gay couples in heaven</p>
<p>True love requires this reservation</p>
<p>Bridle all your passions that you may be filled with love</p>
<p>Alma 39:5</p>
<p>Every sin committed must be paid to the utmost farthing.</p>
<p>If you exercise your restraint or don't it spreads. Any large lack brings you down and any large restraint will bring you up. The <a href="http://localhost:5000/word-of-wisdom" rel="noopener noreferrer">Word of wisdom</a>, chastity, controlling our anger are all related.</p>
<p>Tags:
natural-man</p>


10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf empty

10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf=96:<h1>Carol Tuttle's Energy Types</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.229 [debug] l:len=9

10:45:07.229 [debug] l:buf=6:<h1>Carol Tuttle's Energy Types</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf empty

10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf=248:<h1>composting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.229 [debug] l:len=2

10:45:07.229 [debug] l:buf=48:<h1>composting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.229 [debug] l:len=24

10:45:07.229 [debug] l:buf=8:<h1>composting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.229 [debug] l:len=

10:45:07.229 [debug] l:buf empty

10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf=260:<h1>the Stress of Group Chat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a></li>
</ul>


10:45:07.230 [debug] l:len=2

10:45:07.230 [debug] l:buf=60:<h1>the Stress of Group Chat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a></li>
</ul>


10:45:07.230 [debug] l:len=26

10:45:07.230 [debug] l:buf=0:<h1>the Stress of Group Chat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/unread-bankruptcy" rel="noopener noreferrer">unread bankruptcy</a></li>
</ul>


10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf empty

10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf=1019:<h1>dividing things that are different</h1>
<p>The idea that even though things may be saved basically the same in the database, you divide things differently with UX. This is seen a lot in <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a>.</p>
<ul>
<li>Everything is an email but Newsfeed and Papertrail don't have an unread status.</li>
<li>"The Feed" is just another folder for emails yet it's presented in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> format. Also these aren't in your face to <a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a>.</li>
</ul>
<p>See also: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.230 [debug] l:len=1

10:45:07.230 [debug] l:buf=019:<h1>dividing things that are different</h1>
<p>The idea that even though things may be saved basically the same in the database, you divide things differently with UX. This is seen a lot in <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a>.</p>
<ul>
<li>Everything is an email but Newsfeed and Papertrail don't have an unread status.</li>
<li>"The Feed" is just another folder for emails yet it's presented in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> format. Also these aren't in your face to <a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a>.</li>
</ul>
<p>See also: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.230 [debug] l:len=10

10:45:07.230 [debug] l:buf=19:<h1>dividing things that are different</h1>
<p>The idea that even though things may be saved basically the same in the database, you divide things differently with UX. This is seen a lot in <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a>.</p>
<ul>
<li>Everything is an email but Newsfeed and Papertrail don't have an unread status.</li>
<li>"The Feed" is just another folder for emails yet it's presented in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> format. Also these aren't in your face to <a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a>.</li>
</ul>
<p>See also: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.230 [debug] l:len=101

10:45:07.230 [debug] l:buf=9:<h1>dividing things that are different</h1>
<p>The idea that even though things may be saved basically the same in the database, you divide things differently with UX. This is seen a lot in <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a>.</p>
<ul>
<li>Everything is an email but Newsfeed and Papertrail don't have an unread status.</li>
<li>"The Feed" is just another folder for emails yet it's presented in a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> format. Also these aren't in your face to <a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a>.</li>
</ul>
<p>See also: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf empty

10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf=238:<h1>crisis mode</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.230 [debug] l:len=2

10:45:07.230 [debug] l:buf=38:<h1>crisis mode</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.230 [debug] l:len=23

10:45:07.230 [debug] l:buf=8:<h1>crisis mode</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf empty

10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf=270:<h1>webchat-cats</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.230 [debug] l:len=2

10:45:07.230 [debug] l:buf=70:<h1>webchat-cats</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.230 [debug] l:len=27

10:45:07.230 [debug] l:buf=0:<h1>webchat-cats</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.230 [debug] l:len=

10:45:07.230 [debug] l:buf empty

10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf=885:<h1>on topic V</h1>
<p>An example of a comment that's "on topic" would be:</p>
<blockquote>
<p>"A hotdog isn't a sandwitch but it is a Taco"</p>
</blockquote>
<p>But not:</p>
<blockquote>
<p>"I made a hotdog today"</p>
</blockquote>
<p>Or</p>
<blockquote>
<p>"My dog is so hot, it's like 90 degrees outside"</p>
</blockquote>
<p>A good example of things that aren't on topic... or even questions is this Youtube video: <a href="http://localhost:5000/studio-c---no-stupid-questions" rel="noopener noreferrer">Studio C - No Stupid Questions</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.231 [debug] l:len=8

10:45:07.231 [debug] l:buf=85:<h1>on topic V</h1>
<p>An example of a comment that's "on topic" would be:</p>
<blockquote>
<p>"A hotdog isn't a sandwitch but it is a Taco"</p>
</blockquote>
<p>But not:</p>
<blockquote>
<p>"I made a hotdog today"</p>
</blockquote>
<p>Or</p>
<blockquote>
<p>"My dog is so hot, it's like 90 degrees outside"</p>
</blockquote>
<p>A good example of things that aren't on topic... or even questions is this Youtube video: <a href="http://localhost:5000/studio-c---no-stupid-questions" rel="noopener noreferrer">Studio C - No Stupid Questions</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.231 [debug] l:len=88

10:45:07.231 [debug] l:buf=5:<h1>on topic V</h1>
<p>An example of a comment that's "on topic" would be:</p>
<blockquote>
<p>"A hotdog isn't a sandwitch but it is a Taco"</p>
</blockquote>
<p>But not:</p>
<blockquote>
<p>"I made a hotdog today"</p>
</blockquote>
<p>Or</p>
<blockquote>
<p>"My dog is so hot, it's like 90 degrees outside"</p>
</blockquote>
<p>A good example of things that aren't on topic... or even questions is this Youtube video: <a href="http://localhost:5000/studio-c---no-stupid-questions" rel="noopener noreferrer">Studio C - No Stupid Questions</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf empty

10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf=1214:<h1>Youtube -- Building on ideas Zettelkasten</h1>
<h1><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://youtu.be/eMJGKZ7n9hE" rel="noopener noreferrer">https://youtu.be/eMJGKZ7n9hE</a></p>
<p><a href="https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec" rel="noopener noreferrer">https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec</a></p>
<p>The position was because it contextually congruent with the previous note.</p>
<p>Lumann said that just because a slipcard was linked to another by being next to it didn't make that relationship any stronger than writing on a card. This is probably good in his system because his ids were sequential which means they couldn't be moved once placed.</p>
<p>I personally feel like maybe that "positionality" could represent that one ideas is building on another as opposed to just being "related".</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.231 [debug] l:len=1

10:45:07.231 [debug] l:buf=214:<h1>Youtube -- Building on ideas Zettelkasten</h1>
<h1><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://youtu.be/eMJGKZ7n9hE" rel="noopener noreferrer">https://youtu.be/eMJGKZ7n9hE</a></p>
<p><a href="https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec" rel="noopener noreferrer">https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec</a></p>
<p>The position was because it contextually congruent with the previous note.</p>
<p>Lumann said that just because a slipcard was linked to another by being next to it didn't make that relationship any stronger than writing on a card. This is probably good in his system because his ids were sequential which means they couldn't be moved once placed.</p>
<p>I personally feel like maybe that "positionality" could represent that one ideas is building on another as opposed to just being "related".</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.231 [debug] l:len=12

10:45:07.231 [debug] l:buf=14:<h1>Youtube -- Building on ideas Zettelkasten</h1>
<h1><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://youtu.be/eMJGKZ7n9hE" rel="noopener noreferrer">https://youtu.be/eMJGKZ7n9hE</a></p>
<p><a href="https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec" rel="noopener noreferrer">https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec</a></p>
<p>The position was because it contextually congruent with the previous note.</p>
<p>Lumann said that just because a slipcard was linked to another by being next to it didn't make that relationship any stronger than writing on a card. This is probably good in his system because his ids were sequential which means they couldn't be moved once placed.</p>
<p>I personally feel like maybe that "positionality" could represent that one ideas is building on another as opposed to just being "related".</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.231 [debug] l:len=121

10:45:07.231 [debug] l:buf=4:<h1>Youtube -- Building on ideas Zettelkasten</h1>
<h1><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></h1>
<p><a href="https://youtu.be/eMJGKZ7n9hE" rel="noopener noreferrer">https://youtu.be/eMJGKZ7n9hE</a></p>
<p><a href="https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec" rel="noopener noreferrer">https://medium.com/@ethomasv/the-folgezettel-conundrum-20b14dc986ec</a></p>
<p>The position was because it contextually congruent with the previous note.</p>
<p>Lumann said that just because a slipcard was linked to another by being next to it didn't make that relationship any stronger than writing on a card. This is probably good in his system because his ids were sequential which means they couldn't be moved once placed.</p>
<p>I personally feel like maybe that "positionality" could represent that one ideas is building on another as opposed to just being "related".</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf empty

10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf=96:<h1>Pasted image 20200923060549</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.231 [debug] l:len=9

10:45:07.231 [debug] l:buf=6:<h1>Pasted image 20200923060549</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.231 [debug] l:len=

10:45:07.231 [debug] l:buf empty

10:45:07.232 [debug] l:len=

10:45:07.232 [debug] l:buf=485:<h1>ASAP</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.232 [debug] l:len=4

10:45:07.232 [debug] l:buf=85:<h1>ASAP</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.232 [debug] l:len=48

10:45:07.232 [debug] l:buf=5:<h1>ASAP</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.232 [debug] l:len=

10:45:07.232 [debug] l:buf empty

10:45:07.232 [debug] l:len=

10:45:07.232 [debug] l:buf=3153:<h1>Explination of Async &amp; Sync Remote work Pitch</h1>
<p>*Note: this was notes taken from a note taking session on my iPad where I recorded myself trying to talk through Remote work... these are the notes</p>
<p>Recording: <a href="https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA" rel="noopener noreferrer">https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA</a></p>
<ul>
<li>There’s a difference between <a href="http://localhost:5000/posting-v.s.-messaging" rel="noopener noreferrer">Posting V.S. Messaging</a>.</li>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> doesn’t work because it’s not a “publish / subscribe” model, meaning it doesn’t know when people should be notified or not, so it just defaults to “always, whenever an edit is made under a subtree”</li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>
<ul>
<li>IS FAST: is nice because it’s fast and all the people get the message immediately. But is bad because it fragments the collective day making the time less useful.
<ul>
<li>NOTE: you have to convince people that following the “manager’s schedule” is not OK for programmers or designers.</li>
</ul>
</li>
<li>Is distracting
<ul>
<li>People don’t want to distract others so they make things more private</li>
<li>Now that information is Private it lowers the involvement people can have in decision making which lowers people’s <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and “buy in” to the process.
<ul>
<li>See also: [[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li>People don’t operate as well when they are just a “cog in the wheel” or they’re being fed tickets with little context about the value they are adding in the real world</li>
</ul>
</li>
</ul>
</li>
<li>Doesn’t support lots of people
<ul>
<li>Lots of people can’t talk at once because the discussion is bound by time and how fast people can consume it, if they run out of time they will, skim or do “unread bankruptcy”</li>
</ul>
</li>
<li>Doesn’t support multiple topics
<ul>
<li>Topics have to “live in time” and in a “room” which means you have to be in the room (place)  while it’s happening (time)
<ul>
<li>Often in sync conversations you have to either lock down which topic is talked about or you’ll end up with a “wandering conversation”</li>
</ul>
</li>
</ul>
</li>
<li>Creates <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> and lacks <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li>Days get fragmented when multiple "bring up a thought" schedules overlap
<ul>
<li>Async allows for more of a <a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Programmer's schedule</a></li>
</ul>
</li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
</li>
</ul>


10:45:07.232 [debug] l:len=3

10:45:07.232 [debug] l:buf=153:<h1>Explination of Async &amp; Sync Remote work Pitch</h1>
<p>*Note: this was notes taken from a note taking session on my iPad where I recorded myself trying to talk through Remote work... these are the notes</p>
<p>Recording: <a href="https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA" rel="noopener noreferrer">https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA</a></p>
<ul>
<li>There’s a difference between <a href="http://localhost:5000/posting-v.s.-messaging" rel="noopener noreferrer">Posting V.S. Messaging</a>.</li>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> doesn’t work because it’s not a “publish / subscribe” model, meaning it doesn’t know when people should be notified or not, so it just defaults to “always, whenever an edit is made under a subtree”</li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>
<ul>
<li>IS FAST: is nice because it’s fast and all the people get the message immediately. But is bad because it fragments the collective day making the time less useful.
<ul>
<li>NOTE: you have to convince people that following the “manager’s schedule” is not OK for programmers or designers.</li>
</ul>
</li>
<li>Is distracting
<ul>
<li>People don’t want to distract others so they make things more private</li>
<li>Now that information is Private it lowers the involvement people can have in decision making which lowers people’s <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and “buy in” to the process.
<ul>
<li>See also: [[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li>People don’t operate as well when they are just a “cog in the wheel” or they’re being fed tickets with little context about the value they are adding in the real world</li>
</ul>
</li>
</ul>
</li>
<li>Doesn’t support lots of people
<ul>
<li>Lots of people can’t talk at once because the discussion is bound by time and how fast people can consume it, if they run out of time they will, skim or do “unread bankruptcy”</li>
</ul>
</li>
<li>Doesn’t support multiple topics
<ul>
<li>Topics have to “live in time” and in a “room” which means you have to be in the room (place)  while it’s happening (time)
<ul>
<li>Often in sync conversations you have to either lock down which topic is talked about or you’ll end up with a “wandering conversation”</li>
</ul>
</li>
</ul>
</li>
<li>Creates <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> and lacks <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li>Days get fragmented when multiple "bring up a thought" schedules overlap
<ul>
<li>Async allows for more of a <a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Programmer's schedule</a></li>
</ul>
</li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
</li>
</ul>


10:45:07.232 [debug] l:len=31

10:45:07.232 [debug] l:buf=53:<h1>Explination of Async &amp; Sync Remote work Pitch</h1>
<p>*Note: this was notes taken from a note taking session on my iPad where I recorded myself trying to talk through Remote work... these are the notes</p>
<p>Recording: <a href="https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA" rel="noopener noreferrer">https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA</a></p>
<ul>
<li>There’s a difference between <a href="http://localhost:5000/posting-v.s.-messaging" rel="noopener noreferrer">Posting V.S. Messaging</a>.</li>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> doesn’t work because it’s not a “publish / subscribe” model, meaning it doesn’t know when people should be notified or not, so it just defaults to “always, whenever an edit is made under a subtree”</li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>
<ul>
<li>IS FAST: is nice because it’s fast and all the people get the message immediately. But is bad because it fragments the collective day making the time less useful.
<ul>
<li>NOTE: you have to convince people that following the “manager’s schedule” is not OK for programmers or designers.</li>
</ul>
</li>
<li>Is distracting
<ul>
<li>People don’t want to distract others so they make things more private</li>
<li>Now that information is Private it lowers the involvement people can have in decision making which lowers people’s <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and “buy in” to the process.
<ul>
<li>See also: [[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li>People don’t operate as well when they are just a “cog in the wheel” or they’re being fed tickets with little context about the value they are adding in the real world</li>
</ul>
</li>
</ul>
</li>
<li>Doesn’t support lots of people
<ul>
<li>Lots of people can’t talk at once because the discussion is bound by time and how fast people can consume it, if they run out of time they will, skim or do “unread bankruptcy”</li>
</ul>
</li>
<li>Doesn’t support multiple topics
<ul>
<li>Topics have to “live in time” and in a “room” which means you have to be in the room (place)  while it’s happening (time)
<ul>
<li>Often in sync conversations you have to either lock down which topic is talked about or you’ll end up with a “wandering conversation”</li>
</ul>
</li>
</ul>
</li>
<li>Creates <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> and lacks <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li>Days get fragmented when multiple "bring up a thought" schedules overlap
<ul>
<li>Async allows for more of a <a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Programmer's schedule</a></li>
</ul>
</li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
</li>
</ul>


10:45:07.232 [debug] l:len=315

10:45:07.232 [debug] l:buf=3:<h1>Explination of Async &amp; Sync Remote work Pitch</h1>
<p>*Note: this was notes taken from a note taking session on my iPad where I recorded myself trying to talk through Remote work... these are the notes</p>
<p>Recording: <a href="https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA" rel="noopener noreferrer">https://share.icloud.com/photos/0FwE7egFQvvDLCXMSsqklnjjA</a></p>
<ul>
<li>There’s a difference between <a href="http://localhost:5000/posting-v.s.-messaging" rel="noopener noreferrer">Posting V.S. Messaging</a>.</li>
<li><a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a> doesn’t work because it’s not a “publish / subscribe” model, meaning it doesn’t know when people should be notified or not, so it just defaults to “always, whenever an edit is made under a subtree”</li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>
<ul>
<li>IS FAST: is nice because it’s fast and all the people get the message immediately. But is bad because it fragments the collective day making the time less useful.
<ul>
<li>NOTE: you have to convince people that following the “manager’s schedule” is not OK for programmers or designers.</li>
</ul>
</li>
<li>Is distracting
<ul>
<li>People don’t want to distract others so they make things more private</li>
<li>Now that information is Private it lowers the involvement people can have in decision making which lowers people’s <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and “buy in” to the process.
<ul>
<li>See also: [[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
<li>People don’t operate as well when they are just a “cog in the wheel” or they’re being fed tickets with little context about the value they are adding in the real world</li>
</ul>
</li>
</ul>
</li>
<li>Doesn’t support lots of people
<ul>
<li>Lots of people can’t talk at once because the discussion is bound by time and how fast people can consume it, if they run out of time they will, skim or do “unread bankruptcy”</li>
</ul>
</li>
<li>Doesn’t support multiple topics
<ul>
<li>Topics have to “live in time” and in a “room” which means you have to be in the room (place)  while it’s happening (time)
<ul>
<li>Often in sync conversations you have to either lock down which topic is talked about or you’ll end up with a “wandering conversation”</li>
</ul>
</li>
</ul>
</li>
<li>Creates <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a> and lacks <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li>Days get fragmented when multiple "bring up a thought" schedules overlap
<ul>
<li>Async allows for more of a <a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Programmer's schedule</a></li>
</ul>
</li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
</li>
</ul>


10:45:07.232 [debug] l:len=

10:45:07.232 [debug] l:buf empty

10:45:07.232 [debug] l:len=

10:45:07.232 [debug] l:buf=237:<h1>Habits MOC - Assembling Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.232 [debug] l:len=2

10:45:07.232 [debug] l:buf=37:<h1>Habits MOC - Assembling Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.232 [debug] l:len=23

10:45:07.233 [debug] l:buf=7:<h1>Habits MOC - Assembling Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf empty

10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf=4048:<h1>Why CSS always rots</h1>
<p>Production Css is not very maintainable in practice.</p>
<p>Think about it, have you ever seen a well maintained css codebase?</p>
<p>Me neither.</p>
<p>I think a lot of this happens because of the mindset of the programer when it's written.</p>
<p>Often CSS ideologies make the assumption that the programer is going to craft the names of CSS with care and precision, refactoring the hierarchies when then become untrue.</p>
<p>Ain't nobody got time for 'dat.</p>
<p>Often we assume that they are going to find your reusable <code>.scss</code> file. Or read through the code looking to remove duplication.</p>
<p>Ain't nobody got time for 'dat either.</p>
<p>No, the mentally of a software engineer modifying CSS is,</p>
<blockquote>
<p>How fast can I get this to <em>look</em> like I want <em>without messing things up</em></p>
</blockquote>
<p>The two parts of this mentally are very important to why CSS rots.</p>
<p>One is that we care only about <em>the way it looks in the end.</em> This means that we aren't as concerned about the maintainability at large, we just want it to look good with as little effort as possible. Doesn't everyone?</p>
<p>The other important part is that we are doing this <em>visually</em>. Meaning <em>in the browser.</em></p>
<p>Doing CSS in the browser means  <em>instant feedback.</em></p>
<p>It's awesome to modify styles in the dev tools bumping pixels till it's just right then copying it over to your CSS file when you're done. It's far faster than reading thousands of lines is CSS and more fun.</p>
<p>This, however, has two ill effects. One being that you're pulling pixel values out of the air probably not fitting within any sort of grid system. This creates white space quickly becomes less visually harmonious and pleasing. Not to mention it just makes things hard to line up that are more than 2ems away. Not to mention you'll get a crazy mix of em/rem/px/vh/%'s.</p>
<p>The other half of the software engineers mentally is, <em>"without messing anything up".</em> Any developer knows modifying or reusing CSS classes is just asking for trouble. So in self-defense we always create new ones.</p>
<p>A new class is the only class that you can be sure that people aren't depending on in weird ways after all.</p>
<p>The problem is that CSS grows <em>forever</em>.</p>
<p>Soon the customer has to sit for a 4 seconds to download the CSS alone if their connection is slow. That being in addition to everything else.</p>
<p>Another, perhaps larger, the problem is with every new class <em>comes something you have to name</em>. This gets especially bad if the CSS names are global (there's some tools that randomise class names so that they essentially aren't). What if you need to toggle things depending on different 5 situations? 5 more things you have to name!</p>
<h1>Naming is the problem</h1>
<p>Symantic naming is generally the standard when using CSS. This essentially means that you name your CSS the same as name of the thing on the page. If the styles are for a sidebar you name the root class <code>.sidebar</code>. And then you put something like these styles in it:</p>
<pre><code>.sidebar {
    float: left;
    background-color: [eee](eee);
 }
</code></pre>
<p>This is fine till you start putting <code>float: left</code> and <code>background-color: [eee](eee);</code> everywhere. And even worse in lots of places where it only has <code>background-color: [eee](eee);</code> in it.</p>
<p>Tags:</p>
<ul>
<li><a href="http://localhost:5000/css" rel="noopener noreferrer">css</a></li>
<li><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></li>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.233 [debug] l:len=4

10:45:07.233 [debug] l:buf=048:<h1>Why CSS always rots</h1>
<p>Production Css is not very maintainable in practice.</p>
<p>Think about it, have you ever seen a well maintained css codebase?</p>
<p>Me neither.</p>
<p>I think a lot of this happens because of the mindset of the programer when it's written.</p>
<p>Often CSS ideologies make the assumption that the programer is going to craft the names of CSS with care and precision, refactoring the hierarchies when then become untrue.</p>
<p>Ain't nobody got time for 'dat.</p>
<p>Often we assume that they are going to find your reusable <code>.scss</code> file. Or read through the code looking to remove duplication.</p>
<p>Ain't nobody got time for 'dat either.</p>
<p>No, the mentally of a software engineer modifying CSS is,</p>
<blockquote>
<p>How fast can I get this to <em>look</em> like I want <em>without messing things up</em></p>
</blockquote>
<p>The two parts of this mentally are very important to why CSS rots.</p>
<p>One is that we care only about <em>the way it looks in the end.</em> This means that we aren't as concerned about the maintainability at large, we just want it to look good with as little effort as possible. Doesn't everyone?</p>
<p>The other important part is that we are doing this <em>visually</em>. Meaning <em>in the browser.</em></p>
<p>Doing CSS in the browser means  <em>instant feedback.</em></p>
<p>It's awesome to modify styles in the dev tools bumping pixels till it's just right then copying it over to your CSS file when you're done. It's far faster than reading thousands of lines is CSS and more fun.</p>
<p>This, however, has two ill effects. One being that you're pulling pixel values out of the air probably not fitting within any sort of grid system. This creates white space quickly becomes less visually harmonious and pleasing. Not to mention it just makes things hard to line up that are more than 2ems away. Not to mention you'll get a crazy mix of em/rem/px/vh/%'s.</p>
<p>The other half of the software engineers mentally is, <em>"without messing anything up".</em> Any developer knows modifying or reusing CSS classes is just asking for trouble. So in self-defense we always create new ones.</p>
<p>A new class is the only class that you can be sure that people aren't depending on in weird ways after all.</p>
<p>The problem is that CSS grows <em>forever</em>.</p>
<p>Soon the customer has to sit for a 4 seconds to download the CSS alone if their connection is slow. That being in addition to everything else.</p>
<p>Another, perhaps larger, the problem is with every new class <em>comes something you have to name</em>. This gets especially bad if the CSS names are global (there's some tools that randomise class names so that they essentially aren't). What if you need to toggle things depending on different 5 situations? 5 more things you have to name!</p>
<h1>Naming is the problem</h1>
<p>Symantic naming is generally the standard when using CSS. This essentially means that you name your CSS the same as name of the thing on the page. If the styles are for a sidebar you name the root class <code>.sidebar</code>. And then you put something like these styles in it:</p>
<pre><code>.sidebar {
    float: left;
    background-color: [eee](eee);
 }
</code></pre>
<p>This is fine till you start putting <code>float: left</code> and <code>background-color: [eee](eee);</code> everywhere. And even worse in lots of places where it only has <code>background-color: [eee](eee);</code> in it.</p>
<p>Tags:</p>
<ul>
<li><a href="http://localhost:5000/css" rel="noopener noreferrer">css</a></li>
<li><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></li>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.233 [debug] l:len=40

10:45:07.233 [debug] l:buf=48:<h1>Why CSS always rots</h1>
<p>Production Css is not very maintainable in practice.</p>
<p>Think about it, have you ever seen a well maintained css codebase?</p>
<p>Me neither.</p>
<p>I think a lot of this happens because of the mindset of the programer when it's written.</p>
<p>Often CSS ideologies make the assumption that the programer is going to craft the names of CSS with care and precision, refactoring the hierarchies when then become untrue.</p>
<p>Ain't nobody got time for 'dat.</p>
<p>Often we assume that they are going to find your reusable <code>.scss</code> file. Or read through the code looking to remove duplication.</p>
<p>Ain't nobody got time for 'dat either.</p>
<p>No, the mentally of a software engineer modifying CSS is,</p>
<blockquote>
<p>How fast can I get this to <em>look</em> like I want <em>without messing things up</em></p>
</blockquote>
<p>The two parts of this mentally are very important to why CSS rots.</p>
<p>One is that we care only about <em>the way it looks in the end.</em> This means that we aren't as concerned about the maintainability at large, we just want it to look good with as little effort as possible. Doesn't everyone?</p>
<p>The other important part is that we are doing this <em>visually</em>. Meaning <em>in the browser.</em></p>
<p>Doing CSS in the browser means  <em>instant feedback.</em></p>
<p>It's awesome to modify styles in the dev tools bumping pixels till it's just right then copying it over to your CSS file when you're done. It's far faster than reading thousands of lines is CSS and more fun.</p>
<p>This, however, has two ill effects. One being that you're pulling pixel values out of the air probably not fitting within any sort of grid system. This creates white space quickly becomes less visually harmonious and pleasing. Not to mention it just makes things hard to line up that are more than 2ems away. Not to mention you'll get a crazy mix of em/rem/px/vh/%'s.</p>
<p>The other half of the software engineers mentally is, <em>"without messing anything up".</em> Any developer knows modifying or reusing CSS classes is just asking for trouble. So in self-defense we always create new ones.</p>
<p>A new class is the only class that you can be sure that people aren't depending on in weird ways after all.</p>
<p>The problem is that CSS grows <em>forever</em>.</p>
<p>Soon the customer has to sit for a 4 seconds to download the CSS alone if their connection is slow. That being in addition to everything else.</p>
<p>Another, perhaps larger, the problem is with every new class <em>comes something you have to name</em>. This gets especially bad if the CSS names are global (there's some tools that randomise class names so that they essentially aren't). What if you need to toggle things depending on different 5 situations? 5 more things you have to name!</p>
<h1>Naming is the problem</h1>
<p>Symantic naming is generally the standard when using CSS. This essentially means that you name your CSS the same as name of the thing on the page. If the styles are for a sidebar you name the root class <code>.sidebar</code>. And then you put something like these styles in it:</p>
<pre><code>.sidebar {
    float: left;
    background-color: [eee](eee);
 }
</code></pre>
<p>This is fine till you start putting <code>float: left</code> and <code>background-color: [eee](eee);</code> everywhere. And even worse in lots of places where it only has <code>background-color: [eee](eee);</code> in it.</p>
<p>Tags:</p>
<ul>
<li><a href="http://localhost:5000/css" rel="noopener noreferrer">css</a></li>
<li><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></li>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.233 [debug] l:len=404

10:45:07.233 [debug] l:buf=8:<h1>Why CSS always rots</h1>
<p>Production Css is not very maintainable in practice.</p>
<p>Think about it, have you ever seen a well maintained css codebase?</p>
<p>Me neither.</p>
<p>I think a lot of this happens because of the mindset of the programer when it's written.</p>
<p>Often CSS ideologies make the assumption that the programer is going to craft the names of CSS with care and precision, refactoring the hierarchies when then become untrue.</p>
<p>Ain't nobody got time for 'dat.</p>
<p>Often we assume that they are going to find your reusable <code>.scss</code> file. Or read through the code looking to remove duplication.</p>
<p>Ain't nobody got time for 'dat either.</p>
<p>No, the mentally of a software engineer modifying CSS is,</p>
<blockquote>
<p>How fast can I get this to <em>look</em> like I want <em>without messing things up</em></p>
</blockquote>
<p>The two parts of this mentally are very important to why CSS rots.</p>
<p>One is that we care only about <em>the way it looks in the end.</em> This means that we aren't as concerned about the maintainability at large, we just want it to look good with as little effort as possible. Doesn't everyone?</p>
<p>The other important part is that we are doing this <em>visually</em>. Meaning <em>in the browser.</em></p>
<p>Doing CSS in the browser means  <em>instant feedback.</em></p>
<p>It's awesome to modify styles in the dev tools bumping pixels till it's just right then copying it over to your CSS file when you're done. It's far faster than reading thousands of lines is CSS and more fun.</p>
<p>This, however, has two ill effects. One being that you're pulling pixel values out of the air probably not fitting within any sort of grid system. This creates white space quickly becomes less visually harmonious and pleasing. Not to mention it just makes things hard to line up that are more than 2ems away. Not to mention you'll get a crazy mix of em/rem/px/vh/%'s.</p>
<p>The other half of the software engineers mentally is, <em>"without messing anything up".</em> Any developer knows modifying or reusing CSS classes is just asking for trouble. So in self-defense we always create new ones.</p>
<p>A new class is the only class that you can be sure that people aren't depending on in weird ways after all.</p>
<p>The problem is that CSS grows <em>forever</em>.</p>
<p>Soon the customer has to sit for a 4 seconds to download the CSS alone if their connection is slow. That being in addition to everything else.</p>
<p>Another, perhaps larger, the problem is with every new class <em>comes something you have to name</em>. This gets especially bad if the CSS names are global (there's some tools that randomise class names so that they essentially aren't). What if you need to toggle things depending on different 5 situations? 5 more things you have to name!</p>
<h1>Naming is the problem</h1>
<p>Symantic naming is generally the standard when using CSS. This essentially means that you name your CSS the same as name of the thing on the page. If the styles are for a sidebar you name the root class <code>.sidebar</code>. And then you put something like these styles in it:</p>
<pre><code>.sidebar {
    float: left;
    background-color: [eee](eee);
 }
</code></pre>
<p>This is fine till you start putting <code>float: left</code> and <code>background-color: [eee](eee);</code> everywhere. And even worse in lots of places where it only has <code>background-color: [eee](eee);</code> in it.</p>
<p>Tags:</p>
<ul>
<li><a href="http://localhost:5000/css" rel="noopener noreferrer">css</a></li>
<li><a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></li>
<li><a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf empty

10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf=79:<h1>Complexity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.233 [debug] l:len=7

10:45:07.233 [debug] l:buf=9:<h1>Complexity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf empty

10:45:07.233 [debug] l:len=

10:45:07.233 [debug] l:buf=286:<h1>de-risking</h1>
<p>You attempt to remove the risk from a project being blown up in scope in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
</ul>


10:45:07.233 [debug] l:len=2

10:45:07.233 [debug] l:buf=86:<h1>de-risking</h1>
<p>You attempt to remove the risk from a project being blown up in scope in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
</ul>


10:45:07.234 [debug] l:len=28

10:45:07.234 [debug] l:buf=6:<h1>de-risking</h1>
<p>You attempt to remove the risk from a project being blown up in scope in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a></li>
</ul>


10:45:07.234 [debug] l:len=

10:45:07.234 [debug] l:buf empty

10:45:07.234 [debug] l:len=

10:45:07.234 [debug] l:buf=4314:<h1>Effective Async Communication</h1>
<p>Asynchronous, what a nerdy word. If you don't know what it means let's start with a definition:</p>
<blockquote>
<p><em>Not simultaneous or concurrent in time</em>\</p>
</blockquote>
<p>Examples of&nbsp;<strong><a href="http://localhost:5000/synchronous" rel="noopener noreferrer">Synchronous</a> Communication</strong>:</p>
<ul>
<li>Video Calls (Zoom, Google Meet, etc...)</li>
<li>Audio Calls (Teleconferences)</li>
<li>Slack (usually, see below)</li>
<li>Live talks or Events</li>
</ul>
<p>Example of&nbsp;<strong>Asynchronous</strong>&nbsp;<strong>Communication</strong>:&nbsp;</p>
<ul>
<li>Project Management Tools (JIRA, Basecamp, Asana)</li>
<li>Stack Overflow</li>
<li>In-App comments (Google docs comments, comments in Abstract, etc...)</li>
<li>E-mail (unless you're using it like chat, don't do this)</li>
<li>Surveys</li>
<li>Forums (like&nbsp;<a href="https://elixirforum.com/" rel="noopener noreferrer">https://elixirforum.com</a>)</li>
<li>Github/Gitlab issues</li>
<li>Marco Pollo (a unique async video chat)</li>
</ul>
<h2>Benefits of Async communication</h2>
<p>The benefits of async communication are many:</p>
<ul>
<li>🤔People are allowed to think more deeply about their responses which leads to higher quality ones and less "hot takes"</li>
<li>🤐People that would normally be timid in meetings have a voice</li>
<li>🎧They support "Deep work". Nobody gets left out because they couldn't make the meeting or they were focusing instead of checking Slack</li>
<li>📖Context is always available. A person can read over the discussion to get caught up without needing people to constantly re-cap old discussions</li>
<li>💾Decisions are documented so they can be referenced in the future</li>
<li>😴They are timezone friendly. Many times people in other timezones (think Brazil, Austrailia) are 2nd class because they can't make all the meetings or a discussion happens in Slack while they are sleeping</li>
</ul>
<h2>So you mean&nbsp;<em>just <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> people more</em>?</h2>
<p>So when we're talking about "Asynchronous Communication" we mean that each person&nbsp;<em><strong>doesn't have be present at the same time</strong></em>.</p>
<p>This is important because Slack is often is thought of as "asynchronous" but in reality it's often quite hostile to it. Why? Well&nbsp;<a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">many</a>&nbsp;<a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">reasons</a>, but let's start with this:</p>
<blockquote>
<p><em>If you're not&nbsp;<strong>paying attention all the time, you won't be able to have your say when something comes up</strong>. And since conversations happen quick, and then scroll away on the conveyor belt, if you're not at your station when it's your turn to speak, you won't get a chance later.</em><br>
Slack conversations are <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> and usually multiple topics share the same channel. This means that if you don't type up your reply quick somebody else might change the topic, or not give you time to speak. The chance increases the more people that you include in the room.</p>
</blockquote>
<h2>Tips for being better at <a href="http://localhost:5000/async" rel="noopener noreferrer">Async</a></h2>
<ol>
<li>Don't expect an immediately responses</li>
<li>Don't give too many status updates</li>
<li>Have a title: optimize for the readers time</li>
<li>Include&nbsp;<em><strong>all</strong></em>&nbsp;the context</li>
<li>Scope your topics</li>
<li>Include pictures</li>
<li>Offer numbered options</li>
<li>Record quick videos</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, <a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.234 [debug] l:len=4

10:45:07.234 [debug] l:buf=314:<h1>Effective Async Communication</h1>
<p>Asynchronous, what a nerdy word. If you don't know what it means let's start with a definition:</p>
<blockquote>
<p><em>Not simultaneous or concurrent in time</em>\</p>
</blockquote>
<p>Examples of&nbsp;<strong><a href="http://localhost:5000/synchronous" rel="noopener noreferrer">Synchronous</a> Communication</strong>:</p>
<ul>
<li>Video Calls (Zoom, Google Meet, etc...)</li>
<li>Audio Calls (Teleconferences)</li>
<li>Slack (usually, see below)</li>
<li>Live talks or Events</li>
</ul>
<p>Example of&nbsp;<strong>Asynchronous</strong>&nbsp;<strong>Communication</strong>:&nbsp;</p>
<ul>
<li>Project Management Tools (JIRA, Basecamp, Asana)</li>
<li>Stack Overflow</li>
<li>In-App comments (Google docs comments, comments in Abstract, etc...)</li>
<li>E-mail (unless you're using it like chat, don't do this)</li>
<li>Surveys</li>
<li>Forums (like&nbsp;<a href="https://elixirforum.com/" rel="noopener noreferrer">https://elixirforum.com</a>)</li>
<li>Github/Gitlab issues</li>
<li>Marco Pollo (a unique async video chat)</li>
</ul>
<h2>Benefits of Async communication</h2>
<p>The benefits of async communication are many:</p>
<ul>
<li>🤔People are allowed to think more deeply about their responses which leads to higher quality ones and less "hot takes"</li>
<li>🤐People that would normally be timid in meetings have a voice</li>
<li>🎧They support "Deep work". Nobody gets left out because they couldn't make the meeting or they were focusing instead of checking Slack</li>
<li>📖Context is always available. A person can read over the discussion to get caught up without needing people to constantly re-cap old discussions</li>
<li>💾Decisions are documented so they can be referenced in the future</li>
<li>😴They are timezone friendly. Many times people in other timezones (think Brazil, Austrailia) are 2nd class because they can't make all the meetings or a discussion happens in Slack while they are sleeping</li>
</ul>
<h2>So you mean&nbsp;<em>just <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> people more</em>?</h2>
<p>So when we're talking about "Asynchronous Communication" we mean that each person&nbsp;<em><strong>doesn't have be present at the same time</strong></em>.</p>
<p>This is important because Slack is often is thought of as "asynchronous" but in reality it's often quite hostile to it. Why? Well&nbsp;<a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">many</a>&nbsp;<a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">reasons</a>, but let's start with this:</p>
<blockquote>
<p><em>If you're not&nbsp;<strong>paying attention all the time, you won't be able to have your say when something comes up</strong>. And since conversations happen quick, and then scroll away on the conveyor belt, if you're not at your station when it's your turn to speak, you won't get a chance later.</em><br>
Slack conversations are <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> and usually multiple topics share the same channel. This means that if you don't type up your reply quick somebody else might change the topic, or not give you time to speak. The chance increases the more people that you include in the room.</p>
</blockquote>
<h2>Tips for being better at <a href="http://localhost:5000/async" rel="noopener noreferrer">Async</a></h2>
<ol>
<li>Don't expect an immediately responses</li>
<li>Don't give too many status updates</li>
<li>Have a title: optimize for the readers time</li>
<li>Include&nbsp;<em><strong>all</strong></em>&nbsp;the context</li>
<li>Scope your topics</li>
<li>Include pictures</li>
<li>Offer numbered options</li>
<li>Record quick videos</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, <a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.234 [debug] l:len=43

10:45:07.234 [debug] l:buf=14:<h1>Effective Async Communication</h1>
<p>Asynchronous, what a nerdy word. If you don't know what it means let's start with a definition:</p>
<blockquote>
<p><em>Not simultaneous or concurrent in time</em>\</p>
</blockquote>
<p>Examples of&nbsp;<strong><a href="http://localhost:5000/synchronous" rel="noopener noreferrer">Synchronous</a> Communication</strong>:</p>
<ul>
<li>Video Calls (Zoom, Google Meet, etc...)</li>
<li>Audio Calls (Teleconferences)</li>
<li>Slack (usually, see below)</li>
<li>Live talks or Events</li>
</ul>
<p>Example of&nbsp;<strong>Asynchronous</strong>&nbsp;<strong>Communication</strong>:&nbsp;</p>
<ul>
<li>Project Management Tools (JIRA, Basecamp, Asana)</li>
<li>Stack Overflow</li>
<li>In-App comments (Google docs comments, comments in Abstract, etc...)</li>
<li>E-mail (unless you're using it like chat, don't do this)</li>
<li>Surveys</li>
<li>Forums (like&nbsp;<a href="https://elixirforum.com/" rel="noopener noreferrer">https://elixirforum.com</a>)</li>
<li>Github/Gitlab issues</li>
<li>Marco Pollo (a unique async video chat)</li>
</ul>
<h2>Benefits of Async communication</h2>
<p>The benefits of async communication are many:</p>
<ul>
<li>🤔People are allowed to think more deeply about their responses which leads to higher quality ones and less "hot takes"</li>
<li>🤐People that would normally be timid in meetings have a voice</li>
<li>🎧They support "Deep work". Nobody gets left out because they couldn't make the meeting or they were focusing instead of checking Slack</li>
<li>📖Context is always available. A person can read over the discussion to get caught up without needing people to constantly re-cap old discussions</li>
<li>💾Decisions are documented so they can be referenced in the future</li>
<li>😴They are timezone friendly. Many times people in other timezones (think Brazil, Austrailia) are 2nd class because they can't make all the meetings or a discussion happens in Slack while they are sleeping</li>
</ul>
<h2>So you mean&nbsp;<em>just <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> people more</em>?</h2>
<p>So when we're talking about "Asynchronous Communication" we mean that each person&nbsp;<em><strong>doesn't have be present at the same time</strong></em>.</p>
<p>This is important because Slack is often is thought of as "asynchronous" but in reality it's often quite hostile to it. Why? Well&nbsp;<a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">many</a>&nbsp;<a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">reasons</a>, but let's start with this:</p>
<blockquote>
<p><em>If you're not&nbsp;<strong>paying attention all the time, you won't be able to have your say when something comes up</strong>. And since conversations happen quick, and then scroll away on the conveyor belt, if you're not at your station when it's your turn to speak, you won't get a chance later.</em><br>
Slack conversations are <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> and usually multiple topics share the same channel. This means that if you don't type up your reply quick somebody else might change the topic, or not give you time to speak. The chance increases the more people that you include in the room.</p>
</blockquote>
<h2>Tips for being better at <a href="http://localhost:5000/async" rel="noopener noreferrer">Async</a></h2>
<ol>
<li>Don't expect an immediately responses</li>
<li>Don't give too many status updates</li>
<li>Have a title: optimize for the readers time</li>
<li>Include&nbsp;<em><strong>all</strong></em>&nbsp;the context</li>
<li>Scope your topics</li>
<li>Include pictures</li>
<li>Offer numbered options</li>
<li>Record quick videos</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, <a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.234 [debug] l:len=431

10:45:07.234 [debug] l:buf=4:<h1>Effective Async Communication</h1>
<p>Asynchronous, what a nerdy word. If you don't know what it means let's start with a definition:</p>
<blockquote>
<p><em>Not simultaneous or concurrent in time</em>\</p>
</blockquote>
<p>Examples of&nbsp;<strong><a href="http://localhost:5000/synchronous" rel="noopener noreferrer">Synchronous</a> Communication</strong>:</p>
<ul>
<li>Video Calls (Zoom, Google Meet, etc...)</li>
<li>Audio Calls (Teleconferences)</li>
<li>Slack (usually, see below)</li>
<li>Live talks or Events</li>
</ul>
<p>Example of&nbsp;<strong>Asynchronous</strong>&nbsp;<strong>Communication</strong>:&nbsp;</p>
<ul>
<li>Project Management Tools (JIRA, Basecamp, Asana)</li>
<li>Stack Overflow</li>
<li>In-App comments (Google docs comments, comments in Abstract, etc...)</li>
<li>E-mail (unless you're using it like chat, don't do this)</li>
<li>Surveys</li>
<li>Forums (like&nbsp;<a href="https://elixirforum.com/" rel="noopener noreferrer">https://elixirforum.com</a>)</li>
<li>Github/Gitlab issues</li>
<li>Marco Pollo (a unique async video chat)</li>
</ul>
<h2>Benefits of Async communication</h2>
<p>The benefits of async communication are many:</p>
<ul>
<li>🤔People are allowed to think more deeply about their responses which leads to higher quality ones and less "hot takes"</li>
<li>🤐People that would normally be timid in meetings have a voice</li>
<li>🎧They support "Deep work". Nobody gets left out because they couldn't make the meeting or they were focusing instead of checking Slack</li>
<li>📖Context is always available. A person can read over the discussion to get caught up without needing people to constantly re-cap old discussions</li>
<li>💾Decisions are documented so they can be referenced in the future</li>
<li>😴They are timezone friendly. Many times people in other timezones (think Brazil, Austrailia) are 2nd class because they can't make all the meetings or a discussion happens in Slack while they are sleeping</li>
</ul>
<h2>So you mean&nbsp;<em>just <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> people more</em>?</h2>
<p>So when we're talking about "Asynchronous Communication" we mean that each person&nbsp;<em><strong>doesn't have be present at the same time</strong></em>.</p>
<p>This is important because Slack is often is thought of as "asynchronous" but in reality it's often quite hostile to it. Why? Well&nbsp;<a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">many</a>&nbsp;<a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">reasons</a>, but let's start with this:</p>
<blockquote>
<p><em>If you're not&nbsp;<strong>paying attention all the time, you won't be able to have your say when something comes up</strong>. And since conversations happen quick, and then scroll away on the conveyor belt, if you're not at your station when it's your turn to speak, you won't get a chance later.</em><br>
Slack conversations are <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> and usually multiple topics share the same channel. This means that if you don't type up your reply quick somebody else might change the topic, or not give you time to speak. The chance increases the more people that you include in the room.</p>
</blockquote>
<h2>Tips for being better at <a href="http://localhost:5000/async" rel="noopener noreferrer">Async</a></h2>
<ol>
<li>Don't expect an immediately responses</li>
<li>Don't give too many status updates</li>
<li>Have a title: optimize for the readers time</li>
<li>Include&nbsp;<em><strong>all</strong></em>&nbsp;the context</li>
<li>Scope your topics</li>
<li>Include pictures</li>
<li>Offer numbered options</li>
<li>Record quick videos</li>
</ol>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, <a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>, <a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.234 [debug] l:len=

10:45:07.234 [debug] l:buf empty

10:45:07.234 [debug] l:len=

10:45:07.234 [debug] l:buf=272:<h1>How Andy's working notes works</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.234 [debug] l:len=2

10:45:07.234 [debug] l:buf=72:<h1>How Andy's working notes works</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.234 [debug] l:len=27

10:45:07.234 [debug] l:buf=2:<h1>How Andy's working notes works</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf empty

10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf=94:<h1>Behavioral Economics</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.235 [debug] l:len=9

10:45:07.235 [debug] l:buf=4:<h1>Behavioral Economics</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf empty

10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf=115:<h1>last responsible moment to make an abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.235 [debug] l:len=1

10:45:07.235 [debug] l:buf=15:<h1>last responsible moment to make an abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.235 [debug] l:len=11

10:45:07.235 [debug] l:buf=5:<h1>last responsible moment to make an abstraction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf empty

10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf=1150:<h1>Pick the language that makes you happy</h1>
<blockquote>
<p>For a company like <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, you’d be mad to make your choice of programming language and web framework on anything but a determination of what’ll make your programmers the most motivated, happy, and productive. Whatever the cost, it’s worth it. It’s worth it on a pure cost/benefit, but, more importantly, it’s worth it in terms of human happiness and potential.</p>
<p>This is why we run <a href="http://localhost:5000/ruby" rel="noopener noreferrer">Ruby</a>. This is why we run Rails. It’s a complete bargain.</p>
</blockquote>
<p>~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a>: <a href="https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/" rel="noopener noreferrer">https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/</a></p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/dev-ops" rel="noopener noreferrer">Dev Ops</a></li>
</ul>


10:45:07.235 [debug] l:len=1

10:45:07.235 [debug] l:buf=150:<h1>Pick the language that makes you happy</h1>
<blockquote>
<p>For a company like <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, you’d be mad to make your choice of programming language and web framework on anything but a determination of what’ll make your programmers the most motivated, happy, and productive. Whatever the cost, it’s worth it. It’s worth it on a pure cost/benefit, but, more importantly, it’s worth it in terms of human happiness and potential.</p>
<p>This is why we run <a href="http://localhost:5000/ruby" rel="noopener noreferrer">Ruby</a>. This is why we run Rails. It’s a complete bargain.</p>
</blockquote>
<p>~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a>: <a href="https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/" rel="noopener noreferrer">https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/</a></p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/dev-ops" rel="noopener noreferrer">Dev Ops</a></li>
</ul>


10:45:07.235 [debug] l:len=11

10:45:07.235 [debug] l:buf=50:<h1>Pick the language that makes you happy</h1>
<blockquote>
<p>For a company like <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, you’d be mad to make your choice of programming language and web framework on anything but a determination of what’ll make your programmers the most motivated, happy, and productive. Whatever the cost, it’s worth it. It’s worth it on a pure cost/benefit, but, more importantly, it’s worth it in terms of human happiness and potential.</p>
<p>This is why we run <a href="http://localhost:5000/ruby" rel="noopener noreferrer">Ruby</a>. This is why we run Rails. It’s a complete bargain.</p>
</blockquote>
<p>~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a>: <a href="https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/" rel="noopener noreferrer">https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/</a></p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/dev-ops" rel="noopener noreferrer">Dev Ops</a></li>
</ul>


10:45:07.235 [debug] l:len=115

10:45:07.235 [debug] l:buf=0:<h1>Pick the language that makes you happy</h1>
<blockquote>
<p>For a company like <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, you’d be mad to make your choice of programming language and web framework on anything but a determination of what’ll make your programmers the most motivated, happy, and productive. Whatever the cost, it’s worth it. It’s worth it on a pure cost/benefit, but, more importantly, it’s worth it in terms of human happiness and potential.</p>
<p>This is why we run <a href="http://localhost:5000/ruby" rel="noopener noreferrer">Ruby</a>. This is why we run Rails. It’s a complete bargain.</p>
</blockquote>
<p>~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a>: <a href="https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/" rel="noopener noreferrer">https://m.signalvnoise.com/only-15-of-the-basecamp-operations-budget-is-spent-on-ruby/</a></p>
<ul>
<li><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a></li>
<li><a href="http://localhost:5000/dev-ops" rel="noopener noreferrer">Dev Ops</a></li>
</ul>


10:45:07.235 [debug] l:len=

10:45:07.235 [debug] l:buf empty

10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf=1718:<p>Slack threads have a weird, but unique design.</p>
<p>Design ideas:</p>
<ol>
<li>They are only one level deep (usually a great constraint)</li>
<li>They can be off of any message</li>
<li>They don't have any title</li>
<li>They are collected into the sidebar in an infinitely scrollable list.</li>
<li>If you mention someone in them they act as a DM and you get notifications for every reply.</li>
</ol>
<p><a href="http://localhost:5000/how-the-ask-bj-channel-quickly-fell-apart" rel="noopener noreferrer">How the ask-bj channel quickly fell apart</a></p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.236 [debug] l:len=1

10:45:07.236 [debug] l:buf=718:<p>Slack threads have a weird, but unique design.</p>
<p>Design ideas:</p>
<ol>
<li>They are only one level deep (usually a great constraint)</li>
<li>They can be off of any message</li>
<li>They don't have any title</li>
<li>They are collected into the sidebar in an infinitely scrollable list.</li>
<li>If you mention someone in them they act as a DM and you get notifications for every reply.</li>
</ol>
<p><a href="http://localhost:5000/how-the-ask-bj-channel-quickly-fell-apart" rel="noopener noreferrer">How the ask-bj channel quickly fell apart</a></p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.236 [debug] l:len=17

10:45:07.236 [debug] l:buf=18:<p>Slack threads have a weird, but unique design.</p>
<p>Design ideas:</p>
<ol>
<li>They are only one level deep (usually a great constraint)</li>
<li>They can be off of any message</li>
<li>They don't have any title</li>
<li>They are collected into the sidebar in an infinitely scrollable list.</li>
<li>If you mention someone in them they act as a DM and you get notifications for every reply.</li>
</ol>
<p><a href="http://localhost:5000/how-the-ask-bj-channel-quickly-fell-apart" rel="noopener noreferrer">How the ask-bj channel quickly fell apart</a></p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.236 [debug] l:len=171

10:45:07.236 [debug] l:buf=8:<p>Slack threads have a weird, but unique design.</p>
<p>Design ideas:</p>
<ol>
<li>They are only one level deep (usually a great constraint)</li>
<li>They can be off of any message</li>
<li>They don't have any title</li>
<li>They are collected into the sidebar in an infinitely scrollable list.</li>
<li>If you mention someone in them they act as a DM and you get notifications for every reply.</li>
</ol>
<p><a href="http://localhost:5000/how-the-ask-bj-channel-quickly-fell-apart" rel="noopener noreferrer">How the ask-bj channel quickly fell apart</a></p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf empty

10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf=255:<h1>Screen Recording 2020-10-19 at 03</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.236 [debug] l:len=2

10:45:07.236 [debug] l:buf=55:<h1>Screen Recording 2020-10-19 at 03</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.236 [debug] l:len=25

10:45:07.236 [debug] l:buf=5:<h1>Screen Recording 2020-10-19 at 03</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf empty

10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf=78:<h1>nerdlunch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.236 [debug] l:len=7

10:45:07.236 [debug] l:buf=8:<h1>nerdlunch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf empty

10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf=243:<h2>Mentoring</h2>
<p>Questioning
To enlighten the student.
Commending
Endorse a cirtan path.
Correcting
With positive outcome.
Not too much abrasion.
Persuade.
Be brave enough to correct.</p>
<p>Savior was the best.</p>
<p>Tags:
teaching</p>


10:45:07.236 [debug] l:len=2

10:45:07.236 [debug] l:buf=43:<h2>Mentoring</h2>
<p>Questioning
To enlighten the student.
Commending
Endorse a cirtan path.
Correcting
With positive outcome.
Not too much abrasion.
Persuade.
Be brave enough to correct.</p>
<p>Savior was the best.</p>
<p>Tags:
teaching</p>


10:45:07.236 [debug] l:len=24

10:45:07.236 [debug] l:buf=3:<h2>Mentoring</h2>
<p>Questioning
To enlighten the student.
Commending
Endorse a cirtan path.
Correcting
With positive outcome.
Not too much abrasion.
Persuade.
Be brave enough to correct.</p>
<p>Savior was the best.</p>
<p>Tags:
teaching</p>


10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf empty

10:45:07.236 [debug] l:len=

10:45:07.236 [debug] l:buf=282:<h1>Laggards</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
</ul>


10:45:07.236 [debug] l:len=2

10:45:07.236 [debug] l:buf=82:<h1>Laggards</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
</ul>


10:45:07.236 [debug] l:len=28

10:45:07.237 [debug] l:buf=2:<h1>Laggards</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
</ul>


10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf empty

10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf=84:<h1>Pasted image 21</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.237 [debug] l:len=8

10:45:07.237 [debug] l:buf=4:<h1>Pasted image 21</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf empty

10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf=249:<h1>Pasted image 20201019153417</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.237 [debug] l:len=2

10:45:07.237 [debug] l:buf=49:<h1>Pasted image 20201019153417</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.237 [debug] l:len=24

10:45:07.237 [debug] l:buf=9:<h1>Pasted image 20201019153417</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf empty

10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf=634:<h1>pipeline efficiency</h1>
<ul>
<li>Things in a pipeline don't have to wait on other things</li>
<li>often used in <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> and <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.237 [debug] l:len=6

10:45:07.237 [debug] l:buf=34:<h1>pipeline efficiency</h1>
<ul>
<li>Things in a pipeline don't have to wait on other things</li>
<li>often used in <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> and <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.237 [debug] l:len=63

10:45:07.237 [debug] l:buf=4:<h1>pipeline efficiency</h1>
<ul>
<li>Things in a pipeline don't have to wait on other things</li>
<li>often used in <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> and <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf empty

10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf=308:<h1>papertrail</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.237 [debug] l:len=3

10:45:07.237 [debug] l:buf=08:<h1>papertrail</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.237 [debug] l:len=30

10:45:07.237 [debug] l:buf=8:<h1>papertrail</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.237 [debug] l:len=

10:45:07.237 [debug] l:buf empty

10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf=2009:<h1>People complaing about Basecamp's Editor are missing the point</h1>
<p>A <a href="https://twitter.com/adamwathan/status/1275041608849862657" rel="noopener noreferrer">lot</a> of <a href="https://voice.whiterabbitexpress.com/forget-basecamp-how-to-implement-shape-up-in-monday-com-539be2193542" rel="noopener noreferrer">people</a> complain about the fact that Basecamp's editor doesn't have keybindings. They say:</p>
<blockquote>
<p>I can just do things so much faster in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>!</p>
</blockquote>
<p>Even <a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> said this:</p>
<blockquote>
<p>though I'll admit I've been trying to use basecamp to track info on my side project and shortcuts for their text editor are sorely lacking
I can't even make a header without mousing it all the way up to the toolbar to click the header button
I even wrote in to support about it, and they were like "yep"
!!??
so I'm way faster at writing notes in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>. <a href="https://bloombuilt.slack.com/archives/C2D9V9MJ7/p1596217393352800?thread_ts=1596217205.352100&amp;cid=C2D9V9MJ7" rel="noopener noreferrer">ref</a></p>
</blockquote>
<p>But that's not the point. The point is the editor works perfectly on Mobile, and it isn't perfect but it works well. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> has much bigger fish to fry and existing users just get used to it.</p>
<p>Basecamp is too good to not look past very basic stuff like this.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.238 [debug] l:len=2

10:45:07.238 [debug] l:buf=009:<h1>People complaing about Basecamp's Editor are missing the point</h1>
<p>A <a href="https://twitter.com/adamwathan/status/1275041608849862657" rel="noopener noreferrer">lot</a> of <a href="https://voice.whiterabbitexpress.com/forget-basecamp-how-to-implement-shape-up-in-monday-com-539be2193542" rel="noopener noreferrer">people</a> complain about the fact that Basecamp's editor doesn't have keybindings. They say:</p>
<blockquote>
<p>I can just do things so much faster in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>!</p>
</blockquote>
<p>Even <a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> said this:</p>
<blockquote>
<p>though I'll admit I've been trying to use basecamp to track info on my side project and shortcuts for their text editor are sorely lacking
I can't even make a header without mousing it all the way up to the toolbar to click the header button
I even wrote in to support about it, and they were like "yep"
!!??
so I'm way faster at writing notes in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>. <a href="https://bloombuilt.slack.com/archives/C2D9V9MJ7/p1596217393352800?thread_ts=1596217205.352100&amp;cid=C2D9V9MJ7" rel="noopener noreferrer">ref</a></p>
</blockquote>
<p>But that's not the point. The point is the editor works perfectly on Mobile, and it isn't perfect but it works well. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> has much bigger fish to fry and existing users just get used to it.</p>
<p>Basecamp is too good to not look past very basic stuff like this.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.238 [debug] l:len=20

10:45:07.238 [debug] l:buf=09:<h1>People complaing about Basecamp's Editor are missing the point</h1>
<p>A <a href="https://twitter.com/adamwathan/status/1275041608849862657" rel="noopener noreferrer">lot</a> of <a href="https://voice.whiterabbitexpress.com/forget-basecamp-how-to-implement-shape-up-in-monday-com-539be2193542" rel="noopener noreferrer">people</a> complain about the fact that Basecamp's editor doesn't have keybindings. They say:</p>
<blockquote>
<p>I can just do things so much faster in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>!</p>
</blockquote>
<p>Even <a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> said this:</p>
<blockquote>
<p>though I'll admit I've been trying to use basecamp to track info on my side project and shortcuts for their text editor are sorely lacking
I can't even make a header without mousing it all the way up to the toolbar to click the header button
I even wrote in to support about it, and they were like "yep"
!!??
so I'm way faster at writing notes in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>. <a href="https://bloombuilt.slack.com/archives/C2D9V9MJ7/p1596217393352800?thread_ts=1596217205.352100&amp;cid=C2D9V9MJ7" rel="noopener noreferrer">ref</a></p>
</blockquote>
<p>But that's not the point. The point is the editor works perfectly on Mobile, and it isn't perfect but it works well. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> has much bigger fish to fry and existing users just get used to it.</p>
<p>Basecamp is too good to not look past very basic stuff like this.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.238 [debug] l:len=200

10:45:07.238 [debug] l:buf=9:<h1>People complaing about Basecamp's Editor are missing the point</h1>
<p>A <a href="https://twitter.com/adamwathan/status/1275041608849862657" rel="noopener noreferrer">lot</a> of <a href="https://voice.whiterabbitexpress.com/forget-basecamp-how-to-implement-shape-up-in-monday-com-539be2193542" rel="noopener noreferrer">people</a> complain about the fact that Basecamp's editor doesn't have keybindings. They say:</p>
<blockquote>
<p>I can just do things so much faster in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>!</p>
</blockquote>
<p>Even <a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> said this:</p>
<blockquote>
<p>though I'll admit I've been trying to use basecamp to track info on my side project and shortcuts for their text editor are sorely lacking
I can't even make a header without mousing it all the way up to the toolbar to click the header button
I even wrote in to support about it, and they were like "yep"
!!??
so I'm way faster at writing notes in <a href="http://localhost:5000/notion" rel="noopener noreferrer">Notion</a>. <a href="https://bloombuilt.slack.com/archives/C2D9V9MJ7/p1596217393352800?thread_ts=1596217205.352100&amp;cid=C2D9V9MJ7" rel="noopener noreferrer">ref</a></p>
</blockquote>
<p>But that's not the point. The point is the editor works perfectly on Mobile, and it isn't perfect but it works well. <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> has much bigger fish to fry and existing users just get used to it.</p>
<p>Basecamp is too good to not look past very basic stuff like this.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf empty

10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf=79:<h1>Game ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.238 [debug] l:len=7

10:45:07.238 [debug] l:buf=9:<h1>Game ideas</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf empty

10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf=265:<h1>Knowledge, Innovation, Value and Wisdom</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.238 [debug] l:len=2

10:45:07.238 [debug] l:buf=65:<h1>Knowledge, Innovation, Value and Wisdom</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.238 [debug] l:len=26

10:45:07.238 [debug] l:buf=5:<h1>Knowledge, Innovation, Value and Wisdom</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf empty

10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf=96:<h1>Pasted image 20201021134328</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.238 [debug] l:len=9

10:45:07.238 [debug] l:buf=6:<h1>Pasted image 20201021134328</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.238 [debug] l:len=

10:45:07.238 [debug] l:buf empty

10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf=2380:<h1>Burry the hustle</h1>
<blockquote>
<p>Its origin from a dog-eat-dog world has been turned from a cautionary tale into an inspirational one. It’s not that you need to hustle to survive, it’s that you seek the hustle to thrive, and still at the expense of yourself and others.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>"What really gets my goat, though, is that it doesn’t even work. You’re not very likely to find that key insight or breakthrough idea north of the 14th hour. <strong>Creativity, progress, and impact does not yield easily or commonly to brute force</strong>."</p>
</blockquote>
<p>cheat sheet and counter to the hustle:</p>
<ol>
<li>
<p>Get a great night’s sleep. The studies on sleep deprivation and its cognitive effects are unanimous and devastating. You take a bigger hit on your productive and creative powers through lack of proper sleep than almost any other neglect.</p>
</li>
<li>
<p>Get plenty of fresh air. The latest studies on effects of CO2 accumulation, volatile organic compounds, and other indoor air quality killers are shocking. And unlike sleep, it’s far less known just how much cognitive impairment you can suffer from poor air quality.</p>
</li>
<li>
<p>Get regular exercise. This isn’t about “staying fit” or “looking good”, although those are noble reasons in their own right. It’s about what moving your body does to your brain. And it’s good.</p>
</li>
<li>
<p>Read some classics. You probably read the equivalent of a few books a month in tweets, hot takes, and other low-calorie material. What if you shifted some of that consumption to not just what’s most recent, but the best humankind had to offer over the last few millennia? The influences compound and tickle your creativity in profound ways.</p>
</li>
<li>
<p>Say no to more dumb shit. Engage with fewer things but at a higher intensity. Stick with it. Stop chasing so much.</p>
</li>
</ol>
<p><a href="https://m.signalvnoise.com/lets-bury-the-hustle/" rel="noopener noreferrer">https://m.signalvnoise.com/lets-bury-the-hustle/</a></p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
</ul>


10:45:07.239 [debug] l:len=2

10:45:07.239 [debug] l:buf=380:<h1>Burry the hustle</h1>
<blockquote>
<p>Its origin from a dog-eat-dog world has been turned from a cautionary tale into an inspirational one. It’s not that you need to hustle to survive, it’s that you seek the hustle to thrive, and still at the expense of yourself and others.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>"What really gets my goat, though, is that it doesn’t even work. You’re not very likely to find that key insight or breakthrough idea north of the 14th hour. <strong>Creativity, progress, and impact does not yield easily or commonly to brute force</strong>."</p>
</blockquote>
<p>cheat sheet and counter to the hustle:</p>
<ol>
<li>
<p>Get a great night’s sleep. The studies on sleep deprivation and its cognitive effects are unanimous and devastating. You take a bigger hit on your productive and creative powers through lack of proper sleep than almost any other neglect.</p>
</li>
<li>
<p>Get plenty of fresh air. The latest studies on effects of CO2 accumulation, volatile organic compounds, and other indoor air quality killers are shocking. And unlike sleep, it’s far less known just how much cognitive impairment you can suffer from poor air quality.</p>
</li>
<li>
<p>Get regular exercise. This isn’t about “staying fit” or “looking good”, although those are noble reasons in their own right. It’s about what moving your body does to your brain. And it’s good.</p>
</li>
<li>
<p>Read some classics. You probably read the equivalent of a few books a month in tweets, hot takes, and other low-calorie material. What if you shifted some of that consumption to not just what’s most recent, but the best humankind had to offer over the last few millennia? The influences compound and tickle your creativity in profound ways.</p>
</li>
<li>
<p>Say no to more dumb shit. Engage with fewer things but at a higher intensity. Stick with it. Stop chasing so much.</p>
</li>
</ol>
<p><a href="https://m.signalvnoise.com/lets-bury-the-hustle/" rel="noopener noreferrer">https://m.signalvnoise.com/lets-bury-the-hustle/</a></p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
</ul>


10:45:07.239 [debug] l:len=23

10:45:07.239 [debug] l:buf=80:<h1>Burry the hustle</h1>
<blockquote>
<p>Its origin from a dog-eat-dog world has been turned from a cautionary tale into an inspirational one. It’s not that you need to hustle to survive, it’s that you seek the hustle to thrive, and still at the expense of yourself and others.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>"What really gets my goat, though, is that it doesn’t even work. You’re not very likely to find that key insight or breakthrough idea north of the 14th hour. <strong>Creativity, progress, and impact does not yield easily or commonly to brute force</strong>."</p>
</blockquote>
<p>cheat sheet and counter to the hustle:</p>
<ol>
<li>
<p>Get a great night’s sleep. The studies on sleep deprivation and its cognitive effects are unanimous and devastating. You take a bigger hit on your productive and creative powers through lack of proper sleep than almost any other neglect.</p>
</li>
<li>
<p>Get plenty of fresh air. The latest studies on effects of CO2 accumulation, volatile organic compounds, and other indoor air quality killers are shocking. And unlike sleep, it’s far less known just how much cognitive impairment you can suffer from poor air quality.</p>
</li>
<li>
<p>Get regular exercise. This isn’t about “staying fit” or “looking good”, although those are noble reasons in their own right. It’s about what moving your body does to your brain. And it’s good.</p>
</li>
<li>
<p>Read some classics. You probably read the equivalent of a few books a month in tweets, hot takes, and other low-calorie material. What if you shifted some of that consumption to not just what’s most recent, but the best humankind had to offer over the last few millennia? The influences compound and tickle your creativity in profound ways.</p>
</li>
<li>
<p>Say no to more dumb shit. Engage with fewer things but at a higher intensity. Stick with it. Stop chasing so much.</p>
</li>
</ol>
<p><a href="https://m.signalvnoise.com/lets-bury-the-hustle/" rel="noopener noreferrer">https://m.signalvnoise.com/lets-bury-the-hustle/</a></p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
</ul>


10:45:07.239 [debug] l:len=238

10:45:07.239 [debug] l:buf=0:<h1>Burry the hustle</h1>
<blockquote>
<p>Its origin from a dog-eat-dog world has been turned from a cautionary tale into an inspirational one. It’s not that you need to hustle to survive, it’s that you seek the hustle to thrive, and still at the expense of yourself and others.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>"What really gets my goat, though, is that it doesn’t even work. You’re not very likely to find that key insight or breakthrough idea north of the 14th hour. <strong>Creativity, progress, and impact does not yield easily or commonly to brute force</strong>."</p>
</blockquote>
<p>cheat sheet and counter to the hustle:</p>
<ol>
<li>
<p>Get a great night’s sleep. The studies on sleep deprivation and its cognitive effects are unanimous and devastating. You take a bigger hit on your productive and creative powers through lack of proper sleep than almost any other neglect.</p>
</li>
<li>
<p>Get plenty of fresh air. The latest studies on effects of CO2 accumulation, volatile organic compounds, and other indoor air quality killers are shocking. And unlike sleep, it’s far less known just how much cognitive impairment you can suffer from poor air quality.</p>
</li>
<li>
<p>Get regular exercise. This isn’t about “staying fit” or “looking good”, although those are noble reasons in their own right. It’s about what moving your body does to your brain. And it’s good.</p>
</li>
<li>
<p>Read some classics. You probably read the equivalent of a few books a month in tweets, hot takes, and other low-calorie material. What if you shifted some of that consumption to not just what’s most recent, but the best humankind had to offer over the last few millennia? The influences compound and tickle your creativity in profound ways.</p>
</li>
<li>
<p>Say no to more dumb shit. Engage with fewer things but at a higher intensity. Stick with it. Stop chasing so much.</p>
</li>
</ol>
<p><a href="https://m.signalvnoise.com/lets-bury-the-hustle/" rel="noopener noreferrer">https://m.signalvnoise.com/lets-bury-the-hustle/</a></p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/startups" rel="noopener noreferrer">Startups</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
</ul>


10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf empty

10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf=71:<h1>ap</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.239 [debug] l:len=7

10:45:07.239 [debug] l:buf=1:<h1>ap</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf empty

10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf=589:<h1>Abstraction is creating a new level in which one can be absolutely precise</h1>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<p><a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> <a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a> <a href="http://localhost:5000/clean-code" rel="noopener noreferrer">Clean Code</a></p>


10:45:07.239 [debug] l:len=5

10:45:07.239 [debug] l:buf=89:<h1>Abstraction is creating a new level in which one can be absolutely precise</h1>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<p><a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> <a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a> <a href="http://localhost:5000/clean-code" rel="noopener noreferrer">Clean Code</a></p>


10:45:07.239 [debug] l:len=58

10:45:07.239 [debug] l:buf=9:<h1>Abstraction is creating a new level in which one can be absolutely precise</h1>
<blockquote>
<p>"Being abstract is something profoundly <strong>different from being vague</strong>… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise."</p>
</blockquote>
<p><a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> <a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a> <a href="http://localhost:5000/clean-code" rel="noopener noreferrer">Clean Code</a></p>


10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf empty

10:45:07.239 [debug] l:len=

10:45:07.239 [debug] l:buf=96:<h1>Pasted image 20201026113815</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.240 [debug] l:len=9

10:45:07.240 [debug] l:buf=6:<h1>Pasted image 20201026113815</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf empty

10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf=898:<h1>topic based</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.240 [debug] l:len=8

10:45:07.240 [debug] l:buf=98:<h1>topic based</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.240 [debug] l:len=89

10:45:07.240 [debug] l:buf=8:<h1>topic based</h1>
<p>Topics are a central idea that the "thread" of conversation are about and connected to.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf empty

10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf=175:<h1>What dates I worked at Instructure</h1>
<p>2015-05-26 to 2015-08-20</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.240 [debug] l:len=1

10:45:07.240 [debug] l:buf=75:<h1>What dates I worked at Instructure</h1>
<p>2015-05-26 to 2015-08-20</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.240 [debug] l:len=17

10:45:07.240 [debug] l:buf=5:<h1>What dates I worked at Instructure</h1>
<p>2015-05-26 to 2015-08-20</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf empty

10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf=475:<h1>writing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.240 [debug] l:len=4

10:45:07.240 [debug] l:buf=75:<h1>writing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.240 [debug] l:len=47

10:45:07.240 [debug] l:buf=5:<h1>writing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf empty

10:45:07.240 [debug] l:len=

10:45:07.240 [debug] l:buf=77:<h1>Startups</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.240 [debug] l:len=7

10:45:07.240 [debug] l:buf=7:<h1>Startups</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.241 [debug] l:len=

10:45:07.241 [debug] l:buf empty

10:45:07.241 [debug] l:len=

10:45:07.241 [debug] l:buf=9654:<h1>How Slack encourges burnout</h1>
<h1><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> creates Burnout</h1>
<blockquote>
<p>“To see what is in front of one’s nose needs a constant struggle.” -George Orwell</p>
</blockquote>
<p>I have this on my chest for a long time. I really haven't had the words to describe exactly what I need to say, but now I think I do.</p>
<p>I really want to make remote working better. I really don't feel like it's working right now. And I do think that it <em>can be better</em>. I think it can be so good that people would love it.</p>
<h2>Work Hard, Play Had</h2>
<p>So with remote work creates this weird situation where before when you went to the office you focus on the office. You'd talk to your co workers. You've got cool stuff done. And then you went home. And then you were <em>home</em>.</p>
<p>There was a clear physical separation which created a clear mental separation Not only that because most of the communication would happen in person which isn't possible once you go home. This created a clear and healthy boundary.</p>
<h2>Work, all the time</h2>
<p>Work Life Balance? Not anymore. You office is the distance to your nearest phone or computer. This is awesome for commuting but it terrible for work/life balance.</p>
<p>Because we don't get the strict separation from work and home. We get burnt out with remote workers. If you hire good people, which we have, the biggest problem you have to be looking for is <em>overwork</em> <strong>not under work.</strong></p>
<p>Our people are not going to knowingly avoid work. Not at all. In fact what they'll probably do more often than just avoid it, they'll work overtime. You can see this in slack all the time:</p>
<blockquote>
<p>"I am going to be gone for 30 minutes but don't worry I'm going to add on 30 minutes at the end of the day to make up for it".</p>
</blockquote>
<p>This just not healthy. It's just not healthy to micromanage our time so much, we have never been 100% productive at work and just because we have less distractions now doesn't mean that we need to work constantly.</p>
<p>At the office we'd joke, we relaxed, go to snack counter, get lost in an interesting discussion. We took lots of breaks. Remote work for some reason turns into some kind of work marathon.</p>
<p>Being present when you're at home is important but the line is super blurry now.</p>
<h2>Slack</h2>
<p>As much as I hate to single out a single tool, I can't stay silent about <em>Slack</em>. Much like we don't want to think that the CEO company really has the that much sway on success of the company, we likewise don't want to admit that the tools we use have much power over us, but they do.</p>
<p>The thing is, we <em><strong>live</strong></em> <em>inside of Slack</em>, it is, to the biggest degree, our virtual office. Slack is just a tool right, what can it do? Any app has a very powerful choice that influences our behavior. That is, <strong>what it decides to show and what it hides</strong>.</p>
<p>Sure, Google is a tool too, but when have you deviated from the 1st, or especially second page? Years ago? Slack is the same way, it chooses to show you some information and make other information hidden in subtle ways.</p>
<p>What it makes easy, and what makes it hard. It's design affects us every day in a very prominent way that's unavoidable and invisible.</p>
<h3>Designed for the office</h3>
<p>And so <strong>Slack was not made for remote workers</strong> (or by them for that matter). It was designed to compete in an open office environment where there's lots of distractions. It thrives where people generally aren't connected to their computer and phone very often because they are talking to the people in front of them.</p>
<p>Slack's primary purpose in those days was a way to message someone who wasn't at their desk. It was also an easy way to share a file or copy a programming command to someone.</p>
<p>Then COVID hit, and all of a sudden everyone was using Slack at higher levels than ever.</p>
<h3>FOMO with no escape</h3>
<p>Slack uses many techniques to "drive engagement" (addiction) but one of the most subtle is the <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"mystery in your inbox"</a>.</p>
<p>Basically the way this works is by showing you a red dot in your side view (<code>#general 🔴</code>).</p>
<p>By doing this it's providing a "mystery box". What are people saying in #general? It's unclear. 9 times out of 10 it's not going to be useful but <em><strong>sometimes it IS important!</strong></em> So we check it.</p>
<p>This is a technique that's not by accident, it's well known habit loop used by gambling machines to keep people pulling the lever. "<em>This time I might actually win something!"</em> It feels like work, but in reality it's just draining our finite ability to concentrate.</p>
<p>This behavior is constantly repeated and habits form and they become <em>strong</em>.</p>
<h3>9am-5pm, more like 8am-10pm</h3>
<p>Yep that's Slack's default notification settings. Yes, notifications do tend to die down around 5pm, but all it takes is one person working a little late or posting something to #random and they've pulled in people that are supposed to be taking a break.</p>
<p>If you followed this default you'd be working a 70 hours a week instead of a healthy 40.</p>
<h3>It's either keep up or be left behind</h3>
<p>Slack has no "tl;dr button". It's either read everything or miss out. An important announcement will inevitably be nestled between some gifs and random replies with nothing to distinguish it from the other messages. So you read everything.</p>
<h3>Vacation? Why?</h3>
<p>Slack has no mode for vacations, you can set your status sure, but there's no way you could disconnect for a couple of days <em><strong>and actually know what happened</strong></em>.</p>
<p>If you did disconnect for a few days you would have to sit back in your armchair to read the collective novel that everyone's created in your absence (spoiler: it's not going to be a best seller).</p>
<p>Again, there's no TL;DR so the only way to be an informed employee is to <em>never disconnect.</em></p>
<h3>You get your seat at the table...so long as you're always sitting there</h3>
<p>"Seat at the table" refers to being able to let your voice be heard in decisions and similar situations. When someone is focusing (read: doing real work) they might miss out on someone asking for people's opinion on a topic.</p>
<p>After a few people respond and the some silence elapses a decision has been made! Why because... it seems like everyone had a chance, right? Wrong. This means keeping Slack open at all times is the only way to be included.</p>
<h1>Signs of good remote communication tools</h1>
<p>Slack was never designed to be used for remote work. Slack (the company) has put thought into adapting it for Remote work, they will never give up on trying to get us addicted to using it.</p>
<p><strong>It just makes them too much money</strong> and it's how they measure their success.</p>
<p>As such the only way is to stop using Slack. It's just like a romantic relationship. Yes you can try to be a better person but if you're in a bad relationship you just have to get out.</p>
<h2>Topic based Threads</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>I think the way to show it the most is to show Twist's interface due to how similar it is to Slack.</p>
<hr>
<h2><a href="http://localhost:5000/twist-topic-flow.png" rel="noopener noreferrer">Twist topic flow</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Compare this with Slack's UI:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200925153903.png" rel="noopener noreferrer">Pasted image 20200925153903</a> ⤴</h2>
<p><em>this file hasn't been writt (truncated)

10:45:07.241 [debug] l:len=9

10:45:07.241 [debug] l:buf=654:<h1>How Slack encourges burnout</h1>
<h1><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> creates Burnout</h1>
<blockquote>
<p>“To see what is in front of one’s nose needs a constant struggle.” -George Orwell</p>
</blockquote>
<p>I have this on my chest for a long time. I really haven't had the words to describe exactly what I need to say, but now I think I do.</p>
<p>I really want to make remote working better. I really don't feel like it's working right now. And I do think that it <em>can be better</em>. I think it can be so good that people would love it.</p>
<h2>Work Hard, Play Had</h2>
<p>So with remote work creates this weird situation where before when you went to the office you focus on the office. You'd talk to your co workers. You've got cool stuff done. And then you went home. And then you were <em>home</em>.</p>
<p>There was a clear physical separation which created a clear mental separation Not only that because most of the communication would happen in person which isn't possible once you go home. This created a clear and healthy boundary.</p>
<h2>Work, all the time</h2>
<p>Work Life Balance? Not anymore. You office is the distance to your nearest phone or computer. This is awesome for commuting but it terrible for work/life balance.</p>
<p>Because we don't get the strict separation from work and home. We get burnt out with remote workers. If you hire good people, which we have, the biggest problem you have to be looking for is <em>overwork</em> <strong>not under work.</strong></p>
<p>Our people are not going to knowingly avoid work. Not at all. In fact what they'll probably do more often than just avoid it, they'll work overtime. You can see this in slack all the time:</p>
<blockquote>
<p>"I am going to be gone for 30 minutes but don't worry I'm going to add on 30 minutes at the end of the day to make up for it".</p>
</blockquote>
<p>This just not healthy. It's just not healthy to micromanage our time so much, we have never been 100% productive at work and just because we have less distractions now doesn't mean that we need to work constantly.</p>
<p>At the office we'd joke, we relaxed, go to snack counter, get lost in an interesting discussion. We took lots of breaks. Remote work for some reason turns into some kind of work marathon.</p>
<p>Being present when you're at home is important but the line is super blurry now.</p>
<h2>Slack</h2>
<p>As much as I hate to single out a single tool, I can't stay silent about <em>Slack</em>. Much like we don't want to think that the CEO company really has the that much sway on success of the company, we likewise don't want to admit that the tools we use have much power over us, but they do.</p>
<p>The thing is, we <em><strong>live</strong></em> <em>inside of Slack</em>, it is, to the biggest degree, our virtual office. Slack is just a tool right, what can it do? Any app has a very powerful choice that influences our behavior. That is, <strong>what it decides to show and what it hides</strong>.</p>
<p>Sure, Google is a tool too, but when have you deviated from the 1st, or especially second page? Years ago? Slack is the same way, it chooses to show you some information and make other information hidden in subtle ways.</p>
<p>What it makes easy, and what makes it hard. It's design affects us every day in a very prominent way that's unavoidable and invisible.</p>
<h3>Designed for the office</h3>
<p>And so <strong>Slack was not made for remote workers</strong> (or by them for that matter). It was designed to compete in an open office environment where there's lots of distractions. It thrives where people generally aren't connected to their computer and phone very often because they are talking to the people in front of them.</p>
<p>Slack's primary purpose in those days was a way to message someone who wasn't at their desk. It was also an easy way to share a file or copy a programming command to someone.</p>
<p>Then COVID hit, and all of a sudden everyone was using Slack at higher levels than ever.</p>
<h3>FOMO with no escape</h3>
<p>Slack uses many techniques to "drive engagement" (addiction) but one of the most subtle is the <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"mystery in your inbox"</a>.</p>
<p>Basically the way this works is by showing you a red dot in your side view (<code>#general 🔴</code>).</p>
<p>By doing this it's providing a "mystery box". What are people saying in #general? It's unclear. 9 times out of 10 it's not going to be useful but <em><strong>sometimes it IS important!</strong></em> So we check it.</p>
<p>This is a technique that's not by accident, it's well known habit loop used by gambling machines to keep people pulling the lever. "<em>This time I might actually win something!"</em> It feels like work, but in reality it's just draining our finite ability to concentrate.</p>
<p>This behavior is constantly repeated and habits form and they become <em>strong</em>.</p>
<h3>9am-5pm, more like 8am-10pm</h3>
<p>Yep that's Slack's default notification settings. Yes, notifications do tend to die down around 5pm, but all it takes is one person working a little late or posting something to #random and they've pulled in people that are supposed to be taking a break.</p>
<p>If you followed this default you'd be working a 70 hours a week instead of a healthy 40.</p>
<h3>It's either keep up or be left behind</h3>
<p>Slack has no "tl;dr button". It's either read everything or miss out. An important announcement will inevitably be nestled between some gifs and random replies with nothing to distinguish it from the other messages. So you read everything.</p>
<h3>Vacation? Why?</h3>
<p>Slack has no mode for vacations, you can set your status sure, but there's no way you could disconnect for a couple of days <em><strong>and actually know what happened</strong></em>.</p>
<p>If you did disconnect for a few days you would have to sit back in your armchair to read the collective novel that everyone's created in your absence (spoiler: it's not going to be a best seller).</p>
<p>Again, there's no TL;DR so the only way to be an informed employee is to <em>never disconnect.</em></p>
<h3>You get your seat at the table...so long as you're always sitting there</h3>
<p>"Seat at the table" refers to being able to let your voice be heard in decisions and similar situations. When someone is focusing (read: doing real work) they might miss out on someone asking for people's opinion on a topic.</p>
<p>After a few people respond and the some silence elapses a decision has been made! Why because... it seems like everyone had a chance, right? Wrong. This means keeping Slack open at all times is the only way to be included.</p>
<h1>Signs of good remote communication tools</h1>
<p>Slack was never designed to be used for remote work. Slack (the company) has put thought into adapting it for Remote work, they will never give up on trying to get us addicted to using it.</p>
<p><strong>It just makes them too much money</strong> and it's how they measure their success.</p>
<p>As such the only way is to stop using Slack. It's just like a romantic relationship. Yes you can try to be a better person but if you're in a bad relationship you just have to get out.</p>
<h2>Topic based Threads</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>I think the way to show it the most is to show Twist's interface due to how similar it is to Slack.</p>
<hr>
<h2><a href="http://localhost:5000/twist-topic-flow.png" rel="noopener noreferrer">Twist topic flow</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Compare this with Slack's UI:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200925153903.png" rel="noopener noreferrer">Pasted image 20200925153903</a> ⤴</h2>
<p><em>this file hasn't been writte (truncated)

10:45:07.241 [debug] l:len=96

10:45:07.241 [debug] l:buf=54:<h1>How Slack encourges burnout</h1>
<h1><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> creates Burnout</h1>
<blockquote>
<p>“To see what is in front of one’s nose needs a constant struggle.” -George Orwell</p>
</blockquote>
<p>I have this on my chest for a long time. I really haven't had the words to describe exactly what I need to say, but now I think I do.</p>
<p>I really want to make remote working better. I really don't feel like it's working right now. And I do think that it <em>can be better</em>. I think it can be so good that people would love it.</p>
<h2>Work Hard, Play Had</h2>
<p>So with remote work creates this weird situation where before when you went to the office you focus on the office. You'd talk to your co workers. You've got cool stuff done. And then you went home. And then you were <em>home</em>.</p>
<p>There was a clear physical separation which created a clear mental separation Not only that because most of the communication would happen in person which isn't possible once you go home. This created a clear and healthy boundary.</p>
<h2>Work, all the time</h2>
<p>Work Life Balance? Not anymore. You office is the distance to your nearest phone or computer. This is awesome for commuting but it terrible for work/life balance.</p>
<p>Because we don't get the strict separation from work and home. We get burnt out with remote workers. If you hire good people, which we have, the biggest problem you have to be looking for is <em>overwork</em> <strong>not under work.</strong></p>
<p>Our people are not going to knowingly avoid work. Not at all. In fact what they'll probably do more often than just avoid it, they'll work overtime. You can see this in slack all the time:</p>
<blockquote>
<p>"I am going to be gone for 30 minutes but don't worry I'm going to add on 30 minutes at the end of the day to make up for it".</p>
</blockquote>
<p>This just not healthy. It's just not healthy to micromanage our time so much, we have never been 100% productive at work and just because we have less distractions now doesn't mean that we need to work constantly.</p>
<p>At the office we'd joke, we relaxed, go to snack counter, get lost in an interesting discussion. We took lots of breaks. Remote work for some reason turns into some kind of work marathon.</p>
<p>Being present when you're at home is important but the line is super blurry now.</p>
<h2>Slack</h2>
<p>As much as I hate to single out a single tool, I can't stay silent about <em>Slack</em>. Much like we don't want to think that the CEO company really has the that much sway on success of the company, we likewise don't want to admit that the tools we use have much power over us, but they do.</p>
<p>The thing is, we <em><strong>live</strong></em> <em>inside of Slack</em>, it is, to the biggest degree, our virtual office. Slack is just a tool right, what can it do? Any app has a very powerful choice that influences our behavior. That is, <strong>what it decides to show and what it hides</strong>.</p>
<p>Sure, Google is a tool too, but when have you deviated from the 1st, or especially second page? Years ago? Slack is the same way, it chooses to show you some information and make other information hidden in subtle ways.</p>
<p>What it makes easy, and what makes it hard. It's design affects us every day in a very prominent way that's unavoidable and invisible.</p>
<h3>Designed for the office</h3>
<p>And so <strong>Slack was not made for remote workers</strong> (or by them for that matter). It was designed to compete in an open office environment where there's lots of distractions. It thrives where people generally aren't connected to their computer and phone very often because they are talking to the people in front of them.</p>
<p>Slack's primary purpose in those days was a way to message someone who wasn't at their desk. It was also an easy way to share a file or copy a programming command to someone.</p>
<p>Then COVID hit, and all of a sudden everyone was using Slack at higher levels than ever.</p>
<h3>FOMO with no escape</h3>
<p>Slack uses many techniques to "drive engagement" (addiction) but one of the most subtle is the <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"mystery in your inbox"</a>.</p>
<p>Basically the way this works is by showing you a red dot in your side view (<code>#general 🔴</code>).</p>
<p>By doing this it's providing a "mystery box". What are people saying in #general? It's unclear. 9 times out of 10 it's not going to be useful but <em><strong>sometimes it IS important!</strong></em> So we check it.</p>
<p>This is a technique that's not by accident, it's well known habit loop used by gambling machines to keep people pulling the lever. "<em>This time I might actually win something!"</em> It feels like work, but in reality it's just draining our finite ability to concentrate.</p>
<p>This behavior is constantly repeated and habits form and they become <em>strong</em>.</p>
<h3>9am-5pm, more like 8am-10pm</h3>
<p>Yep that's Slack's default notification settings. Yes, notifications do tend to die down around 5pm, but all it takes is one person working a little late or posting something to #random and they've pulled in people that are supposed to be taking a break.</p>
<p>If you followed this default you'd be working a 70 hours a week instead of a healthy 40.</p>
<h3>It's either keep up or be left behind</h3>
<p>Slack has no "tl;dr button". It's either read everything or miss out. An important announcement will inevitably be nestled between some gifs and random replies with nothing to distinguish it from the other messages. So you read everything.</p>
<h3>Vacation? Why?</h3>
<p>Slack has no mode for vacations, you can set your status sure, but there's no way you could disconnect for a couple of days <em><strong>and actually know what happened</strong></em>.</p>
<p>If you did disconnect for a few days you would have to sit back in your armchair to read the collective novel that everyone's created in your absence (spoiler: it's not going to be a best seller).</p>
<p>Again, there's no TL;DR so the only way to be an informed employee is to <em>never disconnect.</em></p>
<h3>You get your seat at the table...so long as you're always sitting there</h3>
<p>"Seat at the table" refers to being able to let your voice be heard in decisions and similar situations. When someone is focusing (read: doing real work) they might miss out on someone asking for people's opinion on a topic.</p>
<p>After a few people respond and the some silence elapses a decision has been made! Why because... it seems like everyone had a chance, right? Wrong. This means keeping Slack open at all times is the only way to be included.</p>
<h1>Signs of good remote communication tools</h1>
<p>Slack was never designed to be used for remote work. Slack (the company) has put thought into adapting it for Remote work, they will never give up on trying to get us addicted to using it.</p>
<p><strong>It just makes them too much money</strong> and it's how they measure their success.</p>
<p>As such the only way is to stop using Slack. It's just like a romantic relationship. Yes you can try to be a better person but if you're in a bad relationship you just have to get out.</p>
<h2>Topic based Threads</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>I think the way to show it the most is to show Twist's interface due to how similar it is to Slack.</p>
<hr>
<h2><a href="http://localhost:5000/twist-topic-flow.png" rel="noopener noreferrer">Twist topic flow</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Compare this with Slack's UI:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200925153903.png" rel="noopener noreferrer">Pasted image 20200925153903</a> ⤴</h2>
<p><em>this file hasn't been written (truncated)

10:45:07.242 [debug] l:len=965

10:45:07.242 [debug] l:buf=4:<h1>How Slack encourges burnout</h1>
<h1><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> creates Burnout</h1>
<blockquote>
<p>“To see what is in front of one’s nose needs a constant struggle.” -George Orwell</p>
</blockquote>
<p>I have this on my chest for a long time. I really haven't had the words to describe exactly what I need to say, but now I think I do.</p>
<p>I really want to make remote working better. I really don't feel like it's working right now. And I do think that it <em>can be better</em>. I think it can be so good that people would love it.</p>
<h2>Work Hard, Play Had</h2>
<p>So with remote work creates this weird situation where before when you went to the office you focus on the office. You'd talk to your co workers. You've got cool stuff done. And then you went home. And then you were <em>home</em>.</p>
<p>There was a clear physical separation which created a clear mental separation Not only that because most of the communication would happen in person which isn't possible once you go home. This created a clear and healthy boundary.</p>
<h2>Work, all the time</h2>
<p>Work Life Balance? Not anymore. You office is the distance to your nearest phone or computer. This is awesome for commuting but it terrible for work/life balance.</p>
<p>Because we don't get the strict separation from work and home. We get burnt out with remote workers. If you hire good people, which we have, the biggest problem you have to be looking for is <em>overwork</em> <strong>not under work.</strong></p>
<p>Our people are not going to knowingly avoid work. Not at all. In fact what they'll probably do more often than just avoid it, they'll work overtime. You can see this in slack all the time:</p>
<blockquote>
<p>"I am going to be gone for 30 minutes but don't worry I'm going to add on 30 minutes at the end of the day to make up for it".</p>
</blockquote>
<p>This just not healthy. It's just not healthy to micromanage our time so much, we have never been 100% productive at work and just because we have less distractions now doesn't mean that we need to work constantly.</p>
<p>At the office we'd joke, we relaxed, go to snack counter, get lost in an interesting discussion. We took lots of breaks. Remote work for some reason turns into some kind of work marathon.</p>
<p>Being present when you're at home is important but the line is super blurry now.</p>
<h2>Slack</h2>
<p>As much as I hate to single out a single tool, I can't stay silent about <em>Slack</em>. Much like we don't want to think that the CEO company really has the that much sway on success of the company, we likewise don't want to admit that the tools we use have much power over us, but they do.</p>
<p>The thing is, we <em><strong>live</strong></em> <em>inside of Slack</em>, it is, to the biggest degree, our virtual office. Slack is just a tool right, what can it do? Any app has a very powerful choice that influences our behavior. That is, <strong>what it decides to show and what it hides</strong>.</p>
<p>Sure, Google is a tool too, but when have you deviated from the 1st, or especially second page? Years ago? Slack is the same way, it chooses to show you some information and make other information hidden in subtle ways.</p>
<p>What it makes easy, and what makes it hard. It's design affects us every day in a very prominent way that's unavoidable and invisible.</p>
<h3>Designed for the office</h3>
<p>And so <strong>Slack was not made for remote workers</strong> (or by them for that matter). It was designed to compete in an open office environment where there's lots of distractions. It thrives where people generally aren't connected to their computer and phone very often because they are talking to the people in front of them.</p>
<p>Slack's primary purpose in those days was a way to message someone who wasn't at their desk. It was also an easy way to share a file or copy a programming command to someone.</p>
<p>Then COVID hit, and all of a sudden everyone was using Slack at higher levels than ever.</p>
<h3>FOMO with no escape</h3>
<p>Slack uses many techniques to "drive engagement" (addiction) but one of the most subtle is the <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"mystery in your inbox"</a>.</p>
<p>Basically the way this works is by showing you a red dot in your side view (<code>#general 🔴</code>).</p>
<p>By doing this it's providing a "mystery box". What are people saying in #general? It's unclear. 9 times out of 10 it's not going to be useful but <em><strong>sometimes it IS important!</strong></em> So we check it.</p>
<p>This is a technique that's not by accident, it's well known habit loop used by gambling machines to keep people pulling the lever. "<em>This time I might actually win something!"</em> It feels like work, but in reality it's just draining our finite ability to concentrate.</p>
<p>This behavior is constantly repeated and habits form and they become <em>strong</em>.</p>
<h3>9am-5pm, more like 8am-10pm</h3>
<p>Yep that's Slack's default notification settings. Yes, notifications do tend to die down around 5pm, but all it takes is one person working a little late or posting something to #random and they've pulled in people that are supposed to be taking a break.</p>
<p>If you followed this default you'd be working a 70 hours a week instead of a healthy 40.</p>
<h3>It's either keep up or be left behind</h3>
<p>Slack has no "tl;dr button". It's either read everything or miss out. An important announcement will inevitably be nestled between some gifs and random replies with nothing to distinguish it from the other messages. So you read everything.</p>
<h3>Vacation? Why?</h3>
<p>Slack has no mode for vacations, you can set your status sure, but there's no way you could disconnect for a couple of days <em><strong>and actually know what happened</strong></em>.</p>
<p>If you did disconnect for a few days you would have to sit back in your armchair to read the collective novel that everyone's created in your absence (spoiler: it's not going to be a best seller).</p>
<p>Again, there's no TL;DR so the only way to be an informed employee is to <em>never disconnect.</em></p>
<h3>You get your seat at the table...so long as you're always sitting there</h3>
<p>"Seat at the table" refers to being able to let your voice be heard in decisions and similar situations. When someone is focusing (read: doing real work) they might miss out on someone asking for people's opinion on a topic.</p>
<p>After a few people respond and the some silence elapses a decision has been made! Why because... it seems like everyone had a chance, right? Wrong. This means keeping Slack open at all times is the only way to be included.</p>
<h1>Signs of good remote communication tools</h1>
<p>Slack was never designed to be used for remote work. Slack (the company) has put thought into adapting it for Remote work, they will never give up on trying to get us addicted to using it.</p>
<p><strong>It just makes them too much money</strong> and it's how they measure their success.</p>
<p>As such the only way is to stop using Slack. It's just like a romantic relationship. Yes you can try to be a better person but if you're in a bad relationship you just have to get out.</p>
<h2>Topic based Threads</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>I think the way to show it the most is to show Twist's interface due to how similar it is to Slack.</p>
<hr>
<h2><a href="http://localhost:5000/twist-topic-flow.png" rel="noopener noreferrer">Twist topic flow</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Compare this with Slack's UI:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200925153903.png" rel="noopener noreferrer">Pasted image 20200925153903</a> ⤴</h2>
<p><em>this file hasn't been written, (truncated)

10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf empty

10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf=79:<p>Microsoft Office 2013</p>
<p>Product Key: TYDGJ-T8NT7-49W86-M4KKG-H8PDD</p>


10:45:07.242 [debug] l:len=7

10:45:07.242 [debug] l:buf=9:<p>Microsoft Office 2013</p>
<p>Product Key: TYDGJ-T8NT7-49W86-M4KKG-H8PDD</p>


10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf empty

10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf=1474:<p>Is ReasonML production ready?</p>
<p>This is a bit of a silly question I'm my opinion, because it's a little vauge what it actually means.</p>
<p>Basically they are saying:</p>
<ol>
<li>Do other big companies invest in it enough to ensure that it's never going to just become unsupported</li>
<li>Has it got enough libraries so that I don't have to invest very much to do my daily tasks reinventing the wheel? Are these libraries got stable and active maintainers?</li>
<li>How many gotchas and rough edges does it have? Will I run into issues that I can't solve easily?</li>
<li>Can I be more productive than JavaScript?</li>
<li>Has the syntax and best practices been estblished?</li>
</ol>
<p>Ok that's a lot of questions, let's try to answer them in turn.</p>
<p>The real question is are <em>you</em> ready to use Reason in production. Remember there's always a trade-off of innovation and stability. Stability only comes from people using it a lot. Admittedly a language as strict as ReasonML is going to more quickly find issues so long as they aren't using more risky features like binding to JavaScript.</p>
<ul>
<li><a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a>, <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a></li>
</ul>


10:45:07.242 [debug] l:len=1

10:45:07.242 [debug] l:buf=474:<p>Is ReasonML production ready?</p>
<p>This is a bit of a silly question I'm my opinion, because it's a little vauge what it actually means.</p>
<p>Basically they are saying:</p>
<ol>
<li>Do other big companies invest in it enough to ensure that it's never going to just become unsupported</li>
<li>Has it got enough libraries so that I don't have to invest very much to do my daily tasks reinventing the wheel? Are these libraries got stable and active maintainers?</li>
<li>How many gotchas and rough edges does it have? Will I run into issues that I can't solve easily?</li>
<li>Can I be more productive than JavaScript?</li>
<li>Has the syntax and best practices been estblished?</li>
</ol>
<p>Ok that's a lot of questions, let's try to answer them in turn.</p>
<p>The real question is are <em>you</em> ready to use Reason in production. Remember there's always a trade-off of innovation and stability. Stability only comes from people using it a lot. Admittedly a language as strict as ReasonML is going to more quickly find issues so long as they aren't using more risky features like binding to JavaScript.</p>
<ul>
<li><a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a>, <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a></li>
</ul>


10:45:07.242 [debug] l:len=14

10:45:07.242 [debug] l:buf=74:<p>Is ReasonML production ready?</p>
<p>This is a bit of a silly question I'm my opinion, because it's a little vauge what it actually means.</p>
<p>Basically they are saying:</p>
<ol>
<li>Do other big companies invest in it enough to ensure that it's never going to just become unsupported</li>
<li>Has it got enough libraries so that I don't have to invest very much to do my daily tasks reinventing the wheel? Are these libraries got stable and active maintainers?</li>
<li>How many gotchas and rough edges does it have? Will I run into issues that I can't solve easily?</li>
<li>Can I be more productive than JavaScript?</li>
<li>Has the syntax and best practices been estblished?</li>
</ol>
<p>Ok that's a lot of questions, let's try to answer them in turn.</p>
<p>The real question is are <em>you</em> ready to use Reason in production. Remember there's always a trade-off of innovation and stability. Stability only comes from people using it a lot. Admittedly a language as strict as ReasonML is going to more quickly find issues so long as they aren't using more risky features like binding to JavaScript.</p>
<ul>
<li><a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a>, <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a></li>
</ul>


10:45:07.242 [debug] l:len=147

10:45:07.242 [debug] l:buf=4:<p>Is ReasonML production ready?</p>
<p>This is a bit of a silly question I'm my opinion, because it's a little vauge what it actually means.</p>
<p>Basically they are saying:</p>
<ol>
<li>Do other big companies invest in it enough to ensure that it's never going to just become unsupported</li>
<li>Has it got enough libraries so that I don't have to invest very much to do my daily tasks reinventing the wheel? Are these libraries got stable and active maintainers?</li>
<li>How many gotchas and rough edges does it have? Will I run into issues that I can't solve easily?</li>
<li>Can I be more productive than JavaScript?</li>
<li>Has the syntax and best practices been estblished?</li>
</ol>
<p>Ok that's a lot of questions, let's try to answer them in turn.</p>
<p>The real question is are <em>you</em> ready to use Reason in production. Remember there's always a trade-off of innovation and stability. Stability only comes from people using it a lot. Admittedly a language as strict as ReasonML is going to more quickly find issues so long as they aren't using more risky features like binding to JavaScript.</p>
<ul>
<li><a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a>, <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/javascript" rel="noopener noreferrer">Javascript</a></li>
</ul>


10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf empty

10:45:07.242 [debug] l:len=

10:45:07.242 [debug] l:buf=811:<h1>Twist</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.242 [debug] l:len=8

10:45:07.243 [debug] l:buf=11:<h1>Twist</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.243 [debug] l:len=81

10:45:07.243 [debug] l:buf=1:<h1>Twist</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.243 [debug] l:len=

10:45:07.243 [debug] l:buf empty

10:45:07.243 [debug] l:len=

10:45:07.243 [debug] l:buf=2053:<h1>Dgraph - Ripping off the slack bandaid</h1>
<p>Blog post: <a href="https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/" rel="noopener noreferrer">https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/</a></p>
<h2><a href="https://discuss.dgraph.io/t/ripping-off-the-slack-bandaid-dgraph-blog/7333" rel="noopener noreferrer">Ripping off the slack bandaid</a></h2>
<p>Some of their points</p>
<h3>Slack does not help build a Knowledge Base</h3>
<h3><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020083722.png" rel="noopener noreferrer">Pasted image 20201020083722</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Experts are the fuel for communities, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> burns them out</h3>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>
<h3>Slack does not create a consistently incredible user experience</h3>
<p>This point was related to how they are a small team and Slack expects immediate responses which isn't realistic for them.</p>
<h3>Slack does not support open communication</h3>
<p>See <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020084234.png" rel="noopener noreferrer">Pasted image 20201020084234</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></li>
</ul>


10:45:07.243 [debug] l:len=2

10:45:07.243 [debug] l:buf=053:<h1>Dgraph - Ripping off the slack bandaid</h1>
<p>Blog post: <a href="https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/" rel="noopener noreferrer">https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/</a></p>
<h2><a href="https://discuss.dgraph.io/t/ripping-off-the-slack-bandaid-dgraph-blog/7333" rel="noopener noreferrer">Ripping off the slack bandaid</a></h2>
<p>Some of their points</p>
<h3>Slack does not help build a Knowledge Base</h3>
<h3><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020083722.png" rel="noopener noreferrer">Pasted image 20201020083722</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Experts are the fuel for communities, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> burns them out</h3>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>
<h3>Slack does not create a consistently incredible user experience</h3>
<p>This point was related to how they are a small team and Slack expects immediate responses which isn't realistic for them.</p>
<h3>Slack does not support open communication</h3>
<p>See <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020084234.png" rel="noopener noreferrer">Pasted image 20201020084234</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></li>
</ul>


10:45:07.243 [debug] l:len=20

10:45:07.243 [debug] l:buf=53:<h1>Dgraph - Ripping off the slack bandaid</h1>
<p>Blog post: <a href="https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/" rel="noopener noreferrer">https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/</a></p>
<h2><a href="https://discuss.dgraph.io/t/ripping-off-the-slack-bandaid-dgraph-blog/7333" rel="noopener noreferrer">Ripping off the slack bandaid</a></h2>
<p>Some of their points</p>
<h3>Slack does not help build a Knowledge Base</h3>
<h3><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020083722.png" rel="noopener noreferrer">Pasted image 20201020083722</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Experts are the fuel for communities, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> burns them out</h3>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>
<h3>Slack does not create a consistently incredible user experience</h3>
<p>This point was related to how they are a small team and Slack expects immediate responses which isn't realistic for them.</p>
<h3>Slack does not support open communication</h3>
<p>See <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020084234.png" rel="noopener noreferrer">Pasted image 20201020084234</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></li>
</ul>


10:45:07.243 [debug] l:len=205

10:45:07.243 [debug] l:buf=3:<h1>Dgraph - Ripping off the slack bandaid</h1>
<p>Blog post: <a href="https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/" rel="noopener noreferrer">https://dgraph.io/blog/post/dgraph-shutting-slack-using-discourse/</a></p>
<h2><a href="https://discuss.dgraph.io/t/ripping-off-the-slack-bandaid-dgraph-blog/7333" rel="noopener noreferrer">Ripping off the slack bandaid</a></h2>
<p>Some of their points</p>
<h3>Slack does not help build a Knowledge Base</h3>
<h3><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020083722.png" rel="noopener noreferrer">Pasted image 20201020083722</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h3>Experts are the fuel for communities, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> burns them out</h3>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>
<h3>Slack does not create a consistently incredible user experience</h3>
<p>This point was related to how they are a small team and Slack expects immediate responses which isn't realistic for them.</p>
<h3>Slack does not support open communication</h3>
<p>See <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020084234.png" rel="noopener noreferrer">Pasted image 20201020084234</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-did-not-produce-more-engagement-for-us" rel="noopener noreferrer">Slack did not produce more engagement for us</a></li>
</ul>


10:45:07.243 [debug] l:len=

10:45:07.243 [debug] l:buf empty

10:45:07.243 [debug] l:len=

10:45:07.243 [debug] l:buf=284:<h1>Be Proactive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.243 [debug] l:len=2

10:45:07.243 [debug] l:buf=84:<h1>Be Proactive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.243 [debug] l:len=28

10:45:07.243 [debug] l:buf=4:<h1>Be Proactive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.243 [debug] l:len=

10:45:07.243 [debug] l:buf empty

10:45:07.244 [debug] l:len=

10:45:07.244 [debug] l:buf=282:<h1>Jul 18th 2019</h1>
<ol>
<li>How do we get people where they are getting daily operational value</li>
<li>Expansion (40 million $ next year) (2020 200 million 🤯)</li>
</ol>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.244 [debug] l:len=2

10:45:07.244 [debug] l:buf=82:<h1>Jul 18th 2019</h1>
<ol>
<li>How do we get people where they are getting daily operational value</li>
<li>Expansion (40 million $ next year) (2020 200 million 🤯)</li>
</ol>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.244 [debug] l:len=28

10:45:07.244 [debug] l:buf=2:<h1>Jul 18th 2019</h1>
<ol>
<li>How do we get people where they are getting daily operational value</li>
<li>Expansion (40 million $ next year) (2020 200 million 🤯)</li>
</ol>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.244 [debug] l:len=

10:45:07.244 [debug] l:buf empty

10:45:07.244 [debug] l:len=

10:45:07.244 [debug] l:buf=1013:<h1>Presentation - Writing Maintainable Code</h1>
<h1>Traditional Advice</h1>
<ul>
<li>DRY, remove duplication at the first sight!</li>
</ul>
<h1>Better Advice</h1>
<ul>
<li>Wait until the <a href="http://localhost:5000/last-responsible-moment-to-make-an-abstraction" rel="noopener noreferrer">last responsible moment to make an abstraction</a></li>
</ul>
<h1>Why?</h1>
<p>Because <a href="http://localhost:5000/hindsight-is-20x20" rel="noopener noreferrer">Hindsight is 20x20</a>. The sooner you guess, the less information you have</p>
<h1>Dealing with "dynamicness"</h1>
<ul>
<li>
<p>Use a REPL, dynamic languages live at runtime.</p>
</li>
<li>
<p>Use tests, again runtime</p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>
</li>
</ul>


10:45:07.244 [debug] l:len=1

10:45:07.244 [debug] l:buf=013:<h1>Presentation - Writing Maintainable Code</h1>
<h1>Traditional Advice</h1>
<ul>
<li>DRY, remove duplication at the first sight!</li>
</ul>
<h1>Better Advice</h1>
<ul>
<li>Wait until the <a href="http://localhost:5000/last-responsible-moment-to-make-an-abstraction" rel="noopener noreferrer">last responsible moment to make an abstraction</a></li>
</ul>
<h1>Why?</h1>
<p>Because <a href="http://localhost:5000/hindsight-is-20x20" rel="noopener noreferrer">Hindsight is 20x20</a>. The sooner you guess, the less information you have</p>
<h1>Dealing with "dynamicness"</h1>
<ul>
<li>
<p>Use a REPL, dynamic languages live at runtime.</p>
</li>
<li>
<p>Use tests, again runtime</p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>
</li>
</ul>


10:45:07.244 [debug] l:len=10

10:45:07.244 [debug] l:buf=13:<h1>Presentation - Writing Maintainable Code</h1>
<h1>Traditional Advice</h1>
<ul>
<li>DRY, remove duplication at the first sight!</li>
</ul>
<h1>Better Advice</h1>
<ul>
<li>Wait until the <a href="http://localhost:5000/last-responsible-moment-to-make-an-abstraction" rel="noopener noreferrer">last responsible moment to make an abstraction</a></li>
</ul>
<h1>Why?</h1>
<p>Because <a href="http://localhost:5000/hindsight-is-20x20" rel="noopener noreferrer">Hindsight is 20x20</a>. The sooner you guess, the less information you have</p>
<h1>Dealing with "dynamicness"</h1>
<ul>
<li>
<p>Use a REPL, dynamic languages live at runtime.</p>
</li>
<li>
<p>Use tests, again runtime</p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>
</li>
</ul>


10:45:07.244 [debug] l:len=101

10:45:07.244 [debug] l:buf=3:<h1>Presentation - Writing Maintainable Code</h1>
<h1>Traditional Advice</h1>
<ul>
<li>DRY, remove duplication at the first sight!</li>
</ul>
<h1>Better Advice</h1>
<ul>
<li>Wait until the <a href="http://localhost:5000/last-responsible-moment-to-make-an-abstraction" rel="noopener noreferrer">last responsible moment to make an abstraction</a></li>
</ul>
<h1>Why?</h1>
<p>Because <a href="http://localhost:5000/hindsight-is-20x20" rel="noopener noreferrer">Hindsight is 20x20</a>. The sooner you guess, the less information you have</p>
<h1>Dealing with "dynamicness"</h1>
<ul>
<li>
<p>Use a REPL, dynamic languages live at runtime.</p>
</li>
<li>
<p>Use tests, again runtime</p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>
</li>
<li>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>
</li>
</ul>


10:45:07.244 [debug] l:len=

10:45:07.244 [debug] l:buf empty

10:45:07.244 [debug] l:len=

10:45:07.244 [debug] l:buf=200:<h1>2020-10-14</h1>
<p>Worked on: <a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></p>


10:45:07.244 [debug] l:len=2

10:45:07.244 [debug] l:buf=00:<h1>2020-10-14</h1>
<p>Worked on: <a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></p>


10:45:07.244 [debug] l:len=20

10:45:07.244 [debug] l:buf=0:<h1>2020-10-14</h1>
<p>Worked on: <a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></p>


10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf empty

10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf=94:<h1>nothing new under the sun</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.245 [debug] l:len=9

10:45:07.245 [debug] l:buf=4:<h1>nothing new under the sun</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf empty

10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf=2888:<h2>Basecamp</h2>
<ul>
<li>is the <strong>premier <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> + internal <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a></strong> tool for <strong><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a> WFH teams</strong> worldwide.</li>
<li>Made the <a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li>Wrote several books
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.245 [debug] l:len=2

10:45:07.245 [debug] l:buf=888:<h2>Basecamp</h2>
<ul>
<li>is the <strong>premier <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> + internal <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a></strong> tool for <strong><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a> WFH teams</strong> worldwide.</li>
<li>Made the <a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li>Wrote several books
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.245 [debug] l:len=28

10:45:07.245 [debug] l:buf=88:<h2>Basecamp</h2>
<ul>
<li>is the <strong>premier <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> + internal <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a></strong> tool for <strong><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a> WFH teams</strong> worldwide.</li>
<li>Made the <a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li>Wrote several books
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.245 [debug] l:len=288

10:45:07.245 [debug] l:buf=8:<h2>Basecamp</h2>
<ul>
<li>is the <strong>premier <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> + internal <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a></strong> tool for <strong><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a> WFH teams</strong> worldwide.</li>
<li>Made the <a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li>Wrote several books
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
</ul>


10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf empty

10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf=39:<h1>General conference April 2017</h1>


10:45:07.245 [debug] l:len=3

10:45:07.245 [debug] l:buf=9:<h1>General conference April 2017</h1>


10:45:07.245 [debug] l:len=

10:45:07.245 [debug] l:buf empty

10:45:07.246 [debug] l:len=

10:45:07.246 [debug] l:buf=8371:<h1>Understanding <code>lift</code></h1>
<p>Thanks to the answers from Scott Sauyet and Bergi, I wrapped my head around it. In doing so, I felt there were still hoops to jump to put all the pieces together. I will document some questions I had in the journey, hope it could be of help to some.</p>
<p>Here's the example of <code>R.lift</code> we try to understand:</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([1,2,3], [1,2,3], [1]); //=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]
</code></pre>
<p>To me, there are <strong>three questions to be answered before understanding it</strong>.</p>
<ol>
<li><a href="https://github.com/fantasyland/fantasy-land" rel="noopener noreferrer">Fantasy-land</a>'s <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec (I will refer to it as <code>Apply</code>) and what <code>Apply#ap</code> does</li>
<li>Ramda's <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> implementation and what does <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" rel="noopener noreferrer"><code>Array</code></a> has to do with the <code>Apply</code> spec</li>
<li>What role does currying play in <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a></li>
</ol>
<h3>Understanding the <code>Apply</code> spec</h3>
<p>In fantasy-land, an object implements <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec when it has an <code>ap</code> method defined (that object also has to implement <a href="https://github.com/fantasyland/fantasy-land#functor" rel="noopener noreferrer"><code>Functor</code></a> spec by defining a <code>map</code> method).</p>
<p>The <code>ap</code> method has the following signature:</p>
<pre><code>ap :: Apply f =&gt; f a ~&gt; f (a -&gt; b) -&gt; f b
</code></pre>
<p>In <a href="https://github.com/fantasyland/fantasy-land#type-signature-notation" rel="noopener noreferrer">fantasy-land's type signature notation</a>:</p>
<ul>
<li><code>=&gt;</code> declares type constraints, so <code>f</code> in the signature above refers to type <code>Apply</code></li>
<li><code>~&gt;</code> declares <em>method</em> declaration, so <code>ap</code> should be a function declared on <code>Apply</code> which wraps around a value which we refer to as <code>a</code> (we will see in the example below, some <a href="https://github.com/fantasyland/fantasy-land/blob/master/implementations.md" rel="noopener noreferrer">fantasy-land's implementations</a> of <code>ap</code> are not consistent with this signature, but the idea is the same)</li>
</ul>
<p>Let's say we have two objects <code>v</code> and <code>u</code> (<code>v = f a; u = f (a -&gt; b)</code>) thus this expression is valid <code>v.ap(u)</code>, some things to notice here:</p>
<ul>
<li><code>v</code> and <code>u</code> both implement <code>Apply</code>. <code>v</code> holds a value, <code>u</code> holds a function but they have the same 'interface' of <code>Apply</code> (this will help in understanding the next section below, when it comes to <code>R.ap</code> and <code>Array</code>)</li>
<li>The value <code>a</code> and function <code>a -&gt; b</code> are ignorant of <code>Apply</code>, the function just transforms the value <code>a</code>. It's the <code>Apply</code> that puts value and function inside the container and <code>ap</code> that extracts them out, invokes the function on the value and puts them back in.</li>
</ul>
<h3>Understanding <code>Ramda</code>'s <code>R.ap</code></h3>
<p>The signature of <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> has two cases:</p>
<ol>
<li><code>Apply f =&gt; f (a → b) → f a → f b</code>: This is very similar to the signature of <code>Apply#ap</code> in last section, the difference is how <code>ap</code> is invoked (<code>Apply#ap</code> vs. <code>R.ap</code>) and the order of params.</li>
<li><code>[a → b] → [a] → [b]</code>: This is the version if we replace <code>Apply f</code> with <code>Array</code>, remember that the value and function has to be wrapped in the same container in the previous section? That's why when using <code>R.ap</code> with <code>Array</code>s, the first argument is a list of functions, even if you want to apply only one function, put it in an Array.</li>
</ol>
<p>Let's look at one example, I'm using <code>Maybe</code> from <a href="https://github.com/ramda/ramda-fantasy" rel="noopener noreferrer"><code>ramada-fantasy</code></a>, which implements <code>Apply</code>, one inconsistency here is that <a href="https://github.com/ramda/ramda-fantasy/blob/0.6.0/src/Maybe.js#L63" rel="noopener noreferrer"><code>Maybe#ap</code></a>'s signature is: <code>ap :: Apply f =&gt; f (a -&gt; b) ~&gt; f a -&gt; f b</code>. Seems some other <code>fantasy-land</code> implementations also follow this, however, it shouldn't affect our understanding:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const a = Maybe.of(2);
const plus3 = Maybe.of(x =&gt; x + 3);
const b = plus3.ap(a);  // invoke Apply#ap
const b2 = R.ap(plus3, a);  // invoke R.ap

console.log(b);  // Just { value: 5 }
console.log(b2);  // Just { value: 5 }
</code></pre>
<h3>Understanding the example of <code>R.lift</code></h3>
<p>In <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a>'s example with arrays, a function with arity of 3 is passed to <code>R.lift</code>: <code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);</code>, how does it work with the three arrays <code>[1, 2, 3], [1, 2, 3], [1]</code>? Also note that it's not curried.</p>
<p>Actually inside <a href="https://github.com/ramda/ramda/blob/v0.24.0/src/liftN.js" rel="noopener noreferrer">source code of <code>R.liftN</code></a> (which <code>R.lift</code> delegates to), the function passed in is <em>auto-curried</em>, then it iterates through the values (in our case, three arrays), reducing to a result: in each iteration it invokes <code>ap</code> with the curried function and one value (in our case, one array). It's hard to explain in words, let's see the equivalent in code:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;

// example from R.lift
const result = R.lift(madd3)([1, 2, 3], [1, 2, 3], [1]);

// this is equivalent of the calculation of 'result' above,
// R.liftN uses reduce, but the idea is the same
const result2 = R.ap(R.ap(R.ap([R.curry(madd3)], [1, 2, 3]), [1, 2, 3]), [1]);

console.log(result);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
console.log(result2);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
</code></pre>
<p>Once the expression of calculating <code>result2</code> is understood, the example will become clear.</p>
<p>Here's another example, using <code>R.lift</code> on <code>Apply</code>:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;
const madd3Curried = Maybe.of(R.curry(madd3));
const a = Maybe.of(1);
const b = Maybe.of(2);
const c = Maybe.of(3);
const sumResult = madd3Curried.ap(a).ap(b).ap(c);  // invoke [ap](ap) on Apply
const sumResult2 = R.ap(R.ap(R.ap(madd3Curried, a), b), c);  // invoke R.ap
const sumResult3 = R.lift(madd3)(a, b, c);  // invoke R.lift, madd3 is auto-curried

console.log(sumResult);  // Just { value: 6 }
console.log(sumResult2);  // Just { value: 6 }
console.log(sumResult3);  // Just { value: 6 }
</code></pre>
<p>A better example suggested by Scott Sauyet in the comments (he provides quite some insights, I suggest you read them) would be easier to understand, at least it points the reader to the direction that <code>R.lift</code> calculates the Cartesian product for <code>Array</code>s.</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([100, 200], [30, 40, 50], [6, 7]); //=&gt; [136, 137, 146,  (truncated)

10:45:07.246 [debug] l:len=8

10:45:07.246 [debug] l:buf=371:<h1>Understanding <code>lift</code></h1>
<p>Thanks to the answers from Scott Sauyet and Bergi, I wrapped my head around it. In doing so, I felt there were still hoops to jump to put all the pieces together. I will document some questions I had in the journey, hope it could be of help to some.</p>
<p>Here's the example of <code>R.lift</code> we try to understand:</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([1,2,3], [1,2,3], [1]); //=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]
</code></pre>
<p>To me, there are <strong>three questions to be answered before understanding it</strong>.</p>
<ol>
<li><a href="https://github.com/fantasyland/fantasy-land" rel="noopener noreferrer">Fantasy-land</a>'s <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec (I will refer to it as <code>Apply</code>) and what <code>Apply#ap</code> does</li>
<li>Ramda's <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> implementation and what does <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" rel="noopener noreferrer"><code>Array</code></a> has to do with the <code>Apply</code> spec</li>
<li>What role does currying play in <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a></li>
</ol>
<h3>Understanding the <code>Apply</code> spec</h3>
<p>In fantasy-land, an object implements <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec when it has an <code>ap</code> method defined (that object also has to implement <a href="https://github.com/fantasyland/fantasy-land#functor" rel="noopener noreferrer"><code>Functor</code></a> spec by defining a <code>map</code> method).</p>
<p>The <code>ap</code> method has the following signature:</p>
<pre><code>ap :: Apply f =&gt; f a ~&gt; f (a -&gt; b) -&gt; f b
</code></pre>
<p>In <a href="https://github.com/fantasyland/fantasy-land#type-signature-notation" rel="noopener noreferrer">fantasy-land's type signature notation</a>:</p>
<ul>
<li><code>=&gt;</code> declares type constraints, so <code>f</code> in the signature above refers to type <code>Apply</code></li>
<li><code>~&gt;</code> declares <em>method</em> declaration, so <code>ap</code> should be a function declared on <code>Apply</code> which wraps around a value which we refer to as <code>a</code> (we will see in the example below, some <a href="https://github.com/fantasyland/fantasy-land/blob/master/implementations.md" rel="noopener noreferrer">fantasy-land's implementations</a> of <code>ap</code> are not consistent with this signature, but the idea is the same)</li>
</ul>
<p>Let's say we have two objects <code>v</code> and <code>u</code> (<code>v = f a; u = f (a -&gt; b)</code>) thus this expression is valid <code>v.ap(u)</code>, some things to notice here:</p>
<ul>
<li><code>v</code> and <code>u</code> both implement <code>Apply</code>. <code>v</code> holds a value, <code>u</code> holds a function but they have the same 'interface' of <code>Apply</code> (this will help in understanding the next section below, when it comes to <code>R.ap</code> and <code>Array</code>)</li>
<li>The value <code>a</code> and function <code>a -&gt; b</code> are ignorant of <code>Apply</code>, the function just transforms the value <code>a</code>. It's the <code>Apply</code> that puts value and function inside the container and <code>ap</code> that extracts them out, invokes the function on the value and puts them back in.</li>
</ul>
<h3>Understanding <code>Ramda</code>'s <code>R.ap</code></h3>
<p>The signature of <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> has two cases:</p>
<ol>
<li><code>Apply f =&gt; f (a → b) → f a → f b</code>: This is very similar to the signature of <code>Apply#ap</code> in last section, the difference is how <code>ap</code> is invoked (<code>Apply#ap</code> vs. <code>R.ap</code>) and the order of params.</li>
<li><code>[a → b] → [a] → [b]</code>: This is the version if we replace <code>Apply f</code> with <code>Array</code>, remember that the value and function has to be wrapped in the same container in the previous section? That's why when using <code>R.ap</code> with <code>Array</code>s, the first argument is a list of functions, even if you want to apply only one function, put it in an Array.</li>
</ol>
<p>Let's look at one example, I'm using <code>Maybe</code> from <a href="https://github.com/ramda/ramda-fantasy" rel="noopener noreferrer"><code>ramada-fantasy</code></a>, which implements <code>Apply</code>, one inconsistency here is that <a href="https://github.com/ramda/ramda-fantasy/blob/0.6.0/src/Maybe.js#L63" rel="noopener noreferrer"><code>Maybe#ap</code></a>'s signature is: <code>ap :: Apply f =&gt; f (a -&gt; b) ~&gt; f a -&gt; f b</code>. Seems some other <code>fantasy-land</code> implementations also follow this, however, it shouldn't affect our understanding:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const a = Maybe.of(2);
const plus3 = Maybe.of(x =&gt; x + 3);
const b = plus3.ap(a);  // invoke Apply#ap
const b2 = R.ap(plus3, a);  // invoke R.ap

console.log(b);  // Just { value: 5 }
console.log(b2);  // Just { value: 5 }
</code></pre>
<h3>Understanding the example of <code>R.lift</code></h3>
<p>In <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a>'s example with arrays, a function with arity of 3 is passed to <code>R.lift</code>: <code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);</code>, how does it work with the three arrays <code>[1, 2, 3], [1, 2, 3], [1]</code>? Also note that it's not curried.</p>
<p>Actually inside <a href="https://github.com/ramda/ramda/blob/v0.24.0/src/liftN.js" rel="noopener noreferrer">source code of <code>R.liftN</code></a> (which <code>R.lift</code> delegates to), the function passed in is <em>auto-curried</em>, then it iterates through the values (in our case, three arrays), reducing to a result: in each iteration it invokes <code>ap</code> with the curried function and one value (in our case, one array). It's hard to explain in words, let's see the equivalent in code:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;

// example from R.lift
const result = R.lift(madd3)([1, 2, 3], [1, 2, 3], [1]);

// this is equivalent of the calculation of 'result' above,
// R.liftN uses reduce, but the idea is the same
const result2 = R.ap(R.ap(R.ap([R.curry(madd3)], [1, 2, 3]), [1, 2, 3]), [1]);

console.log(result);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
console.log(result2);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
</code></pre>
<p>Once the expression of calculating <code>result2</code> is understood, the example will become clear.</p>
<p>Here's another example, using <code>R.lift</code> on <code>Apply</code>:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;
const madd3Curried = Maybe.of(R.curry(madd3));
const a = Maybe.of(1);
const b = Maybe.of(2);
const c = Maybe.of(3);
const sumResult = madd3Curried.ap(a).ap(b).ap(c);  // invoke [ap](ap) on Apply
const sumResult2 = R.ap(R.ap(R.ap(madd3Curried, a), b), c);  // invoke R.ap
const sumResult3 = R.lift(madd3)(a, b, c);  // invoke R.lift, madd3 is auto-curried

console.log(sumResult);  // Just { value: 6 }
console.log(sumResult2);  // Just { value: 6 }
console.log(sumResult3);  // Just { value: 6 }
</code></pre>
<p>A better example suggested by Scott Sauyet in the comments (he provides quite some insights, I suggest you read them) would be easier to understand, at least it points the reader to the direction that <code>R.lift</code> calculates the Cartesian product for <code>Array</code>s.</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([100, 200], [30, 40, 50], [6, 7]); //=&gt; [136, 137, 146, 1 (truncated)

10:45:07.246 [debug] l:len=83

10:45:07.246 [debug] l:buf=71:<h1>Understanding <code>lift</code></h1>
<p>Thanks to the answers from Scott Sauyet and Bergi, I wrapped my head around it. In doing so, I felt there were still hoops to jump to put all the pieces together. I will document some questions I had in the journey, hope it could be of help to some.</p>
<p>Here's the example of <code>R.lift</code> we try to understand:</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([1,2,3], [1,2,3], [1]); //=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]
</code></pre>
<p>To me, there are <strong>three questions to be answered before understanding it</strong>.</p>
<ol>
<li><a href="https://github.com/fantasyland/fantasy-land" rel="noopener noreferrer">Fantasy-land</a>'s <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec (I will refer to it as <code>Apply</code>) and what <code>Apply#ap</code> does</li>
<li>Ramda's <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> implementation and what does <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" rel="noopener noreferrer"><code>Array</code></a> has to do with the <code>Apply</code> spec</li>
<li>What role does currying play in <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a></li>
</ol>
<h3>Understanding the <code>Apply</code> spec</h3>
<p>In fantasy-land, an object implements <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec when it has an <code>ap</code> method defined (that object also has to implement <a href="https://github.com/fantasyland/fantasy-land#functor" rel="noopener noreferrer"><code>Functor</code></a> spec by defining a <code>map</code> method).</p>
<p>The <code>ap</code> method has the following signature:</p>
<pre><code>ap :: Apply f =&gt; f a ~&gt; f (a -&gt; b) -&gt; f b
</code></pre>
<p>In <a href="https://github.com/fantasyland/fantasy-land#type-signature-notation" rel="noopener noreferrer">fantasy-land's type signature notation</a>:</p>
<ul>
<li><code>=&gt;</code> declares type constraints, so <code>f</code> in the signature above refers to type <code>Apply</code></li>
<li><code>~&gt;</code> declares <em>method</em> declaration, so <code>ap</code> should be a function declared on <code>Apply</code> which wraps around a value which we refer to as <code>a</code> (we will see in the example below, some <a href="https://github.com/fantasyland/fantasy-land/blob/master/implementations.md" rel="noopener noreferrer">fantasy-land's implementations</a> of <code>ap</code> are not consistent with this signature, but the idea is the same)</li>
</ul>
<p>Let's say we have two objects <code>v</code> and <code>u</code> (<code>v = f a; u = f (a -&gt; b)</code>) thus this expression is valid <code>v.ap(u)</code>, some things to notice here:</p>
<ul>
<li><code>v</code> and <code>u</code> both implement <code>Apply</code>. <code>v</code> holds a value, <code>u</code> holds a function but they have the same 'interface' of <code>Apply</code> (this will help in understanding the next section below, when it comes to <code>R.ap</code> and <code>Array</code>)</li>
<li>The value <code>a</code> and function <code>a -&gt; b</code> are ignorant of <code>Apply</code>, the function just transforms the value <code>a</code>. It's the <code>Apply</code> that puts value and function inside the container and <code>ap</code> that extracts them out, invokes the function on the value and puts them back in.</li>
</ul>
<h3>Understanding <code>Ramda</code>'s <code>R.ap</code></h3>
<p>The signature of <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> has two cases:</p>
<ol>
<li><code>Apply f =&gt; f (a → b) → f a → f b</code>: This is very similar to the signature of <code>Apply#ap</code> in last section, the difference is how <code>ap</code> is invoked (<code>Apply#ap</code> vs. <code>R.ap</code>) and the order of params.</li>
<li><code>[a → b] → [a] → [b]</code>: This is the version if we replace <code>Apply f</code> with <code>Array</code>, remember that the value and function has to be wrapped in the same container in the previous section? That's why when using <code>R.ap</code> with <code>Array</code>s, the first argument is a list of functions, even if you want to apply only one function, put it in an Array.</li>
</ol>
<p>Let's look at one example, I'm using <code>Maybe</code> from <a href="https://github.com/ramda/ramda-fantasy" rel="noopener noreferrer"><code>ramada-fantasy</code></a>, which implements <code>Apply</code>, one inconsistency here is that <a href="https://github.com/ramda/ramda-fantasy/blob/0.6.0/src/Maybe.js#L63" rel="noopener noreferrer"><code>Maybe#ap</code></a>'s signature is: <code>ap :: Apply f =&gt; f (a -&gt; b) ~&gt; f a -&gt; f b</code>. Seems some other <code>fantasy-land</code> implementations also follow this, however, it shouldn't affect our understanding:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const a = Maybe.of(2);
const plus3 = Maybe.of(x =&gt; x + 3);
const b = plus3.ap(a);  // invoke Apply#ap
const b2 = R.ap(plus3, a);  // invoke R.ap

console.log(b);  // Just { value: 5 }
console.log(b2);  // Just { value: 5 }
</code></pre>
<h3>Understanding the example of <code>R.lift</code></h3>
<p>In <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a>'s example with arrays, a function with arity of 3 is passed to <code>R.lift</code>: <code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);</code>, how does it work with the three arrays <code>[1, 2, 3], [1, 2, 3], [1]</code>? Also note that it's not curried.</p>
<p>Actually inside <a href="https://github.com/ramda/ramda/blob/v0.24.0/src/liftN.js" rel="noopener noreferrer">source code of <code>R.liftN</code></a> (which <code>R.lift</code> delegates to), the function passed in is <em>auto-curried</em>, then it iterates through the values (in our case, three arrays), reducing to a result: in each iteration it invokes <code>ap</code> with the curried function and one value (in our case, one array). It's hard to explain in words, let's see the equivalent in code:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;

// example from R.lift
const result = R.lift(madd3)([1, 2, 3], [1, 2, 3], [1]);

// this is equivalent of the calculation of 'result' above,
// R.liftN uses reduce, but the idea is the same
const result2 = R.ap(R.ap(R.ap([R.curry(madd3)], [1, 2, 3]), [1, 2, 3]), [1]);

console.log(result);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
console.log(result2);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
</code></pre>
<p>Once the expression of calculating <code>result2</code> is understood, the example will become clear.</p>
<p>Here's another example, using <code>R.lift</code> on <code>Apply</code>:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;
const madd3Curried = Maybe.of(R.curry(madd3));
const a = Maybe.of(1);
const b = Maybe.of(2);
const c = Maybe.of(3);
const sumResult = madd3Curried.ap(a).ap(b).ap(c);  // invoke [ap](ap) on Apply
const sumResult2 = R.ap(R.ap(R.ap(madd3Curried, a), b), c);  // invoke R.ap
const sumResult3 = R.lift(madd3)(a, b, c);  // invoke R.lift, madd3 is auto-curried

console.log(sumResult);  // Just { value: 6 }
console.log(sumResult2);  // Just { value: 6 }
console.log(sumResult3);  // Just { value: 6 }
</code></pre>
<p>A better example suggested by Scott Sauyet in the comments (he provides quite some insights, I suggest you read them) would be easier to understand, at least it points the reader to the direction that <code>R.lift</code> calculates the Cartesian product for <code>Array</code>s.</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([100, 200], [30, 40, 50], [6, 7]); //=&gt; [136, 137, 146, 14 (truncated)

10:45:07.246 [debug] l:len=837

10:45:07.246 [debug] l:buf=1:<h1>Understanding <code>lift</code></h1>
<p>Thanks to the answers from Scott Sauyet and Bergi, I wrapped my head around it. In doing so, I felt there were still hoops to jump to put all the pieces together. I will document some questions I had in the journey, hope it could be of help to some.</p>
<p>Here's the example of <code>R.lift</code> we try to understand:</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([1,2,3], [1,2,3], [1]); //=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]
</code></pre>
<p>To me, there are <strong>three questions to be answered before understanding it</strong>.</p>
<ol>
<li><a href="https://github.com/fantasyland/fantasy-land" rel="noopener noreferrer">Fantasy-land</a>'s <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec (I will refer to it as <code>Apply</code>) and what <code>Apply#ap</code> does</li>
<li>Ramda's <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> implementation and what does <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" rel="noopener noreferrer"><code>Array</code></a> has to do with the <code>Apply</code> spec</li>
<li>What role does currying play in <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a></li>
</ol>
<h3>Understanding the <code>Apply</code> spec</h3>
<p>In fantasy-land, an object implements <a href="https://github.com/fantasyland/fantasy-land#apply" rel="noopener noreferrer"><code>Apply</code></a> spec when it has an <code>ap</code> method defined (that object also has to implement <a href="https://github.com/fantasyland/fantasy-land#functor" rel="noopener noreferrer"><code>Functor</code></a> spec by defining a <code>map</code> method).</p>
<p>The <code>ap</code> method has the following signature:</p>
<pre><code>ap :: Apply f =&gt; f a ~&gt; f (a -&gt; b) -&gt; f b
</code></pre>
<p>In <a href="https://github.com/fantasyland/fantasy-land#type-signature-notation" rel="noopener noreferrer">fantasy-land's type signature notation</a>:</p>
<ul>
<li><code>=&gt;</code> declares type constraints, so <code>f</code> in the signature above refers to type <code>Apply</code></li>
<li><code>~&gt;</code> declares <em>method</em> declaration, so <code>ap</code> should be a function declared on <code>Apply</code> which wraps around a value which we refer to as <code>a</code> (we will see in the example below, some <a href="https://github.com/fantasyland/fantasy-land/blob/master/implementations.md" rel="noopener noreferrer">fantasy-land's implementations</a> of <code>ap</code> are not consistent with this signature, but the idea is the same)</li>
</ul>
<p>Let's say we have two objects <code>v</code> and <code>u</code> (<code>v = f a; u = f (a -&gt; b)</code>) thus this expression is valid <code>v.ap(u)</code>, some things to notice here:</p>
<ul>
<li><code>v</code> and <code>u</code> both implement <code>Apply</code>. <code>v</code> holds a value, <code>u</code> holds a function but they have the same 'interface' of <code>Apply</code> (this will help in understanding the next section below, when it comes to <code>R.ap</code> and <code>Array</code>)</li>
<li>The value <code>a</code> and function <code>a -&gt; b</code> are ignorant of <code>Apply</code>, the function just transforms the value <code>a</code>. It's the <code>Apply</code> that puts value and function inside the container and <code>ap</code> that extracts them out, invokes the function on the value and puts them back in.</li>
</ul>
<h3>Understanding <code>Ramda</code>'s <code>R.ap</code></h3>
<p>The signature of <a href="http://ramdajs.com/docs/%5Bap%5D(ap)" rel="noopener noreferrer"><code>R.ap</code></a> has two cases:</p>
<ol>
<li><code>Apply f =&gt; f (a → b) → f a → f b</code>: This is very similar to the signature of <code>Apply#ap</code> in last section, the difference is how <code>ap</code> is invoked (<code>Apply#ap</code> vs. <code>R.ap</code>) and the order of params.</li>
<li><code>[a → b] → [a] → [b]</code>: This is the version if we replace <code>Apply f</code> with <code>Array</code>, remember that the value and function has to be wrapped in the same container in the previous section? That's why when using <code>R.ap</code> with <code>Array</code>s, the first argument is a list of functions, even if you want to apply only one function, put it in an Array.</li>
</ol>
<p>Let's look at one example, I'm using <code>Maybe</code> from <a href="https://github.com/ramda/ramda-fantasy" rel="noopener noreferrer"><code>ramada-fantasy</code></a>, which implements <code>Apply</code>, one inconsistency here is that <a href="https://github.com/ramda/ramda-fantasy/blob/0.6.0/src/Maybe.js#L63" rel="noopener noreferrer"><code>Maybe#ap</code></a>'s signature is: <code>ap :: Apply f =&gt; f (a -&gt; b) ~&gt; f a -&gt; f b</code>. Seems some other <code>fantasy-land</code> implementations also follow this, however, it shouldn't affect our understanding:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const a = Maybe.of(2);
const plus3 = Maybe.of(x =&gt; x + 3);
const b = plus3.ap(a);  // invoke Apply#ap
const b2 = R.ap(plus3, a);  // invoke R.ap

console.log(b);  // Just { value: 5 }
console.log(b2);  // Just { value: 5 }
</code></pre>
<h3>Understanding the example of <code>R.lift</code></h3>
<p>In <a href="http://ramdajs.com/docs/%5Blift%5D(lift)" rel="noopener noreferrer"><code>R.lift</code></a>'s example with arrays, a function with arity of 3 is passed to <code>R.lift</code>: <code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);</code>, how does it work with the three arrays <code>[1, 2, 3], [1, 2, 3], [1]</code>? Also note that it's not curried.</p>
<p>Actually inside <a href="https://github.com/ramda/ramda/blob/v0.24.0/src/liftN.js" rel="noopener noreferrer">source code of <code>R.liftN</code></a> (which <code>R.lift</code> delegates to), the function passed in is <em>auto-curried</em>, then it iterates through the values (in our case, three arrays), reducing to a result: in each iteration it invokes <code>ap</code> with the curried function and one value (in our case, one array). It's hard to explain in words, let's see the equivalent in code:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;

// example from R.lift
const result = R.lift(madd3)([1, 2, 3], [1, 2, 3], [1]);

// this is equivalent of the calculation of 'result' above,
// R.liftN uses reduce, but the idea is the same
const result2 = R.ap(R.ap(R.ap([R.curry(madd3)], [1, 2, 3]), [1, 2, 3]), [1]);

console.log(result);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
console.log(result2);  // [ 3, 4, 5, 4, 5, 6, 5, 6, 7 ]
</code></pre>
<p>Once the expression of calculating <code>result2</code> is understood, the example will become clear.</p>
<p>Here's another example, using <code>R.lift</code> on <code>Apply</code>:</p>
<pre><code>const R = require('ramda');
const Maybe = require('ramda-fantasy').Maybe;

const madd3 = (x, y, z) =&gt; x + y + z;
const madd3Curried = Maybe.of(R.curry(madd3));
const a = Maybe.of(1);
const b = Maybe.of(2);
const c = Maybe.of(3);
const sumResult = madd3Curried.ap(a).ap(b).ap(c);  // invoke [ap](ap) on Apply
const sumResult2 = R.ap(R.ap(R.ap(madd3Curried, a), b), c);  // invoke R.ap
const sumResult3 = R.lift(madd3)(a, b, c);  // invoke R.lift, madd3 is auto-curried

console.log(sumResult);  // Just { value: 6 }
console.log(sumResult2);  // Just { value: 6 }
console.log(sumResult3);  // Just { value: 6 }
</code></pre>
<p>A better example suggested by Scott Sauyet in the comments (he provides quite some insights, I suggest you read them) would be easier to understand, at least it points the reader to the direction that <code>R.lift</code> calculates the Cartesian product for <code>Array</code>s.</p>
<pre><code>var madd3 = R.lift((a, b, c) =&gt; a + b + c);
madd3([100, 200], [30, 40, 50], [6, 7]); //=&gt; [136, 137, 146, 147 (truncated)

10:45:07.246 [debug] l:len=

10:45:07.246 [debug] l:buf empty

10:45:07.246 [debug] l:len=

10:45:07.247 [debug] l:buf=274:<h1>Basecamp isn't as fluid as native apps</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.247 [debug] l:len=2

10:45:07.247 [debug] l:buf=74:<h1>Basecamp isn't as fluid as native apps</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.247 [debug] l:len=27

10:45:07.247 [debug] l:buf=4:<h1>Basecamp isn't as fluid as native apps</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf empty

10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf=244:<h1>Essays</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.247 [debug] l:len=2

10:45:07.247 [debug] l:buf=44:<h1>Essays</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.247 [debug] l:len=24

10:45:07.247 [debug] l:buf=4:<h1>Essays</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf empty

10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf=81:<h1>meaning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.247 [debug] l:len=8

10:45:07.247 [debug] l:buf=1:<h1>meaning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf empty

10:45:07.247 [debug] l:len=

10:45:07.247 [debug] l:buf=292:<h1>The Cambridge Handbook of Creativity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
</ul>


10:45:07.247 [debug] l:len=2

10:45:07.247 [debug] l:buf=92:<h1>The Cambridge Handbook of Creativity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
</ul>


10:45:07.247 [debug] l:len=29

10:45:07.247 [debug] l:buf=2:<h1>The Cambridge Handbook of Creativity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></li>
</ul>


10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf empty

10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf=305:<h1>Pasted image 20200922163537</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.248 [debug] l:len=3

10:45:07.248 [debug] l:buf=05:<h1>Pasted image 20200922163537</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.248 [debug] l:len=30

10:45:07.248 [debug] l:buf=5:<h1>Pasted image 20200922163537</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf empty

10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf=573:<h1>Feature ripple effects</h1>
<p>a simple feature like color labels for files seems like a one and done project but it can ripple effects</p>
<ul>
<li>people will want to customized those colors</li>
<li>they will want bulk editing</li>
<li>they will want to use those colors everywhere</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a> <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.248 [debug] l:len=5

10:45:07.248 [debug] l:buf=73:<h1>Feature ripple effects</h1>
<p>a simple feature like color labels for files seems like a one and done project but it can ripple effects</p>
<ul>
<li>people will want to customized those colors</li>
<li>they will want bulk editing</li>
<li>they will want to use those colors everywhere</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a> <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.248 [debug] l:len=57

10:45:07.248 [debug] l:buf=3:<h1>Feature ripple effects</h1>
<p>a simple feature like color labels for files seems like a one and done project but it can ripple effects</p>
<ul>
<li>people will want to customized those colors</li>
<li>they will want bulk editing</li>
<li>they will want to use those colors everywhere</li>
</ul>
<p>Keywords: <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a> <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf empty

10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf=525:<h1>2020-09-01</h1>
<ul>
<li>Basecamp was killed the day it was implemented and I was writing up my response to <a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li>However it seems I've yet again written a bunch of crap that I won't publish.
<ul>
<li>Why is this? Because <a href="http://localhost:5000/long-responses-seem-angry" rel="noopener noreferrer">long responses seem angry</a>.</li>
<li></li>
</ul>
</li>
</ul>


10:45:07.248 [debug] l:len=5

10:45:07.248 [debug] l:buf=25:<h1>2020-09-01</h1>
<ul>
<li>Basecamp was killed the day it was implemented and I was writing up my response to <a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li>However it seems I've yet again written a bunch of crap that I won't publish.
<ul>
<li>Why is this? Because <a href="http://localhost:5000/long-responses-seem-angry" rel="noopener noreferrer">long responses seem angry</a>.</li>
<li></li>
</ul>
</li>
</ul>


10:45:07.248 [debug] l:len=52

10:45:07.248 [debug] l:buf=5:<h1>2020-09-01</h1>
<ul>
<li>Basecamp was killed the day it was implemented and I was writing up my response to <a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li>However it seems I've yet again written a bunch of crap that I won't publish.
<ul>
<li>Why is this? Because <a href="http://localhost:5000/long-responses-seem-angry" rel="noopener noreferrer">long responses seem angry</a>.</li>
<li></li>
</ul>
</li>
</ul>


10:45:07.248 [debug] l:len=

10:45:07.248 [debug] l:buf empty

10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf=97:<h1>Untitled</h1>
<p>This is the note that I'll always create because I push CMD-N too much.</p>


10:45:07.249 [debug] l:len=9

10:45:07.249 [debug] l:buf=7:<h1>Untitled</h1>
<p>This is the note that I'll always create because I push CMD-N too much.</p>


10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf empty

10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf=81:<h1>transparency</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.249 [debug] l:len=8

10:45:07.249 [debug] l:buf=1:<h1>transparency</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf empty

10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf=1392:<h1>Symantec CSS problems and why Utility</h1>
<h1><a href="http://localhost:5000/semantic-css" rel="noopener noreferrer">Semantic CSS</a> problems and why Utility classes are the solution (notes)</h1>
<blockquote>
<p>...Most of the time my <a href="http://localhost:5000/css" rel="noopener noreferrer">CSS</a> was like a mirror for my markup; perfectly reflecting my HTML structure with nested CSS selectors.. My markup wasn't concerned with styling decisions, but my CSS was very concerned with my markup structure.</p>
</blockquote>
<p>Similar <a href="http://localhost:5000/components" rel="noopener noreferrer">components</a></p>
<blockquote>
<p>Our markup all of a sudden knows that <em>we want both of these pieces of content to be styled as media cards.</em> What if we wanted to change how the author bio looked without changing how the article preview looks?</p>
</blockquote>
<p>Now we need to change the HTML! Blasphemy!</p>
<blockquote>
<p><strong>What if we needed to add&nbsp;a new type of content&nbsp;that also needed the same styling?</strong></p>
</blockquote>
<p>Think about which is more likely to happen ??💭</p>
<p>Keywords: <a href="http://localhost:5000/css" rel="noopener noreferrer">Css</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a>, <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></p>


10:45:07.249 [debug] l:len=1

10:45:07.249 [debug] l:buf=392:<h1>Symantec CSS problems and why Utility</h1>
<h1><a href="http://localhost:5000/semantic-css" rel="noopener noreferrer">Semantic CSS</a> problems and why Utility classes are the solution (notes)</h1>
<blockquote>
<p>...Most of the time my <a href="http://localhost:5000/css" rel="noopener noreferrer">CSS</a> was like a mirror for my markup; perfectly reflecting my HTML structure with nested CSS selectors.. My markup wasn't concerned with styling decisions, but my CSS was very concerned with my markup structure.</p>
</blockquote>
<p>Similar <a href="http://localhost:5000/components" rel="noopener noreferrer">components</a></p>
<blockquote>
<p>Our markup all of a sudden knows that <em>we want both of these pieces of content to be styled as media cards.</em> What if we wanted to change how the author bio looked without changing how the article preview looks?</p>
</blockquote>
<p>Now we need to change the HTML! Blasphemy!</p>
<blockquote>
<p><strong>What if we needed to add&nbsp;a new type of content&nbsp;that also needed the same styling?</strong></p>
</blockquote>
<p>Think about which is more likely to happen ??💭</p>
<p>Keywords: <a href="http://localhost:5000/css" rel="noopener noreferrer">Css</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a>, <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></p>


10:45:07.249 [debug] l:len=13

10:45:07.249 [debug] l:buf=92:<h1>Symantec CSS problems and why Utility</h1>
<h1><a href="http://localhost:5000/semantic-css" rel="noopener noreferrer">Semantic CSS</a> problems and why Utility classes are the solution (notes)</h1>
<blockquote>
<p>...Most of the time my <a href="http://localhost:5000/css" rel="noopener noreferrer">CSS</a> was like a mirror for my markup; perfectly reflecting my HTML structure with nested CSS selectors.. My markup wasn't concerned with styling decisions, but my CSS was very concerned with my markup structure.</p>
</blockquote>
<p>Similar <a href="http://localhost:5000/components" rel="noopener noreferrer">components</a></p>
<blockquote>
<p>Our markup all of a sudden knows that <em>we want both of these pieces of content to be styled as media cards.</em> What if we wanted to change how the author bio looked without changing how the article preview looks?</p>
</blockquote>
<p>Now we need to change the HTML! Blasphemy!</p>
<blockquote>
<p><strong>What if we needed to add&nbsp;a new type of content&nbsp;that also needed the same styling?</strong></p>
</blockquote>
<p>Think about which is more likely to happen ??💭</p>
<p>Keywords: <a href="http://localhost:5000/css" rel="noopener noreferrer">Css</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a>, <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></p>


10:45:07.249 [debug] l:len=139

10:45:07.249 [debug] l:buf=2:<h1>Symantec CSS problems and why Utility</h1>
<h1><a href="http://localhost:5000/semantic-css" rel="noopener noreferrer">Semantic CSS</a> problems and why Utility classes are the solution (notes)</h1>
<blockquote>
<p>...Most of the time my <a href="http://localhost:5000/css" rel="noopener noreferrer">CSS</a> was like a mirror for my markup; perfectly reflecting my HTML structure with nested CSS selectors.. My markup wasn't concerned with styling decisions, but my CSS was very concerned with my markup structure.</p>
</blockquote>
<p>Similar <a href="http://localhost:5000/components" rel="noopener noreferrer">components</a></p>
<blockquote>
<p>Our markup all of a sudden knows that <em>we want both of these pieces of content to be styled as media cards.</em> What if we wanted to change how the author bio looked without changing how the article preview looks?</p>
</blockquote>
<p>Now we need to change the HTML! Blasphemy!</p>
<blockquote>
<p><strong>What if we needed to add&nbsp;a new type of content&nbsp;that also needed the same styling?</strong></p>
</blockquote>
<p>Think about which is more likely to happen ??💭</p>
<p>Keywords: <a href="http://localhost:5000/css" rel="noopener noreferrer">Css</a>, <a href="http://localhost:5000/react" rel="noopener noreferrer">React</a>, <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a></p>


10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf empty

10:45:07.249 [debug] l:len=

10:45:07.249 [debug] l:buf=364:<h1>Zettelkasten solves never reviewing notes</h1>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.249 [debug] l:len=3

10:45:07.250 [debug] l:buf=64:<h1>Zettelkasten solves never reviewing notes</h1>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.250 [debug] l:len=36

10:45:07.250 [debug] l:buf=4:<h1>Zettelkasten solves never reviewing notes</h1>
<p>It's about constant connecting, although not too much</p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf empty

10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf=268:<h1>gambling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.250 [debug] l:len=2

10:45:07.250 [debug] l:buf=68:<h1>gambling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.250 [debug] l:len=26

10:45:07.250 [debug] l:buf=8:<h1>gambling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf empty

10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf=83:<h1>open-west</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.250 [debug] l:len=8

10:45:07.250 [debug] l:buf=3:<h1>open-west</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf empty

10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf=3361:<h1>Obsidian</h1>
<p>URL: <a href="https://obsidian.md/" rel="noopener noreferrer">https://obsidian.md/</a></p>
<p>Obsidian is a <a href="http://localhost:5000/electron" rel="noopener noreferrer">Electron</a> app that uses plain markdown files to store it's notes.</p>
<h2>Every note is a markdown document</h2>
<hr>
<h2><a href="http://localhost:5000/obsidian----markdown-preview.png" rel="noopener noreferrer">Obsidian -- markdown preview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Referencing other notes</h2>
<p>You can link to other documents with double square brackets:  <code>[[]]</code>. When you view the document in non-markdown mode they become links. If you want to link to a particular header you can do <code>[Obsidian#gr](obsidian#gr)</code> and it will auto-complete:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--reference.png" rel="noopener noreferrer">Obsidian--reference</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plain-text means you don't have to worry about them going out of business</h2>
<p>Because it's just plain text files I always own my data, there's no propriety formats. Naturally the trade-off is that my notes are less private.</p>
<h2>Embed other documents with <code>![[</code></h2>
<p>You can reference other documents if you put a <code>!</code> in front of your link making it easier to compose stuff.</p>
<h2>Graph View</h2>
<p>You can see all your notes and their connections just like in <a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a> in a Graph View:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--global-graph-view.png" rel="noopener noreferrer">Obsidian--global-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Local Graph View</h2>
<p>The local graph View allows you to traverse notes that are near you current notes (really a just another way to view Backlinks but in a way that can follow more than one link away).</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--local-graph-view.gif" rel="noopener noreferrer">Obsidian--local-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plugin system</h2>
<p>One of the most powerful things is that Obsidian allows other users to write plugins that completely change the look and feel of the app. For instance there's plugins to randomly take you to a note, or ones that make it so that your notes pile up on the right like <a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a>.</p>
<h2>Quick switcher</h2>
<p>This helps you find notes quickly</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--quick-switcher.png" rel="noopener noreferrer">Obsidian--quick-switcher</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Audio Recordings</h2>
<p>Audio recordings can be done and are saved inline.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.250 [debug] l:len=3

10:45:07.250 [debug] l:buf=361:<h1>Obsidian</h1>
<p>URL: <a href="https://obsidian.md/" rel="noopener noreferrer">https://obsidian.md/</a></p>
<p>Obsidian is a <a href="http://localhost:5000/electron" rel="noopener noreferrer">Electron</a> app that uses plain markdown files to store it's notes.</p>
<h2>Every note is a markdown document</h2>
<hr>
<h2><a href="http://localhost:5000/obsidian----markdown-preview.png" rel="noopener noreferrer">Obsidian -- markdown preview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Referencing other notes</h2>
<p>You can link to other documents with double square brackets:  <code>[[]]</code>. When you view the document in non-markdown mode they become links. If you want to link to a particular header you can do <code>[Obsidian#gr](obsidian#gr)</code> and it will auto-complete:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--reference.png" rel="noopener noreferrer">Obsidian--reference</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plain-text means you don't have to worry about them going out of business</h2>
<p>Because it's just plain text files I always own my data, there's no propriety formats. Naturally the trade-off is that my notes are less private.</p>
<h2>Embed other documents with <code>![[</code></h2>
<p>You can reference other documents if you put a <code>!</code> in front of your link making it easier to compose stuff.</p>
<h2>Graph View</h2>
<p>You can see all your notes and their connections just like in <a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a> in a Graph View:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--global-graph-view.png" rel="noopener noreferrer">Obsidian--global-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Local Graph View</h2>
<p>The local graph View allows you to traverse notes that are near you current notes (really a just another way to view Backlinks but in a way that can follow more than one link away).</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--local-graph-view.gif" rel="noopener noreferrer">Obsidian--local-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plugin system</h2>
<p>One of the most powerful things is that Obsidian allows other users to write plugins that completely change the look and feel of the app. For instance there's plugins to randomly take you to a note, or ones that make it so that your notes pile up on the right like <a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a>.</p>
<h2>Quick switcher</h2>
<p>This helps you find notes quickly</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--quick-switcher.png" rel="noopener noreferrer">Obsidian--quick-switcher</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Audio Recordings</h2>
<p>Audio recordings can be done and are saved inline.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.250 [debug] l:len=33

10:45:07.250 [debug] l:buf=61:<h1>Obsidian</h1>
<p>URL: <a href="https://obsidian.md/" rel="noopener noreferrer">https://obsidian.md/</a></p>
<p>Obsidian is a <a href="http://localhost:5000/electron" rel="noopener noreferrer">Electron</a> app that uses plain markdown files to store it's notes.</p>
<h2>Every note is a markdown document</h2>
<hr>
<h2><a href="http://localhost:5000/obsidian----markdown-preview.png" rel="noopener noreferrer">Obsidian -- markdown preview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Referencing other notes</h2>
<p>You can link to other documents with double square brackets:  <code>[[]]</code>. When you view the document in non-markdown mode they become links. If you want to link to a particular header you can do <code>[Obsidian#gr](obsidian#gr)</code> and it will auto-complete:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--reference.png" rel="noopener noreferrer">Obsidian--reference</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plain-text means you don't have to worry about them going out of business</h2>
<p>Because it's just plain text files I always own my data, there's no propriety formats. Naturally the trade-off is that my notes are less private.</p>
<h2>Embed other documents with <code>![[</code></h2>
<p>You can reference other documents if you put a <code>!</code> in front of your link making it easier to compose stuff.</p>
<h2>Graph View</h2>
<p>You can see all your notes and their connections just like in <a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a> in a Graph View:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--global-graph-view.png" rel="noopener noreferrer">Obsidian--global-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Local Graph View</h2>
<p>The local graph View allows you to traverse notes that are near you current notes (really a just another way to view Backlinks but in a way that can follow more than one link away).</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--local-graph-view.gif" rel="noopener noreferrer">Obsidian--local-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plugin system</h2>
<p>One of the most powerful things is that Obsidian allows other users to write plugins that completely change the look and feel of the app. For instance there's plugins to randomly take you to a note, or ones that make it so that your notes pile up on the right like <a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a>.</p>
<h2>Quick switcher</h2>
<p>This helps you find notes quickly</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--quick-switcher.png" rel="noopener noreferrer">Obsidian--quick-switcher</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Audio Recordings</h2>
<p>Audio recordings can be done and are saved inline.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.250 [debug] l:len=336

10:45:07.250 [debug] l:buf=1:<h1>Obsidian</h1>
<p>URL: <a href="https://obsidian.md/" rel="noopener noreferrer">https://obsidian.md/</a></p>
<p>Obsidian is a <a href="http://localhost:5000/electron" rel="noopener noreferrer">Electron</a> app that uses plain markdown files to store it's notes.</p>
<h2>Every note is a markdown document</h2>
<hr>
<h2><a href="http://localhost:5000/obsidian----markdown-preview.png" rel="noopener noreferrer">Obsidian -- markdown preview</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Referencing other notes</h2>
<p>You can link to other documents with double square brackets:  <code>[[]]</code>. When you view the document in non-markdown mode they become links. If you want to link to a particular header you can do <code>[Obsidian#gr](obsidian#gr)</code> and it will auto-complete:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--reference.png" rel="noopener noreferrer">Obsidian--reference</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plain-text means you don't have to worry about them going out of business</h2>
<p>Because it's just plain text files I always own my data, there's no propriety formats. Naturally the trade-off is that my notes are less private.</p>
<h2>Embed other documents with <code>![[</code></h2>
<p>You can reference other documents if you put a <code>!</code> in front of your link making it easier to compose stuff.</p>
<h2>Graph View</h2>
<p>You can see all your notes and their connections just like in <a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a> in a Graph View:</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--global-graph-view.png" rel="noopener noreferrer">Obsidian--global-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Local Graph View</h2>
<p>The local graph View allows you to traverse notes that are near you current notes (really a just another way to view Backlinks but in a way that can follow more than one link away).</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--local-graph-view.gif" rel="noopener noreferrer">Obsidian--local-graph-view</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Plugin system</h2>
<p>One of the most powerful things is that Obsidian allows other users to write plugins that completely change the look and feel of the app. For instance there's plugins to randomly take you to a note, or ones that make it so that your notes pile up on the right like <a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a>.</p>
<h2>Quick switcher</h2>
<p>This helps you find notes quickly</p>
<hr>
<h2><a href="http://localhost:5000/obsidian--quick-switcher.png" rel="noopener noreferrer">Obsidian--quick-switcher</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Audio Recordings</h2>
<p>Audio recordings can be done and are saved inline.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/imf-v3" rel="noopener noreferrer">IMF V3</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.250 [debug] l:len=

10:45:07.250 [debug] l:buf empty

10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf=232:<h1>fires</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.251 [debug] l:len=2

10:45:07.251 [debug] l:buf=32:<h1>fires</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.251 [debug] l:len=23

10:45:07.251 [debug] l:buf=2:<h1>fires</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf empty

10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf=76:<h1>Dev Ops</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.251 [debug] l:len=7

10:45:07.251 [debug] l:buf=6:<h1>Dev Ops</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf empty

10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf=609:<h1>onroadmap</h1>
<p>A cool website that takes a whole different perspective on task management. They talk against <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> and other such things in this article: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.251 [debug] l:len=6

10:45:07.251 [debug] l:buf=09:<h1>onroadmap</h1>
<p>A cool website that takes a whole different perspective on task management. They talk against <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> and other such things in this article: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.251 [debug] l:len=60

10:45:07.251 [debug] l:buf=9:<h1>onroadmap</h1>
<p>A cool website that takes a whole different perspective on task management. They talk against <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> and other such things in this article: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.251 [debug] l:len=

10:45:07.251 [debug] l:buf empty

10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf=257:<h1>Responding to change</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.252 [debug] l:len=2

10:45:07.252 [debug] l:buf=57:<h1>Responding to change</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.252 [debug] l:len=25

10:45:07.252 [debug] l:buf=7:<h1>Responding to change</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf empty

10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf=96:<h1>Pasted image 20201007090920</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.252 [debug] l:len=9

10:45:07.252 [debug] l:buf=6:<h1>Pasted image 20201007090920</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf empty

10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf=88:<h1>the hackers mindset</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.252 [debug] l:len=8

10:45:07.252 [debug] l:buf=8:<h1>the hackers mindset</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf empty

10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf=1301:<h1>Slack's GIF problem</h1>
<blockquote>
<p>The Web is smothering in useless images. These clichéd, stock images communicate absolutely nothing of value, interest or use. They are one of the worst forms of digital pollution because they take up space on the page, forcing more useful content out of sight.</p>
<p><a href="https://gerrymcgovern.com/the-department-of-useless-images/" rel="noopener noreferrer">https://gerrymcgovern.com/the-department-of-useless-images/</a></p>
</blockquote>
<p>Slack really has this problem. It's filled with tons of emojis and makes getting GIFs as easy as typing a slash.</p>
<p>This really matters because they usually don't contribute much to the discussion yet they dominate the vertical space, which is the most precious resource in slack. Links do this as well as they unfurl into a huge block.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">power of a title</a></li>
<li>Slack MOC</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>


10:45:07.252 [debug] l:len=1

10:45:07.252 [debug] l:buf=301:<h1>Slack's GIF problem</h1>
<blockquote>
<p>The Web is smothering in useless images. These clichéd, stock images communicate absolutely nothing of value, interest or use. They are one of the worst forms of digital pollution because they take up space on the page, forcing more useful content out of sight.</p>
<p><a href="https://gerrymcgovern.com/the-department-of-useless-images/" rel="noopener noreferrer">https://gerrymcgovern.com/the-department-of-useless-images/</a></p>
</blockquote>
<p>Slack really has this problem. It's filled with tons of emojis and makes getting GIFs as easy as typing a slash.</p>
<p>This really matters because they usually don't contribute much to the discussion yet they dominate the vertical space, which is the most precious resource in slack. Links do this as well as they unfurl into a huge block.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">power of a title</a></li>
<li>Slack MOC</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>


10:45:07.252 [debug] l:len=13

10:45:07.252 [debug] l:buf=01:<h1>Slack's GIF problem</h1>
<blockquote>
<p>The Web is smothering in useless images. These clichéd, stock images communicate absolutely nothing of value, interest or use. They are one of the worst forms of digital pollution because they take up space on the page, forcing more useful content out of sight.</p>
<p><a href="https://gerrymcgovern.com/the-department-of-useless-images/" rel="noopener noreferrer">https://gerrymcgovern.com/the-department-of-useless-images/</a></p>
</blockquote>
<p>Slack really has this problem. It's filled with tons of emojis and makes getting GIFs as easy as typing a slash.</p>
<p>This really matters because they usually don't contribute much to the discussion yet they dominate the vertical space, which is the most precious resource in slack. Links do this as well as they unfurl into a huge block.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">power of a title</a></li>
<li>Slack MOC</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>


10:45:07.252 [debug] l:len=130

10:45:07.252 [debug] l:buf=1:<h1>Slack's GIF problem</h1>
<blockquote>
<p>The Web is smothering in useless images. These clichéd, stock images communicate absolutely nothing of value, interest or use. They are one of the worst forms of digital pollution because they take up space on the page, forcing more useful content out of sight.</p>
<p><a href="https://gerrymcgovern.com/the-department-of-useless-images/" rel="noopener noreferrer">https://gerrymcgovern.com/the-department-of-useless-images/</a></p>
</blockquote>
<p>Slack really has this problem. It's filled with tons of emojis and makes getting GIFs as easy as typing a slash.</p>
<p>This really matters because they usually don't contribute much to the discussion yet they dominate the vertical space, which is the most precious resource in slack. Links do this as well as they unfurl into a huge block.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">power of a title</a></li>
<li>Slack MOC</li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
</ul>


10:45:07.252 [debug] l:len=

10:45:07.252 [debug] l:buf empty

10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf=246:<h1>Elixir - Lessons Learned</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.253 [debug] l:len=2

10:45:07.253 [debug] l:buf=46:<h1>Elixir - Lessons Learned</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.253 [debug] l:len=24

10:45:07.253 [debug] l:buf=6:<h1>Elixir - Lessons Learned</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf empty

10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf=93:<h1>1_YlhUzT9my2GmkaT_ma8qaQ</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.253 [debug] l:len=9

10:45:07.253 [debug] l:buf=3:<h1>1_YlhUzT9my2GmkaT_ma8qaQ</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf empty

10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf=92:<h1>BookStackRankOnStrategy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.253 [debug] l:len=9

10:45:07.253 [debug] l:buf=2:<h1>BookStackRankOnStrategy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf empty

10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf=316:<p>Great programmers write
suboptimal code daily.&nbsp; That's the nature of the beast.&nbsp; There just isn't the time.</p>
<p>Tags:
<a href="http://localhost:5000/programming" rel="noopener noreferrer">programming</a>
<a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.253 [debug] l:len=3

10:45:07.253 [debug] l:buf=16:<p>Great programmers write
suboptimal code daily.&nbsp; That's the nature of the beast.&nbsp; There just isn't the time.</p>
<p>Tags:
<a href="http://localhost:5000/programming" rel="noopener noreferrer">programming</a>
<a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.253 [debug] l:len=31

10:45:07.253 [debug] l:buf=6:<p>Great programmers write
suboptimal code daily.&nbsp; That's the nature of the beast.&nbsp; There just isn't the time.</p>
<p>Tags:
<a href="http://localhost:5000/programming" rel="noopener noreferrer">programming</a>
<a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf empty

10:45:07.253 [debug] l:len=

10:45:07.253 [debug] l:buf=163:<h1>ReasonML meetup first meeting</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a></p>
<h2>Questions:</h2>
<ol>
<li></li>
</ol>


10:45:07.253 [debug] l:len=1

10:45:07.254 [debug] l:buf=63:<h1>ReasonML meetup first meeting</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a></p>
<h2>Questions:</h2>
<ol>
<li></li>
</ol>


10:45:07.254 [debug] l:len=16

10:45:07.254 [debug] l:buf=3:<h1>ReasonML meetup first meeting</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a></p>
<h2>Questions:</h2>
<ol>
<li></li>
</ol>


10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf empty

10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf=83:<h1>Best practices</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.254 [debug] l:len=8

10:45:07.254 [debug] l:buf=3:<h1>Best practices</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf empty

10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf=3578:<h1>The Flow of Night. (note of why programmers work at night)</h1>
<p>There’s magic in the night-time. The peace and quiet, the internal serenity … There’s just you, your work and an infinite abundance of time. You are alone.</p>
<p>Flow is a state of complete immersion in an activity, a state where the outside and inside world merge into one and the person is simply present.</p>
<p>Mihaly Csikszentmihaly - the father of flow research in psychology - describes flow as</p>
<blockquote>
<p>Completely focused motivation. A single-minded immersion that represents perhaps the ultimate in harnessing the emotions in service of performing and learning.</p>
</blockquote>
<p>....</p>
<p>Flow is marked by an intense, almost meditative, calm. No other thoughts can invade your brain than what pertains to the task at hand. Everything else ceases to exist.</p>
<p>But when things are hanging over your head, so to speak, achieving flow is nearly impossible for most people. The mental clarity and emotional calm just isn’t there.</p>
<p>If there’s something tugging at your brain, you might as well forget about flow.</p>
<p>...</p>
<p>Perhaps the biggest thing everyone’s got tugging on their brain is the anticipation of imminent distraction.
You know something is going to happen in an hour or two. Sometimes it’s a big meeting, other times you have to be around to take a call - either way, it can be very distracting even if you do know when the distraction is going to happen.</p>
<p>...
Cost of interuption</p>
<p>Warm caffeinated beverages go very well with this sort of activity. Making them wastes little time, but introduces an impetus to keep procrastinating until you’ve finished the cup.</p>
<p>We call this procrastination, but the term carries connotations that aren’t fully warranted. Don’t think of it as putting off work, it’s more like defragging one’s brain. Making sure there are no more lingering thoughts in there, no notifications left unclicked, no important questions left unanswered.
---&gt; I find this interesting because I can see how knowing there's nothing there can really help. It can help you say, "there's nothing to check, I need to focus"</p>
<p>...</p>
<p>Programs are a conversation between programmer and computer.</p>
<p>The programmer’s job is breaking down a problem into understandable bits and explaining the solution to the computer in such a way it can be executed perfectly every time.
...</p>
<p>Every time you lose sight of the whole system you have to build it again like constructing a glass palace.</p>
<p>Once you understand the language, you have to arrange it in your mind so the space can be freely traversed, you can close your eyes and see how different parts of the system affect each other.</p>
<p>Only after this stage has been reached is a programmer fully effective. Only then can they have any chance of reaching flow because they don’t have to stop every five minutes to figure out how their code fits in the larger picture and whether it’s even doing what it’s supposed to.</p>
<p>When you interrupt a programmer, this glass palace can come crashing down in a shower of shattered glass. They have to start the whole process all over again and it’s going to take a while before they’re back to full steam.</p>
<p>from: <a href="https://leanpub.com/nightowls/read#leanpub-auto-about-flow" rel="noopener noreferrer">https://leanpub.com/nightowls/read#leanpub-auto-about-flow</a></p>
<p>Tags:
<a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></p>


10:45:07.254 [debug] l:len=3

10:45:07.254 [debug] l:buf=578:<h1>The Flow of Night. (note of why programmers work at night)</h1>
<p>There’s magic in the night-time. The peace and quiet, the internal serenity … There’s just you, your work and an infinite abundance of time. You are alone.</p>
<p>Flow is a state of complete immersion in an activity, a state where the outside and inside world merge into one and the person is simply present.</p>
<p>Mihaly Csikszentmihaly - the father of flow research in psychology - describes flow as</p>
<blockquote>
<p>Completely focused motivation. A single-minded immersion that represents perhaps the ultimate in harnessing the emotions in service of performing and learning.</p>
</blockquote>
<p>....</p>
<p>Flow is marked by an intense, almost meditative, calm. No other thoughts can invade your brain than what pertains to the task at hand. Everything else ceases to exist.</p>
<p>But when things are hanging over your head, so to speak, achieving flow is nearly impossible for most people. The mental clarity and emotional calm just isn’t there.</p>
<p>If there’s something tugging at your brain, you might as well forget about flow.</p>
<p>...</p>
<p>Perhaps the biggest thing everyone’s got tugging on their brain is the anticipation of imminent distraction.
You know something is going to happen in an hour or two. Sometimes it’s a big meeting, other times you have to be around to take a call - either way, it can be very distracting even if you do know when the distraction is going to happen.</p>
<p>...
Cost of interuption</p>
<p>Warm caffeinated beverages go very well with this sort of activity. Making them wastes little time, but introduces an impetus to keep procrastinating until you’ve finished the cup.</p>
<p>We call this procrastination, but the term carries connotations that aren’t fully warranted. Don’t think of it as putting off work, it’s more like defragging one’s brain. Making sure there are no more lingering thoughts in there, no notifications left unclicked, no important questions left unanswered.
---&gt; I find this interesting because I can see how knowing there's nothing there can really help. It can help you say, "there's nothing to check, I need to focus"</p>
<p>...</p>
<p>Programs are a conversation between programmer and computer.</p>
<p>The programmer’s job is breaking down a problem into understandable bits and explaining the solution to the computer in such a way it can be executed perfectly every time.
...</p>
<p>Every time you lose sight of the whole system you have to build it again like constructing a glass palace.</p>
<p>Once you understand the language, you have to arrange it in your mind so the space can be freely traversed, you can close your eyes and see how different parts of the system affect each other.</p>
<p>Only after this stage has been reached is a programmer fully effective. Only then can they have any chance of reaching flow because they don’t have to stop every five minutes to figure out how their code fits in the larger picture and whether it’s even doing what it’s supposed to.</p>
<p>When you interrupt a programmer, this glass palace can come crashing down in a shower of shattered glass. They have to start the whole process all over again and it’s going to take a while before they’re back to full steam.</p>
<p>from: <a href="https://leanpub.com/nightowls/read#leanpub-auto-about-flow" rel="noopener noreferrer">https://leanpub.com/nightowls/read#leanpub-auto-about-flow</a></p>
<p>Tags:
<a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></p>


10:45:07.254 [debug] l:len=35

10:45:07.254 [debug] l:buf=78:<h1>The Flow of Night. (note of why programmers work at night)</h1>
<p>There’s magic in the night-time. The peace and quiet, the internal serenity … There’s just you, your work and an infinite abundance of time. You are alone.</p>
<p>Flow is a state of complete immersion in an activity, a state where the outside and inside world merge into one and the person is simply present.</p>
<p>Mihaly Csikszentmihaly - the father of flow research in psychology - describes flow as</p>
<blockquote>
<p>Completely focused motivation. A single-minded immersion that represents perhaps the ultimate in harnessing the emotions in service of performing and learning.</p>
</blockquote>
<p>....</p>
<p>Flow is marked by an intense, almost meditative, calm. No other thoughts can invade your brain than what pertains to the task at hand. Everything else ceases to exist.</p>
<p>But when things are hanging over your head, so to speak, achieving flow is nearly impossible for most people. The mental clarity and emotional calm just isn’t there.</p>
<p>If there’s something tugging at your brain, you might as well forget about flow.</p>
<p>...</p>
<p>Perhaps the biggest thing everyone’s got tugging on their brain is the anticipation of imminent distraction.
You know something is going to happen in an hour or two. Sometimes it’s a big meeting, other times you have to be around to take a call - either way, it can be very distracting even if you do know when the distraction is going to happen.</p>
<p>...
Cost of interuption</p>
<p>Warm caffeinated beverages go very well with this sort of activity. Making them wastes little time, but introduces an impetus to keep procrastinating until you’ve finished the cup.</p>
<p>We call this procrastination, but the term carries connotations that aren’t fully warranted. Don’t think of it as putting off work, it’s more like defragging one’s brain. Making sure there are no more lingering thoughts in there, no notifications left unclicked, no important questions left unanswered.
---&gt; I find this interesting because I can see how knowing there's nothing there can really help. It can help you say, "there's nothing to check, I need to focus"</p>
<p>...</p>
<p>Programs are a conversation between programmer and computer.</p>
<p>The programmer’s job is breaking down a problem into understandable bits and explaining the solution to the computer in such a way it can be executed perfectly every time.
...</p>
<p>Every time you lose sight of the whole system you have to build it again like constructing a glass palace.</p>
<p>Once you understand the language, you have to arrange it in your mind so the space can be freely traversed, you can close your eyes and see how different parts of the system affect each other.</p>
<p>Only after this stage has been reached is a programmer fully effective. Only then can they have any chance of reaching flow because they don’t have to stop every five minutes to figure out how their code fits in the larger picture and whether it’s even doing what it’s supposed to.</p>
<p>When you interrupt a programmer, this glass palace can come crashing down in a shower of shattered glass. They have to start the whole process all over again and it’s going to take a while before they’re back to full steam.</p>
<p>from: <a href="https://leanpub.com/nightowls/read#leanpub-auto-about-flow" rel="noopener noreferrer">https://leanpub.com/nightowls/read#leanpub-auto-about-flow</a></p>
<p>Tags:
<a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></p>


10:45:07.254 [debug] l:len=357

10:45:07.254 [debug] l:buf=8:<h1>The Flow of Night. (note of why programmers work at night)</h1>
<p>There’s magic in the night-time. The peace and quiet, the internal serenity … There’s just you, your work and an infinite abundance of time. You are alone.</p>
<p>Flow is a state of complete immersion in an activity, a state where the outside and inside world merge into one and the person is simply present.</p>
<p>Mihaly Csikszentmihaly - the father of flow research in psychology - describes flow as</p>
<blockquote>
<p>Completely focused motivation. A single-minded immersion that represents perhaps the ultimate in harnessing the emotions in service of performing and learning.</p>
</blockquote>
<p>....</p>
<p>Flow is marked by an intense, almost meditative, calm. No other thoughts can invade your brain than what pertains to the task at hand. Everything else ceases to exist.</p>
<p>But when things are hanging over your head, so to speak, achieving flow is nearly impossible for most people. The mental clarity and emotional calm just isn’t there.</p>
<p>If there’s something tugging at your brain, you might as well forget about flow.</p>
<p>...</p>
<p>Perhaps the biggest thing everyone’s got tugging on their brain is the anticipation of imminent distraction.
You know something is going to happen in an hour or two. Sometimes it’s a big meeting, other times you have to be around to take a call - either way, it can be very distracting even if you do know when the distraction is going to happen.</p>
<p>...
Cost of interuption</p>
<p>Warm caffeinated beverages go very well with this sort of activity. Making them wastes little time, but introduces an impetus to keep procrastinating until you’ve finished the cup.</p>
<p>We call this procrastination, but the term carries connotations that aren’t fully warranted. Don’t think of it as putting off work, it’s more like defragging one’s brain. Making sure there are no more lingering thoughts in there, no notifications left unclicked, no important questions left unanswered.
---&gt; I find this interesting because I can see how knowing there's nothing there can really help. It can help you say, "there's nothing to check, I need to focus"</p>
<p>...</p>
<p>Programs are a conversation between programmer and computer.</p>
<p>The programmer’s job is breaking down a problem into understandable bits and explaining the solution to the computer in such a way it can be executed perfectly every time.
...</p>
<p>Every time you lose sight of the whole system you have to build it again like constructing a glass palace.</p>
<p>Once you understand the language, you have to arrange it in your mind so the space can be freely traversed, you can close your eyes and see how different parts of the system affect each other.</p>
<p>Only after this stage has been reached is a programmer fully effective. Only then can they have any chance of reaching flow because they don’t have to stop every five minutes to figure out how their code fits in the larger picture and whether it’s even doing what it’s supposed to.</p>
<p>When you interrupt a programmer, this glass palace can come crashing down in a shower of shattered glass. They have to start the whole process all over again and it’s going to take a while before they’re back to full steam.</p>
<p>from: <a href="https://leanpub.com/nightowls/read#leanpub-auto-about-flow" rel="noopener noreferrer">https://leanpub.com/nightowls/read#leanpub-auto-about-flow</a></p>
<p>Tags:
<a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></p>


10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf empty

10:45:07.254 [debug] l:len=

10:45:07.254 [debug] l:buf=315:<h1>juggles are there</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.254 [debug] l:len=3

10:45:07.254 [debug] l:buf=15:<h1>juggles are there</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.254 [debug] l:len=31

10:45:07.254 [debug] l:buf=5:<h1>juggles are there</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>


10:45:07.254 [debug] l:len=

10:45:07.255 [debug] l:buf empty

10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf=1279:<h1>Roam's Model Sucks for Mobile</h1>
<ul>
<li>Bullet Points aren't really mobile friendly
<ul>
<li>You can't drag them very easily</li>
<li>There's no "Tab" key</li>
</ul>
</li>
<li>Wiki Links aren't easy to type
<ul>
<li><code>[[</code> is really hard to get to on a mobile keyboard. Most people probably don't even know how to</li>
</ul>
</li>
<li>References V.S. Embeds are too complex and <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a>
<ul>
<li>What most people want to do is just collect a bunch of ideas and eventually turn them into something new.</li>
</ul>
</li>
<li>Moving around text is really hard because text selection is hard.</li>
<li>Doing secondary actions on a paragraph doesn't work because it would cause the text to select. You could click on the bullet, but this would be likewise difficult and counter intuitive and tricky.</li>
<li>Trying to insert your cursor between two paragraphs is hard(ish)</li>
<li>Roam is all about combing information and doing some serious transformations on them, mobile doesn't offer much screen real estate to see much information at once.</li>
<li>Searching by typing is awkward, although perhaps still the most accurate.</li>
<li>Roam is a web app so it's limited by the browser.</li>
</ul>


10:45:07.255 [debug] l:len=1

10:45:07.255 [debug] l:buf=279:<h1>Roam's Model Sucks for Mobile</h1>
<ul>
<li>Bullet Points aren't really mobile friendly
<ul>
<li>You can't drag them very easily</li>
<li>There's no "Tab" key</li>
</ul>
</li>
<li>Wiki Links aren't easy to type
<ul>
<li><code>[[</code> is really hard to get to on a mobile keyboard. Most people probably don't even know how to</li>
</ul>
</li>
<li>References V.S. Embeds are too complex and <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a>
<ul>
<li>What most people want to do is just collect a bunch of ideas and eventually turn them into something new.</li>
</ul>
</li>
<li>Moving around text is really hard because text selection is hard.</li>
<li>Doing secondary actions on a paragraph doesn't work because it would cause the text to select. You could click on the bullet, but this would be likewise difficult and counter intuitive and tricky.</li>
<li>Trying to insert your cursor between two paragraphs is hard(ish)</li>
<li>Roam is all about combing information and doing some serious transformations on them, mobile doesn't offer much screen real estate to see much information at once.</li>
<li>Searching by typing is awkward, although perhaps still the most accurate.</li>
<li>Roam is a web app so it's limited by the browser.</li>
</ul>


10:45:07.255 [debug] l:len=12

10:45:07.255 [debug] l:buf=79:<h1>Roam's Model Sucks for Mobile</h1>
<ul>
<li>Bullet Points aren't really mobile friendly
<ul>
<li>You can't drag them very easily</li>
<li>There's no "Tab" key</li>
</ul>
</li>
<li>Wiki Links aren't easy to type
<ul>
<li><code>[[</code> is really hard to get to on a mobile keyboard. Most people probably don't even know how to</li>
</ul>
</li>
<li>References V.S. Embeds are too complex and <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a>
<ul>
<li>What most people want to do is just collect a bunch of ideas and eventually turn them into something new.</li>
</ul>
</li>
<li>Moving around text is really hard because text selection is hard.</li>
<li>Doing secondary actions on a paragraph doesn't work because it would cause the text to select. You could click on the bullet, but this would be likewise difficult and counter intuitive and tricky.</li>
<li>Trying to insert your cursor between two paragraphs is hard(ish)</li>
<li>Roam is all about combing information and doing some serious transformations on them, mobile doesn't offer much screen real estate to see much information at once.</li>
<li>Searching by typing is awkward, although perhaps still the most accurate.</li>
<li>Roam is a web app so it's limited by the browser.</li>
</ul>


10:45:07.255 [debug] l:len=127

10:45:07.255 [debug] l:buf=9:<h1>Roam's Model Sucks for Mobile</h1>
<ul>
<li>Bullet Points aren't really mobile friendly
<ul>
<li>You can't drag them very easily</li>
<li>There's no "Tab" key</li>
</ul>
</li>
<li>Wiki Links aren't easy to type
<ul>
<li><code>[[</code> is really hard to get to on a mobile keyboard. Most people probably don't even know how to</li>
</ul>
</li>
<li>References V.S. Embeds are too complex and <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a>
<ul>
<li>What most people want to do is just collect a bunch of ideas and eventually turn them into something new.</li>
</ul>
</li>
<li>Moving around text is really hard because text selection is hard.</li>
<li>Doing secondary actions on a paragraph doesn't work because it would cause the text to select. You could click on the bullet, but this would be likewise difficult and counter intuitive and tricky.</li>
<li>Trying to insert your cursor between two paragraphs is hard(ish)</li>
<li>Roam is all about combing information and doing some serious transformations on them, mobile doesn't offer much screen real estate to see much information at once.</li>
<li>Searching by typing is awkward, although perhaps still the most accurate.</li>
<li>Roam is a web app so it's limited by the browser.</li>
</ul>


10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf empty

10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf=289:<h1>Folders</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.255 [debug] l:len=2

10:45:07.255 [debug] l:buf=89:<h1>Folders</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.255 [debug] l:len=28

10:45:07.255 [debug] l:buf=9:<h1>Folders</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf empty

10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf=82:<h1>progress</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.255 [debug] l:len=8

10:45:07.255 [debug] l:buf=2:<h1>progress</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf empty

10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf=716:<h1>2020-09-30</h1>
<ul>
<li><a href="http://localhost:5000/response-to-pablo-about-doing-product-reaserch-all-day" rel="noopener noreferrer">Response to Pablo about doing product reaserch all day</a>
<ul>
<li>Overall I felt about this response that I was kind of being shut down and told to only be a programmer. I don't want to be "just a programmer". Admittedly this is just my feeling, he did say very explicitly that my ideas were welcome, but still it felt like I was being punished for sync not happening for the last couple of years, which wasn't my fault. I know he just wants focus but it does kind of suck. I think I'm not being really rational, but still, that's just my feelings.</li>
</ul>
</li>
</ul>


10:45:07.255 [debug] l:len=7

10:45:07.255 [debug] l:buf=16:<h1>2020-09-30</h1>
<ul>
<li><a href="http://localhost:5000/response-to-pablo-about-doing-product-reaserch-all-day" rel="noopener noreferrer">Response to Pablo about doing product reaserch all day</a>
<ul>
<li>Overall I felt about this response that I was kind of being shut down and told to only be a programmer. I don't want to be "just a programmer". Admittedly this is just my feeling, he did say very explicitly that my ideas were welcome, but still it felt like I was being punished for sync not happening for the last couple of years, which wasn't my fault. I know he just wants focus but it does kind of suck. I think I'm not being really rational, but still, that's just my feelings.</li>
</ul>
</li>
</ul>


10:45:07.255 [debug] l:len=71

10:45:07.255 [debug] l:buf=6:<h1>2020-09-30</h1>
<ul>
<li><a href="http://localhost:5000/response-to-pablo-about-doing-product-reaserch-all-day" rel="noopener noreferrer">Response to Pablo about doing product reaserch all day</a>
<ul>
<li>Overall I felt about this response that I was kind of being shut down and told to only be a programmer. I don't want to be "just a programmer". Admittedly this is just my feeling, he did say very explicitly that my ideas were welcome, but still it felt like I was being punished for sync not happening for the last couple of years, which wasn't my fault. I know he just wants focus but it does kind of suck. I think I'm not being really rational, but still, that's just my feelings.</li>
</ul>
</li>
</ul>


10:45:07.255 [debug] l:len=

10:45:07.255 [debug] l:buf empty

10:45:07.256 [debug] l:len=

10:45:07.256 [debug] l:buf=1780:<h1>the reply all problem</h1>
<p>Many apps have this awkward design problem. When one person replies to another person in a public place such as a slack channel, reply all to an email, or make a comment to a particular person in a <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, etc... should you notify everyone? Or should you have a <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a>?</p>
<p>You could say it depends on if the use an <code>@</code>, but many times people don't use that and reply by name, and names are ambigious by nature.</p>
<p>Although it's a bit <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a> I think I like <a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a>'s solution of letting you customize who you notify, YET still keeping things <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</p>
<p>![[Other/Attachments/Pasted image.png]]</p>
<p>But I also think that the idea of using <a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a> is really good because any time you mix topics inside of one box you end up with bad notifications. The reason is simple, because people can't subscribe to one particular topic, they are  <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to listen to any topic</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.256 [debug] l:len=1

10:45:07.256 [debug] l:buf=780:<h1>the reply all problem</h1>
<p>Many apps have this awkward design problem. When one person replies to another person in a public place such as a slack channel, reply all to an email, or make a comment to a particular person in a <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, etc... should you notify everyone? Or should you have a <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a>?</p>
<p>You could say it depends on if the use an <code>@</code>, but many times people don't use that and reply by name, and names are ambigious by nature.</p>
<p>Although it's a bit <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a> I think I like <a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a>'s solution of letting you customize who you notify, YET still keeping things <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</p>
<p>![[Other/Attachments/Pasted image.png]]</p>
<p>But I also think that the idea of using <a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a> is really good because any time you mix topics inside of one box you end up with bad notifications. The reason is simple, because people can't subscribe to one particular topic, they are  <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to listen to any topic</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.256 [debug] l:len=17

10:45:07.256 [debug] l:buf=80:<h1>the reply all problem</h1>
<p>Many apps have this awkward design problem. When one person replies to another person in a public place such as a slack channel, reply all to an email, or make a comment to a particular person in a <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, etc... should you notify everyone? Or should you have a <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a>?</p>
<p>You could say it depends on if the use an <code>@</code>, but many times people don't use that and reply by name, and names are ambigious by nature.</p>
<p>Although it's a bit <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a> I think I like <a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a>'s solution of letting you customize who you notify, YET still keeping things <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</p>
<p>![[Other/Attachments/Pasted image.png]]</p>
<p>But I also think that the idea of using <a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a> is really good because any time you mix topics inside of one box you end up with bad notifications. The reason is simple, because people can't subscribe to one particular topic, they are  <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to listen to any topic</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.256 [debug] l:len=178

10:45:07.256 [debug] l:buf=0:<h1>the reply all problem</h1>
<p>Many apps have this awkward design problem. When one person replies to another person in a public place such as a slack channel, reply all to an email, or make a comment to a particular person in a <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, etc... should you notify everyone? Or should you have a <a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a>?</p>
<p>You could say it depends on if the use an <code>@</code>, but many times people don't use that and reply by name, and names are ambigious by nature.</p>
<p>Although it's a bit <a href="http://localhost:5000/fiddly" rel="noopener noreferrer">fiddly</a> I think I like <a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a>'s solution of letting you customize who you notify, YET still keeping things <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</p>
<p>![[Other/Attachments/Pasted image.png]]</p>
<p>But I also think that the idea of using <a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a> is really good because any time you mix topics inside of one box you end up with bad notifications. The reason is simple, because people can't subscribe to one particular topic, they are  <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to listen to any topic</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.256 [debug] l:len=

10:45:07.256 [debug] l:buf empty

10:45:07.256 [debug] l:len=

10:45:07.256 [debug] l:buf=1706:<h1>Reverse Chronological Order</h1>
<p>Items ordered from newest to oldest.</p>
<p>This order is "bad" because it assumes the newest information is all that matters, however in most situations context of the past is required to make sense of the present. To combat this issue most people are <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to constantly read to keep up</a>.</p>
<p>The nice thing about <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a> buckets is that they don't have to be <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">infinite</a> which means they are allowed to be in the "right" order, oldest to newest.</p>
<p>Another bad habit formed by <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a>	is that it most people don't bother to read the past and just ask, "wait, what are you talking about?". Or in other words, "please rewrite the context so I don't have to find and read it".</p>
<p><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.256 [debug] l:len=1

10:45:07.256 [debug] l:buf=706:<h1>Reverse Chronological Order</h1>
<p>Items ordered from newest to oldest.</p>
<p>This order is "bad" because it assumes the newest information is all that matters, however in most situations context of the past is required to make sense of the present. To combat this issue most people are <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to constantly read to keep up</a>.</p>
<p>The nice thing about <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a> buckets is that they don't have to be <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">infinite</a> which means they are allowed to be in the "right" order, oldest to newest.</p>
<p>Another bad habit formed by <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a>	is that it most people don't bother to read the past and just ask, "wait, what are you talking about?". Or in other words, "please rewrite the context so I don't have to find and read it".</p>
<p><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.256 [debug] l:len=17

10:45:07.256 [debug] l:buf=06:<h1>Reverse Chronological Order</h1>
<p>Items ordered from newest to oldest.</p>
<p>This order is "bad" because it assumes the newest information is all that matters, however in most situations context of the past is required to make sense of the present. To combat this issue most people are <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to constantly read to keep up</a>.</p>
<p>The nice thing about <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a> buckets is that they don't have to be <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">infinite</a> which means they are allowed to be in the "right" order, oldest to newest.</p>
<p>Another bad habit formed by <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a>	is that it most people don't bother to read the past and just ask, "wait, what are you talking about?". Or in other words, "please rewrite the context so I don't have to find and read it".</p>
<p><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.256 [debug] l:len=170

10:45:07.256 [debug] l:buf=6:<h1>Reverse Chronological Order</h1>
<p>Items ordered from newest to oldest.</p>
<p>This order is "bad" because it assumes the newest information is all that matters, however in most situations context of the past is required to make sense of the present. To combat this issue most people are <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">forced to constantly read to keep up</a>.</p>
<p>The nice thing about <a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a> buckets is that they don't have to be <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">infinite</a> which means they are allowed to be in the "right" order, oldest to newest.</p>
<p>Another bad habit formed by <a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a>	is that it most people don't bother to read the past and just ask, "wait, what are you talking about?". Or in other words, "please rewrite the context so I don't have to find and read it".</p>
<p><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.256 [debug] l:len=

10:45:07.256 [debug] l:buf empty

10:45:07.257 [debug] l:len=

10:45:07.257 [debug] l:buf=2169:<h1>Drawing isn't like a printer</h1>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-21-at-01.40.13-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-21 at 01.40.13 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>In this tweet: <a href="https://twitter.com/songsofconquest/status/1318910524424421377" rel="noopener noreferrer">https://twitter.com/songsofconquest/status/1318910524424421377</a> you see that making a highly detailed tree starts with a rough outline then adds detail as time goes on, as opposed to a printer where it would start drawing from the top in full detail and go down.</p>
<p>This is why splitting projects up into little <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and give them to <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a> from a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban Board</a> doesn't make sense and why the <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> way of making <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">Scopes</a> makes a lot more sense.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021133903.png" rel="noopener noreferrer">Pasted image 20201021133903</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Other Examples</h2>
<p><a href="https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be</a></p>
<p>Before:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134328.png" rel="noopener noreferrer">Pasted image 20201021134328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>After:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134412.png" rel="noopener noreferrer">Pasted image 20201021134412</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.257 [debug] l:len=2

10:45:07.257 [debug] l:buf=169:<h1>Drawing isn't like a printer</h1>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-21-at-01.40.13-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-21 at 01.40.13 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>In this tweet: <a href="https://twitter.com/songsofconquest/status/1318910524424421377" rel="noopener noreferrer">https://twitter.com/songsofconquest/status/1318910524424421377</a> you see that making a highly detailed tree starts with a rough outline then adds detail as time goes on, as opposed to a printer where it would start drawing from the top in full detail and go down.</p>
<p>This is why splitting projects up into little <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and give them to <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a> from a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban Board</a> doesn't make sense and why the <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> way of making <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">Scopes</a> makes a lot more sense.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021133903.png" rel="noopener noreferrer">Pasted image 20201021133903</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Other Examples</h2>
<p><a href="https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be</a></p>
<p>Before:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134328.png" rel="noopener noreferrer">Pasted image 20201021134328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>After:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134412.png" rel="noopener noreferrer">Pasted image 20201021134412</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.257 [debug] l:len=21

10:45:07.257 [debug] l:buf=69:<h1>Drawing isn't like a printer</h1>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-21-at-01.40.13-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-21 at 01.40.13 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>In this tweet: <a href="https://twitter.com/songsofconquest/status/1318910524424421377" rel="noopener noreferrer">https://twitter.com/songsofconquest/status/1318910524424421377</a> you see that making a highly detailed tree starts with a rough outline then adds detail as time goes on, as opposed to a printer where it would start drawing from the top in full detail and go down.</p>
<p>This is why splitting projects up into little <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and give them to <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a> from a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban Board</a> doesn't make sense and why the <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> way of making <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">Scopes</a> makes a lot more sense.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021133903.png" rel="noopener noreferrer">Pasted image 20201021133903</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Other Examples</h2>
<p><a href="https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be</a></p>
<p>Before:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134328.png" rel="noopener noreferrer">Pasted image 20201021134328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>After:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134412.png" rel="noopener noreferrer">Pasted image 20201021134412</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.257 [debug] l:len=216

10:45:07.257 [debug] l:buf=9:<h1>Drawing isn't like a printer</h1>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-21-at-01.40.13-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-21 at 01.40.13 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>In this tweet: <a href="https://twitter.com/songsofconquest/status/1318910524424421377" rel="noopener noreferrer">https://twitter.com/songsofconquest/status/1318910524424421377</a> you see that making a highly detailed tree starts with a rough outline then adds detail as time goes on, as opposed to a printer where it would start drawing from the top in full detail and go down.</p>
<p>This is why splitting projects up into little <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s and give them to <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a> from a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban Board</a> doesn't make sense and why the <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> way of making <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">Scopes</a> makes a lot more sense.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021133903.png" rel="noopener noreferrer">Pasted image 20201021133903</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Other Examples</h2>
<p><a href="https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=p5xeKW1ODI0&amp;feature=youtu.be</a></p>
<p>Before:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134328.png" rel="noopener noreferrer">Pasted image 20201021134328</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>After:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201021134412.png" rel="noopener noreferrer">Pasted image 20201021134412</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.257 [debug] l:len=

10:45:07.257 [debug] l:buf empty

10:45:07.257 [debug] l:len=

10:45:07.257 [debug] l:buf=632:<h1>Roam Research</h1>
<p>It's an app that's supposed to be an <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>It even has a whitepaper about it: <a href="https://roamresearch.com/#/app/help/page/Vu1MmjinS" rel="noopener noreferrer">https://roamresearch.com/#/app/help/page/Vu1MmjinS</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.257 [debug] l:len=6

10:45:07.257 [debug] l:buf=32:<h1>Roam Research</h1>
<p>It's an app that's supposed to be an <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>It even has a whitepaper about it: <a href="https://roamresearch.com/#/app/help/page/Vu1MmjinS" rel="noopener noreferrer">https://roamresearch.com/#/app/help/page/Vu1MmjinS</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.257 [debug] l:len=63

10:45:07.257 [debug] l:buf=2:<h1>Roam Research</h1>
<p>It's an app that's supposed to be an <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>It even has a whitepaper about it: <a href="https://roamresearch.com/#/app/help/page/Vu1MmjinS" rel="noopener noreferrer">https://roamresearch.com/#/app/help/page/Vu1MmjinS</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.257 [debug] l:len=

10:45:07.257 [debug] l:buf empty

10:45:07.257 [debug] l:len=

10:45:07.257 [debug] l:buf=658:<h1>drive engagement</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.257 [debug] l:len=6

10:45:07.257 [debug] l:buf=58:<h1>drive engagement</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.257 [debug] l:len=65

10:45:07.257 [debug] l:buf=8:<h1>drive engagement</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf empty

10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf=352:<h1>Async-ish</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.258 [debug] l:len=3

10:45:07.258 [debug] l:buf=52:<h1>Async-ish</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.258 [debug] l:len=35

10:45:07.258 [debug] l:buf=2:<h1>Async-ish</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf empty

10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf=1645:<h2>Server-Side Mobile App with Live View</h2>
<p><a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom" rel="noopener noreferrer">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom</a></p>
<p>Desktop app:</p>
<ul>
<li>Electron</li>
<li>NorthWest JS: <a href="https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/" rel="noopener noreferrer">https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/</a></li>
</ul>
<blockquote>
<p>The reason full-page refreshes often feel slow is not so much because the browser has to process a bunch of HTML sent from a server. Browsers are really good and really fast at that. And in most cases, the fact that an HTML payload tends to be larger than a JSON payload doesn’t matter either (especially with gzipping). No, the reason is that CSS and JavaScript has to be reinitialized and reapplied to the page again. Regardless of whether the files themselves are cached. This can be pretty slow if you have a fair amount of CSS and JavaScript.
<a href="https://stimulusjs.org/handbook/origin" rel="noopener noreferrer">https://stimulusjs.org/handbook/origin</a></p>
</blockquote>
<h1>The logic that "Webview" is terrible isn't the way desktop apps are thought about 🤔💭</h1>
<p>Its <em>fine</em> to have an Electron app, but as soon as you make a web view on Mobile, it "sucks". Bit of a double standard eh?</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
</ul>


10:45:07.258 [debug] l:len=1

10:45:07.258 [debug] l:buf=645:<h2>Server-Side Mobile App with Live View</h2>
<p><a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom" rel="noopener noreferrer">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom</a></p>
<p>Desktop app:</p>
<ul>
<li>Electron</li>
<li>NorthWest JS: <a href="https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/" rel="noopener noreferrer">https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/</a></li>
</ul>
<blockquote>
<p>The reason full-page refreshes often feel slow is not so much because the browser has to process a bunch of HTML sent from a server. Browsers are really good and really fast at that. And in most cases, the fact that an HTML payload tends to be larger than a JSON payload doesn’t matter either (especially with gzipping). No, the reason is that CSS and JavaScript has to be reinitialized and reapplied to the page again. Regardless of whether the files themselves are cached. This can be pretty slow if you have a fair amount of CSS and JavaScript.
<a href="https://stimulusjs.org/handbook/origin" rel="noopener noreferrer">https://stimulusjs.org/handbook/origin</a></p>
</blockquote>
<h1>The logic that "Webview" is terrible isn't the way desktop apps are thought about 🤔💭</h1>
<p>Its <em>fine</em> to have an Electron app, but as soon as you make a web view on Mobile, it "sucks". Bit of a double standard eh?</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
</ul>


10:45:07.258 [debug] l:len=16

10:45:07.258 [debug] l:buf=45:<h2>Server-Side Mobile App with Live View</h2>
<p><a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom" rel="noopener noreferrer">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom</a></p>
<p>Desktop app:</p>
<ul>
<li>Electron</li>
<li>NorthWest JS: <a href="https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/" rel="noopener noreferrer">https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/</a></li>
</ul>
<blockquote>
<p>The reason full-page refreshes often feel slow is not so much because the browser has to process a bunch of HTML sent from a server. Browsers are really good and really fast at that. And in most cases, the fact that an HTML payload tends to be larger than a JSON payload doesn’t matter either (especially with gzipping). No, the reason is that CSS and JavaScript has to be reinitialized and reapplied to the page again. Regardless of whether the files themselves are cached. This can be pretty slow if you have a fair amount of CSS and JavaScript.
<a href="https://stimulusjs.org/handbook/origin" rel="noopener noreferrer">https://stimulusjs.org/handbook/origin</a></p>
</blockquote>
<h1>The logic that "Webview" is terrible isn't the way desktop apps are thought about 🤔💭</h1>
<p>Its <em>fine</em> to have an Electron app, but as soon as you make a web view on Mobile, it "sucks". Bit of a double standard eh?</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
</ul>


10:45:07.258 [debug] l:len=164

10:45:07.258 [debug] l:buf=5:<h2>Server-Side Mobile App with Live View</h2>
<p><a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom" rel="noopener noreferrer">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#module-js-interop-and-client-controlled-dom</a></p>
<p>Desktop app:</p>
<ul>
<li>Electron</li>
<li>NorthWest JS: <a href="https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/" rel="noopener noreferrer">https://nwjs.readthedocs.io/en/latest/For%20Users/Package%20and%20Distribute/</a></li>
</ul>
<blockquote>
<p>The reason full-page refreshes often feel slow is not so much because the browser has to process a bunch of HTML sent from a server. Browsers are really good and really fast at that. And in most cases, the fact that an HTML payload tends to be larger than a JSON payload doesn’t matter either (especially with gzipping). No, the reason is that CSS and JavaScript has to be reinitialized and reapplied to the page again. Regardless of whether the files themselves are cached. This can be pretty slow if you have a fair amount of CSS and JavaScript.
<a href="https://stimulusjs.org/handbook/origin" rel="noopener noreferrer">https://stimulusjs.org/handbook/origin</a></p>
</blockquote>
<h1>The logic that "Webview" is terrible isn't the way desktop apps are thought about 🤔💭</h1>
<p>Its <em>fine</em> to have an Electron app, but as soon as you make a web view on Mobile, it "sucks". Bit of a double standard eh?</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
</ul>


10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf empty

10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf=75:<h1>Design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.258 [debug] l:len=7

10:45:07.258 [debug] l:buf=5:<h1>Design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.258 [debug] l:len=

10:45:07.258 [debug] l:buf empty

10:45:07.258 [debug] l:len=

10:45:07.259 [debug] l:buf=838:<h1>remote</h1>
<ul>
<li>Helped by tools built for remote work
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
</ul>
</li>
<li>Made harder by tools that aren't
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.259 [debug] l:len=8

10:45:07.259 [debug] l:buf=38:<h1>remote</h1>
<ul>
<li>Helped by tools built for remote work
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
</ul>
</li>
<li>Made harder by tools that aren't
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.259 [debug] l:len=83

10:45:07.259 [debug] l:buf=8:<h1>remote</h1>
<ul>
<li>Helped by tools built for remote work
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
</ul>
</li>
<li>Made harder by tools that aren't
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/zoom" rel="noopener noreferrer">Zoom</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf empty

10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf=286:<h1>Forem - Software that powers dev</h1>
<p>Possibly good software for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>?</p>
<p><a href="https://www.forem.com/" rel="noopener noreferrer">https://www.forem.com/</a></p>


10:45:07.259 [debug] l:len=2

10:45:07.259 [debug] l:buf=86:<h1>Forem - Software that powers dev</h1>
<p>Possibly good software for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>?</p>
<p><a href="https://www.forem.com/" rel="noopener noreferrer">https://www.forem.com/</a></p>


10:45:07.259 [debug] l:len=28

10:45:07.259 [debug] l:buf=6:<h1>Forem - Software that powers dev</h1>
<p>Possibly good software for <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>?</p>
<p><a href="https://www.forem.com/" rel="noopener noreferrer">https://www.forem.com/</a></p>


10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf empty

10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf=278:<h1>Dopamine Detox</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.259 [debug] l:len=2

10:45:07.259 [debug] l:buf=78:<h1>Dopamine Detox</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.259 [debug] l:len=27

10:45:07.259 [debug] l:buf=8:<h1>Dopamine Detox</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf empty

10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf=574:<h1>IMF V3</h1>
<p>This is a cool <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a> example.</p>
<p><a href="https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390" rel="noopener noreferrer">https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390</a></p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.259 [debug] l:len=5

10:45:07.259 [debug] l:buf=74:<h1>IMF V3</h1>
<p>This is a cool <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a> example.</p>
<p><a href="https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390" rel="noopener noreferrer">https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390</a></p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.259 [debug] l:len=57

10:45:07.259 [debug] l:buf=4:<h1>IMF V3</h1>
<p>This is a cool <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a> example.</p>
<p><a href="https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390" rel="noopener noreferrer">https://forum.obsidian.md/t/imf-v3-soon-to-be-known-as-the-lyt-system/390</a></p>
<p><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf empty

10:45:07.259 [debug] l:len=

10:45:07.259 [debug] l:buf=1266:<h1>Andy's Working Notes</h1>
<p>This is a cool website that has inspired the <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, and <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a> communities.</p>
<hr>
<h2><a href="http://localhost:5000/how-andy's-working-notes-works.png" rel="noopener noreferrer">How Andy's working notes works</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Another interesting decision is when you have too many notes they start to pile up on the right:</p>
<h2>As an Animation:</h2>
<h2><a href="http://localhost:5000/andy's-working-notes----pile-up-animation.gif" rel="noopener noreferrer">Andy's working notes -- pile up animation</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>His main idea is that he keeps <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a>, which means that each note should be about one concept.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.259 [debug] l:len=1

10:45:07.260 [debug] l:buf=266:<h1>Andy's Working Notes</h1>
<p>This is a cool website that has inspired the <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, and <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a> communities.</p>
<hr>
<h2><a href="http://localhost:5000/how-andy's-working-notes-works.png" rel="noopener noreferrer">How Andy's working notes works</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Another interesting decision is when you have too many notes they start to pile up on the right:</p>
<h2>As an Animation:</h2>
<h2><a href="http://localhost:5000/andy's-working-notes----pile-up-animation.gif" rel="noopener noreferrer">Andy's working notes -- pile up animation</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>His main idea is that he keeps <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a>, which means that each note should be about one concept.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.260 [debug] l:len=12

10:45:07.260 [debug] l:buf=66:<h1>Andy's Working Notes</h1>
<p>This is a cool website that has inspired the <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, and <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a> communities.</p>
<hr>
<h2><a href="http://localhost:5000/how-andy's-working-notes-works.png" rel="noopener noreferrer">How Andy's working notes works</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Another interesting decision is when you have too many notes they start to pile up on the right:</p>
<h2>As an Animation:</h2>
<h2><a href="http://localhost:5000/andy's-working-notes----pile-up-animation.gif" rel="noopener noreferrer">Andy's working notes -- pile up animation</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>His main idea is that he keeps <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a>, which means that each note should be about one concept.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.260 [debug] l:len=126

10:45:07.260 [debug] l:buf=6:<h1>Andy's Working Notes</h1>
<p>This is a cool website that has inspired the <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>, and <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a> communities.</p>
<hr>
<h2><a href="http://localhost:5000/how-andy's-working-notes-works.png" rel="noopener noreferrer">How Andy's working notes works</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Another interesting decision is when you have too many notes they start to pile up on the right:</p>
<h2>As an Animation:</h2>
<h2><a href="http://localhost:5000/andy's-working-notes----pile-up-animation.gif" rel="noopener noreferrer">Andy's working notes -- pile up animation</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>His main idea is that he keeps <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a>, which means that each note should be about one concept.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf empty

10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf=294:<h1>Urgency</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.260 [debug] l:len=2

10:45:07.260 [debug] l:buf=94:<h1>Urgency</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.260 [debug] l:len=29

10:45:07.260 [debug] l:buf=4:<h1>Urgency</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf empty

10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf=753:<h1>Group chat</h1>
<p>Examples are <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, Microsoft Teams, SMS, etc...</p>
<p>See also: <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.260 [debug] l:len=7

10:45:07.260 [debug] l:buf=53:<h1>Group chat</h1>
<p>Examples are <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, Microsoft Teams, SMS, etc...</p>
<p>See also: <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.260 [debug] l:len=75

10:45:07.260 [debug] l:buf=3:<h1>Group chat</h1>
<p>Examples are <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, Microsoft Teams, SMS, etc...</p>
<p>See also: <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf empty

10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf=249:<h1>Pasted image 20201019152445</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.260 [debug] l:len=2

10:45:07.260 [debug] l:buf=49:<h1>Pasted image 20201019152445</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.260 [debug] l:len=24

10:45:07.260 [debug] l:buf=9:<h1>Pasted image 20201019152445</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>


10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf empty

10:45:07.260 [debug] l:len=

10:45:07.260 [debug] l:buf=267:<h1>Public Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.260 [debug] l:len=2

10:45:07.261 [debug] l:buf=67:<h1>Public Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.261 [debug] l:len=26

10:45:07.261 [debug] l:buf=7:<h1>Public Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf empty

10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf=178:<h1>SVG + JS + UX = Functional Animation</h1>
<p><strong>Duke Speer @duke3d</strong></p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.261 [debug] l:len=1

10:45:07.261 [debug] l:buf=78:<h1>SVG + JS + UX = Functional Animation</h1>
<p><strong>Duke Speer @duke3d</strong></p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.261 [debug] l:len=17

10:45:07.261 [debug] l:buf=8:<h1>SVG + JS + UX = Functional Animation</h1>
<p><strong>Duke Speer @duke3d</strong></p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf empty

10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf=621:<h1>Meetings</h1>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.261 [debug] l:len=6

10:45:07.261 [debug] l:buf=21:<h1>Meetings</h1>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.261 [debug] l:len=62

10:45:07.261 [debug] l:buf=1:<h1>Meetings</h1>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf empty

10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf=78:<h1>Bus count</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.261 [debug] l:len=7

10:45:07.261 [debug] l:buf=8:<h1>Bus count</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.261 [debug] l:len=

10:45:07.261 [debug] l:buf empty

10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf=975:<h1>Gitlab</h1>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.262 [debug] l:len=9

10:45:07.262 [debug] l:buf=75:<h1>Gitlab</h1>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.262 [debug] l:len=97

10:45:07.262 [debug] l:buf=5:<h1>Gitlab</h1>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">Gitlab's Hanbook</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf empty

10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf=83:<h1>speaker-series</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.262 [debug] l:len=8

10:45:07.262 [debug] l:buf=3:<h1>speaker-series</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf empty

10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf=543:<p>Albert Einstein is quoted as saying,</p>
<blockquote>
<p>“If I had an hour to solve a problem and my life depended on the solution, I would spend the first fifty-five minutes determining the proper question to ask, for once I know the proper question, I could solve the problem in less than five minutes.”</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/solve-problems" rel="noopener noreferrer">solve problems</a>, <a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></p>


10:45:07.262 [debug] l:len=5

10:45:07.262 [debug] l:buf=43:<p>Albert Einstein is quoted as saying,</p>
<blockquote>
<p>“If I had an hour to solve a problem and my life depended on the solution, I would spend the first fifty-five minutes determining the proper question to ask, for once I know the proper question, I could solve the problem in less than five minutes.”</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/solve-problems" rel="noopener noreferrer">solve problems</a>, <a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></p>


10:45:07.262 [debug] l:len=54

10:45:07.262 [debug] l:buf=3:<p>Albert Einstein is quoted as saying,</p>
<blockquote>
<p>“If I had an hour to solve a problem and my life depended on the solution, I would spend the first fifty-five minutes determining the proper question to ask, for once I know the proper question, I could solve the problem in less than five minutes.”</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/solve-problems" rel="noopener noreferrer">solve problems</a>, <a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></p>


10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf empty

10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf=274:<h1>SPA</h1>
<p>Stands for "Single Page App"</p>
<p>As opposed to MPA</p>
<p>As apposed to single file app: <a href="https://twitter.com/levelsio/status/1308145873843560449?s=19" rel="noopener noreferrer">https://twitter.com/levelsio/status/1308145873843560449?s=19</a></p>


10:45:07.262 [debug] l:len=2

10:45:07.262 [debug] l:buf=74:<h1>SPA</h1>
<p>Stands for "Single Page App"</p>
<p>As opposed to MPA</p>
<p>As apposed to single file app: <a href="https://twitter.com/levelsio/status/1308145873843560449?s=19" rel="noopener noreferrer">https://twitter.com/levelsio/status/1308145873843560449?s=19</a></p>


10:45:07.262 [debug] l:len=27

10:45:07.262 [debug] l:buf=4:<h1>SPA</h1>
<p>Stands for "Single Page App"</p>
<p>As opposed to MPA</p>
<p>As apposed to single file app: <a href="https://twitter.com/levelsio/status/1308145873843560449?s=19" rel="noopener noreferrer">https://twitter.com/levelsio/status/1308145873843560449?s=19</a></p>


10:45:07.262 [debug] l:len=

10:45:07.262 [debug] l:buf empty

10:45:07.263 [debug] l:len=

10:45:07.263 [debug] l:buf=1658:<h1>Variable rewards And Dopamine</h1>
<blockquote>
<p>Variable reward schedules were introduced by psychologist B.F. Skinner in the 1930’s. In his experiments, he found that mice respond most frequently to reward-associated stimuli when the reward was <em>administered after a varying number of responses</em>, <em><strong>precluding the animal’s ability to predict when they would be rewarded</strong></em>.
<br>
Humans are no different; if we perceive a reward to be delivered at random, and if checking for the reward comes at little cost, ==we end up checking habitually== (e.g. <a href="http://localhost:5000/gambling" rel="noopener noreferrer">gambling</a> addiction).</p>
</blockquote>
<p>Ref: <a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></p>
<p>Based on this book: <a href="https://www.nirandfar.com/hooked/" rel="noopener noreferrer">https://www.nirandfar.com/hooked/</a>
Article: <a href="https://www.diygenius.com/the-dopamine-loop/" rel="noopener noreferrer">https://www.diygenius.com/the-dopamine-loop/</a></p>
<p>A <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a> usually.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.263 [debug] l:len=1

10:45:07.263 [debug] l:buf=658:<h1>Variable rewards And Dopamine</h1>
<blockquote>
<p>Variable reward schedules were introduced by psychologist B.F. Skinner in the 1930’s. In his experiments, he found that mice respond most frequently to reward-associated stimuli when the reward was <em>administered after a varying number of responses</em>, <em><strong>precluding the animal’s ability to predict when they would be rewarded</strong></em>.
<br>
Humans are no different; if we perceive a reward to be delivered at random, and if checking for the reward comes at little cost, ==we end up checking habitually== (e.g. <a href="http://localhost:5000/gambling" rel="noopener noreferrer">gambling</a> addiction).</p>
</blockquote>
<p>Ref: <a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></p>
<p>Based on this book: <a href="https://www.nirandfar.com/hooked/" rel="noopener noreferrer">https://www.nirandfar.com/hooked/</a>
Article: <a href="https://www.diygenius.com/the-dopamine-loop/" rel="noopener noreferrer">https://www.diygenius.com/the-dopamine-loop/</a></p>
<p>A <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a> usually.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.263 [debug] l:len=16

10:45:07.263 [debug] l:buf=58:<h1>Variable rewards And Dopamine</h1>
<blockquote>
<p>Variable reward schedules were introduced by psychologist B.F. Skinner in the 1930’s. In his experiments, he found that mice respond most frequently to reward-associated stimuli when the reward was <em>administered after a varying number of responses</em>, <em><strong>precluding the animal’s ability to predict when they would be rewarded</strong></em>.
<br>
Humans are no different; if we perceive a reward to be delivered at random, and if checking for the reward comes at little cost, ==we end up checking habitually== (e.g. <a href="http://localhost:5000/gambling" rel="noopener noreferrer">gambling</a> addiction).</p>
</blockquote>
<p>Ref: <a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></p>
<p>Based on this book: <a href="https://www.nirandfar.com/hooked/" rel="noopener noreferrer">https://www.nirandfar.com/hooked/</a>
Article: <a href="https://www.diygenius.com/the-dopamine-loop/" rel="noopener noreferrer">https://www.diygenius.com/the-dopamine-loop/</a></p>
<p>A <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a> usually.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.263 [debug] l:len=165

10:45:07.263 [debug] l:buf=8:<h1>Variable rewards And Dopamine</h1>
<blockquote>
<p>Variable reward schedules were introduced by psychologist B.F. Skinner in the 1930’s. In his experiments, he found that mice respond most frequently to reward-associated stimuli when the reward was <em>administered after a varying number of responses</em>, <em><strong>precluding the animal’s ability to predict when they would be rewarded</strong></em>.
<br>
Humans are no different; if we perceive a reward to be delivered at random, and if checking for the reward comes at little cost, ==we end up checking habitually== (e.g. <a href="http://localhost:5000/gambling" rel="noopener noreferrer">gambling</a> addiction).</p>
</blockquote>
<p>Ref: <a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></p>
<p>Based on this book: <a href="https://www.nirandfar.com/hooked/" rel="noopener noreferrer">https://www.nirandfar.com/hooked/</a>
Article: <a href="https://www.diygenius.com/the-dopamine-loop/" rel="noopener noreferrer">https://www.diygenius.com/the-dopamine-loop/</a></p>
<p>A <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a> usually.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.263 [debug] l:len=

10:45:07.263 [debug] l:buf empty

10:45:07.263 [debug] l:len=

10:45:07.263 [debug] l:buf=354:<h1>Article--Sustainability over speed, adopting asynchronous communication</h1>
<p><a href="https://nesslabs.com/asynchronous-communication" rel="noopener noreferrer">https://nesslabs.com/asynchronous-communication</a></p>
<p>About: <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.263 [debug] l:len=3

10:45:07.263 [debug] l:buf=54:<h1>Article--Sustainability over speed, adopting asynchronous communication</h1>
<p><a href="https://nesslabs.com/asynchronous-communication" rel="noopener noreferrer">https://nesslabs.com/asynchronous-communication</a></p>
<p>About: <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.263 [debug] l:len=35

10:45:07.263 [debug] l:buf=4:<h1>Article--Sustainability over speed, adopting asynchronous communication</h1>
<p><a href="https://nesslabs.com/asynchronous-communication" rel="noopener noreferrer">https://nesslabs.com/asynchronous-communication</a></p>
<p>About: <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.263 [debug] l:len=

10:45:07.263 [debug] l:buf empty

10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf=1556:<h1>Feb 26th - Bi-weekly engineering meeting</h1>
<ul>
<li>Teams are small businesses.
<ul>
<li>Everyone is equal</li>
<li>Everyone has ownership</li>
<li>How Picasso draws a bull <a href="http://www.artyfactory.com/art_appreciation/animals_in_art/pablo_picasso.htm" rel="noopener noreferrer">Animals in Art - Pablo Picasso</a>
<ul>
<li>You need to have the foundation</li>
</ul>
</li>
</ul>
</li>
<li>Everyone massively raise the bar as what we think is a great product
<ul>
<li>More Customer Research
<ul>
<li><strong>4 hours</strong> with customers per person
<ul>
<li>Not a demo</li>
<li>Understanding what they currently do</li>
<li>Usability testing (making sure they)</li>
<li>Bonus Points:
<ul>
<li>Screen share</li>
<li>Actual Product in their hand</li>
</ul>
</li>
<li>(we'll make tickets for them)
<ul>
<li>Memorialize in <code>[customer-reserach](customer-reserach)</code></li>
</ul>
</li>
</ul>
</li>
<li>Problem we're trying to solve?
<ul>
<li>A lot of new people.</li>
<li>A lot of new products</li>
<li>Avoid complacency (our product is good, no problems, no need to talk to customers)
<ul>
<li>Stay <strong>Humble</strong>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>Quality</h1>
<blockquote>
<p>Works correctly, scalable solution.<br>
~ JT</p>
</blockquote>
<ul>
<li>Make sure things are "done" and "good"</li>
<li>We do an unreasonable amount of work on our side so our costomer don't have to</li>
<li></li>
</ul>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.264 [debug] l:len=1

10:45:07.264 [debug] l:buf=556:<h1>Feb 26th - Bi-weekly engineering meeting</h1>
<ul>
<li>Teams are small businesses.
<ul>
<li>Everyone is equal</li>
<li>Everyone has ownership</li>
<li>How Picasso draws a bull <a href="http://www.artyfactory.com/art_appreciation/animals_in_art/pablo_picasso.htm" rel="noopener noreferrer">Animals in Art - Pablo Picasso</a>
<ul>
<li>You need to have the foundation</li>
</ul>
</li>
</ul>
</li>
<li>Everyone massively raise the bar as what we think is a great product
<ul>
<li>More Customer Research
<ul>
<li><strong>4 hours</strong> with customers per person
<ul>
<li>Not a demo</li>
<li>Understanding what they currently do</li>
<li>Usability testing (making sure they)</li>
<li>Bonus Points:
<ul>
<li>Screen share</li>
<li>Actual Product in their hand</li>
</ul>
</li>
<li>(we'll make tickets for them)
<ul>
<li>Memorialize in <code>[customer-reserach](customer-reserach)</code></li>
</ul>
</li>
</ul>
</li>
<li>Problem we're trying to solve?
<ul>
<li>A lot of new people.</li>
<li>A lot of new products</li>
<li>Avoid complacency (our product is good, no problems, no need to talk to customers)
<ul>
<li>Stay <strong>Humble</strong>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>Quality</h1>
<blockquote>
<p>Works correctly, scalable solution.<br>
~ JT</p>
</blockquote>
<ul>
<li>Make sure things are "done" and "good"</li>
<li>We do an unreasonable amount of work on our side so our costomer don't have to</li>
<li></li>
</ul>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.264 [debug] l:len=15

10:45:07.264 [debug] l:buf=56:<h1>Feb 26th - Bi-weekly engineering meeting</h1>
<ul>
<li>Teams are small businesses.
<ul>
<li>Everyone is equal</li>
<li>Everyone has ownership</li>
<li>How Picasso draws a bull <a href="http://www.artyfactory.com/art_appreciation/animals_in_art/pablo_picasso.htm" rel="noopener noreferrer">Animals in Art - Pablo Picasso</a>
<ul>
<li>You need to have the foundation</li>
</ul>
</li>
</ul>
</li>
<li>Everyone massively raise the bar as what we think is a great product
<ul>
<li>More Customer Research
<ul>
<li><strong>4 hours</strong> with customers per person
<ul>
<li>Not a demo</li>
<li>Understanding what they currently do</li>
<li>Usability testing (making sure they)</li>
<li>Bonus Points:
<ul>
<li>Screen share</li>
<li>Actual Product in their hand</li>
</ul>
</li>
<li>(we'll make tickets for them)
<ul>
<li>Memorialize in <code>[customer-reserach](customer-reserach)</code></li>
</ul>
</li>
</ul>
</li>
<li>Problem we're trying to solve?
<ul>
<li>A lot of new people.</li>
<li>A lot of new products</li>
<li>Avoid complacency (our product is good, no problems, no need to talk to customers)
<ul>
<li>Stay <strong>Humble</strong>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>Quality</h1>
<blockquote>
<p>Works correctly, scalable solution.<br>
~ JT</p>
</blockquote>
<ul>
<li>Make sure things are "done" and "good"</li>
<li>We do an unreasonable amount of work on our side so our costomer don't have to</li>
<li></li>
</ul>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.264 [debug] l:len=155

10:45:07.264 [debug] l:buf=6:<h1>Feb 26th - Bi-weekly engineering meeting</h1>
<ul>
<li>Teams are small businesses.
<ul>
<li>Everyone is equal</li>
<li>Everyone has ownership</li>
<li>How Picasso draws a bull <a href="http://www.artyfactory.com/art_appreciation/animals_in_art/pablo_picasso.htm" rel="noopener noreferrer">Animals in Art - Pablo Picasso</a>
<ul>
<li>You need to have the foundation</li>
</ul>
</li>
</ul>
</li>
<li>Everyone massively raise the bar as what we think is a great product
<ul>
<li>More Customer Research
<ul>
<li><strong>4 hours</strong> with customers per person
<ul>
<li>Not a demo</li>
<li>Understanding what they currently do</li>
<li>Usability testing (making sure they)</li>
<li>Bonus Points:
<ul>
<li>Screen share</li>
<li>Actual Product in their hand</li>
</ul>
</li>
<li>(we'll make tickets for them)
<ul>
<li>Memorialize in <code>[customer-reserach](customer-reserach)</code></li>
</ul>
</li>
</ul>
</li>
<li>Problem we're trying to solve?
<ul>
<li>A lot of new people.</li>
<li>A lot of new products</li>
<li>Avoid complacency (our product is good, no problems, no need to talk to customers)
<ul>
<li>Stay <strong>Humble</strong>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>Quality</h1>
<blockquote>
<p>Works correctly, scalable solution.<br>
~ JT</p>
</blockquote>
<ul>
<li>Make sure things are "done" and "good"</li>
<li>We do an unreasonable amount of work on our side so our costomer don't have to</li>
<li></li>
</ul>
<p><a href="http://localhost:5000/biweekly-meeting" rel="noopener noreferrer">biweekly-meeting</a></p>


10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf empty

10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf=187:<h1>OOP</h1>
<p>Stands for "Object Oriented Programming"</p>
<p>Related to <a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></p>


10:45:07.264 [debug] l:len=1

10:45:07.264 [debug] l:buf=87:<h1>OOP</h1>
<p>Stands for "Object Oriented Programming"</p>
<p>Related to <a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></p>


10:45:07.264 [debug] l:len=18

10:45:07.264 [debug] l:buf=7:<h1>OOP</h1>
<p>Stands for "Object Oriented Programming"</p>
<p>Related to <a href="http://localhost:5000/functional-programming" rel="noopener noreferrer">Functional Programming</a></p>


10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf empty

10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf=242:<h1>tools</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.264 [debug] l:len=2

10:45:07.264 [debug] l:buf=42:<h1>tools</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.264 [debug] l:len=24

10:45:07.264 [debug] l:buf=2:<h1>tools</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf empty

10:45:07.264 [debug] l:len=

10:45:07.264 [debug] l:buf=504:<h1>top priority</h1>
<p>This is the priority that you will sacrifice all other things for. You can't have multiple "top" priorities.</p>
<p>From the book: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
</ul>


10:45:07.264 [debug] l:len=5

10:45:07.264 [debug] l:buf=04:<h1>top priority</h1>
<p>This is the priority that you will sacrifice all other things for. You can't have multiple "top" priorities.</p>
<p>From the book: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
</ul>


10:45:07.264 [debug] l:len=50

10:45:07.264 [debug] l:buf=4:<h1>top priority</h1>
<p>This is the priority that you will sacrifice all other things for. You can't have multiple "top" priorities.</p>
<p>From the book: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
</ul>


10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf empty

10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf=229:<h1>Obsidian#gr</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.265 [debug] l:len=2

10:45:07.265 [debug] l:buf=29:<h1>Obsidian#gr</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.265 [debug] l:len=22

10:45:07.265 [debug] l:buf=9:<h1>Obsidian#gr</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf empty

10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf=743:<h1>FOMO</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.265 [debug] l:len=7

10:45:07.265 [debug] l:buf=43:<h1>FOMO</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.265 [debug] l:len=74

10:45:07.265 [debug] l:buf=3:<h1>FOMO</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf empty

10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf=1355:<h1>talk in context</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> most people just talk wherever they want, but this is a great way to loose lots of information.</p>
<p>In <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a> you talk "in context", meaning if you're talking about a todo, make a comment attached to that todo. If you're talking about a file you talk on that file. If you're talking about an announcement, you talk under it. Much of this is possible due to</p>
<p>Keywords: <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a>, <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.265 [debug] l:len=1

10:45:07.265 [debug] l:buf=355:<h1>talk in context</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> most people just talk wherever they want, but this is a great way to loose lots of information.</p>
<p>In <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a> you talk "in context", meaning if you're talking about a todo, make a comment attached to that todo. If you're talking about a file you talk on that file. If you're talking about an announcement, you talk under it. Much of this is possible due to</p>
<p>Keywords: <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a>, <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.265 [debug] l:len=13

10:45:07.265 [debug] l:buf=55:<h1>talk in context</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> most people just talk wherever they want, but this is a great way to loose lots of information.</p>
<p>In <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a> you talk "in context", meaning if you're talking about a todo, make a comment attached to that todo. If you're talking about a file you talk on that file. If you're talking about an announcement, you talk under it. Much of this is possible due to</p>
<p>Keywords: <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a>, <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.265 [debug] l:len=135

10:45:07.265 [debug] l:buf=5:<h1>talk in context</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> most people just talk wherever they want, but this is a great way to loose lots of information.</p>
<p>In <a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a> you talk "in context", meaning if you're talking about a todo, make a comment attached to that todo. If you're talking about a file you talk on that file. If you're talking about an announcement, you talk under it. Much of this is possible due to</p>
<p>Keywords: <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a>, <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf empty

10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf=72:<h1>BC4</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.265 [debug] l:len=7

10:45:07.265 [debug] l:buf=2:<h1>BC4</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf empty

10:45:07.265 [debug] l:len=

10:45:07.265 [debug] l:buf=265:<h1>Pasted image 20200922152512</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.266 [debug] l:len=2

10:45:07.266 [debug] l:buf=65:<h1>Pasted image 20200922152512</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.266 [debug] l:len=26

10:45:07.266 [debug] l:buf=5:<h1>Pasted image 20200922152512</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf empty

10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf=74:<h1>Saying No trades popularity for respect</h1>
<p>Essentialism 138p</p>


10:45:07.266 [debug] l:len=7

10:45:07.266 [debug] l:buf=4:<h1>Saying No trades popularity for respect</h1>
<p>Essentialism 138p</p>


10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf empty

10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf=383:<p>MetLife Adjuster</p>
<p>Paul Fullmer, CPCU
Metropolitan Property and Casualty Insurance Company
Senior Claim Adjuster</p>
<p>801-971-0105 TEXT appraiser</p>
<p>(800) 854-6011
Ext. 7602</p>
<p>Fax: (866) 947-0153
Email: <a href="mailto:pfullmer@metlife.com" rel="noopener noreferrer">pfullmer@metlife.com</a></p>
<hr>
<p>Need bank information</p>
<p>800-854-6011
EXT 7120</p>
<hr>


10:45:07.266 [debug] l:len=3

10:45:07.266 [debug] l:buf=83:<p>MetLife Adjuster</p>
<p>Paul Fullmer, CPCU
Metropolitan Property and Casualty Insurance Company
Senior Claim Adjuster</p>
<p>801-971-0105 TEXT appraiser</p>
<p>(800) 854-6011
Ext. 7602</p>
<p>Fax: (866) 947-0153
Email: <a href="mailto:pfullmer@metlife.com" rel="noopener noreferrer">pfullmer@metlife.com</a></p>
<hr>
<p>Need bank information</p>
<p>800-854-6011
EXT 7120</p>
<hr>


10:45:07.266 [debug] l:len=38

10:45:07.266 [debug] l:buf=3:<p>MetLife Adjuster</p>
<p>Paul Fullmer, CPCU
Metropolitan Property and Casualty Insurance Company
Senior Claim Adjuster</p>
<p>801-971-0105 TEXT appraiser</p>
<p>(800) 854-6011
Ext. 7602</p>
<p>Fax: (866) 947-0153
Email: <a href="mailto:pfullmer@metlife.com" rel="noopener noreferrer">pfullmer@metlife.com</a></p>
<hr>
<p>Need bank information</p>
<p>800-854-6011
EXT 7120</p>
<hr>


10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf empty

10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf=191:<p>Be men
arise from the dust, my sons, and be men, and be determined in one mind and in one heart, united in all things, that ye may not come down into captivity;</p>
<p>Tags:
manliness</p>


10:45:07.266 [debug] l:len=1

10:45:07.266 [debug] l:buf=91:<p>Be men
arise from the dust, my sons, and be men, and be determined in one mind and in one heart, united in all things, that ye may not come down into captivity;</p>
<p>Tags:
manliness</p>


10:45:07.266 [debug] l:len=19

10:45:07.266 [debug] l:buf=1:<p>Be men
arise from the dust, my sons, and be men, and be determined in one mind and in one heart, united in all things, that ye may not come down into captivity;</p>
<p>Tags:
manliness</p>


10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf empty

10:45:07.266 [debug] l:len=

10:45:07.266 [debug] l:buf=283:<h1>Andy's working notes -- pile up animation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.266 [debug] l:len=2

10:45:07.266 [debug] l:buf=83:<h1>Andy's working notes -- pile up animation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.266 [debug] l:len=28

10:45:07.266 [debug] l:buf=3:<h1>Andy's working notes -- pile up animation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
</ul>


10:45:07.267 [debug] l:len=

10:45:07.267 [debug] l:buf empty

10:45:07.267 [debug] l:len=

10:45:07.267 [debug] l:buf=88:<h1>Gage's History</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.267 [debug] l:len=8

10:45:07.267 [debug] l:buf=8:<h1>Gage's History</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.267 [debug] l:len=

10:45:07.267 [debug] l:buf empty

10:45:07.267 [debug] l:len=

10:45:07.267 [debug] l:buf=1681:<h1>Docker / Docker Swarm / Kubernetes</h1>
<p><a href="http://localhost:5000/nerdlunch" rel="noopener noreferrer">nerdlunch</a></p>
<h2>Docker</h2>
<h3>Docker containers</h3>
<ul>
<li>Are independent (basically a virtual machine)</li>
<li>Have environment varibles</li>
<li>one process running (as opposed to a virtual machine)</li>
<li>have a root volume</li>
<li>one entrypoint</li>
</ul>
<h3>Containers</h3>
<p>Layers of changes to a basic container.</p>
<p><strong>layers</strong> can be cached.</p>
<p><strong>every command</strong> == <strong>layer</strong></p>
<p>Order them so the most changed stuff is at the top</p>
<h3>Networks</h3>
<p><strong>bridge network</strong>: you have your own internal network that gets translated into a different address when it goes out.</p>
<p><strong>host network</strong>:  ???</p>
<p><strong>overlay network</strong>: Docker Swarm/Kubernetes make them think they are in the same network even if they are in other network.</p>
Docker Compose
<p><code>http://elasticsearch:9200</code>  &lt;- Looks like this</p>
<h3>Ports</h3>
<p>Docker (can) expose (map) ports. There's a <em>host port</em>. Way to make it look like a host network.</p>
<h3>Volumes</h3>
<p>How you get persistent data.</p>
<p><strong>named volumes</strong>: way to keep stuff around. (docker gives them a uuid if unnamed)</p>
<p>You can <strong>mount</strong> a volume from your host machine.</p>
<h2>Docker Swarm / Kubernetes</h2>
<p>multiple container working together with network, ins and lifecycle</p>
<ul>
<li>Entry Nodes (docker compose / kubernetes) -&gt; route to right place in cluster</li>
</ul>
<h2>Kubernetes</h2>
<p>Can mount <code>ebs</code> volumes</p>


10:45:07.267 [debug] l:len=1

10:45:07.267 [debug] l:buf=681:<h1>Docker / Docker Swarm / Kubernetes</h1>
<p><a href="http://localhost:5000/nerdlunch" rel="noopener noreferrer">nerdlunch</a></p>
<h2>Docker</h2>
<h3>Docker containers</h3>
<ul>
<li>Are independent (basically a virtual machine)</li>
<li>Have environment varibles</li>
<li>one process running (as opposed to a virtual machine)</li>
<li>have a root volume</li>
<li>one entrypoint</li>
</ul>
<h3>Containers</h3>
<p>Layers of changes to a basic container.</p>
<p><strong>layers</strong> can be cached.</p>
<p><strong>every command</strong> == <strong>layer</strong></p>
<p>Order them so the most changed stuff is at the top</p>
<h3>Networks</h3>
<p><strong>bridge network</strong>: you have your own internal network that gets translated into a different address when it goes out.</p>
<p><strong>host network</strong>:  ???</p>
<p><strong>overlay network</strong>: Docker Swarm/Kubernetes make them think they are in the same network even if they are in other network.</p>
Docker Compose
<p><code>http://elasticsearch:9200</code>  &lt;- Looks like this</p>
<h3>Ports</h3>
<p>Docker (can) expose (map) ports. There's a <em>host port</em>. Way to make it look like a host network.</p>
<h3>Volumes</h3>
<p>How you get persistent data.</p>
<p><strong>named volumes</strong>: way to keep stuff around. (docker gives them a uuid if unnamed)</p>
<p>You can <strong>mount</strong> a volume from your host machine.</p>
<h2>Docker Swarm / Kubernetes</h2>
<p>multiple container working together with network, ins and lifecycle</p>
<ul>
<li>Entry Nodes (docker compose / kubernetes) -&gt; route to right place in cluster</li>
</ul>
<h2>Kubernetes</h2>
<p>Can mount <code>ebs</code> volumes</p>


10:45:07.267 [debug] l:len=16

10:45:07.267 [debug] l:buf=81:<h1>Docker / Docker Swarm / Kubernetes</h1>
<p><a href="http://localhost:5000/nerdlunch" rel="noopener noreferrer">nerdlunch</a></p>
<h2>Docker</h2>
<h3>Docker containers</h3>
<ul>
<li>Are independent (basically a virtual machine)</li>
<li>Have environment varibles</li>
<li>one process running (as opposed to a virtual machine)</li>
<li>have a root volume</li>
<li>one entrypoint</li>
</ul>
<h3>Containers</h3>
<p>Layers of changes to a basic container.</p>
<p><strong>layers</strong> can be cached.</p>
<p><strong>every command</strong> == <strong>layer</strong></p>
<p>Order them so the most changed stuff is at the top</p>
<h3>Networks</h3>
<p><strong>bridge network</strong>: you have your own internal network that gets translated into a different address when it goes out.</p>
<p><strong>host network</strong>:  ???</p>
<p><strong>overlay network</strong>: Docker Swarm/Kubernetes make them think they are in the same network even if they are in other network.</p>
Docker Compose
<p><code>http://elasticsearch:9200</code>  &lt;- Looks like this</p>
<h3>Ports</h3>
<p>Docker (can) expose (map) ports. There's a <em>host port</em>. Way to make it look like a host network.</p>
<h3>Volumes</h3>
<p>How you get persistent data.</p>
<p><strong>named volumes</strong>: way to keep stuff around. (docker gives them a uuid if unnamed)</p>
<p>You can <strong>mount</strong> a volume from your host machine.</p>
<h2>Docker Swarm / Kubernetes</h2>
<p>multiple container working together with network, ins and lifecycle</p>
<ul>
<li>Entry Nodes (docker compose / kubernetes) -&gt; route to right place in cluster</li>
</ul>
<h2>Kubernetes</h2>
<p>Can mount <code>ebs</code> volumes</p>


10:45:07.267 [debug] l:len=168

10:45:07.267 [debug] l:buf=1:<h1>Docker / Docker Swarm / Kubernetes</h1>
<p><a href="http://localhost:5000/nerdlunch" rel="noopener noreferrer">nerdlunch</a></p>
<h2>Docker</h2>
<h3>Docker containers</h3>
<ul>
<li>Are independent (basically a virtual machine)</li>
<li>Have environment varibles</li>
<li>one process running (as opposed to a virtual machine)</li>
<li>have a root volume</li>
<li>one entrypoint</li>
</ul>
<h3>Containers</h3>
<p>Layers of changes to a basic container.</p>
<p><strong>layers</strong> can be cached.</p>
<p><strong>every command</strong> == <strong>layer</strong></p>
<p>Order them so the most changed stuff is at the top</p>
<h3>Networks</h3>
<p><strong>bridge network</strong>: you have your own internal network that gets translated into a different address when it goes out.</p>
<p><strong>host network</strong>:  ???</p>
<p><strong>overlay network</strong>: Docker Swarm/Kubernetes make them think they are in the same network even if they are in other network.</p>
Docker Compose
<p><code>http://elasticsearch:9200</code>  &lt;- Looks like this</p>
<h3>Ports</h3>
<p>Docker (can) expose (map) ports. There's a <em>host port</em>. Way to make it look like a host network.</p>
<h3>Volumes</h3>
<p>How you get persistent data.</p>
<p><strong>named volumes</strong>: way to keep stuff around. (docker gives them a uuid if unnamed)</p>
<p>You can <strong>mount</strong> a volume from your host machine.</p>
<h2>Docker Swarm / Kubernetes</h2>
<p>multiple container working together with network, ins and lifecycle</p>
<ul>
<li>Entry Nodes (docker compose / kubernetes) -&gt; route to right place in cluster</li>
</ul>
<h2>Kubernetes</h2>
<p>Can mount <code>ebs</code> volumes</p>


10:45:07.267 [debug] l:len=

10:45:07.267 [debug] l:buf empty

10:45:07.268 [debug] l:len=

10:45:07.268 [debug] l:buf=7492:<h1>A Tour of Alt-JS languages</h1>
<h1>References:</h1>
<ul>
<li><a href="https://softwareengineeringdaily.com/2015/07/30/transpiler-tradeoffs-typescript-coffeescript-es6/" rel="noopener noreferrer">Transpiler Tradeoffs: TypeScript, CoffeeScript, ES6 | Software Engineering Daily</a></li>
</ul>
<h3>What makes a programming language <em>good</em> or <em>bad</em>?</h3>
<p>There's many measures of what make a programing language good or bad. I'm going to attempt to take an approach that's very realistic for a business and it's customers. What really matters to them.</p>
<ul>
<li>Constant Iteration and Improvement
<ul>
<li>If a business can't improve and grow quickly to meet the market's demand, if it can't fix it's mistakes in the past quickly enough for the competition to overtake them, they have a chance to fail. They must stay agile</li>
<li>Software:
<ul>
<li>Must keep codebase changeable within a reasonable amount of time</li>
<li>Constant Rewrites are expensive, they must be kept to a minimum</li>
<li>Ideally very little issues will come up, and when they do debugging and fixing issues should be cheap as possible</li>
</ul>
</li>
</ul>
</li>
<li>Customer Happiness
<ul>
<li>Sure, the product might work, but if it's slow, throws away someones data, doesn't work over a less than ideal connection. If it looks ugly and outdated next to it's competitors, it's popularity is likely to dip.</li>
<li>Reliability is often</li>
</ul>
</li>
<li>People must power the business
<ul>
<li>There must be people who a business can hire <strong>that will be able to learn the language quickly and write good code, and modify the code of their coworkers safely.</strong></li>
<li>There must be <strong>libraries to prevent people from spending time reinventing the wheel.</strong></li>
<li>The <strong>language must be enjoyable</strong> to use to keep up moral and stay for a long time.</li>
</ul>
</li>
</ul>
<h1>About popularity...</h1>
<p><img src="http://localhost:5000/A%20Tour%20of%20Alt-JS%20languages/4272812D-548A-4914-8508-D2C3EB7EB6F3.png" alt=""></p>
<h1>Why Alt-JS? What's wrong with JS?</h1>
<blockquote>
<p>1995: Created as the result of a 10 day prototype with odd corporate mandates, such as “make it look like java” and fateful requirements to mimic poorly designed Java APIs4.</p>
<p>1996: Quickly adopted as the standard for client-side browser scripting.</p>
<p>1999: AJAX! Microsoft releases a non-standard javascript feature that would fundamentally change what browsers are capable of. Its usefulness can’t be denied and other browser vendors quickly adopt it.</p>
<p>2000-2008: Politics and disagreement stagnate the language. ES41, a perhaps overly-ambitious attempt to modernize javascript is abandoned. Javascript’s dynamic and interpreted nature are a detriment to performance, and a technical ceiling is hit.</p>
<p>2008: The release of Chrome and the V8 virtual machine, along with Mozilla’s TraceMonkey JIT, breathes new life into Javascript and client-side web development, improving the performance of javascript code by several factors.</p>
<p>2009: NodeJS is released, an isolated version of the V8 virtual machine with a standard library for running javascript outside of the browser. An entire ecosystem is born.</p>
<p>2010-Present: An explosion in javascript development. Communities create and evolve solutions to javascript’s many shortcomings. Javascript performance is such that other languages are now able to start transpiling to javascript. Nearly all javascript written over the past 23 years still works in all modern browsers.</p>
</blockquote>
<p>reference: <a href="https://discourse.elm-lang.org/t/how-we-talk-about-other-languages/972/10?u=justgage" rel="noopener noreferrer">How we talk about other languages - Request Feedback - [[Other/Old Notes/Simplenote/Elm]] Discourse</a></p>
<h2>Let's be clear, JavaScript is not a "Garbage Fire" 🗑🔥</h2>
<p>Many people, including myself in the past have ragged on JS for being a terrible language. I think this is absolutely wrong. JavaScript is the most popular programming language in world. It's become wildly popular among everyone, in many cases much of the hate has gone away. JS has improved to  a huge degree.</p>
<blockquote>
<p>JavaScript runs on more computers today than any other language</p>
</blockquote>
<h3>Let's come down to earth a little...</h3>
<ol>
<li>It's literally the only language <em>allowed</em> to run the the browser, so maybe popularity is somewhat compulsory</li>
<li>It's often hard to read other people's code that write in a different style or programing paradigm than you</li>
<li>Rewrites seem very common (raise of hands✋)</li>
<li>While it runs everywhere it tends to not be implemented ubiquitously. There's often missing features, or incompatibility.</li>
</ol>
<h1>Babel</h1>
<h3>History</h3>
<p>maintained by Henry Zhu now, who works full time on it.</p>
<h3>Good</h3>
<ul>
<li>Makes your code cross browser compatible</li>
<li>Extensible flexible compiler that lets you add new syntax.
<ul>
<li>You can use Cool new features that are <strong>going to be</strong>  in JavaScript!
<ul>
<li>Async/Await</li>
<li>Spread syntax</li>
<li>Pattern matching</li>
<li>Etc...</li>
</ul>
</li>
<li>You can use features that will <strong>probably be</strong> in JavaScript
<ul>
<li>Decorators</li>
<li>etc...</li>
</ul>
</li>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>You can Use <strong>JSX</strong>!</li>
</ul>
</li>
<li>It's basically become synonymous with JavaScript</li>
</ul>
</li>
</ul>
<h3>Bad</h3>
<ul>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>if the reason you used Babel was so that someday you'll be able to just stop compiling it, there's a decent chance you'll never get there, and you won't get there soon.</li>
<li>It's far too</li>
</ul>
</li>
<li>You have to have source maps to tell what the original code
<ul>
<li>Many of the less standard babel plugins break this.</li>
</ul>
</li>
<li>It's much slower than not using it.</li>
<li>You get <strong>very little</strong> safety, for the price you pay in compilation time.</li>
<li>Autocomplete is non-existant</li>
<li>All the bad parts of JavaScript are still there</li>
<li>Probably need to run ESLint on top of it. And webpack.</li>
</ul>
<h3>Ugly</h3>
<blockquote>
<p>It's 2020, Babel is the new CoffeeScript, you're left with a large codebase of non-standard JavaScript code that takes forever to compile. It's really hard to refactor your code now and you rewrite in a new language.</p>
</blockquote>
<h1>Typescript</h1>
<h3>History</h3>
<h3>Good</h3>
<h3>Bad</h3>
<h3>Ugly</h3>
<h1>Flow</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h1>Purescript</h1>
<h1>ClojureScript</h1>
<h1>ReasonML</h1>
<blockquote>
<p>The BuckleScript author estimates that the build system should scale to a few hundred thousands files in the current condition.</p>
</blockquote>
<h1><code>${YourBackendLanguage}Script</code></h1>
<p>Talks that do a similar thing: (mostly by Jared)</p>
<ul>
<li><a href="https://jaredforsyth.com/type-systems-js-dev/#/68" rel="noopener noreferrer">Type systems will make you a better JavaScript programmer</a></li>
<li><a href="https://jaredforsyth.com/type-safe-react/#/19?presenter" rel="noopener noreferrer">Reason</a>
<a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></li>
</ul>


10:45:07.268 [debug] l:len=7

10:45:07.268 [debug] l:buf=492:<h1>A Tour of Alt-JS languages</h1>
<h1>References:</h1>
<ul>
<li><a href="https://softwareengineeringdaily.com/2015/07/30/transpiler-tradeoffs-typescript-coffeescript-es6/" rel="noopener noreferrer">Transpiler Tradeoffs: TypeScript, CoffeeScript, ES6 | Software Engineering Daily</a></li>
</ul>
<h3>What makes a programming language <em>good</em> or <em>bad</em>?</h3>
<p>There's many measures of what make a programing language good or bad. I'm going to attempt to take an approach that's very realistic for a business and it's customers. What really matters to them.</p>
<ul>
<li>Constant Iteration and Improvement
<ul>
<li>If a business can't improve and grow quickly to meet the market's demand, if it can't fix it's mistakes in the past quickly enough for the competition to overtake them, they have a chance to fail. They must stay agile</li>
<li>Software:
<ul>
<li>Must keep codebase changeable within a reasonable amount of time</li>
<li>Constant Rewrites are expensive, they must be kept to a minimum</li>
<li>Ideally very little issues will come up, and when they do debugging and fixing issues should be cheap as possible</li>
</ul>
</li>
</ul>
</li>
<li>Customer Happiness
<ul>
<li>Sure, the product might work, but if it's slow, throws away someones data, doesn't work over a less than ideal connection. If it looks ugly and outdated next to it's competitors, it's popularity is likely to dip.</li>
<li>Reliability is often</li>
</ul>
</li>
<li>People must power the business
<ul>
<li>There must be people who a business can hire <strong>that will be able to learn the language quickly and write good code, and modify the code of their coworkers safely.</strong></li>
<li>There must be <strong>libraries to prevent people from spending time reinventing the wheel.</strong></li>
<li>The <strong>language must be enjoyable</strong> to use to keep up moral and stay for a long time.</li>
</ul>
</li>
</ul>
<h1>About popularity...</h1>
<p><img src="http://localhost:5000/A%20Tour%20of%20Alt-JS%20languages/4272812D-548A-4914-8508-D2C3EB7EB6F3.png" alt=""></p>
<h1>Why Alt-JS? What's wrong with JS?</h1>
<blockquote>
<p>1995: Created as the result of a 10 day prototype with odd corporate mandates, such as “make it look like java” and fateful requirements to mimic poorly designed Java APIs4.</p>
<p>1996: Quickly adopted as the standard for client-side browser scripting.</p>
<p>1999: AJAX! Microsoft releases a non-standard javascript feature that would fundamentally change what browsers are capable of. Its usefulness can’t be denied and other browser vendors quickly adopt it.</p>
<p>2000-2008: Politics and disagreement stagnate the language. ES41, a perhaps overly-ambitious attempt to modernize javascript is abandoned. Javascript’s dynamic and interpreted nature are a detriment to performance, and a technical ceiling is hit.</p>
<p>2008: The release of Chrome and the V8 virtual machine, along with Mozilla’s TraceMonkey JIT, breathes new life into Javascript and client-side web development, improving the performance of javascript code by several factors.</p>
<p>2009: NodeJS is released, an isolated version of the V8 virtual machine with a standard library for running javascript outside of the browser. An entire ecosystem is born.</p>
<p>2010-Present: An explosion in javascript development. Communities create and evolve solutions to javascript’s many shortcomings. Javascript performance is such that other languages are now able to start transpiling to javascript. Nearly all javascript written over the past 23 years still works in all modern browsers.</p>
</blockquote>
<p>reference: <a href="https://discourse.elm-lang.org/t/how-we-talk-about-other-languages/972/10?u=justgage" rel="noopener noreferrer">How we talk about other languages - Request Feedback - [[Other/Old Notes/Simplenote/Elm]] Discourse</a></p>
<h2>Let's be clear, JavaScript is not a "Garbage Fire" 🗑🔥</h2>
<p>Many people, including myself in the past have ragged on JS for being a terrible language. I think this is absolutely wrong. JavaScript is the most popular programming language in world. It's become wildly popular among everyone, in many cases much of the hate has gone away. JS has improved to  a huge degree.</p>
<blockquote>
<p>JavaScript runs on more computers today than any other language</p>
</blockquote>
<h3>Let's come down to earth a little...</h3>
<ol>
<li>It's literally the only language <em>allowed</em> to run the the browser, so maybe popularity is somewhat compulsory</li>
<li>It's often hard to read other people's code that write in a different style or programing paradigm than you</li>
<li>Rewrites seem very common (raise of hands✋)</li>
<li>While it runs everywhere it tends to not be implemented ubiquitously. There's often missing features, or incompatibility.</li>
</ol>
<h1>Babel</h1>
<h3>History</h3>
<p>maintained by Henry Zhu now, who works full time on it.</p>
<h3>Good</h3>
<ul>
<li>Makes your code cross browser compatible</li>
<li>Extensible flexible compiler that lets you add new syntax.
<ul>
<li>You can use Cool new features that are <strong>going to be</strong>  in JavaScript!
<ul>
<li>Async/Await</li>
<li>Spread syntax</li>
<li>Pattern matching</li>
<li>Etc...</li>
</ul>
</li>
<li>You can use features that will <strong>probably be</strong> in JavaScript
<ul>
<li>Decorators</li>
<li>etc...</li>
</ul>
</li>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>You can Use <strong>JSX</strong>!</li>
</ul>
</li>
<li>It's basically become synonymous with JavaScript</li>
</ul>
</li>
</ul>
<h3>Bad</h3>
<ul>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>if the reason you used Babel was so that someday you'll be able to just stop compiling it, there's a decent chance you'll never get there, and you won't get there soon.</li>
<li>It's far too</li>
</ul>
</li>
<li>You have to have source maps to tell what the original code
<ul>
<li>Many of the less standard babel plugins break this.</li>
</ul>
</li>
<li>It's much slower than not using it.</li>
<li>You get <strong>very little</strong> safety, for the price you pay in compilation time.</li>
<li>Autocomplete is non-existant</li>
<li>All the bad parts of JavaScript are still there</li>
<li>Probably need to run ESLint on top of it. And webpack.</li>
</ul>
<h3>Ugly</h3>
<blockquote>
<p>It's 2020, Babel is the new CoffeeScript, you're left with a large codebase of non-standard JavaScript code that takes forever to compile. It's really hard to refactor your code now and you rewrite in a new language.</p>
</blockquote>
<h1>Typescript</h1>
<h3>History</h3>
<h3>Good</h3>
<h3>Bad</h3>
<h3>Ugly</h3>
<h1>Flow</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h1>Purescript</h1>
<h1>ClojureScript</h1>
<h1>ReasonML</h1>
<blockquote>
<p>The BuckleScript author estimates that the build system should scale to a few hundred thousands files in the current condition.</p>
</blockquote>
<h1><code>${YourBackendLanguage}Script</code></h1>
<p>Talks that do a similar thing: (mostly by Jared)</p>
<ul>
<li><a href="https://jaredforsyth.com/type-systems-js-dev/#/68" rel="noopener noreferrer">Type systems will make you a better JavaScript programmer</a></li>
<li><a href="https://jaredforsyth.com/type-safe-react/#/19?presenter" rel="noopener noreferrer">Reason</a>
<a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></li>
</ul>


10:45:07.268 [debug] l:len=74

10:45:07.268 [debug] l:buf=92:<h1>A Tour of Alt-JS languages</h1>
<h1>References:</h1>
<ul>
<li><a href="https://softwareengineeringdaily.com/2015/07/30/transpiler-tradeoffs-typescript-coffeescript-es6/" rel="noopener noreferrer">Transpiler Tradeoffs: TypeScript, CoffeeScript, ES6 | Software Engineering Daily</a></li>
</ul>
<h3>What makes a programming language <em>good</em> or <em>bad</em>?</h3>
<p>There's many measures of what make a programing language good or bad. I'm going to attempt to take an approach that's very realistic for a business and it's customers. What really matters to them.</p>
<ul>
<li>Constant Iteration and Improvement
<ul>
<li>If a business can't improve and grow quickly to meet the market's demand, if it can't fix it's mistakes in the past quickly enough for the competition to overtake them, they have a chance to fail. They must stay agile</li>
<li>Software:
<ul>
<li>Must keep codebase changeable within a reasonable amount of time</li>
<li>Constant Rewrites are expensive, they must be kept to a minimum</li>
<li>Ideally very little issues will come up, and when they do debugging and fixing issues should be cheap as possible</li>
</ul>
</li>
</ul>
</li>
<li>Customer Happiness
<ul>
<li>Sure, the product might work, but if it's slow, throws away someones data, doesn't work over a less than ideal connection. If it looks ugly and outdated next to it's competitors, it's popularity is likely to dip.</li>
<li>Reliability is often</li>
</ul>
</li>
<li>People must power the business
<ul>
<li>There must be people who a business can hire <strong>that will be able to learn the language quickly and write good code, and modify the code of their coworkers safely.</strong></li>
<li>There must be <strong>libraries to prevent people from spending time reinventing the wheel.</strong></li>
<li>The <strong>language must be enjoyable</strong> to use to keep up moral and stay for a long time.</li>
</ul>
</li>
</ul>
<h1>About popularity...</h1>
<p><img src="http://localhost:5000/A%20Tour%20of%20Alt-JS%20languages/4272812D-548A-4914-8508-D2C3EB7EB6F3.png" alt=""></p>
<h1>Why Alt-JS? What's wrong with JS?</h1>
<blockquote>
<p>1995: Created as the result of a 10 day prototype with odd corporate mandates, such as “make it look like java” and fateful requirements to mimic poorly designed Java APIs4.</p>
<p>1996: Quickly adopted as the standard for client-side browser scripting.</p>
<p>1999: AJAX! Microsoft releases a non-standard javascript feature that would fundamentally change what browsers are capable of. Its usefulness can’t be denied and other browser vendors quickly adopt it.</p>
<p>2000-2008: Politics and disagreement stagnate the language. ES41, a perhaps overly-ambitious attempt to modernize javascript is abandoned. Javascript’s dynamic and interpreted nature are a detriment to performance, and a technical ceiling is hit.</p>
<p>2008: The release of Chrome and the V8 virtual machine, along with Mozilla’s TraceMonkey JIT, breathes new life into Javascript and client-side web development, improving the performance of javascript code by several factors.</p>
<p>2009: NodeJS is released, an isolated version of the V8 virtual machine with a standard library for running javascript outside of the browser. An entire ecosystem is born.</p>
<p>2010-Present: An explosion in javascript development. Communities create and evolve solutions to javascript’s many shortcomings. Javascript performance is such that other languages are now able to start transpiling to javascript. Nearly all javascript written over the past 23 years still works in all modern browsers.</p>
</blockquote>
<p>reference: <a href="https://discourse.elm-lang.org/t/how-we-talk-about-other-languages/972/10?u=justgage" rel="noopener noreferrer">How we talk about other languages - Request Feedback - [[Other/Old Notes/Simplenote/Elm]] Discourse</a></p>
<h2>Let's be clear, JavaScript is not a "Garbage Fire" 🗑🔥</h2>
<p>Many people, including myself in the past have ragged on JS for being a terrible language. I think this is absolutely wrong. JavaScript is the most popular programming language in world. It's become wildly popular among everyone, in many cases much of the hate has gone away. JS has improved to  a huge degree.</p>
<blockquote>
<p>JavaScript runs on more computers today than any other language</p>
</blockquote>
<h3>Let's come down to earth a little...</h3>
<ol>
<li>It's literally the only language <em>allowed</em> to run the the browser, so maybe popularity is somewhat compulsory</li>
<li>It's often hard to read other people's code that write in a different style or programing paradigm than you</li>
<li>Rewrites seem very common (raise of hands✋)</li>
<li>While it runs everywhere it tends to not be implemented ubiquitously. There's often missing features, or incompatibility.</li>
</ol>
<h1>Babel</h1>
<h3>History</h3>
<p>maintained by Henry Zhu now, who works full time on it.</p>
<h3>Good</h3>
<ul>
<li>Makes your code cross browser compatible</li>
<li>Extensible flexible compiler that lets you add new syntax.
<ul>
<li>You can use Cool new features that are <strong>going to be</strong>  in JavaScript!
<ul>
<li>Async/Await</li>
<li>Spread syntax</li>
<li>Pattern matching</li>
<li>Etc...</li>
</ul>
</li>
<li>You can use features that will <strong>probably be</strong> in JavaScript
<ul>
<li>Decorators</li>
<li>etc...</li>
</ul>
</li>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>You can Use <strong>JSX</strong>!</li>
</ul>
</li>
<li>It's basically become synonymous with JavaScript</li>
</ul>
</li>
</ul>
<h3>Bad</h3>
<ul>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>if the reason you used Babel was so that someday you'll be able to just stop compiling it, there's a decent chance you'll never get there, and you won't get there soon.</li>
<li>It's far too</li>
</ul>
</li>
<li>You have to have source maps to tell what the original code
<ul>
<li>Many of the less standard babel plugins break this.</li>
</ul>
</li>
<li>It's much slower than not using it.</li>
<li>You get <strong>very little</strong> safety, for the price you pay in compilation time.</li>
<li>Autocomplete is non-existant</li>
<li>All the bad parts of JavaScript are still there</li>
<li>Probably need to run ESLint on top of it. And webpack.</li>
</ul>
<h3>Ugly</h3>
<blockquote>
<p>It's 2020, Babel is the new CoffeeScript, you're left with a large codebase of non-standard JavaScript code that takes forever to compile. It's really hard to refactor your code now and you rewrite in a new language.</p>
</blockquote>
<h1>Typescript</h1>
<h3>History</h3>
<h3>Good</h3>
<h3>Bad</h3>
<h3>Ugly</h3>
<h1>Flow</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h1>Purescript</h1>
<h1>ClojureScript</h1>
<h1>ReasonML</h1>
<blockquote>
<p>The BuckleScript author estimates that the build system should scale to a few hundred thousands files in the current condition.</p>
</blockquote>
<h1><code>${YourBackendLanguage}Script</code></h1>
<p>Talks that do a similar thing: (mostly by Jared)</p>
<ul>
<li><a href="https://jaredforsyth.com/type-systems-js-dev/#/68" rel="noopener noreferrer">Type systems will make you a better JavaScript programmer</a></li>
<li><a href="https://jaredforsyth.com/type-safe-react/#/19?presenter" rel="noopener noreferrer">Reason</a>
<a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></li>
</ul>


10:45:07.268 [debug] l:len=749

10:45:07.268 [debug] l:buf=2:<h1>A Tour of Alt-JS languages</h1>
<h1>References:</h1>
<ul>
<li><a href="https://softwareengineeringdaily.com/2015/07/30/transpiler-tradeoffs-typescript-coffeescript-es6/" rel="noopener noreferrer">Transpiler Tradeoffs: TypeScript, CoffeeScript, ES6 | Software Engineering Daily</a></li>
</ul>
<h3>What makes a programming language <em>good</em> or <em>bad</em>?</h3>
<p>There's many measures of what make a programing language good or bad. I'm going to attempt to take an approach that's very realistic for a business and it's customers. What really matters to them.</p>
<ul>
<li>Constant Iteration and Improvement
<ul>
<li>If a business can't improve and grow quickly to meet the market's demand, if it can't fix it's mistakes in the past quickly enough for the competition to overtake them, they have a chance to fail. They must stay agile</li>
<li>Software:
<ul>
<li>Must keep codebase changeable within a reasonable amount of time</li>
<li>Constant Rewrites are expensive, they must be kept to a minimum</li>
<li>Ideally very little issues will come up, and when they do debugging and fixing issues should be cheap as possible</li>
</ul>
</li>
</ul>
</li>
<li>Customer Happiness
<ul>
<li>Sure, the product might work, but if it's slow, throws away someones data, doesn't work over a less than ideal connection. If it looks ugly and outdated next to it's competitors, it's popularity is likely to dip.</li>
<li>Reliability is often</li>
</ul>
</li>
<li>People must power the business
<ul>
<li>There must be people who a business can hire <strong>that will be able to learn the language quickly and write good code, and modify the code of their coworkers safely.</strong></li>
<li>There must be <strong>libraries to prevent people from spending time reinventing the wheel.</strong></li>
<li>The <strong>language must be enjoyable</strong> to use to keep up moral and stay for a long time.</li>
</ul>
</li>
</ul>
<h1>About popularity...</h1>
<p><img src="http://localhost:5000/A%20Tour%20of%20Alt-JS%20languages/4272812D-548A-4914-8508-D2C3EB7EB6F3.png" alt=""></p>
<h1>Why Alt-JS? What's wrong with JS?</h1>
<blockquote>
<p>1995: Created as the result of a 10 day prototype with odd corporate mandates, such as “make it look like java” and fateful requirements to mimic poorly designed Java APIs4.</p>
<p>1996: Quickly adopted as the standard for client-side browser scripting.</p>
<p>1999: AJAX! Microsoft releases a non-standard javascript feature that would fundamentally change what browsers are capable of. Its usefulness can’t be denied and other browser vendors quickly adopt it.</p>
<p>2000-2008: Politics and disagreement stagnate the language. ES41, a perhaps overly-ambitious attempt to modernize javascript is abandoned. Javascript’s dynamic and interpreted nature are a detriment to performance, and a technical ceiling is hit.</p>
<p>2008: The release of Chrome and the V8 virtual machine, along with Mozilla’s TraceMonkey JIT, breathes new life into Javascript and client-side web development, improving the performance of javascript code by several factors.</p>
<p>2009: NodeJS is released, an isolated version of the V8 virtual machine with a standard library for running javascript outside of the browser. An entire ecosystem is born.</p>
<p>2010-Present: An explosion in javascript development. Communities create and evolve solutions to javascript’s many shortcomings. Javascript performance is such that other languages are now able to start transpiling to javascript. Nearly all javascript written over the past 23 years still works in all modern browsers.</p>
</blockquote>
<p>reference: <a href="https://discourse.elm-lang.org/t/how-we-talk-about-other-languages/972/10?u=justgage" rel="noopener noreferrer">How we talk about other languages - Request Feedback - [[Other/Old Notes/Simplenote/Elm]] Discourse</a></p>
<h2>Let's be clear, JavaScript is not a "Garbage Fire" 🗑🔥</h2>
<p>Many people, including myself in the past have ragged on JS for being a terrible language. I think this is absolutely wrong. JavaScript is the most popular programming language in world. It's become wildly popular among everyone, in many cases much of the hate has gone away. JS has improved to  a huge degree.</p>
<blockquote>
<p>JavaScript runs on more computers today than any other language</p>
</blockquote>
<h3>Let's come down to earth a little...</h3>
<ol>
<li>It's literally the only language <em>allowed</em> to run the the browser, so maybe popularity is somewhat compulsory</li>
<li>It's often hard to read other people's code that write in a different style or programing paradigm than you</li>
<li>Rewrites seem very common (raise of hands✋)</li>
<li>While it runs everywhere it tends to not be implemented ubiquitously. There's often missing features, or incompatibility.</li>
</ol>
<h1>Babel</h1>
<h3>History</h3>
<p>maintained by Henry Zhu now, who works full time on it.</p>
<h3>Good</h3>
<ul>
<li>Makes your code cross browser compatible</li>
<li>Extensible flexible compiler that lets you add new syntax.
<ul>
<li>You can use Cool new features that are <strong>going to be</strong>  in JavaScript!
<ul>
<li>Async/Await</li>
<li>Spread syntax</li>
<li>Pattern matching</li>
<li>Etc...</li>
</ul>
</li>
<li>You can use features that will <strong>probably be</strong> in JavaScript
<ul>
<li>Decorators</li>
<li>etc...</li>
</ul>
</li>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>You can Use <strong>JSX</strong>!</li>
</ul>
</li>
<li>It's basically become synonymous with JavaScript</li>
</ul>
</li>
</ul>
<h3>Bad</h3>
<ul>
<li>You can use Cool new features that <strong>will never be</strong> in JavaScript!
<ul>
<li>if the reason you used Babel was so that someday you'll be able to just stop compiling it, there's a decent chance you'll never get there, and you won't get there soon.</li>
<li>It's far too</li>
</ul>
</li>
<li>You have to have source maps to tell what the original code
<ul>
<li>Many of the less standard babel plugins break this.</li>
</ul>
</li>
<li>It's much slower than not using it.</li>
<li>You get <strong>very little</strong> safety, for the price you pay in compilation time.</li>
<li>Autocomplete is non-existant</li>
<li>All the bad parts of JavaScript are still there</li>
<li>Probably need to run ESLint on top of it. And webpack.</li>
</ul>
<h3>Ugly</h3>
<blockquote>
<p>It's 2020, Babel is the new CoffeeScript, you're left with a large codebase of non-standard JavaScript code that takes forever to compile. It's really hard to refactor your code now and you rewrite in a new language.</p>
</blockquote>
<h1>Typescript</h1>
<h3>History</h3>
<h3>Good</h3>
<h3>Bad</h3>
<h3>Ugly</h3>
<h1>Flow</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h1>Purescript</h1>
<h1>ClojureScript</h1>
<h1>ReasonML</h1>
<blockquote>
<p>The BuckleScript author estimates that the build system should scale to a few hundred thousands files in the current condition.</p>
</blockquote>
<h1><code>${YourBackendLanguage}Script</code></h1>
<p>Talks that do a similar thing: (mostly by Jared)</p>
<ul>
<li><a href="https://jaredforsyth.com/type-systems-js-dev/#/68" rel="noopener noreferrer">Type systems will make you a better JavaScript programmer</a></li>
<li><a href="https://jaredforsyth.com/type-safe-react/#/19?presenter" rel="noopener noreferrer">Reason</a>
<a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></li>
</ul>


10:45:07.268 [debug] l:len=

10:45:07.268 [debug] l:buf empty

10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf=79:<h1>happy</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.269 [debug] l:len=7

10:45:07.269 [debug] l:buf=9:<h1>happy</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf empty

10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf=869:<h1>Best strategy books stack ranked</h1>
<hr>
<h2><a href="http://localhost:5000/bookstackrankonstrategy.png" rel="noopener noreferrer">BookStackRankOnStrategy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>Understanding - Michael Porter</li>
<li>7 Powers</li>
<li>Good Strategy Bad Strategy</li>
<li>Competitive Strategy</li>
<li>Strategy</li>
<li>Playing To Win</li>
<li>Contemporary Strategy Analysis</li>
<li>Obviously Awesome</li>
<li>Blue Ocean</li>
<li>Differentiate or Die</li>
<li>25 Strategy Tools you need to know</li>
<li>Strategy Freedman</li>
</ol>
<p><a href="https://mobile.twitter.com/shreyas/status/1247377548083748864" rel="noopener noreferrer">https://mobile.twitter.com/shreyas/status/1247377548083748864</a></p>
<p><a href="http://localhost:5000/reading-list" rel="noopener noreferrer">Reading list</a></p>


10:45:07.269 [debug] l:len=8

10:45:07.269 [debug] l:buf=69:<h1>Best strategy books stack ranked</h1>
<hr>
<h2><a href="http://localhost:5000/bookstackrankonstrategy.png" rel="noopener noreferrer">BookStackRankOnStrategy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>Understanding - Michael Porter</li>
<li>7 Powers</li>
<li>Good Strategy Bad Strategy</li>
<li>Competitive Strategy</li>
<li>Strategy</li>
<li>Playing To Win</li>
<li>Contemporary Strategy Analysis</li>
<li>Obviously Awesome</li>
<li>Blue Ocean</li>
<li>Differentiate or Die</li>
<li>25 Strategy Tools you need to know</li>
<li>Strategy Freedman</li>
</ol>
<p><a href="https://mobile.twitter.com/shreyas/status/1247377548083748864" rel="noopener noreferrer">https://mobile.twitter.com/shreyas/status/1247377548083748864</a></p>
<p><a href="http://localhost:5000/reading-list" rel="noopener noreferrer">Reading list</a></p>


10:45:07.269 [debug] l:len=86

10:45:07.269 [debug] l:buf=9:<h1>Best strategy books stack ranked</h1>
<hr>
<h2><a href="http://localhost:5000/bookstackrankonstrategy.png" rel="noopener noreferrer">BookStackRankOnStrategy</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<ol>
<li>Understanding - Michael Porter</li>
<li>7 Powers</li>
<li>Good Strategy Bad Strategy</li>
<li>Competitive Strategy</li>
<li>Strategy</li>
<li>Playing To Win</li>
<li>Contemporary Strategy Analysis</li>
<li>Obviously Awesome</li>
<li>Blue Ocean</li>
<li>Differentiate or Die</li>
<li>25 Strategy Tools you need to know</li>
<li>Strategy Freedman</li>
</ol>
<p><a href="https://mobile.twitter.com/shreyas/status/1247377548083748864" rel="noopener noreferrer">https://mobile.twitter.com/shreyas/status/1247377548083748864</a></p>
<p><a href="http://localhost:5000/reading-list" rel="noopener noreferrer">Reading list</a></p>


10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf empty

10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf=76:<h1>calling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.269 [debug] l:len=7

10:45:07.269 [debug] l:buf=6:<h1>calling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf empty

10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf=985:<h1>addiction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.269 [debug] l:len=9

10:45:07.269 [debug] l:buf=85:<h1>addiction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.269 [debug] l:len=98

10:45:07.269 [debug] l:buf=5:<h1>addiction</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.269 [debug] l:len=

10:45:07.269 [debug] l:buf empty

10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf=533:<h1>black hole</h1>
<blockquote>
<p>A black hole is a region of spacetime where gravity is so strong that nothing—no particles or even electromagnetic radiation such as light—can escape from it.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Black_hole" rel="noopener noreferrer">Wikipedia</a></li>
</ul>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.270 [debug] l:len=5

10:45:07.270 [debug] l:buf=33:<h1>black hole</h1>
<blockquote>
<p>A black hole is a region of spacetime where gravity is so strong that nothing—no particles or even electromagnetic radiation such as light—can escape from it.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Black_hole" rel="noopener noreferrer">Wikipedia</a></li>
</ul>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.270 [debug] l:len=53

10:45:07.270 [debug] l:buf=3:<h1>black hole</h1>
<blockquote>
<p>A black hole is a region of spacetime where gravity is so strong that nothing—no particles or even electromagnetic radiation such as light—can escape from it.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Black_hole" rel="noopener noreferrer">Wikipedia</a></li>
</ul>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf empty

10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf=1270:<h1>Gitlab meetup on Async communication (Youtube)</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=EIUsHxmZv8A" rel="noopener noreferrer">Youtube: GitLab Virtual Meetup - Asynchronous communication: how to use it—and how to break it</a></li>
</ul>
<h2>To do <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> well you need:</h2>
<ul>
<li>You need a <a href="http://localhost:5000/single-source-of-truth" rel="noopener noreferrer">Single Source of Truth</a></li>
<li>Share more information with less pings</li>
<li>Be kind and gracious</li>
<li>Make time to have <del>Casual Conversation</del> Fun</li>
</ul>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092052.png" rel="noopener noreferrer">Pasted image 20201020092052</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.270 [debug] l:len=1

10:45:07.270 [debug] l:buf=270:<h1>Gitlab meetup on Async communication (Youtube)</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=EIUsHxmZv8A" rel="noopener noreferrer">Youtube: GitLab Virtual Meetup - Asynchronous communication: how to use it—and how to break it</a></li>
</ul>
<h2>To do <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> well you need:</h2>
<ul>
<li>You need a <a href="http://localhost:5000/single-source-of-truth" rel="noopener noreferrer">Single Source of Truth</a></li>
<li>Share more information with less pings</li>
<li>Be kind and gracious</li>
<li>Make time to have <del>Casual Conversation</del> Fun</li>
</ul>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092052.png" rel="noopener noreferrer">Pasted image 20201020092052</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.270 [debug] l:len=12

10:45:07.270 [debug] l:buf=70:<h1>Gitlab meetup on Async communication (Youtube)</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=EIUsHxmZv8A" rel="noopener noreferrer">Youtube: GitLab Virtual Meetup - Asynchronous communication: how to use it—and how to break it</a></li>
</ul>
<h2>To do <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> well you need:</h2>
<ul>
<li>You need a <a href="http://localhost:5000/single-source-of-truth" rel="noopener noreferrer">Single Source of Truth</a></li>
<li>Share more information with less pings</li>
<li>Be kind and gracious</li>
<li>Make time to have <del>Casual Conversation</del> Fun</li>
</ul>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092052.png" rel="noopener noreferrer">Pasted image 20201020092052</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.270 [debug] l:len=127

10:45:07.270 [debug] l:buf=0:<h1>Gitlab meetup on Async communication (Youtube)</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=EIUsHxmZv8A" rel="noopener noreferrer">Youtube: GitLab Virtual Meetup - Asynchronous communication: how to use it—and how to break it</a></li>
</ul>
<h2>To do <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> well you need:</h2>
<ul>
<li>You need a <a href="http://localhost:5000/single-source-of-truth" rel="noopener noreferrer">Single Source of Truth</a></li>
<li>Share more information with less pings</li>
<li>Be kind and gracious</li>
<li>Make time to have <del>Casual Conversation</del> Fun</li>
</ul>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092052.png" rel="noopener noreferrer">Pasted image 20201020092052</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf empty

10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf=780:<h1>People Crippling Group Chat</h1>
<ul>
<li><a href="http://localhost:5000/gitlab-only-keeps-chat-for-90-days" rel="noopener noreferrer">Gitlab only keeps chat for 90 days</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> designed their chat to only be one-on-one</li>
</ul>
<p>Similar to how <a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>


10:45:07.270 [debug] l:len=7

10:45:07.270 [debug] l:buf=80:<h1>People Crippling Group Chat</h1>
<ul>
<li><a href="http://localhost:5000/gitlab-only-keeps-chat-for-90-days" rel="noopener noreferrer">Gitlab only keeps chat for 90 days</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> designed their chat to only be one-on-one</li>
</ul>
<p>Similar to how <a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>


10:45:07.270 [debug] l:len=78

10:45:07.270 [debug] l:buf=0:<h1>People Crippling Group Chat</h1>
<ul>
<li><a href="http://localhost:5000/gitlab-only-keeps-chat-for-90-days" rel="noopener noreferrer">Gitlab only keeps chat for 90 days</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> designed their chat to only be one-on-one</li>
</ul>
<p>Similar to how <a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>


10:45:07.270 [debug] l:len=

10:45:07.270 [debug] l:buf empty

10:45:07.270 [debug] l:len=

10:45:07.271 [debug] l:buf=149:<h1>OCaml</h1>
<p>A programming language that <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is built on top of</p>


10:45:07.271 [debug] l:len=1

10:45:07.271 [debug] l:buf=49:<h1>OCaml</h1>
<p>A programming language that <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is built on top of</p>


10:45:07.271 [debug] l:len=14

10:45:07.271 [debug] l:buf=9:<h1>OCaml</h1>
<p>A programming language that <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> is built on top of</p>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf=512:<h1>Ruby on Rails is a kung-fu movie</h1>
<blockquote>
<p>Ruby on Rails is astounding. Using it is like watching a kung-fu movie, where a dozen bad-ass frameworks prepare to beat up the little newcomer only to be handed their asses in a variety of imaginative ways.”</p>
</blockquote>
<p>Gotta love that quote.</p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
</ul>


10:45:07.271 [debug] l:len=5

10:45:07.271 [debug] l:buf=12:<h1>Ruby on Rails is a kung-fu movie</h1>
<blockquote>
<p>Ruby on Rails is astounding. Using it is like watching a kung-fu movie, where a dozen bad-ass frameworks prepare to beat up the little newcomer only to be handed their asses in a variety of imaginative ways.”</p>
</blockquote>
<p>Gotta love that quote.</p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
</ul>


10:45:07.271 [debug] l:len=51

10:45:07.271 [debug] l:buf=2:<h1>Ruby on Rails is a kung-fu movie</h1>
<blockquote>
<p>Ruby on Rails is astounding. Using it is like watching a kung-fu movie, where a dozen bad-ass frameworks prepare to beat up the little newcomer only to be handed their asses in a variety of imaginative ways.”</p>
</blockquote>
<p>Gotta love that quote.</p>
<ul>
<li><a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
</ul>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf=253:<h1>Working software</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.271 [debug] l:len=2

10:45:07.271 [debug] l:buf=53:<h1>Working software</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.271 [debug] l:len=25

10:45:07.271 [debug] l:buf=3:<h1>Working software</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf=93:<h1>Youtube video ideas</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.271 [debug] l:len=9

10:45:07.271 [debug] l:buf=3:<h1>Youtube video ideas</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf=489:<h1>Pragmatists or Early Majority</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.271 [debug] l:len=4

10:45:07.271 [debug] l:buf=89:<h1>Pragmatists or Early Majority</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.271 [debug] l:len=48

10:45:07.271 [debug] l:buf=9:<h1>Pragmatists or Early Majority</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf=274:<h1>Basecamp Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.271 [debug] l:len=2

10:45:07.271 [debug] l:buf=74:<h1>Basecamp Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.271 [debug] l:len=27

10:45:07.271 [debug] l:buf=4:<h1>Basecamp Example</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.271 [debug] l:len=

10:45:07.271 [debug] l:buf empty

10:45:07.272 [debug] l:len=

10:45:07.272 [debug] l:buf=799:<h1>asynchronous</h1>
<ul>
<li>Not simultaneous or <a href="http://localhost:5000/concurrent" rel="noopener noreferrer">concurrent</a> in <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.272 [debug] l:len=7

10:45:07.272 [debug] l:buf=99:<h1>asynchronous</h1>
<ul>
<li>Not simultaneous or <a href="http://localhost:5000/concurrent" rel="noopener noreferrer">concurrent</a> in <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.272 [debug] l:len=79

10:45:07.272 [debug] l:buf=9:<h1>asynchronous</h1>
<ul>
<li>Not simultaneous or <a href="http://localhost:5000/concurrent" rel="noopener noreferrer">concurrent</a> in <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/encourage-checking-it-later" rel="noopener noreferrer">encourage checking it later</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.272 [debug] l:len=

10:45:07.272 [debug] l:buf empty

10:45:07.272 [debug] l:len=

10:45:07.272 [debug] l:buf=94:<h1>long responses seem angry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.272 [debug] l:len=9

10:45:07.272 [debug] l:buf=4:<h1>long responses seem angry</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.272 [debug] l:len=

10:45:07.272 [debug] l:buf empty

10:45:07.272 [debug] l:len=

10:45:07.273 [debug] l:buf=3550:<h1>Better Software Estimates</h1>
<p><strong>Mark Ericksen</strong> wbscourse.com</p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>
<ul>
<li>The problem
<ul>
<li>"How long is going to take?" ~ CEO</li>
<li>CEO wants an estimate.</li>
<li>"I'm not saying anything" &amp; "He's going to hold me to this!"</li>
<li>Did I just look the CEO in the eye and refuse to give him an estimate. I build software</li>
</ul>
</li>
<li>JIRA's bad at giving software estimates, they SUCK!</li>
<li>The tool + estimates</li>
<li>The planning fallacy
<ul>
<li>I've got something right here, these look the same, but this one's different.</li>
</ul>
</li>
<li>Optimism bias. I think tomorrow and the future are going to be better than it actually is</li>
<li>Overconfidence: I think I'm better than I am</li>
<li>"Be a pessimist!" No, no, no.. be</li>
<li>Coordination Neglect
<ul>
<li>I'm doing something, you are, now they don't fit together</li>
</ul>
</li>
<li>Procrastination, Fraud, Incompetence</li>
</ul>
<h1>Strategy</h1>
<ul>
<li>Fog of war: unknown, explore it</li>
<li>Value of maps
<ul>
<li>Communication tool</li>
<li>That's what I'm talking about</li>
</ul>
</li>
<li>What if you could have a Map for software projects</li>
<li>WORKING and PLANNED</li>
</ul>
<h1>Work breakdown structure</h1>
<p>WBS</p>
<ul>
<li>NOT a "work breakdown"</li>
<li>Not watterfa</li>
<li>Not works, actions, tasks</li>
</ul>
<p>What is it? <strong>a map</strong></p>
<ul>
<li>Agile friendly</li>
</ul>
<h1>WBS Rules</h1>
<ul>
<li>100% of the work
<ul>
<li>Mutual exclusive</li>
<li>is encompassed of all the work is needed</li>
<li>types
<ul>
<li>internal,</li>
<li>external,</li>
<li>interim (code review,= etc...)</li>
</ul>
</li>
<li>no overlap defining pieces</li>
</ul>
</li>
<li>outcomes not actions
<ul>
<li>What you want, not how you're going to get it</li>
<li>I want a gun! Doesn't matter how you do it. Cement bags and etc...</li>
<li>WBS mad up of "nouns" not "verbs"</li>
<li>The things being built</li>
<li></li>
</ul>
</li>
<li>level of detail
<ul>
<li>Agile</li>
<li>How zoomed into your map?
<ul>
<li>All of US</li>
<li>Zoom in you see main roads.</li>
<li>Zoom in Buildings, roads, people</li>
<li>More risk, more detail.</li>
<li><strong>it's not useful when you're in the room</strong> It's useful because it's a higher level!!!!</li>
<li>80 hour rule</li>
<li>Nothing at the lowest level should take longer than 1 reporting period (1 week?)</li>
<li>"if it make sense" rule.</li>
</ul>
</li>
<li>Hierarchical Organization</li>
<li>Bike Example
<ul>
<li>Bike
<ul>
<li>Frame
<ul>
<li>handlebar</li>
<li>fork</li>
<li>seat</li>
</ul>
</li>
<li>Wheels</li>
<li>Braking</li>
<li>Shifting</li>
<li>Integration</li>
<li>Project Management</li>
</ul>
</li>
<li>But WAIT, I need the tools
<ul>
<li>Integration</li>
<li>ETc...</li>
</ul>
</li>
</ul>
</li>
<li>Terminal Elements
<ul>
<li>Smallest pieces which get estimated</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1><code>was-markdown</code> is the tool</h1>
<pre><code>wbsm

init
new
report

# 
wbsm new # md file

wbsm report # html file
</code></pre>
<p>Scan down the different things:
Oh yeah I forgot  this thing</p>
<h1>The Illusion Remains</h1>
<p>You'll never be cured of bad estimates. Even if you know you have them.</p>
<p>You need to use a tool break the illusion.</p>
<h1>Helping people to "get it"</h1>
<h1>Fuzzyiness</h1>
<ul>
<li>If we want to get 100% confidence, you've literally built it</li>
<li>Confidence</li>
</ul>
<h1>Track yourself</h1>
<p>WBSM</p>


10:45:07.273 [debug] l:len=3

10:45:07.273 [debug] l:buf=550:<h1>Better Software Estimates</h1>
<p><strong>Mark Ericksen</strong> wbscourse.com</p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>
<ul>
<li>The problem
<ul>
<li>"How long is going to take?" ~ CEO</li>
<li>CEO wants an estimate.</li>
<li>"I'm not saying anything" &amp; "He's going to hold me to this!"</li>
<li>Did I just look the CEO in the eye and refuse to give him an estimate. I build software</li>
</ul>
</li>
<li>JIRA's bad at giving software estimates, they SUCK!</li>
<li>The tool + estimates</li>
<li>The planning fallacy
<ul>
<li>I've got something right here, these look the same, but this one's different.</li>
</ul>
</li>
<li>Optimism bias. I think tomorrow and the future are going to be better than it actually is</li>
<li>Overconfidence: I think I'm better than I am</li>
<li>"Be a pessimist!" No, no, no.. be</li>
<li>Coordination Neglect
<ul>
<li>I'm doing something, you are, now they don't fit together</li>
</ul>
</li>
<li>Procrastination, Fraud, Incompetence</li>
</ul>
<h1>Strategy</h1>
<ul>
<li>Fog of war: unknown, explore it</li>
<li>Value of maps
<ul>
<li>Communication tool</li>
<li>That's what I'm talking about</li>
</ul>
</li>
<li>What if you could have a Map for software projects</li>
<li>WORKING and PLANNED</li>
</ul>
<h1>Work breakdown structure</h1>
<p>WBS</p>
<ul>
<li>NOT a "work breakdown"</li>
<li>Not watterfa</li>
<li>Not works, actions, tasks</li>
</ul>
<p>What is it? <strong>a map</strong></p>
<ul>
<li>Agile friendly</li>
</ul>
<h1>WBS Rules</h1>
<ul>
<li>100% of the work
<ul>
<li>Mutual exclusive</li>
<li>is encompassed of all the work is needed</li>
<li>types
<ul>
<li>internal,</li>
<li>external,</li>
<li>interim (code review,= etc...)</li>
</ul>
</li>
<li>no overlap defining pieces</li>
</ul>
</li>
<li>outcomes not actions
<ul>
<li>What you want, not how you're going to get it</li>
<li>I want a gun! Doesn't matter how you do it. Cement bags and etc...</li>
<li>WBS mad up of "nouns" not "verbs"</li>
<li>The things being built</li>
<li></li>
</ul>
</li>
<li>level of detail
<ul>
<li>Agile</li>
<li>How zoomed into your map?
<ul>
<li>All of US</li>
<li>Zoom in you see main roads.</li>
<li>Zoom in Buildings, roads, people</li>
<li>More risk, more detail.</li>
<li><strong>it's not useful when you're in the room</strong> It's useful because it's a higher level!!!!</li>
<li>80 hour rule</li>
<li>Nothing at the lowest level should take longer than 1 reporting period (1 week?)</li>
<li>"if it make sense" rule.</li>
</ul>
</li>
<li>Hierarchical Organization</li>
<li>Bike Example
<ul>
<li>Bike
<ul>
<li>Frame
<ul>
<li>handlebar</li>
<li>fork</li>
<li>seat</li>
</ul>
</li>
<li>Wheels</li>
<li>Braking</li>
<li>Shifting</li>
<li>Integration</li>
<li>Project Management</li>
</ul>
</li>
<li>But WAIT, I need the tools
<ul>
<li>Integration</li>
<li>ETc...</li>
</ul>
</li>
</ul>
</li>
<li>Terminal Elements
<ul>
<li>Smallest pieces which get estimated</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1><code>was-markdown</code> is the tool</h1>
<pre><code>wbsm

init
new
report

# 
wbsm new # md file

wbsm report # html file
</code></pre>
<p>Scan down the different things:
Oh yeah I forgot  this thing</p>
<h1>The Illusion Remains</h1>
<p>You'll never be cured of bad estimates. Even if you know you have them.</p>
<p>You need to use a tool break the illusion.</p>
<h1>Helping people to "get it"</h1>
<h1>Fuzzyiness</h1>
<ul>
<li>If we want to get 100% confidence, you've literally built it</li>
<li>Confidence</li>
</ul>
<h1>Track yourself</h1>
<p>WBSM</p>


10:45:07.273 [debug] l:len=35

10:45:07.273 [debug] l:buf=50:<h1>Better Software Estimates</h1>
<p><strong>Mark Ericksen</strong> wbscourse.com</p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>
<ul>
<li>The problem
<ul>
<li>"How long is going to take?" ~ CEO</li>
<li>CEO wants an estimate.</li>
<li>"I'm not saying anything" &amp; "He's going to hold me to this!"</li>
<li>Did I just look the CEO in the eye and refuse to give him an estimate. I build software</li>
</ul>
</li>
<li>JIRA's bad at giving software estimates, they SUCK!</li>
<li>The tool + estimates</li>
<li>The planning fallacy
<ul>
<li>I've got something right here, these look the same, but this one's different.</li>
</ul>
</li>
<li>Optimism bias. I think tomorrow and the future are going to be better than it actually is</li>
<li>Overconfidence: I think I'm better than I am</li>
<li>"Be a pessimist!" No, no, no.. be</li>
<li>Coordination Neglect
<ul>
<li>I'm doing something, you are, now they don't fit together</li>
</ul>
</li>
<li>Procrastination, Fraud, Incompetence</li>
</ul>
<h1>Strategy</h1>
<ul>
<li>Fog of war: unknown, explore it</li>
<li>Value of maps
<ul>
<li>Communication tool</li>
<li>That's what I'm talking about</li>
</ul>
</li>
<li>What if you could have a Map for software projects</li>
<li>WORKING and PLANNED</li>
</ul>
<h1>Work breakdown structure</h1>
<p>WBS</p>
<ul>
<li>NOT a "work breakdown"</li>
<li>Not watterfa</li>
<li>Not works, actions, tasks</li>
</ul>
<p>What is it? <strong>a map</strong></p>
<ul>
<li>Agile friendly</li>
</ul>
<h1>WBS Rules</h1>
<ul>
<li>100% of the work
<ul>
<li>Mutual exclusive</li>
<li>is encompassed of all the work is needed</li>
<li>types
<ul>
<li>internal,</li>
<li>external,</li>
<li>interim (code review,= etc...)</li>
</ul>
</li>
<li>no overlap defining pieces</li>
</ul>
</li>
<li>outcomes not actions
<ul>
<li>What you want, not how you're going to get it</li>
<li>I want a gun! Doesn't matter how you do it. Cement bags and etc...</li>
<li>WBS mad up of "nouns" not "verbs"</li>
<li>The things being built</li>
<li></li>
</ul>
</li>
<li>level of detail
<ul>
<li>Agile</li>
<li>How zoomed into your map?
<ul>
<li>All of US</li>
<li>Zoom in you see main roads.</li>
<li>Zoom in Buildings, roads, people</li>
<li>More risk, more detail.</li>
<li><strong>it's not useful when you're in the room</strong> It's useful because it's a higher level!!!!</li>
<li>80 hour rule</li>
<li>Nothing at the lowest level should take longer than 1 reporting period (1 week?)</li>
<li>"if it make sense" rule.</li>
</ul>
</li>
<li>Hierarchical Organization</li>
<li>Bike Example
<ul>
<li>Bike
<ul>
<li>Frame
<ul>
<li>handlebar</li>
<li>fork</li>
<li>seat</li>
</ul>
</li>
<li>Wheels</li>
<li>Braking</li>
<li>Shifting</li>
<li>Integration</li>
<li>Project Management</li>
</ul>
</li>
<li>But WAIT, I need the tools
<ul>
<li>Integration</li>
<li>ETc...</li>
</ul>
</li>
</ul>
</li>
<li>Terminal Elements
<ul>
<li>Smallest pieces which get estimated</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1><code>was-markdown</code> is the tool</h1>
<pre><code>wbsm

init
new
report

# 
wbsm new # md file

wbsm report # html file
</code></pre>
<p>Scan down the different things:
Oh yeah I forgot  this thing</p>
<h1>The Illusion Remains</h1>
<p>You'll never be cured of bad estimates. Even if you know you have them.</p>
<p>You need to use a tool break the illusion.</p>
<h1>Helping people to "get it"</h1>
<h1>Fuzzyiness</h1>
<ul>
<li>If we want to get 100% confidence, you've literally built it</li>
<li>Confidence</li>
</ul>
<h1>Track yourself</h1>
<p>WBSM</p>


10:45:07.273 [debug] l:len=355

10:45:07.273 [debug] l:buf=0:<h1>Better Software Estimates</h1>
<p><strong>Mark Ericksen</strong> wbscourse.com</p>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>
<ul>
<li>The problem
<ul>
<li>"How long is going to take?" ~ CEO</li>
<li>CEO wants an estimate.</li>
<li>"I'm not saying anything" &amp; "He's going to hold me to this!"</li>
<li>Did I just look the CEO in the eye and refuse to give him an estimate. I build software</li>
</ul>
</li>
<li>JIRA's bad at giving software estimates, they SUCK!</li>
<li>The tool + estimates</li>
<li>The planning fallacy
<ul>
<li>I've got something right here, these look the same, but this one's different.</li>
</ul>
</li>
<li>Optimism bias. I think tomorrow and the future are going to be better than it actually is</li>
<li>Overconfidence: I think I'm better than I am</li>
<li>"Be a pessimist!" No, no, no.. be</li>
<li>Coordination Neglect
<ul>
<li>I'm doing something, you are, now they don't fit together</li>
</ul>
</li>
<li>Procrastination, Fraud, Incompetence</li>
</ul>
<h1>Strategy</h1>
<ul>
<li>Fog of war: unknown, explore it</li>
<li>Value of maps
<ul>
<li>Communication tool</li>
<li>That's what I'm talking about</li>
</ul>
</li>
<li>What if you could have a Map for software projects</li>
<li>WORKING and PLANNED</li>
</ul>
<h1>Work breakdown structure</h1>
<p>WBS</p>
<ul>
<li>NOT a "work breakdown"</li>
<li>Not watterfa</li>
<li>Not works, actions, tasks</li>
</ul>
<p>What is it? <strong>a map</strong></p>
<ul>
<li>Agile friendly</li>
</ul>
<h1>WBS Rules</h1>
<ul>
<li>100% of the work
<ul>
<li>Mutual exclusive</li>
<li>is encompassed of all the work is needed</li>
<li>types
<ul>
<li>internal,</li>
<li>external,</li>
<li>interim (code review,= etc...)</li>
</ul>
</li>
<li>no overlap defining pieces</li>
</ul>
</li>
<li>outcomes not actions
<ul>
<li>What you want, not how you're going to get it</li>
<li>I want a gun! Doesn't matter how you do it. Cement bags and etc...</li>
<li>WBS mad up of "nouns" not "verbs"</li>
<li>The things being built</li>
<li></li>
</ul>
</li>
<li>level of detail
<ul>
<li>Agile</li>
<li>How zoomed into your map?
<ul>
<li>All of US</li>
<li>Zoom in you see main roads.</li>
<li>Zoom in Buildings, roads, people</li>
<li>More risk, more detail.</li>
<li><strong>it's not useful when you're in the room</strong> It's useful because it's a higher level!!!!</li>
<li>80 hour rule</li>
<li>Nothing at the lowest level should take longer than 1 reporting period (1 week?)</li>
<li>"if it make sense" rule.</li>
</ul>
</li>
<li>Hierarchical Organization</li>
<li>Bike Example
<ul>
<li>Bike
<ul>
<li>Frame
<ul>
<li>handlebar</li>
<li>fork</li>
<li>seat</li>
</ul>
</li>
<li>Wheels</li>
<li>Braking</li>
<li>Shifting</li>
<li>Integration</li>
<li>Project Management</li>
</ul>
</li>
<li>But WAIT, I need the tools
<ul>
<li>Integration</li>
<li>ETc...</li>
</ul>
</li>
</ul>
</li>
<li>Terminal Elements
<ul>
<li>Smallest pieces which get estimated</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1><code>was-markdown</code> is the tool</h1>
<pre><code>wbsm

init
new
report

# 
wbsm new # md file

wbsm report # html file
</code></pre>
<p>Scan down the different things:
Oh yeah I forgot  this thing</p>
<h1>The Illusion Remains</h1>
<p>You'll never be cured of bad estimates. Even if you know you have them.</p>
<p>You need to use a tool break the illusion.</p>
<h1>Helping people to "get it"</h1>
<h1>Fuzzyiness</h1>
<ul>
<li>If we want to get 100% confidence, you've literally built it</li>
<li>Confidence</li>
</ul>
<h1>Track yourself</h1>
<p>WBSM</p>


10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf empty

10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf=1134:<h1>Know your team</h1>
<ul>
<li>After years of research, we've found that the best leaders are great at 3 skills:
<ul>
<li><strong><a href="http://localhost:5000/trust" rel="noopener noreferrer">Trust</a></strong> - If you don't build rapport as a leader, nothing moves forward.</li>
<li><strong><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></strong> - If you don't get everyone on the same page, confusion sets in.</li>
<li><strong><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></strong> - If you don't speak the truth to your team, problems fester.</li>
</ul>
</li>
<li>As a result, we've designed Know Your Team to help you develop these skills.
Here are the resources we offer to support you:
<ul>
<li><strong>Knowledge</strong> Center - Content based on data from 15,000+ people.</li>
<li><strong>Toolbox</strong> - Software tools that support and save you time as a manager.</li>
<li><strong>Community</strong> - An online community of 1,000+ managers.</li>
</ul>
</li>
<li>Ready to put 'em to work for you? Let's dive into the Knowledge Center, first.</li>
</ul>


10:45:07.273 [debug] l:len=1

10:45:07.273 [debug] l:buf=134:<h1>Know your team</h1>
<ul>
<li>After years of research, we've found that the best leaders are great at 3 skills:
<ul>
<li><strong><a href="http://localhost:5000/trust" rel="noopener noreferrer">Trust</a></strong> - If you don't build rapport as a leader, nothing moves forward.</li>
<li><strong><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></strong> - If you don't get everyone on the same page, confusion sets in.</li>
<li><strong><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></strong> - If you don't speak the truth to your team, problems fester.</li>
</ul>
</li>
<li>As a result, we've designed Know Your Team to help you develop these skills.
Here are the resources we offer to support you:
<ul>
<li><strong>Knowledge</strong> Center - Content based on data from 15,000+ people.</li>
<li><strong>Toolbox</strong> - Software tools that support and save you time as a manager.</li>
<li><strong>Community</strong> - An online community of 1,000+ managers.</li>
</ul>
</li>
<li>Ready to put 'em to work for you? Let's dive into the Knowledge Center, first.</li>
</ul>


10:45:07.273 [debug] l:len=11

10:45:07.273 [debug] l:buf=34:<h1>Know your team</h1>
<ul>
<li>After years of research, we've found that the best leaders are great at 3 skills:
<ul>
<li><strong><a href="http://localhost:5000/trust" rel="noopener noreferrer">Trust</a></strong> - If you don't build rapport as a leader, nothing moves forward.</li>
<li><strong><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></strong> - If you don't get everyone on the same page, confusion sets in.</li>
<li><strong><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></strong> - If you don't speak the truth to your team, problems fester.</li>
</ul>
</li>
<li>As a result, we've designed Know Your Team to help you develop these skills.
Here are the resources we offer to support you:
<ul>
<li><strong>Knowledge</strong> Center - Content based on data from 15,000+ people.</li>
<li><strong>Toolbox</strong> - Software tools that support and save you time as a manager.</li>
<li><strong>Community</strong> - An online community of 1,000+ managers.</li>
</ul>
</li>
<li>Ready to put 'em to work for you? Let's dive into the Knowledge Center, first.</li>
</ul>


10:45:07.273 [debug] l:len=113

10:45:07.273 [debug] l:buf=4:<h1>Know your team</h1>
<ul>
<li>After years of research, we've found that the best leaders are great at 3 skills:
<ul>
<li><strong><a href="http://localhost:5000/trust" rel="noopener noreferrer">Trust</a></strong> - If you don't build rapport as a leader, nothing moves forward.</li>
<li><strong><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></strong> - If you don't get everyone on the same page, confusion sets in.</li>
<li><strong><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></strong> - If you don't speak the truth to your team, problems fester.</li>
</ul>
</li>
<li>As a result, we've designed Know Your Team to help you develop these skills.
Here are the resources we offer to support you:
<ul>
<li><strong>Knowledge</strong> Center - Content based on data from 15,000+ people.</li>
<li><strong>Toolbox</strong> - Software tools that support and save you time as a manager.</li>
<li><strong>Community</strong> - An online community of 1,000+ managers.</li>
</ul>
</li>
<li>Ready to put 'em to work for you? Let's dive into the Knowledge Center, first.</li>
</ul>


10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf empty

10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf=81:<h1>Context</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.273 [debug] l:len=8

10:45:07.273 [debug] l:buf=1:<h1>Context</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf empty

10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf=1210:<h1>dumb ticket takers</h1>
<p>Treating programmers like they need everything spelled out for them word for word. They should just always take the next ticket on it.</p>
<p>The main problem is that this makes them turn off their brains. They never ask, "how far are we along in the project" or "is this actually the most important thing?".</p>
<p>If a developer can't tell you exactly what needs to happen next... doesn't understand the project. This is why projects take so much longer than they should.</p>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.273 [debug] l:len=1

10:45:07.273 [debug] l:buf=210:<h1>dumb ticket takers</h1>
<p>Treating programmers like they need everything spelled out for them word for word. They should just always take the next ticket on it.</p>
<p>The main problem is that this makes them turn off their brains. They never ask, "how far are we along in the project" or "is this actually the most important thing?".</p>
<p>If a developer can't tell you exactly what needs to happen next... doesn't understand the project. This is why projects take so much longer than they should.</p>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.273 [debug] l:len=12

10:45:07.273 [debug] l:buf=10:<h1>dumb ticket takers</h1>
<p>Treating programmers like they need everything spelled out for them word for word. They should just always take the next ticket on it.</p>
<p>The main problem is that this makes them turn off their brains. They never ask, "how far are we along in the project" or "is this actually the most important thing?".</p>
<p>If a developer can't tell you exactly what needs to happen next... doesn't understand the project. This is why projects take so much longer than they should.</p>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.273 [debug] l:len=121

10:45:07.273 [debug] l:buf=0:<h1>dumb ticket takers</h1>
<p>Treating programmers like they need everything spelled out for them word for word. They should just always take the next ticket on it.</p>
<p>The main problem is that this makes them turn off their brains. They never ask, "how far are we along in the project" or "is this actually the most important thing?".</p>
<p>If a developer can't tell you exactly what needs to happen next... doesn't understand the project. This is why projects take so much longer than they should.</p>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.273 [debug] l:len=

10:45:07.273 [debug] l:buf empty

10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf=1141:<h1>Joel Chan- <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> and <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a> for <a href="http://localhost:5000/generative-thought" rel="noopener noreferrer">Generative Thought</a></h1>
<p>Source: <a href="https://www.youtube.com/watch?v=A6PIrVZoZAk" rel="noopener noreferrer">https://www.youtube.com/watch?v=A6PIrVZoZAk</a></p>
<ul>
<li>
<p>How do we get people to <a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> knowledge to be a good <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
</li>
<li>
<p>An article is "too big" you can't think at this level and break it down into Evergreen Notes.</p>
</li>
<li>
<p>Scholars need to re-read stuff</p>
</li>
<li>
<p>Everyday: <code>Z:</code></p>
</li>
<li>
<p>Whitepaper <code>WP:</code>
It helps Autocompletion</p>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.274 [debug] l:len=1

10:45:07.274 [debug] l:buf=141:<h1>Joel Chan- <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> and <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a> for <a href="http://localhost:5000/generative-thought" rel="noopener noreferrer">Generative Thought</a></h1>
<p>Source: <a href="https://www.youtube.com/watch?v=A6PIrVZoZAk" rel="noopener noreferrer">https://www.youtube.com/watch?v=A6PIrVZoZAk</a></p>
<ul>
<li>
<p>How do we get people to <a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> knowledge to be a good <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
</li>
<li>
<p>An article is "too big" you can't think at this level and break it down into Evergreen Notes.</p>
</li>
<li>
<p>Scholars need to re-read stuff</p>
</li>
<li>
<p>Everyday: <code>Z:</code></p>
</li>
<li>
<p>Whitepaper <code>WP:</code>
It helps Autocompletion</p>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.274 [debug] l:len=11

10:45:07.274 [debug] l:buf=41:<h1>Joel Chan- <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> and <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a> for <a href="http://localhost:5000/generative-thought" rel="noopener noreferrer">Generative Thought</a></h1>
<p>Source: <a href="https://www.youtube.com/watch?v=A6PIrVZoZAk" rel="noopener noreferrer">https://www.youtube.com/watch?v=A6PIrVZoZAk</a></p>
<ul>
<li>
<p>How do we get people to <a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> knowledge to be a good <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
</li>
<li>
<p>An article is "too big" you can't think at this level and break it down into Evergreen Notes.</p>
</li>
<li>
<p>Scholars need to re-read stuff</p>
</li>
<li>
<p>Everyday: <code>Z:</code></p>
</li>
<li>
<p>Whitepaper <code>WP:</code>
It helps Autocompletion</p>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.274 [debug] l:len=114

10:45:07.274 [debug] l:buf=1:<h1>Joel Chan- <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a> and <a href="http://localhost:5000/evergreen-notes" rel="noopener noreferrer">Evergreen Notes</a> for <a href="http://localhost:5000/generative-thought" rel="noopener noreferrer">Generative Thought</a></h1>
<p>Source: <a href="https://www.youtube.com/watch?v=A6PIrVZoZAk" rel="noopener noreferrer">https://www.youtube.com/watch?v=A6PIrVZoZAk</a></p>
<ul>
<li>
<p>How do we get people to <a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> knowledge to be a good <a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></p>
</li>
<li>
<p>An article is "too big" you can't think at this level and break it down into Evergreen Notes.</p>
</li>
<li>
<p>Scholars need to re-read stuff</p>
</li>
<li>
<p>Everyday: <code>Z:</code></p>
</li>
<li>
<p>Whitepaper <code>WP:</code>
It helps Autocompletion</p>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf empty

10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf=319:<h1>communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.274 [debug] l:len=3

10:45:07.274 [debug] l:buf=19:<h1>communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.274 [debug] l:len=31

10:45:07.274 [debug] l:buf=9:<h1>communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf empty

10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf=271:<h1>Testing</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.274 [debug] l:len=2

10:45:07.274 [debug] l:buf=71:<h1>Testing</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.274 [debug] l:len=27

10:45:07.274 [debug] l:buf=1:<h1>Testing</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf empty

10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf=305:<h1>super users</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.274 [debug] l:len=3

10:45:07.274 [debug] l:buf=05:<h1>super users</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.274 [debug] l:len=30

10:45:07.274 [debug] l:buf=5:<h1>super users</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf empty

10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf=233:<h1>The 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.274 [debug] l:len=2

10:45:07.274 [debug] l:buf=33:<h1>The 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.274 [debug] l:len=23

10:45:07.274 [debug] l:buf=3:<h1>The 3 phases of MOCs</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.274 [debug] l:len=

10:45:07.274 [debug] l:buf empty

10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf=831:<h1>Medium: why Scrum is killing your product</h1>
<p>Does an organized backlog or do well-written user stories matter if the things in the backlog are unlikely to deliver value for the customer?</p>
<p>Does completing lots of features matter if they don’t deliver value? Or if we have no idea what the impact of those features was on the customer and the business?</p>
<p>Is a daily standby or retrospective even valuable if there is no deep analysis of what we are building and, more importantly, why, instead just a focus on how to build more features faster?</p>
<p><a href="https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5" rel="noopener noreferrer">https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5</a></p>
<p><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></p>


10:45:07.275 [debug] l:len=8

10:45:07.275 [debug] l:buf=31:<h1>Medium: why Scrum is killing your product</h1>
<p>Does an organized backlog or do well-written user stories matter if the things in the backlog are unlikely to deliver value for the customer?</p>
<p>Does completing lots of features matter if they don’t deliver value? Or if we have no idea what the impact of those features was on the customer and the business?</p>
<p>Is a daily standby or retrospective even valuable if there is no deep analysis of what we are building and, more importantly, why, instead just a focus on how to build more features faster?</p>
<p><a href="https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5" rel="noopener noreferrer">https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5</a></p>
<p><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></p>


10:45:07.275 [debug] l:len=83

10:45:07.275 [debug] l:buf=1:<h1>Medium: why Scrum is killing your product</h1>
<p>Does an organized backlog or do well-written user stories matter if the things in the backlog are unlikely to deliver value for the customer?</p>
<p>Does completing lots of features matter if they don’t deliver value? Or if we have no idea what the impact of those features was on the customer and the business?</p>
<p>Is a daily standby or retrospective even valuable if there is no deep analysis of what we are building and, more importantly, why, instead just a focus on how to build more features faster?</p>
<p><a href="https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5" rel="noopener noreferrer">https://uxdesign.cc/why-scrum-is-killing-your-product-febfcab464e5</a></p>
<p><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></p>


10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf empty

10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf=269:<h1>How the ask-bj channel quickly fell apart</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.275 [debug] l:len=2

10:45:07.275 [debug] l:buf=69:<h1>How the ask-bj channel quickly fell apart</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.275 [debug] l:len=26

10:45:07.275 [debug] l:buf=9:<h1>How the ask-bj channel quickly fell apart</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf empty

10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf=2636:<h1>Passport Requirements</h1>
<p>Needed these for <a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>
<h1>Passport</h1>
<h3>Primary Photo IDs (submit one)</h3>
<ul>
<li>Valid or expired, undamaged U.S. passport book or passport card</li>
<li>In-state, fully valid driver's license or enhanced driver's license with photo</li>
<li>Certificate ofNaturalization</li>
<li>Certificate ofCitizenship</li>
<li>Government employee ID (city, county, state, or federal)</li>
<li>U.S. military or military dependent ID</li>
<li>Current (valid) foreign passport</li>
<li>Matricula Consular (Mexican Consular ID) - commonly used by a parent of a U.S. citizen child applicant</li>
<li>U.S. Permanent Resident Card (Green Card) -commonly used by a parent of a U.S. citizen child applicant</li>
<li>Trusted Traveler IDs (including valid Global Entry, FAST, SENTRI, and NEXUS cards)</li>
<li>Enhanced Tribal Cards and Native American tribal photo IDs</li>
<li>Other documents:In-state, fully valid learner's permit with photo, In-state, fully valid non-driver ID with photo, and temporary driver's license with photo. Note: you may be asked to present an additional ID when presenting one of these 3 documents.</li>
</ul>
<h3>Secondary IDs (submit at least two from the list below)</h3>
<ul>
<li>Out-of-state driver's license or enhanced driver's license with photo</li>
<li>Learner's or temporary driver's permit (without a photo)</li>
<li>In-state, fully valid non-driver ID (without a photo)</li>
<li>Out-of-state, non-driver ID</li>
<li>Temporary driver's license (without a photo)</li>
<li>Social Security card</li>
<li>Voter registration card</li>
<li>Employee work ID</li>
<li>Student ID</li>
<li>School yearbook with identifiable photograph</li>
<li>Selective Service (draft) card</li>
<li>Medicare or other health card</li>
<li>Expired driver's license</li>
<li>Form DS-71, for an Identifying Witness (only available at your local <a href="https://travel.state.gov/content/travel/en/passports/apply-renew-passport/apply-in-person.html" rel="noopener noreferrer">Acceptance Facility or a Passport Agency</a> ).</li>
</ul>
<blockquote>
<p>**Note:**If you are traveling within two weeks, do not mail in your passport application. If you do, your application may not be completed before your travel date. Please call the National Passport Information Center at 1-877-487-2778 (TDD: 1-888-874-7793) to make an appointment to appear in person at a Passport Agency and receive expedited processing. The automated appointment system is available twenty-four hours a day, seven days a week</p>
</blockquote>


10:45:07.275 [debug] l:len=2

10:45:07.275 [debug] l:buf=636:<h1>Passport Requirements</h1>
<p>Needed these for <a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>
<h1>Passport</h1>
<h3>Primary Photo IDs (submit one)</h3>
<ul>
<li>Valid or expired, undamaged U.S. passport book or passport card</li>
<li>In-state, fully valid driver's license or enhanced driver's license with photo</li>
<li>Certificate ofNaturalization</li>
<li>Certificate ofCitizenship</li>
<li>Government employee ID (city, county, state, or federal)</li>
<li>U.S. military or military dependent ID</li>
<li>Current (valid) foreign passport</li>
<li>Matricula Consular (Mexican Consular ID) - commonly used by a parent of a U.S. citizen child applicant</li>
<li>U.S. Permanent Resident Card (Green Card) -commonly used by a parent of a U.S. citizen child applicant</li>
<li>Trusted Traveler IDs (including valid Global Entry, FAST, SENTRI, and NEXUS cards)</li>
<li>Enhanced Tribal Cards and Native American tribal photo IDs</li>
<li>Other documents:In-state, fully valid learner's permit with photo, In-state, fully valid non-driver ID with photo, and temporary driver's license with photo. Note: you may be asked to present an additional ID when presenting one of these 3 documents.</li>
</ul>
<h3>Secondary IDs (submit at least two from the list below)</h3>
<ul>
<li>Out-of-state driver's license or enhanced driver's license with photo</li>
<li>Learner's or temporary driver's permit (without a photo)</li>
<li>In-state, fully valid non-driver ID (without a photo)</li>
<li>Out-of-state, non-driver ID</li>
<li>Temporary driver's license (without a photo)</li>
<li>Social Security card</li>
<li>Voter registration card</li>
<li>Employee work ID</li>
<li>Student ID</li>
<li>School yearbook with identifiable photograph</li>
<li>Selective Service (draft) card</li>
<li>Medicare or other health card</li>
<li>Expired driver's license</li>
<li>Form DS-71, for an Identifying Witness (only available at your local <a href="https://travel.state.gov/content/travel/en/passports/apply-renew-passport/apply-in-person.html" rel="noopener noreferrer">Acceptance Facility or a Passport Agency</a> ).</li>
</ul>
<blockquote>
<p>**Note:**If you are traveling within two weeks, do not mail in your passport application. If you do, your application may not be completed before your travel date. Please call the National Passport Information Center at 1-877-487-2778 (TDD: 1-888-874-7793) to make an appointment to appear in person at a Passport Agency and receive expedited processing. The automated appointment system is available twenty-four hours a day, seven days a week</p>
</blockquote>


10:45:07.275 [debug] l:len=26

10:45:07.275 [debug] l:buf=36:<h1>Passport Requirements</h1>
<p>Needed these for <a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>
<h1>Passport</h1>
<h3>Primary Photo IDs (submit one)</h3>
<ul>
<li>Valid or expired, undamaged U.S. passport book or passport card</li>
<li>In-state, fully valid driver's license or enhanced driver's license with photo</li>
<li>Certificate ofNaturalization</li>
<li>Certificate ofCitizenship</li>
<li>Government employee ID (city, county, state, or federal)</li>
<li>U.S. military or military dependent ID</li>
<li>Current (valid) foreign passport</li>
<li>Matricula Consular (Mexican Consular ID) - commonly used by a parent of a U.S. citizen child applicant</li>
<li>U.S. Permanent Resident Card (Green Card) -commonly used by a parent of a U.S. citizen child applicant</li>
<li>Trusted Traveler IDs (including valid Global Entry, FAST, SENTRI, and NEXUS cards)</li>
<li>Enhanced Tribal Cards and Native American tribal photo IDs</li>
<li>Other documents:In-state, fully valid learner's permit with photo, In-state, fully valid non-driver ID with photo, and temporary driver's license with photo. Note: you may be asked to present an additional ID when presenting one of these 3 documents.</li>
</ul>
<h3>Secondary IDs (submit at least two from the list below)</h3>
<ul>
<li>Out-of-state driver's license or enhanced driver's license with photo</li>
<li>Learner's or temporary driver's permit (without a photo)</li>
<li>In-state, fully valid non-driver ID (without a photo)</li>
<li>Out-of-state, non-driver ID</li>
<li>Temporary driver's license (without a photo)</li>
<li>Social Security card</li>
<li>Voter registration card</li>
<li>Employee work ID</li>
<li>Student ID</li>
<li>School yearbook with identifiable photograph</li>
<li>Selective Service (draft) card</li>
<li>Medicare or other health card</li>
<li>Expired driver's license</li>
<li>Form DS-71, for an Identifying Witness (only available at your local <a href="https://travel.state.gov/content/travel/en/passports/apply-renew-passport/apply-in-person.html" rel="noopener noreferrer">Acceptance Facility or a Passport Agency</a> ).</li>
</ul>
<blockquote>
<p>**Note:**If you are traveling within two weeks, do not mail in your passport application. If you do, your application may not be completed before your travel date. Please call the National Passport Information Center at 1-877-487-2778 (TDD: 1-888-874-7793) to make an appointment to appear in person at a Passport Agency and receive expedited processing. The automated appointment system is available twenty-four hours a day, seven days a week</p>
</blockquote>


10:45:07.275 [debug] l:len=263

10:45:07.275 [debug] l:buf=6:<h1>Passport Requirements</h1>
<p>Needed these for <a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>
<h1>Passport</h1>
<h3>Primary Photo IDs (submit one)</h3>
<ul>
<li>Valid or expired, undamaged U.S. passport book or passport card</li>
<li>In-state, fully valid driver's license or enhanced driver's license with photo</li>
<li>Certificate ofNaturalization</li>
<li>Certificate ofCitizenship</li>
<li>Government employee ID (city, county, state, or federal)</li>
<li>U.S. military or military dependent ID</li>
<li>Current (valid) foreign passport</li>
<li>Matricula Consular (Mexican Consular ID) - commonly used by a parent of a U.S. citizen child applicant</li>
<li>U.S. Permanent Resident Card (Green Card) -commonly used by a parent of a U.S. citizen child applicant</li>
<li>Trusted Traveler IDs (including valid Global Entry, FAST, SENTRI, and NEXUS cards)</li>
<li>Enhanced Tribal Cards and Native American tribal photo IDs</li>
<li>Other documents:In-state, fully valid learner's permit with photo, In-state, fully valid non-driver ID with photo, and temporary driver's license with photo. Note: you may be asked to present an additional ID when presenting one of these 3 documents.</li>
</ul>
<h3>Secondary IDs (submit at least two from the list below)</h3>
<ul>
<li>Out-of-state driver's license or enhanced driver's license with photo</li>
<li>Learner's or temporary driver's permit (without a photo)</li>
<li>In-state, fully valid non-driver ID (without a photo)</li>
<li>Out-of-state, non-driver ID</li>
<li>Temporary driver's license (without a photo)</li>
<li>Social Security card</li>
<li>Voter registration card</li>
<li>Employee work ID</li>
<li>Student ID</li>
<li>School yearbook with identifiable photograph</li>
<li>Selective Service (draft) card</li>
<li>Medicare or other health card</li>
<li>Expired driver's license</li>
<li>Form DS-71, for an Identifying Witness (only available at your local <a href="https://travel.state.gov/content/travel/en/passports/apply-renew-passport/apply-in-person.html" rel="noopener noreferrer">Acceptance Facility or a Passport Agency</a> ).</li>
</ul>
<blockquote>
<p>**Note:**If you are traveling within two weeks, do not mail in your passport application. If you do, your application may not be completed before your travel date. Please call the National Passport Information Center at 1-877-487-2778 (TDD: 1-888-874-7793) to make an appointment to appear in person at a Passport Agency and receive expedited processing. The automated appointment system is available twenty-four hours a day, seven days a week</p>
</blockquote>


10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf empty

10:45:07.275 [debug] l:len=

10:45:07.275 [debug] l:buf=755:<h1>Orthogonal</h1>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:</p>
<hr>
<h2><a href="http://localhost:5000/two-orthogonal-lines.png" rel="noopener noreferrer">Two Orthogonal Lines</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.276 [debug] l:len=7

10:45:07.276 [debug] l:buf=55:<h1>Orthogonal</h1>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:</p>
<hr>
<h2><a href="http://localhost:5000/two-orthogonal-lines.png" rel="noopener noreferrer">Two Orthogonal Lines</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.276 [debug] l:len=75

10:45:07.276 [debug] l:buf=5:<h1>Orthogonal</h1>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:</p>
<hr>
<h2><a href="http://localhost:5000/two-orthogonal-lines.png" rel="noopener noreferrer">Two Orthogonal Lines</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf empty

10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf=711:<h1>Speed of conversaiton determines it's sanity</h1>
<p>Here:
<a href="https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m" rel="noopener noreferrer">https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m</a></p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.276 [debug] l:len=7

10:45:07.276 [debug] l:buf=11:<h1>Speed of conversaiton determines it's sanity</h1>
<p>Here:
<a href="https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m" rel="noopener noreferrer">https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m</a></p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.276 [debug] l:len=71

10:45:07.276 [debug] l:buf=1:<h1>Speed of conversaiton determines it's sanity</h1>
<p>Here:
<a href="https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m" rel="noopener noreferrer">https://www.knovigator.com/quest/The-Speed-conversation-correlates-s-sanity-3oerw62m</a></p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf empty

10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf=82:<h1>appetite</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.276 [debug] l:len=8

10:45:07.276 [debug] l:buf=2:<h1>appetite</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf empty

10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf=477:<h1>Semantic CSS is for the birds</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-19.png" rel="noopener noreferrer">Pasted image 19</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/weilbyte/status/1301981990200188929" rel="noopener noreferrer">https://twitter.com/weilbyte/status/1301981990200188929</a></p>
<p><a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.276 [debug] l:len=4

10:45:07.276 [debug] l:buf=77:<h1>Semantic CSS is for the birds</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-19.png" rel="noopener noreferrer">Pasted image 19</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/weilbyte/status/1301981990200188929" rel="noopener noreferrer">https://twitter.com/weilbyte/status/1301981990200188929</a></p>
<p><a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.276 [debug] l:len=47

10:45:07.276 [debug] l:buf=7:<h1>Semantic CSS is for the birds</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-19.png" rel="noopener noreferrer">Pasted image 19</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/weilbyte/status/1301981990200188929" rel="noopener noreferrer">https://twitter.com/weilbyte/status/1301981990200188929</a></p>
<p><a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf empty

10:45:07.276 [debug] l:len=

10:45:07.276 [debug] l:buf=282:<h1>Basecamp's unfollowing a project</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.276 [debug] l:len=2

10:45:07.276 [debug] l:buf=82:<h1>Basecamp's unfollowing a project</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.276 [debug] l:len=28

10:45:07.276 [debug] l:buf=2:<h1>Basecamp's unfollowing a project</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.277 [debug] l:len=

10:45:07.277 [debug] l:buf empty

10:45:07.278 [debug] l:len=

10:45:07.278 [debug] l:buf=16174:<h1>Basecamp Guide to Internal Communication</h1>
<ul>
<li>The how, where, why, and when we communicate. <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a>? <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> chat? In-person? Video? Verbal? Written? Via <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>? In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>? How do we keep everyone in the loop without everyone getting tangled in everyone else's business? It's all in here.</li>
<li>
<h2>Rules of thumb, and general philosophy</h2>
</li>
<li>Below you'll find a collection of general principles we try to keep
in mind at Basecamp when communicating with teammates, within
departments, across the company, and with the public. They aren't
requirements, but they serve to create boundaries and shared practices
to draw upon when we do the one thing that affects everything else we
do: communicate.
<ul>
<li>You can not not communicate. Not discussing the elephant in the
room is communicating. Few things are as important to study, practice,
and perfect as clear communication.</li>
<li><a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> sometimes, asynchronous most of the time.</li>
<li>Internal communication based on long-form writing, rather than a
verbal tradition of meetings, speaking, and chatting, leads to a
welcomed reduction in meetings, video conferences, calls, or other
<a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> opportunities to interrupt and be interrupted.</li>
<li>Give meaningful discussions a meaningful amount of <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a> to develop
and unfold. Rushing to judgment, or demanding immediate responses,
only serves to increase the odds of poor decision making.</li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> are the last resort, not the first option.</li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> solidifies, <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a> dissolves. Substantial decisions start
and end with an exchange of complete thoughts, not one-line-at-a-time
jousts. If it's important, critical, or fundamental, write it up, don't
chat it down.</li>
<li><a href="http://localhost:5000/speaking" rel="noopener noreferrer">Speaking</a> only helps who’s in the room, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> helps everyone.
This includes people who couldn't make it, or future employees who join
years from now.</li>
<li>If your words can be perceived in different ways, they'll be understood in the way which does the most harm.</li>
<li>Never expect or require someone to get back to you immediately
unless it’s a true emergency. The expectation of immediate response is
toxic.</li>
<li>If you have to repeat yourself, you weren't clear enough the first
time. However, if you're talking about something brand new, you may
have to repeat yourself for years before you're heard. Pick your repeats
wisely.</li>
<li><a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a> creates more work.</li>
<li>Companies don't have communication problems, they have
miscommunication problems. The smaller the company, group, or team, the
fewer opportunities for miscommunication.</li>
<li>Five people in a room for an hour isn't a one hour <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, it's a five hour meeting. Be mindful of the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>.</li>
<li>Be proactive about "wait, what?" questions by providing factual
context and spacial context. Factual are the things people also need to
know. Spacial is where the communication happens (for example, if it's
about a specific to-do, discuss it right under the to-do, not somewhere
else).</li>
<li>Communication shouldn't require schedule synchronization.
Calendars have nothing to do with communication. Writing, rather than
speaking or meeting, is independent of schedule and far more direct.</li>
<li>"Now" is often the wrong time to say what just popped into your
head. It's better to let it filter it through the sieve of time. What's
left is the part worth saying.</li>
<li>Ask yourself if others will feel compelled to rush their response if you rush your approach.</li>
<li>The end of the day has a way of convincing you what you’ve done is
good, but the next morning has a way of telling you the truth. If you
aren't sure, sleep on it before saying it.</li>
<li>If you want an answer, you have to ask a question. People
typically have a lot to say, but they'll volunteer little. Automatic
questions on a regular schedule help people practice sharing, writing,
and communicating.</li>
<li>Occasionally pick random words, sentences, or paragraphs and hit delete. Did it matter?</li>
<li><a href="http://localhost:5000/urgency" rel="noopener noreferrer">Urgency</a> is overrated, ASAP is poison.</li>
<li>If something's going to be difficult to hear or share, invite
questions at the end. Ending without the invitation will lead to public
silence but private conjecture. This is where rumors breed.</li>
<li>Where you put something, and what you call it, matters. When
titling something, lead with the most important information. Keep in
mind that many technical systems truncate long text or titles.</li>
<li>Write at the right time. Sharing something at 5pm may keep someone
at work longer. You may have some spare time on a Sunday afternoon to
write something, but putting it out there on Sunday may pull people back
into work on the weekends. Early Monday morning communication may be
buried by other things. There may not be a perfect time, but there's
certainly a wrong time. Keep that in mind when you hit send.</li>
<li>Great news delivered on the heels of bad news makes both bits
worse. The bad news feels like it's being buried, the good news feels
like it's being injected to change the mood. Be honest with each by
giving them adequate space.</li>
<li>Time is on your side, rushing makes conversations worse.</li>
<li>Communication is lossy, especially verbal communication. Every<br>
hearsay hop adds static and chips at fidelity. Whenever possible,
communicate directly with those you're addressing rather than passing
the message through intermediaries.</li>
<li>Ask if things are clear. Ask what you left out. Ask if there was
anything someone was expecting that you didn't cover. Address the gaps
before they widen with time.</li>
<li>Consider where you put things. The right communication in the
wrong place might as well not exist at all. When someone relies on
search to find something it’s often because it wasn’t where they
expected something to be.</li>
<li>Communication often interrupts, so good communication is often
about saying the right thing at the right time in the right way with the
fewest side effects.</li>
</ul>
</li>
<li>
<h2>Communicating day-to-day</h2>
</li>
<li>This section includes specific examples of how we apply our
philosophy day-to-day across the company. Since communication often
interrupts, valuing each other's time and attention is a critical
consideration. Keeping people in the loop is important, but asking them
to follow along with everything is a distraction. That's why we follow
reliable, predictable methods to share the right kind of information at
the right time in the right place.</li>
<li>
<h3>Basic toolset</h3>
<ul>
<li>98% of our internal communication happens inside <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>. That
means all company-wide discussions, social chatter, project-related
work, sharing of ideas, internal debates, <a href="https://basecamp.com/features/checkin (truncated)

10:45:07.278 [debug] l:len=1

10:45:07.278 [debug] l:buf=6174:<h1>Basecamp Guide to Internal Communication</h1>
<ul>
<li>The how, where, why, and when we communicate. <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a>? <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> chat? In-person? Video? Verbal? Written? Via <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>? In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>? How do we keep everyone in the loop without everyone getting tangled in everyone else's business? It's all in here.</li>
<li>
<h2>Rules of thumb, and general philosophy</h2>
</li>
<li>Below you'll find a collection of general principles we try to keep
in mind at Basecamp when communicating with teammates, within
departments, across the company, and with the public. They aren't
requirements, but they serve to create boundaries and shared practices
to draw upon when we do the one thing that affects everything else we
do: communicate.
<ul>
<li>You can not not communicate. Not discussing the elephant in the
room is communicating. Few things are as important to study, practice,
and perfect as clear communication.</li>
<li><a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> sometimes, asynchronous most of the time.</li>
<li>Internal communication based on long-form writing, rather than a
verbal tradition of meetings, speaking, and chatting, leads to a
welcomed reduction in meetings, video conferences, calls, or other
<a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> opportunities to interrupt and be interrupted.</li>
<li>Give meaningful discussions a meaningful amount of <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a> to develop
and unfold. Rushing to judgment, or demanding immediate responses,
only serves to increase the odds of poor decision making.</li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> are the last resort, not the first option.</li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> solidifies, <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a> dissolves. Substantial decisions start
and end with an exchange of complete thoughts, not one-line-at-a-time
jousts. If it's important, critical, or fundamental, write it up, don't
chat it down.</li>
<li><a href="http://localhost:5000/speaking" rel="noopener noreferrer">Speaking</a> only helps who’s in the room, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> helps everyone.
This includes people who couldn't make it, or future employees who join
years from now.</li>
<li>If your words can be perceived in different ways, they'll be understood in the way which does the most harm.</li>
<li>Never expect or require someone to get back to you immediately
unless it’s a true emergency. The expectation of immediate response is
toxic.</li>
<li>If you have to repeat yourself, you weren't clear enough the first
time. However, if you're talking about something brand new, you may
have to repeat yourself for years before you're heard. Pick your repeats
wisely.</li>
<li><a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a> creates more work.</li>
<li>Companies don't have communication problems, they have
miscommunication problems. The smaller the company, group, or team, the
fewer opportunities for miscommunication.</li>
<li>Five people in a room for an hour isn't a one hour <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, it's a five hour meeting. Be mindful of the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>.</li>
<li>Be proactive about "wait, what?" questions by providing factual
context and spacial context. Factual are the things people also need to
know. Spacial is where the communication happens (for example, if it's
about a specific to-do, discuss it right under the to-do, not somewhere
else).</li>
<li>Communication shouldn't require schedule synchronization.
Calendars have nothing to do with communication. Writing, rather than
speaking or meeting, is independent of schedule and far more direct.</li>
<li>"Now" is often the wrong time to say what just popped into your
head. It's better to let it filter it through the sieve of time. What's
left is the part worth saying.</li>
<li>Ask yourself if others will feel compelled to rush their response if you rush your approach.</li>
<li>The end of the day has a way of convincing you what you’ve done is
good, but the next morning has a way of telling you the truth. If you
aren't sure, sleep on it before saying it.</li>
<li>If you want an answer, you have to ask a question. People
typically have a lot to say, but they'll volunteer little. Automatic
questions on a regular schedule help people practice sharing, writing,
and communicating.</li>
<li>Occasionally pick random words, sentences, or paragraphs and hit delete. Did it matter?</li>
<li><a href="http://localhost:5000/urgency" rel="noopener noreferrer">Urgency</a> is overrated, ASAP is poison.</li>
<li>If something's going to be difficult to hear or share, invite
questions at the end. Ending without the invitation will lead to public
silence but private conjecture. This is where rumors breed.</li>
<li>Where you put something, and what you call it, matters. When
titling something, lead with the most important information. Keep in
mind that many technical systems truncate long text or titles.</li>
<li>Write at the right time. Sharing something at 5pm may keep someone
at work longer. You may have some spare time on a Sunday afternoon to
write something, but putting it out there on Sunday may pull people back
into work on the weekends. Early Monday morning communication may be
buried by other things. There may not be a perfect time, but there's
certainly a wrong time. Keep that in mind when you hit send.</li>
<li>Great news delivered on the heels of bad news makes both bits
worse. The bad news feels like it's being buried, the good news feels
like it's being injected to change the mood. Be honest with each by
giving them adequate space.</li>
<li>Time is on your side, rushing makes conversations worse.</li>
<li>Communication is lossy, especially verbal communication. Every<br>
hearsay hop adds static and chips at fidelity. Whenever possible,
communicate directly with those you're addressing rather than passing
the message through intermediaries.</li>
<li>Ask if things are clear. Ask what you left out. Ask if there was
anything someone was expecting that you didn't cover. Address the gaps
before they widen with time.</li>
<li>Consider where you put things. The right communication in the
wrong place might as well not exist at all. When someone relies on
search to find something it’s often because it wasn’t where they
expected something to be.</li>
<li>Communication often interrupts, so good communication is often
about saying the right thing at the right time in the right way with the
fewest side effects.</li>
</ul>
</li>
<li>
<h2>Communicating day-to-day</h2>
</li>
<li>This section includes specific examples of how we apply our
philosophy day-to-day across the company. Since communication often
interrupts, valuing each other's time and attention is a critical
consideration. Keeping people in the loop is important, but asking them
to follow along with everything is a distraction. That's why we follow
reliable, predictable methods to share the right kind of information at
the right time in the right place.</li>
<li>
<h3>Basic toolset</h3>
<ul>
<li>98% of our internal communication happens inside <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>. That
means all company-wide discussions, social chatter, project-related
work, sharing of ideas, internal debates, <a href="https://basecamp.com/features/checkins (truncated)

10:45:07.278 [debug] l:len=16

10:45:07.278 [debug] l:buf=174:<h1>Basecamp Guide to Internal Communication</h1>
<ul>
<li>The how, where, why, and when we communicate. <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a>? <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> chat? In-person? Video? Verbal? Written? Via <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>? In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>? How do we keep everyone in the loop without everyone getting tangled in everyone else's business? It's all in here.</li>
<li>
<h2>Rules of thumb, and general philosophy</h2>
</li>
<li>Below you'll find a collection of general principles we try to keep
in mind at Basecamp when communicating with teammates, within
departments, across the company, and with the public. They aren't
requirements, but they serve to create boundaries and shared practices
to draw upon when we do the one thing that affects everything else we
do: communicate.
<ul>
<li>You can not not communicate. Not discussing the elephant in the
room is communicating. Few things are as important to study, practice,
and perfect as clear communication.</li>
<li><a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> sometimes, asynchronous most of the time.</li>
<li>Internal communication based on long-form writing, rather than a
verbal tradition of meetings, speaking, and chatting, leads to a
welcomed reduction in meetings, video conferences, calls, or other
<a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> opportunities to interrupt and be interrupted.</li>
<li>Give meaningful discussions a meaningful amount of <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a> to develop
and unfold. Rushing to judgment, or demanding immediate responses,
only serves to increase the odds of poor decision making.</li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> are the last resort, not the first option.</li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> solidifies, <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a> dissolves. Substantial decisions start
and end with an exchange of complete thoughts, not one-line-at-a-time
jousts. If it's important, critical, or fundamental, write it up, don't
chat it down.</li>
<li><a href="http://localhost:5000/speaking" rel="noopener noreferrer">Speaking</a> only helps who’s in the room, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> helps everyone.
This includes people who couldn't make it, or future employees who join
years from now.</li>
<li>If your words can be perceived in different ways, they'll be understood in the way which does the most harm.</li>
<li>Never expect or require someone to get back to you immediately
unless it’s a true emergency. The expectation of immediate response is
toxic.</li>
<li>If you have to repeat yourself, you weren't clear enough the first
time. However, if you're talking about something brand new, you may
have to repeat yourself for years before you're heard. Pick your repeats
wisely.</li>
<li><a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a> creates more work.</li>
<li>Companies don't have communication problems, they have
miscommunication problems. The smaller the company, group, or team, the
fewer opportunities for miscommunication.</li>
<li>Five people in a room for an hour isn't a one hour <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, it's a five hour meeting. Be mindful of the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>.</li>
<li>Be proactive about "wait, what?" questions by providing factual
context and spacial context. Factual are the things people also need to
know. Spacial is where the communication happens (for example, if it's
about a specific to-do, discuss it right under the to-do, not somewhere
else).</li>
<li>Communication shouldn't require schedule synchronization.
Calendars have nothing to do with communication. Writing, rather than
speaking or meeting, is independent of schedule and far more direct.</li>
<li>"Now" is often the wrong time to say what just popped into your
head. It's better to let it filter it through the sieve of time. What's
left is the part worth saying.</li>
<li>Ask yourself if others will feel compelled to rush their response if you rush your approach.</li>
<li>The end of the day has a way of convincing you what you’ve done is
good, but the next morning has a way of telling you the truth. If you
aren't sure, sleep on it before saying it.</li>
<li>If you want an answer, you have to ask a question. People
typically have a lot to say, but they'll volunteer little. Automatic
questions on a regular schedule help people practice sharing, writing,
and communicating.</li>
<li>Occasionally pick random words, sentences, or paragraphs and hit delete. Did it matter?</li>
<li><a href="http://localhost:5000/urgency" rel="noopener noreferrer">Urgency</a> is overrated, ASAP is poison.</li>
<li>If something's going to be difficult to hear or share, invite
questions at the end. Ending without the invitation will lead to public
silence but private conjecture. This is where rumors breed.</li>
<li>Where you put something, and what you call it, matters. When
titling something, lead with the most important information. Keep in
mind that many technical systems truncate long text or titles.</li>
<li>Write at the right time. Sharing something at 5pm may keep someone
at work longer. You may have some spare time on a Sunday afternoon to
write something, but putting it out there on Sunday may pull people back
into work on the weekends. Early Monday morning communication may be
buried by other things. There may not be a perfect time, but there's
certainly a wrong time. Keep that in mind when you hit send.</li>
<li>Great news delivered on the heels of bad news makes both bits
worse. The bad news feels like it's being buried, the good news feels
like it's being injected to change the mood. Be honest with each by
giving them adequate space.</li>
<li>Time is on your side, rushing makes conversations worse.</li>
<li>Communication is lossy, especially verbal communication. Every<br>
hearsay hop adds static and chips at fidelity. Whenever possible,
communicate directly with those you're addressing rather than passing
the message through intermediaries.</li>
<li>Ask if things are clear. Ask what you left out. Ask if there was
anything someone was expecting that you didn't cover. Address the gaps
before they widen with time.</li>
<li>Consider where you put things. The right communication in the
wrong place might as well not exist at all. When someone relies on
search to find something it’s often because it wasn’t where they
expected something to be.</li>
<li>Communication often interrupts, so good communication is often
about saying the right thing at the right time in the right way with the
fewest side effects.</li>
</ul>
</li>
<li>
<h2>Communicating day-to-day</h2>
</li>
<li>This section includes specific examples of how we apply our
philosophy day-to-day across the company. Since communication often
interrupts, valuing each other's time and attention is a critical
consideration. Keeping people in the loop is important, but asking them
to follow along with everything is a distraction. That's why we follow
reliable, predictable methods to share the right kind of information at
the right time in the right place.</li>
<li>
<h3>Basic toolset</h3>
<ul>
<li>98% of our internal communication happens inside <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>. That
means all company-wide discussions, social chatter, project-related
work, sharing of ideas, internal debates, <a href="https://basecamp.com/features/checkins" (truncated)

10:45:07.278 [debug] l:len=161

10:45:07.278 [debug] l:buf=74:<h1>Basecamp Guide to Internal Communication</h1>
<ul>
<li>The how, where, why, and when we communicate. <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a>? <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> chat? In-person? Video? Verbal? Written? Via <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>? In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>? How do we keep everyone in the loop without everyone getting tangled in everyone else's business? It's all in here.</li>
<li>
<h2>Rules of thumb, and general philosophy</h2>
</li>
<li>Below you'll find a collection of general principles we try to keep
in mind at Basecamp when communicating with teammates, within
departments, across the company, and with the public. They aren't
requirements, but they serve to create boundaries and shared practices
to draw upon when we do the one thing that affects everything else we
do: communicate.
<ul>
<li>You can not not communicate. Not discussing the elephant in the
room is communicating. Few things are as important to study, practice,
and perfect as clear communication.</li>
<li><a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> sometimes, asynchronous most of the time.</li>
<li>Internal communication based on long-form writing, rather than a
verbal tradition of meetings, speaking, and chatting, leads to a
welcomed reduction in meetings, video conferences, calls, or other
<a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> opportunities to interrupt and be interrupted.</li>
<li>Give meaningful discussions a meaningful amount of <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a> to develop
and unfold. Rushing to judgment, or demanding immediate responses,
only serves to increase the odds of poor decision making.</li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> are the last resort, not the first option.</li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> solidifies, <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a> dissolves. Substantial decisions start
and end with an exchange of complete thoughts, not one-line-at-a-time
jousts. If it's important, critical, or fundamental, write it up, don't
chat it down.</li>
<li><a href="http://localhost:5000/speaking" rel="noopener noreferrer">Speaking</a> only helps who’s in the room, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> helps everyone.
This includes people who couldn't make it, or future employees who join
years from now.</li>
<li>If your words can be perceived in different ways, they'll be understood in the way which does the most harm.</li>
<li>Never expect or require someone to get back to you immediately
unless it’s a true emergency. The expectation of immediate response is
toxic.</li>
<li>If you have to repeat yourself, you weren't clear enough the first
time. However, if you're talking about something brand new, you may
have to repeat yourself for years before you're heard. Pick your repeats
wisely.</li>
<li><a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a> creates more work.</li>
<li>Companies don't have communication problems, they have
miscommunication problems. The smaller the company, group, or team, the
fewer opportunities for miscommunication.</li>
<li>Five people in a room for an hour isn't a one hour <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, it's a five hour meeting. Be mindful of the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>.</li>
<li>Be proactive about "wait, what?" questions by providing factual
context and spacial context. Factual are the things people also need to
know. Spacial is where the communication happens (for example, if it's
about a specific to-do, discuss it right under the to-do, not somewhere
else).</li>
<li>Communication shouldn't require schedule synchronization.
Calendars have nothing to do with communication. Writing, rather than
speaking or meeting, is independent of schedule and far more direct.</li>
<li>"Now" is often the wrong time to say what just popped into your
head. It's better to let it filter it through the sieve of time. What's
left is the part worth saying.</li>
<li>Ask yourself if others will feel compelled to rush their response if you rush your approach.</li>
<li>The end of the day has a way of convincing you what you’ve done is
good, but the next morning has a way of telling you the truth. If you
aren't sure, sleep on it before saying it.</li>
<li>If you want an answer, you have to ask a question. People
typically have a lot to say, but they'll volunteer little. Automatic
questions on a regular schedule help people practice sharing, writing,
and communicating.</li>
<li>Occasionally pick random words, sentences, or paragraphs and hit delete. Did it matter?</li>
<li><a href="http://localhost:5000/urgency" rel="noopener noreferrer">Urgency</a> is overrated, ASAP is poison.</li>
<li>If something's going to be difficult to hear or share, invite
questions at the end. Ending without the invitation will lead to public
silence but private conjecture. This is where rumors breed.</li>
<li>Where you put something, and what you call it, matters. When
titling something, lead with the most important information. Keep in
mind that many technical systems truncate long text or titles.</li>
<li>Write at the right time. Sharing something at 5pm may keep someone
at work longer. You may have some spare time on a Sunday afternoon to
write something, but putting it out there on Sunday may pull people back
into work on the weekends. Early Monday morning communication may be
buried by other things. There may not be a perfect time, but there's
certainly a wrong time. Keep that in mind when you hit send.</li>
<li>Great news delivered on the heels of bad news makes both bits
worse. The bad news feels like it's being buried, the good news feels
like it's being injected to change the mood. Be honest with each by
giving them adequate space.</li>
<li>Time is on your side, rushing makes conversations worse.</li>
<li>Communication is lossy, especially verbal communication. Every<br>
hearsay hop adds static and chips at fidelity. Whenever possible,
communicate directly with those you're addressing rather than passing
the message through intermediaries.</li>
<li>Ask if things are clear. Ask what you left out. Ask if there was
anything someone was expecting that you didn't cover. Address the gaps
before they widen with time.</li>
<li>Consider where you put things. The right communication in the
wrong place might as well not exist at all. When someone relies on
search to find something it’s often because it wasn’t where they
expected something to be.</li>
<li>Communication often interrupts, so good communication is often
about saying the right thing at the right time in the right way with the
fewest side effects.</li>
</ul>
</li>
<li>
<h2>Communicating day-to-day</h2>
</li>
<li>This section includes specific examples of how we apply our
philosophy day-to-day across the company. Since communication often
interrupts, valuing each other's time and attention is a critical
consideration. Keeping people in the loop is important, but asking them
to follow along with everything is a distraction. That's why we follow
reliable, predictable methods to share the right kind of information at
the right time in the right place.</li>
<li>
<h3>Basic toolset</h3>
<ul>
<li>98% of our internal communication happens inside <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>. That
means all company-wide discussions, social chatter, project-related
work, sharing of ideas, internal debates, <a href="https://basecamp.com/features/checkins"  (truncated)

10:45:07.278 [debug] l:len=1617

10:45:07.278 [debug] l:buf=4:<h1>Basecamp Guide to Internal Communication</h1>
<ul>
<li>The how, where, why, and when we communicate. <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a> <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a>? <a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> chat? In-person? Video? Verbal? Written? Via <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>? In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>? How do we keep everyone in the loop without everyone getting tangled in everyone else's business? It's all in here.</li>
<li>
<h2>Rules of thumb, and general philosophy</h2>
</li>
<li>Below you'll find a collection of general principles we try to keep
in mind at Basecamp when communicating with teammates, within
departments, across the company, and with the public. They aren't
requirements, but they serve to create boundaries and shared practices
to draw upon when we do the one thing that affects everything else we
do: communicate.
<ul>
<li>You can not not communicate. Not discussing the elephant in the
room is communicating. Few things are as important to study, practice,
and perfect as clear communication.</li>
<li><a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> sometimes, asynchronous most of the time.</li>
<li>Internal communication based on long-form writing, rather than a
verbal tradition of meetings, speaking, and chatting, leads to a
welcomed reduction in meetings, video conferences, calls, or other
<a href="http://localhost:5000/real-time" rel="noopener noreferrer">Real-time</a> opportunities to interrupt and be interrupted.</li>
<li>Give meaningful discussions a meaningful amount of <a href="http://localhost:5000/time" rel="noopener noreferrer">time</a> to develop
and unfold. Rushing to judgment, or demanding immediate responses,
only serves to increase the odds of poor decision making.</li>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> are the last resort, not the first option.</li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> solidifies, <a href="http://localhost:5000/chat" rel="noopener noreferrer">chat</a> dissolves. Substantial decisions start
and end with an exchange of complete thoughts, not one-line-at-a-time
jousts. If it's important, critical, or fundamental, write it up, don't
chat it down.</li>
<li><a href="http://localhost:5000/speaking" rel="noopener noreferrer">Speaking</a> only helps who’s in the room, <a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a> helps everyone.
This includes people who couldn't make it, or future employees who join
years from now.</li>
<li>If your words can be perceived in different ways, they'll be understood in the way which does the most harm.</li>
<li>Never expect or require someone to get back to you immediately
unless it’s a true emergency. The expectation of immediate response is
toxic.</li>
<li>If you have to repeat yourself, you weren't clear enough the first
time. However, if you're talking about something brand new, you may
have to repeat yourself for years before you're heard. Pick your repeats
wisely.</li>
<li><a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a> creates more work.</li>
<li>Companies don't have communication problems, they have
miscommunication problems. The smaller the company, group, or team, the
fewer opportunities for miscommunication.</li>
<li>Five people in a room for an hour isn't a one hour <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a>, it's a five hour meeting. Be mindful of the <a href="http://localhost:5000/tradeoffs" rel="noopener noreferrer">tradeoffs</a>.</li>
<li>Be proactive about "wait, what?" questions by providing factual
context and spacial context. Factual are the things people also need to
know. Spacial is where the communication happens (for example, if it's
about a specific to-do, discuss it right under the to-do, not somewhere
else).</li>
<li>Communication shouldn't require schedule synchronization.
Calendars have nothing to do with communication. Writing, rather than
speaking or meeting, is independent of schedule and far more direct.</li>
<li>"Now" is often the wrong time to say what just popped into your
head. It's better to let it filter it through the sieve of time. What's
left is the part worth saying.</li>
<li>Ask yourself if others will feel compelled to rush their response if you rush your approach.</li>
<li>The end of the day has a way of convincing you what you’ve done is
good, but the next morning has a way of telling you the truth. If you
aren't sure, sleep on it before saying it.</li>
<li>If you want an answer, you have to ask a question. People
typically have a lot to say, but they'll volunteer little. Automatic
questions on a regular schedule help people practice sharing, writing,
and communicating.</li>
<li>Occasionally pick random words, sentences, or paragraphs and hit delete. Did it matter?</li>
<li><a href="http://localhost:5000/urgency" rel="noopener noreferrer">Urgency</a> is overrated, ASAP is poison.</li>
<li>If something's going to be difficult to hear or share, invite
questions at the end. Ending without the invitation will lead to public
silence but private conjecture. This is where rumors breed.</li>
<li>Where you put something, and what you call it, matters. When
titling something, lead with the most important information. Keep in
mind that many technical systems truncate long text or titles.</li>
<li>Write at the right time. Sharing something at 5pm may keep someone
at work longer. You may have some spare time on a Sunday afternoon to
write something, but putting it out there on Sunday may pull people back
into work on the weekends. Early Monday morning communication may be
buried by other things. There may not be a perfect time, but there's
certainly a wrong time. Keep that in mind when you hit send.</li>
<li>Great news delivered on the heels of bad news makes both bits
worse. The bad news feels like it's being buried, the good news feels
like it's being injected to change the mood. Be honest with each by
giving them adequate space.</li>
<li>Time is on your side, rushing makes conversations worse.</li>
<li>Communication is lossy, especially verbal communication. Every<br>
hearsay hop adds static and chips at fidelity. Whenever possible,
communicate directly with those you're addressing rather than passing
the message through intermediaries.</li>
<li>Ask if things are clear. Ask what you left out. Ask if there was
anything someone was expecting that you didn't cover. Address the gaps
before they widen with time.</li>
<li>Consider where you put things. The right communication in the
wrong place might as well not exist at all. When someone relies on
search to find something it’s often because it wasn’t where they
expected something to be.</li>
<li>Communication often interrupts, so good communication is often
about saying the right thing at the right time in the right way with the
fewest side effects.</li>
</ul>
</li>
<li>
<h2>Communicating day-to-day</h2>
</li>
<li>This section includes specific examples of how we apply our
philosophy day-to-day across the company. Since communication often
interrupts, valuing each other's time and attention is a critical
consideration. Keeping people in the loop is important, but asking them
to follow along with everything is a distraction. That's why we follow
reliable, predictable methods to share the right kind of information at
the right time in the right place.</li>
<li>
<h3>Basic toolset</h3>
<ul>
<li>98% of our internal communication happens inside <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>. That
means all company-wide discussions, social chatter, project-related
work, sharing of ideas, internal debates, <a href="https://basecamp.com/features/checkins" r (truncated)

10:45:07.278 [debug] l:len=

10:45:07.278 [debug] l:buf empty

10:45:07.278 [debug] l:len=

10:45:07.278 [debug] l:buf=271:<h1>Cypress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.278 [debug] l:len=2

10:45:07.279 [debug] l:buf=71:<h1>Cypress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.279 [debug] l:len=27

10:45:07.279 [debug] l:buf=1:<h1>Cypress</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf empty

10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf=424:<h1>Slack channel bloat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
</ul>


10:45:07.279 [debug] l:len=4

10:45:07.279 [debug] l:buf=24:<h1>Slack channel bloat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
</ul>


10:45:07.279 [debug] l:len=42

10:45:07.279 [debug] l:buf=4:<h1>Slack channel bloat</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
</ul>


10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf empty

10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf=246:<h1>processes</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.279 [debug] l:len=2

10:45:07.279 [debug] l:buf=46:<h1>processes</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.279 [debug] l:len=24

10:45:07.279 [debug] l:buf=6:<h1>processes</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf empty

10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf=731:<h1>Elixir MOC</h1>
<ul>
<li><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></li>
<li><a href="http://localhost:5000/cleaner-api's-with-the-facade-pattern" rel="noopener noreferrer">Cleaner API's with the Facade Pattern</a></li>
<li><a href="http://localhost:5000/destributed-elixir" rel="noopener noreferrer">Destributed Elixir</a></li>
<li><a href="http://localhost:5000/elixir---lessons-learned" rel="noopener noreferrer">Elixir - Lessons Learned</a></li>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.279 [debug] l:len=7

10:45:07.279 [debug] l:buf=31:<h1>Elixir MOC</h1>
<ul>
<li><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></li>
<li><a href="http://localhost:5000/cleaner-api's-with-the-facade-pattern" rel="noopener noreferrer">Cleaner API's with the Facade Pattern</a></li>
<li><a href="http://localhost:5000/destributed-elixir" rel="noopener noreferrer">Destributed Elixir</a></li>
<li><a href="http://localhost:5000/elixir---lessons-learned" rel="noopener noreferrer">Elixir - Lessons Learned</a></li>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.279 [debug] l:len=73

10:45:07.279 [debug] l:buf=1:<h1>Elixir MOC</h1>
<ul>
<li><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></li>
<li><a href="http://localhost:5000/cleaner-api's-with-the-facade-pattern" rel="noopener noreferrer">Cleaner API's with the Facade Pattern</a></li>
<li><a href="http://localhost:5000/destributed-elixir" rel="noopener noreferrer">Destributed Elixir</a></li>
<li><a href="http://localhost:5000/elixir---lessons-learned" rel="noopener noreferrer">Elixir - Lessons Learned</a></li>
<li><a href="http://localhost:5000/elixir-learning-path" rel="noopener noreferrer">Elixir Learning Path</a></li>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
</ul>


10:45:07.279 [debug] l:len=

10:45:07.279 [debug] l:buf empty

10:45:07.279 [debug] l:len=

10:45:07.280 [debug] l:buf=753:<h1>Crossing the Chasm by Geoffrey Moore</h1>
<p>The idea that <a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a> will often get a product but it will fail to make it into the mainstream because people that aren't early adopters  (<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>, late majority and  <a href="http://localhost:5000/laggards" rel="noopener noreferrer">Laggards</a>) generally care more about the "safety of the herd".</p>
<p>Based my talk on this: <a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></p>


10:45:07.280 [debug] l:len=7

10:45:07.280 [debug] l:buf=53:<h1>Crossing the Chasm by Geoffrey Moore</h1>
<p>The idea that <a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a> will often get a product but it will fail to make it into the mainstream because people that aren't early adopters  (<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>, late majority and  <a href="http://localhost:5000/laggards" rel="noopener noreferrer">Laggards</a>) generally care more about the "safety of the herd".</p>
<p>Based my talk on this: <a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></p>


10:45:07.280 [debug] l:len=75

10:45:07.280 [debug] l:buf=3:<h1>Crossing the Chasm by Geoffrey Moore</h1>
<p>The idea that <a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a> will often get a product but it will fail to make it into the mainstream because people that aren't early adopters  (<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>, late majority and  <a href="http://localhost:5000/laggards" rel="noopener noreferrer">Laggards</a>) generally care more about the "safety of the herd".</p>
<p>Based my talk on this: <a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></p>


10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf empty

10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf=2569:<p>Android learning notes</p>
<h2>Creating Views Dynamically</h2>
<pre><code>var textViewAppContext = new TextView(getApplicationContext() /* also "this" if you want to do activity */)
// set some stuff on the textView

layout.addView(textViewAppContext)
</code></pre>
<h2>Context</h2>
<ul>
<li>
<p>a handle to the android system</p>
<ul>
<li>Resources layouts, strings, images</li>
<li>System services (LayouteInflator, SharedPreferences...)</li>
<li>Launching Activities</li>
<li>Access Databases</li>
<li>Etc...</li>
</ul>
</li>
<li>
<p>Typical Subclasses</p>
<ul>
<li>Activity</li>
<li>Application</li>
<li>Service</li>
</ul>
</li>
<li>
<p>Activity Context only lasts as long as it's alive</p>
<ul>
<li>if you hold a reference to it you could cause a memory leak because it won't allow the Activity to garbage collect</li>
</ul>
</li>
<li>
<p>Application lasts forever? <code>getApplicationContext()</code></p>
</li>
<li>
<p>Often you pass "this"?</p>
</li>
</ul>
<h2>ViewPager</h2>
<ul>
<li>
<p>ViewPager → Controlls the actually swiping between views</p>
</li>
<li>
<p>ViewPager <em>gets it's content</em> from a PagerAdapter</p>
</li>
<li>
<p>1 View per page → Pager Adapter</p>
</li>
<li>
<p>A Fragment for each page → FragmentPagerAdapter (for fragments)</p>
<ul>
<li>this keeps each page in memory, which can be expensive if you have a lot</li>
</ul>
</li>
<li>
<p>FragmentStatePagerAdapter</p>
<ul>
<li>Destory &amp; Recreate fragments</li>
</ul>
</li>
</ul>
<p>ViewPager2 is the one I should use</p>
<h2>ViewModel</h2>
<p>learned from: <a href="https://www.youtube.com/watch?v=5qlIPTDE274" rel="noopener noreferrer">https://www.youtube.com/watch?v=5qlIPTDE274</a></p>
<p>View Models survive "Configuration Changes"</p>
<p>Rotating a phone basically tears down your activity and re-creates it</p>
<p>this clears out all local state</p>
<p>ViewModels survive therefore don't have this problem</p>
<p>Also they have a better separation of concerns</p>
<ul>
<li>ViewModel: holds UI data (Login form state, etc...)</li>
<li>Activity: Displays the ViewModel's UI centric data</li>
<li>Repository: API for saving/loading app data</li>
</ul>
<p>WARNING: these do not save their state if the process closes down, <code>onSaveInstanceState</code> does</p>
<h3>LiveData</h3>
<p>A class that will broadcast changes to data (create reactive data)</p>
<ul>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
</ul>


10:45:07.280 [debug] l:len=2

10:45:07.280 [debug] l:buf=569:<p>Android learning notes</p>
<h2>Creating Views Dynamically</h2>
<pre><code>var textViewAppContext = new TextView(getApplicationContext() /* also "this" if you want to do activity */)
// set some stuff on the textView

layout.addView(textViewAppContext)
</code></pre>
<h2>Context</h2>
<ul>
<li>
<p>a handle to the android system</p>
<ul>
<li>Resources layouts, strings, images</li>
<li>System services (LayouteInflator, SharedPreferences...)</li>
<li>Launching Activities</li>
<li>Access Databases</li>
<li>Etc...</li>
</ul>
</li>
<li>
<p>Typical Subclasses</p>
<ul>
<li>Activity</li>
<li>Application</li>
<li>Service</li>
</ul>
</li>
<li>
<p>Activity Context only lasts as long as it's alive</p>
<ul>
<li>if you hold a reference to it you could cause a memory leak because it won't allow the Activity to garbage collect</li>
</ul>
</li>
<li>
<p>Application lasts forever? <code>getApplicationContext()</code></p>
</li>
<li>
<p>Often you pass "this"?</p>
</li>
</ul>
<h2>ViewPager</h2>
<ul>
<li>
<p>ViewPager → Controlls the actually swiping between views</p>
</li>
<li>
<p>ViewPager <em>gets it's content</em> from a PagerAdapter</p>
</li>
<li>
<p>1 View per page → Pager Adapter</p>
</li>
<li>
<p>A Fragment for each page → FragmentPagerAdapter (for fragments)</p>
<ul>
<li>this keeps each page in memory, which can be expensive if you have a lot</li>
</ul>
</li>
<li>
<p>FragmentStatePagerAdapter</p>
<ul>
<li>Destory &amp; Recreate fragments</li>
</ul>
</li>
</ul>
<p>ViewPager2 is the one I should use</p>
<h2>ViewModel</h2>
<p>learned from: <a href="https://www.youtube.com/watch?v=5qlIPTDE274" rel="noopener noreferrer">https://www.youtube.com/watch?v=5qlIPTDE274</a></p>
<p>View Models survive "Configuration Changes"</p>
<p>Rotating a phone basically tears down your activity and re-creates it</p>
<p>this clears out all local state</p>
<p>ViewModels survive therefore don't have this problem</p>
<p>Also they have a better separation of concerns</p>
<ul>
<li>ViewModel: holds UI data (Login form state, etc...)</li>
<li>Activity: Displays the ViewModel's UI centric data</li>
<li>Repository: API for saving/loading app data</li>
</ul>
<p>WARNING: these do not save their state if the process closes down, <code>onSaveInstanceState</code> does</p>
<h3>LiveData</h3>
<p>A class that will broadcast changes to data (create reactive data)</p>
<ul>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
</ul>


10:45:07.280 [debug] l:len=25

10:45:07.280 [debug] l:buf=69:<p>Android learning notes</p>
<h2>Creating Views Dynamically</h2>
<pre><code>var textViewAppContext = new TextView(getApplicationContext() /* also "this" if you want to do activity */)
// set some stuff on the textView

layout.addView(textViewAppContext)
</code></pre>
<h2>Context</h2>
<ul>
<li>
<p>a handle to the android system</p>
<ul>
<li>Resources layouts, strings, images</li>
<li>System services (LayouteInflator, SharedPreferences...)</li>
<li>Launching Activities</li>
<li>Access Databases</li>
<li>Etc...</li>
</ul>
</li>
<li>
<p>Typical Subclasses</p>
<ul>
<li>Activity</li>
<li>Application</li>
<li>Service</li>
</ul>
</li>
<li>
<p>Activity Context only lasts as long as it's alive</p>
<ul>
<li>if you hold a reference to it you could cause a memory leak because it won't allow the Activity to garbage collect</li>
</ul>
</li>
<li>
<p>Application lasts forever? <code>getApplicationContext()</code></p>
</li>
<li>
<p>Often you pass "this"?</p>
</li>
</ul>
<h2>ViewPager</h2>
<ul>
<li>
<p>ViewPager → Controlls the actually swiping between views</p>
</li>
<li>
<p>ViewPager <em>gets it's content</em> from a PagerAdapter</p>
</li>
<li>
<p>1 View per page → Pager Adapter</p>
</li>
<li>
<p>A Fragment for each page → FragmentPagerAdapter (for fragments)</p>
<ul>
<li>this keeps each page in memory, which can be expensive if you have a lot</li>
</ul>
</li>
<li>
<p>FragmentStatePagerAdapter</p>
<ul>
<li>Destory &amp; Recreate fragments</li>
</ul>
</li>
</ul>
<p>ViewPager2 is the one I should use</p>
<h2>ViewModel</h2>
<p>learned from: <a href="https://www.youtube.com/watch?v=5qlIPTDE274" rel="noopener noreferrer">https://www.youtube.com/watch?v=5qlIPTDE274</a></p>
<p>View Models survive "Configuration Changes"</p>
<p>Rotating a phone basically tears down your activity and re-creates it</p>
<p>this clears out all local state</p>
<p>ViewModels survive therefore don't have this problem</p>
<p>Also they have a better separation of concerns</p>
<ul>
<li>ViewModel: holds UI data (Login form state, etc...)</li>
<li>Activity: Displays the ViewModel's UI centric data</li>
<li>Repository: API for saving/loading app data</li>
</ul>
<p>WARNING: these do not save their state if the process closes down, <code>onSaveInstanceState</code> does</p>
<h3>LiveData</h3>
<p>A class that will broadcast changes to data (create reactive data)</p>
<ul>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
</ul>


10:45:07.280 [debug] l:len=256

10:45:07.280 [debug] l:buf=9:<p>Android learning notes</p>
<h2>Creating Views Dynamically</h2>
<pre><code>var textViewAppContext = new TextView(getApplicationContext() /* also "this" if you want to do activity */)
// set some stuff on the textView

layout.addView(textViewAppContext)
</code></pre>
<h2>Context</h2>
<ul>
<li>
<p>a handle to the android system</p>
<ul>
<li>Resources layouts, strings, images</li>
<li>System services (LayouteInflator, SharedPreferences...)</li>
<li>Launching Activities</li>
<li>Access Databases</li>
<li>Etc...</li>
</ul>
</li>
<li>
<p>Typical Subclasses</p>
<ul>
<li>Activity</li>
<li>Application</li>
<li>Service</li>
</ul>
</li>
<li>
<p>Activity Context only lasts as long as it's alive</p>
<ul>
<li>if you hold a reference to it you could cause a memory leak because it won't allow the Activity to garbage collect</li>
</ul>
</li>
<li>
<p>Application lasts forever? <code>getApplicationContext()</code></p>
</li>
<li>
<p>Often you pass "this"?</p>
</li>
</ul>
<h2>ViewPager</h2>
<ul>
<li>
<p>ViewPager → Controlls the actually swiping between views</p>
</li>
<li>
<p>ViewPager <em>gets it's content</em> from a PagerAdapter</p>
</li>
<li>
<p>1 View per page → Pager Adapter</p>
</li>
<li>
<p>A Fragment for each page → FragmentPagerAdapter (for fragments)</p>
<ul>
<li>this keeps each page in memory, which can be expensive if you have a lot</li>
</ul>
</li>
<li>
<p>FragmentStatePagerAdapter</p>
<ul>
<li>Destory &amp; Recreate fragments</li>
</ul>
</li>
</ul>
<p>ViewPager2 is the one I should use</p>
<h2>ViewModel</h2>
<p>learned from: <a href="https://www.youtube.com/watch?v=5qlIPTDE274" rel="noopener noreferrer">https://www.youtube.com/watch?v=5qlIPTDE274</a></p>
<p>View Models survive "Configuration Changes"</p>
<p>Rotating a phone basically tears down your activity and re-creates it</p>
<p>this clears out all local state</p>
<p>ViewModels survive therefore don't have this problem</p>
<p>Also they have a better separation of concerns</p>
<ul>
<li>ViewModel: holds UI data (Login form state, etc...)</li>
<li>Activity: Displays the ViewModel's UI centric data</li>
<li>Repository: API for saving/loading app data</li>
</ul>
<p>WARNING: these do not save their state if the process closes down, <code>onSaveInstanceState</code> does</p>
<h3>LiveData</h3>
<p>A class that will broadcast changes to data (create reactive data)</p>
<ul>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
</ul>


10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf empty

10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf=401:<h1>self help</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.280 [debug] l:len=4

10:45:07.280 [debug] l:buf=01:<h1>self help</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.280 [debug] l:len=40

10:45:07.280 [debug] l:buf=1:<h1>self help</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf empty

10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf=246:<h1>Shape Up First Chapter Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.280 [debug] l:len=2

10:45:07.280 [debug] l:buf=46:<h1>Shape Up First Chapter Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.280 [debug] l:len=24

10:45:07.280 [debug] l:buf=6:<h1>Shape Up First Chapter Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.280 [debug] l:len=

10:45:07.280 [debug] l:buf empty

10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf=89:<h1>Convincing Coworkers</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.281 [debug] l:len=8

10:45:07.281 [debug] l:buf=9:<h1>Convincing Coworkers</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf empty

10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf=560:<h1>Testing with pre-conditions like scientific experiment</h1>
<p>If you don't assert that the thing is in the right state <em>before</em> you you make your change you don't know if it was already in the bad state or not, or if your test did anything.</p>
<p>Think of yourself like a scientist. You:</p>
<ol>
<li>Test that it's in the expected state before hand</li>
<li>Make the change</li>
<li>Make sure it's different or not different as expected</li>
</ol>
<ul>
<li><a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a></li>
</ul>


10:45:07.281 [debug] l:len=5

10:45:07.281 [debug] l:buf=60:<h1>Testing with pre-conditions like scientific experiment</h1>
<p>If you don't assert that the thing is in the right state <em>before</em> you you make your change you don't know if it was already in the bad state or not, or if your test did anything.</p>
<p>Think of yourself like a scientist. You:</p>
<ol>
<li>Test that it's in the expected state before hand</li>
<li>Make the change</li>
<li>Make sure it's different or not different as expected</li>
</ol>
<ul>
<li><a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a></li>
</ul>


10:45:07.281 [debug] l:len=56

10:45:07.281 [debug] l:buf=0:<h1>Testing with pre-conditions like scientific experiment</h1>
<p>If you don't assert that the thing is in the right state <em>before</em> you you make your change you don't know if it was already in the bad state or not, or if your test did anything.</p>
<p>Think of yourself like a scientist. You:</p>
<ol>
<li>Test that it's in the expected state before hand</li>
<li>Make the change</li>
<li>Make sure it's different or not different as expected</li>
</ol>
<ul>
<li><a href="http://localhost:5000/testing" rel="noopener noreferrer">Testing</a></li>
</ul>


10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf empty

10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf=717:<h1>How to run Dgraph</h1>
<h1>Dgraph Notes:</h1>
<p>Get docker image:</p>
<pre><code>docker pull dgraph/dgraph
</code></pre>
<p>Get it going:</p>
<pre><code>
mkdir -p ~/dgraph

# Run dgraphzero
docker run -it -p 8081:8081 -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph --name dgraph dgraph/dgraph dgraph zero --port_offset=-2000

# In another terminal, now run dgraph
docker exec -it dgraph dgraph server --bindall=true --memory_mb 2048 --zero localhost:5080

# Run ratel(Dgraph UI)
docker exec -it dgraph dgraph-ratel
</code></pre>
<p>See UI: <a href="http://localhost:8081/" rel="noopener noreferrer">Dgraph Ratel Dashboard</a></p>
<p><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></p>


10:45:07.281 [debug] l:len=7

10:45:07.281 [debug] l:buf=17:<h1>How to run Dgraph</h1>
<h1>Dgraph Notes:</h1>
<p>Get docker image:</p>
<pre><code>docker pull dgraph/dgraph
</code></pre>
<p>Get it going:</p>
<pre><code>
mkdir -p ~/dgraph

# Run dgraphzero
docker run -it -p 8081:8081 -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph --name dgraph dgraph/dgraph dgraph zero --port_offset=-2000

# In another terminal, now run dgraph
docker exec -it dgraph dgraph server --bindall=true --memory_mb 2048 --zero localhost:5080

# Run ratel(Dgraph UI)
docker exec -it dgraph dgraph-ratel
</code></pre>
<p>See UI: <a href="http://localhost:8081/" rel="noopener noreferrer">Dgraph Ratel Dashboard</a></p>
<p><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></p>


10:45:07.281 [debug] l:len=71

10:45:07.281 [debug] l:buf=7:<h1>How to run Dgraph</h1>
<h1>Dgraph Notes:</h1>
<p>Get docker image:</p>
<pre><code>docker pull dgraph/dgraph
</code></pre>
<p>Get it going:</p>
<pre><code>
mkdir -p ~/dgraph

# Run dgraphzero
docker run -it -p 8081:8081 -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph --name dgraph dgraph/dgraph dgraph zero --port_offset=-2000

# In another terminal, now run dgraph
docker exec -it dgraph dgraph server --bindall=true --memory_mb 2048 --zero localhost:5080

# Run ratel(Dgraph UI)
docker exec -it dgraph dgraph-ratel
</code></pre>
<p>See UI: <a href="http://localhost:8081/" rel="noopener noreferrer">Dgraph Ratel Dashboard</a></p>
<p><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></p>


10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf empty

10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf=707:<h1>Differences Between Time and Attention</h1>
<p><a href="https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/" rel="noopener noreferrer">https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/</a></p>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> talks about how he has a lot of time, yet really not that much attention.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/cognitive-resource-theory" rel="noopener noreferrer">Cognitive resource theory</a></li>
<li><a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">Attention is a limited resource</a></li>
</ul>


10:45:07.281 [debug] l:len=7

10:45:07.281 [debug] l:buf=07:<h1>Differences Between Time and Attention</h1>
<p><a href="https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/" rel="noopener noreferrer">https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/</a></p>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> talks about how he has a lot of time, yet really not that much attention.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/cognitive-resource-theory" rel="noopener noreferrer">Cognitive resource theory</a></li>
<li><a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">Attention is a limited resource</a></li>
</ul>


10:45:07.281 [debug] l:len=70

10:45:07.281 [debug] l:buf=7:<h1>Differences Between Time and Attention</h1>
<p><a href="https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/" rel="noopener noreferrer">https://m.signalvnoise.com/whats-the-difference-between-time-and-attention-a-lot/</a></p>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> talks about how he has a lot of time, yet really not that much attention.</p>
<p>See:</p>
<ul>
<li><a href="http://localhost:5000/cognitive-resource-theory" rel="noopener noreferrer">Cognitive resource theory</a></li>
<li><a href="http://localhost:5000/attention-is-a-limited-resource" rel="noopener noreferrer">Attention is a limited resource</a></li>
</ul>


10:45:07.281 [debug] l:len=

10:45:07.281 [debug] l:buf empty

10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf=305:<h1>Pasted image 20200922163430</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.282 [debug] l:len=3

10:45:07.282 [debug] l:buf=05:<h1>Pasted image 20200922163430</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.282 [debug] l:len=30

10:45:07.282 [debug] l:buf=5:<h1>Pasted image 20200922163430</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf empty

10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf=2098:<h1>Thought Processing</h1>
<p>The idea that you tend to your thoughts like a <a href="http://localhost:5000/garden" rel="noopener noreferrer">garden</a>. You slowly develop them like <a href="http://localhost:5000/composting" rel="noopener noreferrer">composting</a> allowing <a href="http://localhost:5000/essays" rel="noopener noreferrer">Essays</a> to come from them.</p>
<h2>Tools that try to do this</h2>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="https://knovigator.com/" rel="noopener noreferrer">https://knovigator.com/</a></li>
<li><a href="http://localhost:5000/wikis" rel="noopener noreferrer">Wikis</a></li>
</ul>
<p>Often these have to deal with <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>Another cool example: <a href="https://notes.andymatuschak.org/About_these_notes" rel="noopener noreferrer">https://notes.andymatuschak.org/About_these_notes</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	talking about this on Twitter: <a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.282 [debug] l:len=2

10:45:07.282 [debug] l:buf=098:<h1>Thought Processing</h1>
<p>The idea that you tend to your thoughts like a <a href="http://localhost:5000/garden" rel="noopener noreferrer">garden</a>. You slowly develop them like <a href="http://localhost:5000/composting" rel="noopener noreferrer">composting</a> allowing <a href="http://localhost:5000/essays" rel="noopener noreferrer">Essays</a> to come from them.</p>
<h2>Tools that try to do this</h2>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="https://knovigator.com/" rel="noopener noreferrer">https://knovigator.com/</a></li>
<li><a href="http://localhost:5000/wikis" rel="noopener noreferrer">Wikis</a></li>
</ul>
<p>Often these have to deal with <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>Another cool example: <a href="https://notes.andymatuschak.org/About_these_notes" rel="noopener noreferrer">https://notes.andymatuschak.org/About_these_notes</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	talking about this on Twitter: <a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.282 [debug] l:len=20

10:45:07.282 [debug] l:buf=98:<h1>Thought Processing</h1>
<p>The idea that you tend to your thoughts like a <a href="http://localhost:5000/garden" rel="noopener noreferrer">garden</a>. You slowly develop them like <a href="http://localhost:5000/composting" rel="noopener noreferrer">composting</a> allowing <a href="http://localhost:5000/essays" rel="noopener noreferrer">Essays</a> to come from them.</p>
<h2>Tools that try to do this</h2>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="https://knovigator.com/" rel="noopener noreferrer">https://knovigator.com/</a></li>
<li><a href="http://localhost:5000/wikis" rel="noopener noreferrer">Wikis</a></li>
</ul>
<p>Often these have to deal with <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>Another cool example: <a href="https://notes.andymatuschak.org/About_these_notes" rel="noopener noreferrer">https://notes.andymatuschak.org/About_these_notes</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	talking about this on Twitter: <a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.282 [debug] l:len=209

10:45:07.282 [debug] l:buf=8:<h1>Thought Processing</h1>
<p>The idea that you tend to your thoughts like a <a href="http://localhost:5000/garden" rel="noopener noreferrer">garden</a>. You slowly develop them like <a href="http://localhost:5000/composting" rel="noopener noreferrer">composting</a> allowing <a href="http://localhost:5000/essays" rel="noopener noreferrer">Essays</a> to come from them.</p>
<h2>Tools that try to do this</h2>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="https://knovigator.com/" rel="noopener noreferrer">https://knovigator.com/</a></li>
<li><a href="http://localhost:5000/wikis" rel="noopener noreferrer">Wikis</a></li>
</ul>
<p>Often these have to deal with <a href="http://localhost:5000/apps-that-act-like-your-brain" rel="noopener noreferrer">apps that act like your brain</a>.</p>
<p>Another cool example: <a href="https://notes.andymatuschak.org/About_these_notes" rel="noopener noreferrer">https://notes.andymatuschak.org/About_these_notes</a></p>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>	talking about this on Twitter: <a href="https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html" rel="noopener noreferrer">https://twitter.com/rjs/status/1130609983408578561?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1130609983408578561%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fthreadreaderapp.com%2Fthread%2F1099181050045952006.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf empty

10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf=84:<h1>Pasted image 17</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.282 [debug] l:len=8

10:45:07.282 [debug] l:buf=4:<h1>Pasted image 17</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf empty

10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf=374:<h1>Slack Implied concensus</h1>
<p>This is when people make a decision and the channel "feels" like everyone has gotten a turn to speak, in reality they haven't (Murphy in this case).</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-42.png" rel="noopener noreferrer">Pasted image 42</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.282 [debug] l:len=3

10:45:07.282 [debug] l:buf=74:<h1>Slack Implied concensus</h1>
<p>This is when people make a decision and the channel "feels" like everyone has gotten a turn to speak, in reality they haven't (Murphy in this case).</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-42.png" rel="noopener noreferrer">Pasted image 42</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.282 [debug] l:len=37

10:45:07.282 [debug] l:buf=4:<h1>Slack Implied concensus</h1>
<p>This is when people make a decision and the channel "feels" like everyone has gotten a turn to speak, in reality they haven't (Murphy in this case).</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-42.png" rel="noopener noreferrer">Pasted image 42</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.282 [debug] l:len=

10:45:07.282 [debug] l:buf empty

10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf=876:<h1>There is no love without hate; and there</h1>
<blockquote>
<p>There is no love without hate; and there is no hate without love.&nbsp;The opposite of love is not hate, but indifference; the opposite of feeling can only be the absence of feeling. Disinclination, which is coloured by feeling, often only serves the purpose of concealing and protecting oneself against an inclination. Love and hate must go hand in hand; and the people we love most we hate also, because hate is grounded in the nature of love.</p>
</blockquote>
<p>#quotes</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
<li><a href="http://localhost:5000/customer-feedback" rel="noopener noreferrer">Customer feedback</a></li>
<li>Think this might be a quote from <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.283 [debug] l:len=8

10:45:07.283 [debug] l:buf=76:<h1>There is no love without hate; and there</h1>
<blockquote>
<p>There is no love without hate; and there is no hate without love.&nbsp;The opposite of love is not hate, but indifference; the opposite of feeling can only be the absence of feeling. Disinclination, which is coloured by feeling, often only serves the purpose of concealing and protecting oneself against an inclination. Love and hate must go hand in hand; and the people we love most we hate also, because hate is grounded in the nature of love.</p>
</blockquote>
<p>#quotes</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
<li><a href="http://localhost:5000/customer-feedback" rel="noopener noreferrer">Customer feedback</a></li>
<li>Think this might be a quote from <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.283 [debug] l:len=87

10:45:07.283 [debug] l:buf=6:<h1>There is no love without hate; and there</h1>
<blockquote>
<p>There is no love without hate; and there is no hate without love.&nbsp;The opposite of love is not hate, but indifference; the opposite of feeling can only be the absence of feeling. Disinclination, which is coloured by feeling, often only serves the purpose of concealing and protecting oneself against an inclination. Love and hate must go hand in hand; and the people we love most we hate also, because hate is grounded in the nature of love.</p>
</blockquote>
<p>#quotes</p>
<ul>
<li><a href="http://localhost:5000/design" rel="noopener noreferrer">Design</a></li>
<li><a href="http://localhost:5000/customer-feedback" rel="noopener noreferrer">Customer feedback</a></li>
<li>Think this might be a quote from <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf empty

10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf=541:<h1>notification</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.283 [debug] l:len=5

10:45:07.283 [debug] l:buf=41:<h1>notification</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.283 [debug] l:len=54

10:45:07.283 [debug] l:buf=1:<h1>notification</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf empty

10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf=130:<p>Living below our privileges
What is the point of the priesthood?His can we magnify our priesthood?</p>
<p>Tags:
priesthood</p>


10:45:07.283 [debug] l:len=1

10:45:07.283 [debug] l:buf=30:<p>Living below our privileges
What is the point of the priesthood?His can we magnify our priesthood?</p>
<p>Tags:
priesthood</p>


10:45:07.283 [debug] l:len=13

10:45:07.283 [debug] l:buf=0:<p>Living below our privileges
What is the point of the priesthood?His can we magnify our priesthood?</p>
<p>Tags:
priesthood</p>


10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf empty

10:45:07.283 [debug] l:len=

10:45:07.283 [debug] l:buf=240:<h1>Speare--sentence-splititng</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.283 [debug] l:len=2

10:45:07.283 [debug] l:buf=40:<h1>Speare--sentence-splititng</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.283 [debug] l:len=24

10:45:07.284 [debug] l:buf=0:<h1>Speare--sentence-splititng</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.284 [debug] l:len=

10:45:07.284 [debug] l:buf empty

10:45:07.284 [debug] l:len=

10:45:07.284 [debug] l:buf=291:<h1>Kanban hidden info</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-18.png" rel="noopener noreferrer">Pasted image 18</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>


10:45:07.284 [debug] l:len=2

10:45:07.284 [debug] l:buf=91:<h1>Kanban hidden info</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-18.png" rel="noopener noreferrer">Pasted image 18</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>


10:45:07.284 [debug] l:len=29

10:45:07.284 [debug] l:buf=1:<h1>Kanban hidden info</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-18.png" rel="noopener noreferrer">Pasted image 18</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>


10:45:07.284 [debug] l:len=

10:45:07.284 [debug] l:buf empty

10:45:07.284 [debug] l:len=

10:45:07.284 [debug] l:buf=14281:<h1>Article--is group chat making you sweat</h1>
<hr>
<h2><a href="http://localhost:5000/chatroom-hamster-wheel.png" rel="noopener noreferrer">chatroom-hamster-wheel</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.
~ <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
</blockquote>
<p><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></p>
<h2>Main points:</h2>
<h3>Group chat is great for…</h3>
<ol>
<li>
<p><strong>Hashing things out quickly</strong>. When you need to toss an idea back and forth between a few people, there’s nothing better than chat. Toss in some words, drag in a picture, get some quick feedback, and move on (just get out quick before you get sucked back in).</p>
</li>
<li>
<p><strong>Red alerts</strong>. Sometimes it’s essential to get critical information in front of people. A server’s down, a deploy failed, there’s a crisis that truly demands a group’s immediate attention. There are a variety of ways to get this instant information to people, and piping it into a high priority chat room or channel is definitely one of those ways.</p>
</li>
<li>
<p><strong>Having fun</strong>. Fun at work is as important as work at work. And chat really works well here. Culture develops, inside jokes flow, emoji, goofing around with sounds (in Campfire), and meme generators are perfect territory for the chat room or channel.</p>
</li>
<li>
<p><strong>A sense of belonging</strong>. This is particularly important for people who work remotely. Having a chat room where you can just say good morning, let people know you’re out for lunch, and generally just feel part of something is a powerful counter to cabin fever.</p>
</li>
</ol>
<h2>The Negatives</h2>
<p>Group chat as the primary method of communication across a group or organization leads to…</p>
<h3>1. Mental fatigue and exhaustion.</h3>
<p>Following group chat all day feels like being in an all-day meeting with random participants and no agenda. And in many cases, a dozen all-day meetings! You hear it from people all the time — it’s exhausting. Constant conversation, constant chatter, no start, no end. You can decide not to pay attention, but that leads to a fear of missing out.</p>
<h3>2. An ASAP culture.</h3>
<p>Now! At its very core, group chat and real-time communication is all about now. That’s why in some select circumstances it really shines. But chat conditions us to believe everything’s worth discussing quickly right now, except that hardly anything is. Turns out, very few things require ASAP attention. Further, ASAP is inflationary — it devalues any request that doesn’t say ASAP. Before you know it, the only way to get anything done is by throwing it in front of people and asking for their immediate feedback. It’s like you’re constantly tapping everyone’s shoulder — or pulling on everyone’s shirt — to get them to stop what they’re doing and turn around to address what’s on your mind. It’s not a sustainable practice.</p>
<h3>3. Fear of missing out or not having a say.</h3>
<p>If you’re not paying attention all the time, you won’t be able to have your say when something comes up. And since conversations happen quick, and then scroll away on the conveyor belt, if you’re not at your station when it’s your turn to speak, you won’t get a chance later. This encourages people to watch rooms/channels all day to see if a conversation comes up that they feel like they need to dive into.</p>
<h3>4. Thinking a line at a time rather than a thought at a time.</h3>
<p>Most things worth discussing at length are worth discussing in detail over time. Because chat is presented one line at a time, complete thoughts have to unfold one line-at-a-time. But since people can jump in any time before you’ve had a chance to fully present yourself, making a point can become really frustrating really quickly. Further, incomplete thoughts and staccato responses make it really difficult to fully consider a topic and make important decisions — especially in a group setting. Imagine being in a meeting where everyone just spoke one line at a time, and people kept interrupting you while you were trying to make your point. Would you ever get anywhere? And wouldn’t it take forever?</p>
<h3>5. Implied consensus.</h3>
<p>“Because we talked about it in the chat room, everyone who needs to know now knows”. You know how it goes — people talk about some work in the chat room and nobody objects. That leads people to assume everyone read that discussion and agreed. Except that they weren’t, or they didn’t. Decisions get made without people’s consent because they weren’t there at the very moment it was discussed. This ties back to many of the points above — “right now” is rarely the moment to both have the discussion and come to a conclusion.</p>
<h3>6. Knee-jerk responses.</h3>
<p>Discussing something in a chat room is like being on the shot clock. There’s a small window of time to be heard before the point you want to respond to scrolls away. So people often just yell something out just to be heard. The same phenomenon can be seen on Twitter. An accelerating conversation leads to shallow sound bytes and talking points — no different than talking heads on TV that only have 3 minutes to make their point before the segment ends.</p>
<h3>7. Pile-ons and devolving conversations.</h3>
<p>A few people start talking about something. They’re doing great. But then another person tosses in a drive-by one-liner comment that takes the conversation in a new direction — and often not a good one. Then someone else comes in and tosses their 2 cents in. The original folks begin to lose control of the conversation. Something that was being discussed by just a few people ends up being a 6+ person conversation. Things devolve quickly. The medium encourages this breakdown since anyone can pop in and step right into any conversation without having the opportunity to get up to speed on the back-story. They may start strong, but conversations rarely get better over chat.</p>
<h3>8. Rambling and repetition.</h3>
<p>Conversations that should take a few minutes often go on for 20+ when they happen over group chat. Continuous conversations among a group of people are very difficult to end — especially when new people can pop in to drop in their quick 2 cents at any time. Just when you feel like the conversation is almost over, they can start right up again — often rehashing what’s already been discussed before. “We’ve already talked about this!” is a common refrain heard in chat rooms around the world.</p>
<h3>9. Over-informing everyone in real-time.</h3>
<p>I was talking to a guy a few days ago who was fired up about piping in sales data into a popular chat room whenever they made a sale. I asked him how many times that was a day. He said “dozens”. I said, so that’s dozen incremented unread counters in this one room throughout the day? He said yes. Then he said, “Is that bad?”. I said, do you think everyone need to know that sale happened right now? Might it be better to summarize sales once a day so you don’t interrupt people by incrementing an unread counter on everyone in the company a dozen times a day? He hadn’t even considered the impact, but now he’s seen the light. Be careful — it’s fun to hook things up and pipe stuff in, but what are the costs to people’s attention? Is it worth potentially pulling them away from their work a dozen times a day (you know how people love checking unreads) just to tell them something that could have waited until later?</p>
<h3>10. Chat reminds you that you’re behind.</h3>
<p>Group chat feels like you’re chasing something all day long. What’s worse, group ch (truncated)

10:45:07.284 [debug] l:len=1

10:45:07.284 [debug] l:buf=4281:<h1>Article--is group chat making you sweat</h1>
<hr>
<h2><a href="http://localhost:5000/chatroom-hamster-wheel.png" rel="noopener noreferrer">chatroom-hamster-wheel</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.
~ <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
</blockquote>
<p><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></p>
<h2>Main points:</h2>
<h3>Group chat is great for…</h3>
<ol>
<li>
<p><strong>Hashing things out quickly</strong>. When you need to toss an idea back and forth between a few people, there’s nothing better than chat. Toss in some words, drag in a picture, get some quick feedback, and move on (just get out quick before you get sucked back in).</p>
</li>
<li>
<p><strong>Red alerts</strong>. Sometimes it’s essential to get critical information in front of people. A server’s down, a deploy failed, there’s a crisis that truly demands a group’s immediate attention. There are a variety of ways to get this instant information to people, and piping it into a high priority chat room or channel is definitely one of those ways.</p>
</li>
<li>
<p><strong>Having fun</strong>. Fun at work is as important as work at work. And chat really works well here. Culture develops, inside jokes flow, emoji, goofing around with sounds (in Campfire), and meme generators are perfect territory for the chat room or channel.</p>
</li>
<li>
<p><strong>A sense of belonging</strong>. This is particularly important for people who work remotely. Having a chat room where you can just say good morning, let people know you’re out for lunch, and generally just feel part of something is a powerful counter to cabin fever.</p>
</li>
</ol>
<h2>The Negatives</h2>
<p>Group chat as the primary method of communication across a group or organization leads to…</p>
<h3>1. Mental fatigue and exhaustion.</h3>
<p>Following group chat all day feels like being in an all-day meeting with random participants and no agenda. And in many cases, a dozen all-day meetings! You hear it from people all the time — it’s exhausting. Constant conversation, constant chatter, no start, no end. You can decide not to pay attention, but that leads to a fear of missing out.</p>
<h3>2. An ASAP culture.</h3>
<p>Now! At its very core, group chat and real-time communication is all about now. That’s why in some select circumstances it really shines. But chat conditions us to believe everything’s worth discussing quickly right now, except that hardly anything is. Turns out, very few things require ASAP attention. Further, ASAP is inflationary — it devalues any request that doesn’t say ASAP. Before you know it, the only way to get anything done is by throwing it in front of people and asking for their immediate feedback. It’s like you’re constantly tapping everyone’s shoulder — or pulling on everyone’s shirt — to get them to stop what they’re doing and turn around to address what’s on your mind. It’s not a sustainable practice.</p>
<h3>3. Fear of missing out or not having a say.</h3>
<p>If you’re not paying attention all the time, you won’t be able to have your say when something comes up. And since conversations happen quick, and then scroll away on the conveyor belt, if you’re not at your station when it’s your turn to speak, you won’t get a chance later. This encourages people to watch rooms/channels all day to see if a conversation comes up that they feel like they need to dive into.</p>
<h3>4. Thinking a line at a time rather than a thought at a time.</h3>
<p>Most things worth discussing at length are worth discussing in detail over time. Because chat is presented one line at a time, complete thoughts have to unfold one line-at-a-time. But since people can jump in any time before you’ve had a chance to fully present yourself, making a point can become really frustrating really quickly. Further, incomplete thoughts and staccato responses make it really difficult to fully consider a topic and make important decisions — especially in a group setting. Imagine being in a meeting where everyone just spoke one line at a time, and people kept interrupting you while you were trying to make your point. Would you ever get anywhere? And wouldn’t it take forever?</p>
<h3>5. Implied consensus.</h3>
<p>“Because we talked about it in the chat room, everyone who needs to know now knows”. You know how it goes — people talk about some work in the chat room and nobody objects. That leads people to assume everyone read that discussion and agreed. Except that they weren’t, or they didn’t. Decisions get made without people’s consent because they weren’t there at the very moment it was discussed. This ties back to many of the points above — “right now” is rarely the moment to both have the discussion and come to a conclusion.</p>
<h3>6. Knee-jerk responses.</h3>
<p>Discussing something in a chat room is like being on the shot clock. There’s a small window of time to be heard before the point you want to respond to scrolls away. So people often just yell something out just to be heard. The same phenomenon can be seen on Twitter. An accelerating conversation leads to shallow sound bytes and talking points — no different than talking heads on TV that only have 3 minutes to make their point before the segment ends.</p>
<h3>7. Pile-ons and devolving conversations.</h3>
<p>A few people start talking about something. They’re doing great. But then another person tosses in a drive-by one-liner comment that takes the conversation in a new direction — and often not a good one. Then someone else comes in and tosses their 2 cents in. The original folks begin to lose control of the conversation. Something that was being discussed by just a few people ends up being a 6+ person conversation. Things devolve quickly. The medium encourages this breakdown since anyone can pop in and step right into any conversation without having the opportunity to get up to speed on the back-story. They may start strong, but conversations rarely get better over chat.</p>
<h3>8. Rambling and repetition.</h3>
<p>Conversations that should take a few minutes often go on for 20+ when they happen over group chat. Continuous conversations among a group of people are very difficult to end — especially when new people can pop in to drop in their quick 2 cents at any time. Just when you feel like the conversation is almost over, they can start right up again — often rehashing what’s already been discussed before. “We’ve already talked about this!” is a common refrain heard in chat rooms around the world.</p>
<h3>9. Over-informing everyone in real-time.</h3>
<p>I was talking to a guy a few days ago who was fired up about piping in sales data into a popular chat room whenever they made a sale. I asked him how many times that was a day. He said “dozens”. I said, so that’s dozen incremented unread counters in this one room throughout the day? He said yes. Then he said, “Is that bad?”. I said, do you think everyone need to know that sale happened right now? Might it be better to summarize sales once a day so you don’t interrupt people by incrementing an unread counter on everyone in the company a dozen times a day? He hadn’t even considered the impact, but now he’s seen the light. Be careful — it’s fun to hook things up and pipe stuff in, but what are the costs to people’s attention? Is it worth potentially pulling them away from their work a dozen times a day (you know how people love checking unreads) just to tell them something that could have waited until later?</p>
<h3>10. Chat reminds you that you’re behind.</h3>
<p>Group chat feels like you’re chasing something all day long. What’s worse, group cha (truncated)

10:45:07.285 [debug] l:len=14

10:45:07.285 [debug] l:buf=281:<h1>Article--is group chat making you sweat</h1>
<hr>
<h2><a href="http://localhost:5000/chatroom-hamster-wheel.png" rel="noopener noreferrer">chatroom-hamster-wheel</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.
~ <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
</blockquote>
<p><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></p>
<h2>Main points:</h2>
<h3>Group chat is great for…</h3>
<ol>
<li>
<p><strong>Hashing things out quickly</strong>. When you need to toss an idea back and forth between a few people, there’s nothing better than chat. Toss in some words, drag in a picture, get some quick feedback, and move on (just get out quick before you get sucked back in).</p>
</li>
<li>
<p><strong>Red alerts</strong>. Sometimes it’s essential to get critical information in front of people. A server’s down, a deploy failed, there’s a crisis that truly demands a group’s immediate attention. There are a variety of ways to get this instant information to people, and piping it into a high priority chat room or channel is definitely one of those ways.</p>
</li>
<li>
<p><strong>Having fun</strong>. Fun at work is as important as work at work. And chat really works well here. Culture develops, inside jokes flow, emoji, goofing around with sounds (in Campfire), and meme generators are perfect territory for the chat room or channel.</p>
</li>
<li>
<p><strong>A sense of belonging</strong>. This is particularly important for people who work remotely. Having a chat room where you can just say good morning, let people know you’re out for lunch, and generally just feel part of something is a powerful counter to cabin fever.</p>
</li>
</ol>
<h2>The Negatives</h2>
<p>Group chat as the primary method of communication across a group or organization leads to…</p>
<h3>1. Mental fatigue and exhaustion.</h3>
<p>Following group chat all day feels like being in an all-day meeting with random participants and no agenda. And in many cases, a dozen all-day meetings! You hear it from people all the time — it’s exhausting. Constant conversation, constant chatter, no start, no end. You can decide not to pay attention, but that leads to a fear of missing out.</p>
<h3>2. An ASAP culture.</h3>
<p>Now! At its very core, group chat and real-time communication is all about now. That’s why in some select circumstances it really shines. But chat conditions us to believe everything’s worth discussing quickly right now, except that hardly anything is. Turns out, very few things require ASAP attention. Further, ASAP is inflationary — it devalues any request that doesn’t say ASAP. Before you know it, the only way to get anything done is by throwing it in front of people and asking for their immediate feedback. It’s like you’re constantly tapping everyone’s shoulder — or pulling on everyone’s shirt — to get them to stop what they’re doing and turn around to address what’s on your mind. It’s not a sustainable practice.</p>
<h3>3. Fear of missing out or not having a say.</h3>
<p>If you’re not paying attention all the time, you won’t be able to have your say when something comes up. And since conversations happen quick, and then scroll away on the conveyor belt, if you’re not at your station when it’s your turn to speak, you won’t get a chance later. This encourages people to watch rooms/channels all day to see if a conversation comes up that they feel like they need to dive into.</p>
<h3>4. Thinking a line at a time rather than a thought at a time.</h3>
<p>Most things worth discussing at length are worth discussing in detail over time. Because chat is presented one line at a time, complete thoughts have to unfold one line-at-a-time. But since people can jump in any time before you’ve had a chance to fully present yourself, making a point can become really frustrating really quickly. Further, incomplete thoughts and staccato responses make it really difficult to fully consider a topic and make important decisions — especially in a group setting. Imagine being in a meeting where everyone just spoke one line at a time, and people kept interrupting you while you were trying to make your point. Would you ever get anywhere? And wouldn’t it take forever?</p>
<h3>5. Implied consensus.</h3>
<p>“Because we talked about it in the chat room, everyone who needs to know now knows”. You know how it goes — people talk about some work in the chat room and nobody objects. That leads people to assume everyone read that discussion and agreed. Except that they weren’t, or they didn’t. Decisions get made without people’s consent because they weren’t there at the very moment it was discussed. This ties back to many of the points above — “right now” is rarely the moment to both have the discussion and come to a conclusion.</p>
<h3>6. Knee-jerk responses.</h3>
<p>Discussing something in a chat room is like being on the shot clock. There’s a small window of time to be heard before the point you want to respond to scrolls away. So people often just yell something out just to be heard. The same phenomenon can be seen on Twitter. An accelerating conversation leads to shallow sound bytes and talking points — no different than talking heads on TV that only have 3 minutes to make their point before the segment ends.</p>
<h3>7. Pile-ons and devolving conversations.</h3>
<p>A few people start talking about something. They’re doing great. But then another person tosses in a drive-by one-liner comment that takes the conversation in a new direction — and often not a good one. Then someone else comes in and tosses their 2 cents in. The original folks begin to lose control of the conversation. Something that was being discussed by just a few people ends up being a 6+ person conversation. Things devolve quickly. The medium encourages this breakdown since anyone can pop in and step right into any conversation without having the opportunity to get up to speed on the back-story. They may start strong, but conversations rarely get better over chat.</p>
<h3>8. Rambling and repetition.</h3>
<p>Conversations that should take a few minutes often go on for 20+ when they happen over group chat. Continuous conversations among a group of people are very difficult to end — especially when new people can pop in to drop in their quick 2 cents at any time. Just when you feel like the conversation is almost over, they can start right up again — often rehashing what’s already been discussed before. “We’ve already talked about this!” is a common refrain heard in chat rooms around the world.</p>
<h3>9. Over-informing everyone in real-time.</h3>
<p>I was talking to a guy a few days ago who was fired up about piping in sales data into a popular chat room whenever they made a sale. I asked him how many times that was a day. He said “dozens”. I said, so that’s dozen incremented unread counters in this one room throughout the day? He said yes. Then he said, “Is that bad?”. I said, do you think everyone need to know that sale happened right now? Might it be better to summarize sales once a day so you don’t interrupt people by incrementing an unread counter on everyone in the company a dozen times a day? He hadn’t even considered the impact, but now he’s seen the light. Be careful — it’s fun to hook things up and pipe stuff in, but what are the costs to people’s attention? Is it worth potentially pulling them away from their work a dozen times a day (you know how people love checking unreads) just to tell them something that could have waited until later?</p>
<h3>10. Chat reminds you that you’re behind.</h3>
<p>Group chat feels like you’re chasing something all day long. What’s worse, group chat (truncated)

10:45:07.285 [debug] l:len=142

10:45:07.285 [debug] l:buf=81:<h1>Article--is group chat making you sweat</h1>
<hr>
<h2><a href="http://localhost:5000/chatroom-hamster-wheel.png" rel="noopener noreferrer">chatroom-hamster-wheel</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.
~ <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
</blockquote>
<p><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></p>
<h2>Main points:</h2>
<h3>Group chat is great for…</h3>
<ol>
<li>
<p><strong>Hashing things out quickly</strong>. When you need to toss an idea back and forth between a few people, there’s nothing better than chat. Toss in some words, drag in a picture, get some quick feedback, and move on (just get out quick before you get sucked back in).</p>
</li>
<li>
<p><strong>Red alerts</strong>. Sometimes it’s essential to get critical information in front of people. A server’s down, a deploy failed, there’s a crisis that truly demands a group’s immediate attention. There are a variety of ways to get this instant information to people, and piping it into a high priority chat room or channel is definitely one of those ways.</p>
</li>
<li>
<p><strong>Having fun</strong>. Fun at work is as important as work at work. And chat really works well here. Culture develops, inside jokes flow, emoji, goofing around with sounds (in Campfire), and meme generators are perfect territory for the chat room or channel.</p>
</li>
<li>
<p><strong>A sense of belonging</strong>. This is particularly important for people who work remotely. Having a chat room where you can just say good morning, let people know you’re out for lunch, and generally just feel part of something is a powerful counter to cabin fever.</p>
</li>
</ol>
<h2>The Negatives</h2>
<p>Group chat as the primary method of communication across a group or organization leads to…</p>
<h3>1. Mental fatigue and exhaustion.</h3>
<p>Following group chat all day feels like being in an all-day meeting with random participants and no agenda. And in many cases, a dozen all-day meetings! You hear it from people all the time — it’s exhausting. Constant conversation, constant chatter, no start, no end. You can decide not to pay attention, but that leads to a fear of missing out.</p>
<h3>2. An ASAP culture.</h3>
<p>Now! At its very core, group chat and real-time communication is all about now. That’s why in some select circumstances it really shines. But chat conditions us to believe everything’s worth discussing quickly right now, except that hardly anything is. Turns out, very few things require ASAP attention. Further, ASAP is inflationary — it devalues any request that doesn’t say ASAP. Before you know it, the only way to get anything done is by throwing it in front of people and asking for their immediate feedback. It’s like you’re constantly tapping everyone’s shoulder — or pulling on everyone’s shirt — to get them to stop what they’re doing and turn around to address what’s on your mind. It’s not a sustainable practice.</p>
<h3>3. Fear of missing out or not having a say.</h3>
<p>If you’re not paying attention all the time, you won’t be able to have your say when something comes up. And since conversations happen quick, and then scroll away on the conveyor belt, if you’re not at your station when it’s your turn to speak, you won’t get a chance later. This encourages people to watch rooms/channels all day to see if a conversation comes up that they feel like they need to dive into.</p>
<h3>4. Thinking a line at a time rather than a thought at a time.</h3>
<p>Most things worth discussing at length are worth discussing in detail over time. Because chat is presented one line at a time, complete thoughts have to unfold one line-at-a-time. But since people can jump in any time before you’ve had a chance to fully present yourself, making a point can become really frustrating really quickly. Further, incomplete thoughts and staccato responses make it really difficult to fully consider a topic and make important decisions — especially in a group setting. Imagine being in a meeting where everyone just spoke one line at a time, and people kept interrupting you while you were trying to make your point. Would you ever get anywhere? And wouldn’t it take forever?</p>
<h3>5. Implied consensus.</h3>
<p>“Because we talked about it in the chat room, everyone who needs to know now knows”. You know how it goes — people talk about some work in the chat room and nobody objects. That leads people to assume everyone read that discussion and agreed. Except that they weren’t, or they didn’t. Decisions get made without people’s consent because they weren’t there at the very moment it was discussed. This ties back to many of the points above — “right now” is rarely the moment to both have the discussion and come to a conclusion.</p>
<h3>6. Knee-jerk responses.</h3>
<p>Discussing something in a chat room is like being on the shot clock. There’s a small window of time to be heard before the point you want to respond to scrolls away. So people often just yell something out just to be heard. The same phenomenon can be seen on Twitter. An accelerating conversation leads to shallow sound bytes and talking points — no different than talking heads on TV that only have 3 minutes to make their point before the segment ends.</p>
<h3>7. Pile-ons and devolving conversations.</h3>
<p>A few people start talking about something. They’re doing great. But then another person tosses in a drive-by one-liner comment that takes the conversation in a new direction — and often not a good one. Then someone else comes in and tosses their 2 cents in. The original folks begin to lose control of the conversation. Something that was being discussed by just a few people ends up being a 6+ person conversation. Things devolve quickly. The medium encourages this breakdown since anyone can pop in and step right into any conversation without having the opportunity to get up to speed on the back-story. They may start strong, but conversations rarely get better over chat.</p>
<h3>8. Rambling and repetition.</h3>
<p>Conversations that should take a few minutes often go on for 20+ when they happen over group chat. Continuous conversations among a group of people are very difficult to end — especially when new people can pop in to drop in their quick 2 cents at any time. Just when you feel like the conversation is almost over, they can start right up again — often rehashing what’s already been discussed before. “We’ve already talked about this!” is a common refrain heard in chat rooms around the world.</p>
<h3>9. Over-informing everyone in real-time.</h3>
<p>I was talking to a guy a few days ago who was fired up about piping in sales data into a popular chat room whenever they made a sale. I asked him how many times that was a day. He said “dozens”. I said, so that’s dozen incremented unread counters in this one room throughout the day? He said yes. Then he said, “Is that bad?”. I said, do you think everyone need to know that sale happened right now? Might it be better to summarize sales once a day so you don’t interrupt people by incrementing an unread counter on everyone in the company a dozen times a day? He hadn’t even considered the impact, but now he’s seen the light. Be careful — it’s fun to hook things up and pipe stuff in, but what are the costs to people’s attention? Is it worth potentially pulling them away from their work a dozen times a day (you know how people love checking unreads) just to tell them something that could have waited until later?</p>
<h3>10. Chat reminds you that you’re behind.</h3>
<p>Group chat feels like you’re chasing something all day long. What’s worse, group chat  (truncated)

10:45:07.285 [debug] l:len=1428

10:45:07.285 [debug] l:buf=1:<h1>Article--is group chat making you sweat</h1>
<hr>
<h2><a href="http://localhost:5000/chatroom-hamster-wheel.png" rel="noopener noreferrer">chatroom-hamster-wheel</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.
~ <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
</blockquote>
<p><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></p>
<h2>Main points:</h2>
<h3>Group chat is great for…</h3>
<ol>
<li>
<p><strong>Hashing things out quickly</strong>. When you need to toss an idea back and forth between a few people, there’s nothing better than chat. Toss in some words, drag in a picture, get some quick feedback, and move on (just get out quick before you get sucked back in).</p>
</li>
<li>
<p><strong>Red alerts</strong>. Sometimes it’s essential to get critical information in front of people. A server’s down, a deploy failed, there’s a crisis that truly demands a group’s immediate attention. There are a variety of ways to get this instant information to people, and piping it into a high priority chat room or channel is definitely one of those ways.</p>
</li>
<li>
<p><strong>Having fun</strong>. Fun at work is as important as work at work. And chat really works well here. Culture develops, inside jokes flow, emoji, goofing around with sounds (in Campfire), and meme generators are perfect territory for the chat room or channel.</p>
</li>
<li>
<p><strong>A sense of belonging</strong>. This is particularly important for people who work remotely. Having a chat room where you can just say good morning, let people know you’re out for lunch, and generally just feel part of something is a powerful counter to cabin fever.</p>
</li>
</ol>
<h2>The Negatives</h2>
<p>Group chat as the primary method of communication across a group or organization leads to…</p>
<h3>1. Mental fatigue and exhaustion.</h3>
<p>Following group chat all day feels like being in an all-day meeting with random participants and no agenda. And in many cases, a dozen all-day meetings! You hear it from people all the time — it’s exhausting. Constant conversation, constant chatter, no start, no end. You can decide not to pay attention, but that leads to a fear of missing out.</p>
<h3>2. An ASAP culture.</h3>
<p>Now! At its very core, group chat and real-time communication is all about now. That’s why in some select circumstances it really shines. But chat conditions us to believe everything’s worth discussing quickly right now, except that hardly anything is. Turns out, very few things require ASAP attention. Further, ASAP is inflationary — it devalues any request that doesn’t say ASAP. Before you know it, the only way to get anything done is by throwing it in front of people and asking for their immediate feedback. It’s like you’re constantly tapping everyone’s shoulder — or pulling on everyone’s shirt — to get them to stop what they’re doing and turn around to address what’s on your mind. It’s not a sustainable practice.</p>
<h3>3. Fear of missing out or not having a say.</h3>
<p>If you’re not paying attention all the time, you won’t be able to have your say when something comes up. And since conversations happen quick, and then scroll away on the conveyor belt, if you’re not at your station when it’s your turn to speak, you won’t get a chance later. This encourages people to watch rooms/channels all day to see if a conversation comes up that they feel like they need to dive into.</p>
<h3>4. Thinking a line at a time rather than a thought at a time.</h3>
<p>Most things worth discussing at length are worth discussing in detail over time. Because chat is presented one line at a time, complete thoughts have to unfold one line-at-a-time. But since people can jump in any time before you’ve had a chance to fully present yourself, making a point can become really frustrating really quickly. Further, incomplete thoughts and staccato responses make it really difficult to fully consider a topic and make important decisions — especially in a group setting. Imagine being in a meeting where everyone just spoke one line at a time, and people kept interrupting you while you were trying to make your point. Would you ever get anywhere? And wouldn’t it take forever?</p>
<h3>5. Implied consensus.</h3>
<p>“Because we talked about it in the chat room, everyone who needs to know now knows”. You know how it goes — people talk about some work in the chat room and nobody objects. That leads people to assume everyone read that discussion and agreed. Except that they weren’t, or they didn’t. Decisions get made without people’s consent because they weren’t there at the very moment it was discussed. This ties back to many of the points above — “right now” is rarely the moment to both have the discussion and come to a conclusion.</p>
<h3>6. Knee-jerk responses.</h3>
<p>Discussing something in a chat room is like being on the shot clock. There’s a small window of time to be heard before the point you want to respond to scrolls away. So people often just yell something out just to be heard. The same phenomenon can be seen on Twitter. An accelerating conversation leads to shallow sound bytes and talking points — no different than talking heads on TV that only have 3 minutes to make their point before the segment ends.</p>
<h3>7. Pile-ons and devolving conversations.</h3>
<p>A few people start talking about something. They’re doing great. But then another person tosses in a drive-by one-liner comment that takes the conversation in a new direction — and often not a good one. Then someone else comes in and tosses their 2 cents in. The original folks begin to lose control of the conversation. Something that was being discussed by just a few people ends up being a 6+ person conversation. Things devolve quickly. The medium encourages this breakdown since anyone can pop in and step right into any conversation without having the opportunity to get up to speed on the back-story. They may start strong, but conversations rarely get better over chat.</p>
<h3>8. Rambling and repetition.</h3>
<p>Conversations that should take a few minutes often go on for 20+ when they happen over group chat. Continuous conversations among a group of people are very difficult to end — especially when new people can pop in to drop in their quick 2 cents at any time. Just when you feel like the conversation is almost over, they can start right up again — often rehashing what’s already been discussed before. “We’ve already talked about this!” is a common refrain heard in chat rooms around the world.</p>
<h3>9. Over-informing everyone in real-time.</h3>
<p>I was talking to a guy a few days ago who was fired up about piping in sales data into a popular chat room whenever they made a sale. I asked him how many times that was a day. He said “dozens”. I said, so that’s dozen incremented unread counters in this one room throughout the day? He said yes. Then he said, “Is that bad?”. I said, do you think everyone need to know that sale happened right now? Might it be better to summarize sales once a day so you don’t interrupt people by incrementing an unread counter on everyone in the company a dozen times a day? He hadn’t even considered the impact, but now he’s seen the light. Be careful — it’s fun to hook things up and pipe stuff in, but what are the costs to people’s attention? Is it worth potentially pulling them away from their work a dozen times a day (you know how people love checking unreads) just to tell them something that could have waited until later?</p>
<h3>10. Chat reminds you that you’re behind.</h3>
<p>Group chat feels like you’re chasing something all day long. What’s worse, group chat o (truncated)

10:45:07.285 [debug] l:len=

10:45:07.285 [debug] l:buf empty

10:45:07.285 [debug] l:len=

10:45:07.285 [debug] l:buf=299:<h1>Litteriture Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.285 [debug] l:len=2

10:45:07.285 [debug] l:buf=99:<h1>Litteriture Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.285 [debug] l:len=29

10:45:07.285 [debug] l:buf=9:<h1>Litteriture Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.285 [debug] l:len=

10:45:07.285 [debug] l:buf empty

10:45:07.285 [debug] l:len=

10:45:07.285 [debug] l:buf=236:<h1>breadboarding</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.285 [debug] l:len=2

10:45:07.285 [debug] l:buf=36:<h1>breadboarding</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.285 [debug] l:len=23

10:45:07.285 [debug] l:buf=6:<h1>breadboarding</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.285 [debug] l:len=

10:45:07.285 [debug] l:buf empty

10:45:07.285 [debug] l:len=

10:45:07.286 [debug] l:buf=1114:<h1>Event Sourcing Project</h1>
<ul>
<li><strong>Anakin</strong> (obvious), basically already there. Just could be much better organized</li>
<li><strong>Messenger</strong> (maybe less obvious)
<ul>
<li>Messages are derived from every other service, what if it just received events and that's what it stored. Then it could derive generic messages from them.</li>
</ul>
</li>
<li><strong>Website Widget</strong>
<ul>
<li>Because it's in my control.</li>
<li>Analytical events like last_seen_url would be good! (however too high of volume)
<ul>
<li>Tying messages to website widget events
<ul>
<li>Could get messages streamed from messenger.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>Reviews</strong> (Review Rocket / Onix)
<ul>
<li>We don't own the source of truth, we just need to react to what happens on the review websites</li>
<li>Having a history is very important for reporting!</li>
<li>We're doing aggregates for reporting anyway.</li>
</ul>
</li>
<li><strong>User Management</strong></li>
</ul>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>


10:45:07.286 [debug] l:len=1

10:45:07.286 [debug] l:buf=114:<h1>Event Sourcing Project</h1>
<ul>
<li><strong>Anakin</strong> (obvious), basically already there. Just could be much better organized</li>
<li><strong>Messenger</strong> (maybe less obvious)
<ul>
<li>Messages are derived from every other service, what if it just received events and that's what it stored. Then it could derive generic messages from them.</li>
</ul>
</li>
<li><strong>Website Widget</strong>
<ul>
<li>Because it's in my control.</li>
<li>Analytical events like last_seen_url would be good! (however too high of volume)
<ul>
<li>Tying messages to website widget events
<ul>
<li>Could get messages streamed from messenger.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>Reviews</strong> (Review Rocket / Onix)
<ul>
<li>We don't own the source of truth, we just need to react to what happens on the review websites</li>
<li>Having a history is very important for reporting!</li>
<li>We're doing aggregates for reporting anyway.</li>
</ul>
</li>
<li><strong>User Management</strong></li>
</ul>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>


10:45:07.286 [debug] l:len=11

10:45:07.286 [debug] l:buf=14:<h1>Event Sourcing Project</h1>
<ul>
<li><strong>Anakin</strong> (obvious), basically already there. Just could be much better organized</li>
<li><strong>Messenger</strong> (maybe less obvious)
<ul>
<li>Messages are derived from every other service, what if it just received events and that's what it stored. Then it could derive generic messages from them.</li>
</ul>
</li>
<li><strong>Website Widget</strong>
<ul>
<li>Because it's in my control.</li>
<li>Analytical events like last_seen_url would be good! (however too high of volume)
<ul>
<li>Tying messages to website widget events
<ul>
<li>Could get messages streamed from messenger.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>Reviews</strong> (Review Rocket / Onix)
<ul>
<li>We don't own the source of truth, we just need to react to what happens on the review websites</li>
<li>Having a history is very important for reporting!</li>
<li>We're doing aggregates for reporting anyway.</li>
</ul>
</li>
<li><strong>User Management</strong></li>
</ul>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>


10:45:07.286 [debug] l:len=111

10:45:07.286 [debug] l:buf=4:<h1>Event Sourcing Project</h1>
<ul>
<li><strong>Anakin</strong> (obvious), basically already there. Just could be much better organized</li>
<li><strong>Messenger</strong> (maybe less obvious)
<ul>
<li>Messages are derived from every other service, what if it just received events and that's what it stored. Then it could derive generic messages from them.</li>
</ul>
</li>
<li><strong>Website Widget</strong>
<ul>
<li>Because it's in my control.</li>
<li>Analytical events like last_seen_url would be good! (however too high of volume)
<ul>
<li>Tying messages to website widget events
<ul>
<li>Could get messages streamed from messenger.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>Reviews</strong> (Review Rocket / Onix)
<ul>
<li>We don't own the source of truth, we just need to react to what happens on the review websites</li>
<li>Having a history is very important for reporting!</li>
<li>We're doing aggregates for reporting anyway.</li>
</ul>
</li>
<li><strong>User Management</strong></li>
</ul>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>


10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf empty

10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf=430:<h1>City Design</h1>
<p>City design is very interesting and has lots of correlations to Software development.</p>
<p>Examples of Interesting ideas:</p>
<ul>
<li><a href="http://localhost:5000/fundamental-law-of-road-congestion" rel="noopener noreferrer">Fundamental law of road congestion</a></li>
<li><a href="http://localhost:5000/roundabouts" rel="noopener noreferrer">Roundabouts</a> are safer yet people hate them</li>
</ul>


10:45:07.286 [debug] l:len=4

10:45:07.286 [debug] l:buf=30:<h1>City Design</h1>
<p>City design is very interesting and has lots of correlations to Software development.</p>
<p>Examples of Interesting ideas:</p>
<ul>
<li><a href="http://localhost:5000/fundamental-law-of-road-congestion" rel="noopener noreferrer">Fundamental law of road congestion</a></li>
<li><a href="http://localhost:5000/roundabouts" rel="noopener noreferrer">Roundabouts</a> are safer yet people hate them</li>
</ul>


10:45:07.286 [debug] l:len=43

10:45:07.286 [debug] l:buf=0:<h1>City Design</h1>
<p>City design is very interesting and has lots of correlations to Software development.</p>
<p>Examples of Interesting ideas:</p>
<ul>
<li><a href="http://localhost:5000/fundamental-law-of-road-congestion" rel="noopener noreferrer">Fundamental law of road congestion</a></li>
<li><a href="http://localhost:5000/roundabouts" rel="noopener noreferrer">Roundabouts</a> are safer yet people hate them</li>
</ul>


10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf empty

10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf=320:<h1>ticket</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.286 [debug] l:len=3

10:45:07.286 [debug] l:buf=20:<h1>ticket</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.286 [debug] l:len=32

10:45:07.286 [debug] l:buf=0:<h1>ticket</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>


10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf empty

10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf=949:<h1>the need for scopes</h1>
<p>"Scopes" in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> define an "<a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a>" piece of work.</p>
<hr>
<h2><a href="http://localhost:5000/orthogonal.md" rel="noopener noreferrer">Orthogonal</a> ⤴</h2>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:
<img src="http://localhost:5000/two-orthogonal-lines.png" alt="Two Orthogonal Lines"></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p>They are also provide <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>


10:45:07.286 [debug] l:len=9

10:45:07.286 [debug] l:buf=49:<h1>the need for scopes</h1>
<p>"Scopes" in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> define an "<a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a>" piece of work.</p>
<hr>
<h2><a href="http://localhost:5000/orthogonal.md" rel="noopener noreferrer">Orthogonal</a> ⤴</h2>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:
<img src="http://localhost:5000/two-orthogonal-lines.png" alt="Two Orthogonal Lines"></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p>They are also provide <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>


10:45:07.286 [debug] l:len=94

10:45:07.286 [debug] l:buf=9:<h1>the need for scopes</h1>
<p>"Scopes" in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> define an "<a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a>" piece of work.</p>
<hr>
<h2><a href="http://localhost:5000/orthogonal.md" rel="noopener noreferrer">Orthogonal</a> ⤴</h2>
<p>A piece of work that isn't dependent on any other type of work to be "done".</p>
<p>Comes from math where two lines are going completely opposite directions:
<img src="http://localhost:5000/two-orthogonal-lines.png" alt="Two Orthogonal Lines"></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
<hr>
<p>They are also provide <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>


10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf empty

10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf=255:<h1>Board game idea: Guess my child's drawing</h1>
<p>It's basically pictonary but the main thing you have to do is use random drawings from children, to try to get people to say what word you're trying to get them to say. Also kind of like Mysterium</p>


10:45:07.286 [debug] l:len=2

10:45:07.286 [debug] l:buf=55:<h1>Board game idea: Guess my child's drawing</h1>
<p>It's basically pictonary but the main thing you have to do is use random drawings from children, to try to get people to say what word you're trying to get them to say. Also kind of like Mysterium</p>


10:45:07.286 [debug] l:len=25

10:45:07.286 [debug] l:buf=5:<h1>Board game idea: Guess my child's drawing</h1>
<p>It's basically pictonary but the main thing you have to do is use random drawings from children, to try to get people to say what word you're trying to get them to say. Also kind of like Mysterium</p>


10:45:07.286 [debug] l:len=

10:45:07.286 [debug] l:buf empty

10:45:07.287 [debug] l:len=

10:45:07.287 [debug] l:buf=305:<h1>issues</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>


10:45:07.287 [debug] l:len=3

10:45:07.287 [debug] l:buf=05:<h1>issues</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>


10:45:07.287 [debug] l:len=30

10:45:07.287 [debug] l:buf=5:<h1>issues</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>


10:45:07.287 [debug] l:len=

10:45:07.287 [debug] l:buf empty

10:45:07.287 [debug] l:len=

10:45:07.287 [debug] l:buf=1310:<h1>Do it right the first time because you won't have time to fix it later</h1>
<blockquote><p>Interesting take on analog vs. digital recording in this interview w/ Steve Albini.<br><br>In digital, you can change everything later. But people forget: there isn’t infinite time to *use* all that optionality afterward.<br><br>Lesson: make more upfront decisions.<a href="https://t.co/WO4Axc9iCQ" rel="noopener noreferrer">https://t.co/WO4Axc9iCQ</a></p>— Ryan Singer (@rjs) <a href="https://twitter.com/rjs/status/1302402976099647490?ref_src=twsrc%5Etfw" rel="noopener noreferrer">September 6, 2020</a></blockquote>
<p>In a digital age it's easy to be lazy because we think, "anything can be fixed later". However we forget how little time we have in the big scheme.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
</ul>


10:45:07.287 [debug] l:len=1

10:45:07.287 [debug] l:buf=310:<h1>Do it right the first time because you won't have time to fix it later</h1>
<blockquote><p>Interesting take on analog vs. digital recording in this interview w/ Steve Albini.<br><br>In digital, you can change everything later. But people forget: there isn’t infinite time to *use* all that optionality afterward.<br><br>Lesson: make more upfront decisions.<a href="https://t.co/WO4Axc9iCQ" rel="noopener noreferrer">https://t.co/WO4Axc9iCQ</a></p>— Ryan Singer (@rjs) <a href="https://twitter.com/rjs/status/1302402976099647490?ref_src=twsrc%5Etfw" rel="noopener noreferrer">September 6, 2020</a></blockquote>
<p>In a digital age it's easy to be lazy because we think, "anything can be fixed later". However we forget how little time we have in the big scheme.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
</ul>


10:45:07.287 [debug] l:len=13

10:45:07.287 [debug] l:buf=10:<h1>Do it right the first time because you won't have time to fix it later</h1>
<blockquote><p>Interesting take on analog vs. digital recording in this interview w/ Steve Albini.<br><br>In digital, you can change everything later. But people forget: there isn’t infinite time to *use* all that optionality afterward.<br><br>Lesson: make more upfront decisions.<a href="https://t.co/WO4Axc9iCQ" rel="noopener noreferrer">https://t.co/WO4Axc9iCQ</a></p>— Ryan Singer (@rjs) <a href="https://twitter.com/rjs/status/1302402976099647490?ref_src=twsrc%5Etfw" rel="noopener noreferrer">September 6, 2020</a></blockquote>
<p>In a digital age it's easy to be lazy because we think, "anything can be fixed later". However we forget how little time we have in the big scheme.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
</ul>


10:45:07.287 [debug] l:len=131

10:45:07.287 [debug] l:buf=0:<h1>Do it right the first time because you won't have time to fix it later</h1>
<blockquote><p>Interesting take on analog vs. digital recording in this interview w/ Steve Albini.<br><br>In digital, you can change everything later. But people forget: there isn’t infinite time to *use* all that optionality afterward.<br><br>Lesson: make more upfront decisions.<a href="https://t.co/WO4Axc9iCQ" rel="noopener noreferrer">https://t.co/WO4Axc9iCQ</a></p>— Ryan Singer (@rjs) <a href="https://twitter.com/rjs/status/1302402976099647490?ref_src=twsrc%5Etfw" rel="noopener noreferrer">September 6, 2020</a></blockquote>
<p>In a digital age it's easy to be lazy because we think, "anything can be fixed later". However we forget how little time we have in the big scheme.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/time" rel="noopener noreferrer">time</a></li>
<li><a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
</ul>


10:45:07.287 [debug] l:len=

10:45:07.287 [debug] l:buf empty

10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf=1647:<p>"10 things I hate about oop" notes</p>
<p>OOP is that it isn’t a paradigm like procedural, logic or functional programming. Instead, OOP says “for every problem you should design your own paradigm”</p>
<p>Obviously this seems like a bad idea. This means everything requires the reader to learn your new ad-hoc paradigm</p>
<p>OOP is about taming complexity through modeling</p>
<p>"We thought that OO conferences like ECOOP, OOPSLA and TOOLS would last for 4 or 5 years and then fade into the mainstream"</p>
<ul>
<li>shouldn't it? If it's so hard to do right is there a way?</li>
</ul>
<p>"Clearly classes should be great. Our brain excels at classifying everything around us. So it seems natural to classify everything in OO programs too.</p>
<p>However, in the real world, there are only objects. Classes exist only in our minds."</p>
<p>Classes shouldn't be as real as they seem in object oriented code. The fact that changing a class causes a huge ripple of change throughout our code seems to indicate they aren't what they say they are</p>
<p><a href="http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/" rel="noopener noreferrer">http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/</a></p>
<p>Tags:
<a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/complexity" rel="noopener noreferrer">Complexity</a>, <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a></p>


10:45:07.288 [debug] l:len=1

10:45:07.288 [debug] l:buf=647:<p>"10 things I hate about oop" notes</p>
<p>OOP is that it isn’t a paradigm like procedural, logic or functional programming. Instead, OOP says “for every problem you should design your own paradigm”</p>
<p>Obviously this seems like a bad idea. This means everything requires the reader to learn your new ad-hoc paradigm</p>
<p>OOP is about taming complexity through modeling</p>
<p>"We thought that OO conferences like ECOOP, OOPSLA and TOOLS would last for 4 or 5 years and then fade into the mainstream"</p>
<ul>
<li>shouldn't it? If it's so hard to do right is there a way?</li>
</ul>
<p>"Clearly classes should be great. Our brain excels at classifying everything around us. So it seems natural to classify everything in OO programs too.</p>
<p>However, in the real world, there are only objects. Classes exist only in our minds."</p>
<p>Classes shouldn't be as real as they seem in object oriented code. The fact that changing a class causes a huge ripple of change throughout our code seems to indicate they aren't what they say they are</p>
<p><a href="http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/" rel="noopener noreferrer">http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/</a></p>
<p>Tags:
<a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/complexity" rel="noopener noreferrer">Complexity</a>, <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a></p>


10:45:07.288 [debug] l:len=16

10:45:07.288 [debug] l:buf=47:<p>"10 things I hate about oop" notes</p>
<p>OOP is that it isn’t a paradigm like procedural, logic or functional programming. Instead, OOP says “for every problem you should design your own paradigm”</p>
<p>Obviously this seems like a bad idea. This means everything requires the reader to learn your new ad-hoc paradigm</p>
<p>OOP is about taming complexity through modeling</p>
<p>"We thought that OO conferences like ECOOP, OOPSLA and TOOLS would last for 4 or 5 years and then fade into the mainstream"</p>
<ul>
<li>shouldn't it? If it's so hard to do right is there a way?</li>
</ul>
<p>"Clearly classes should be great. Our brain excels at classifying everything around us. So it seems natural to classify everything in OO programs too.</p>
<p>However, in the real world, there are only objects. Classes exist only in our minds."</p>
<p>Classes shouldn't be as real as they seem in object oriented code. The fact that changing a class causes a huge ripple of change throughout our code seems to indicate they aren't what they say they are</p>
<p><a href="http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/" rel="noopener noreferrer">http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/</a></p>
<p>Tags:
<a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/complexity" rel="noopener noreferrer">Complexity</a>, <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a></p>


10:45:07.288 [debug] l:len=164

10:45:07.288 [debug] l:buf=7:<p>"10 things I hate about oop" notes</p>
<p>OOP is that it isn’t a paradigm like procedural, logic or functional programming. Instead, OOP says “for every problem you should design your own paradigm”</p>
<p>Obviously this seems like a bad idea. This means everything requires the reader to learn your new ad-hoc paradigm</p>
<p>OOP is about taming complexity through modeling</p>
<p>"We thought that OO conferences like ECOOP, OOPSLA and TOOLS would last for 4 or 5 years and then fade into the mainstream"</p>
<ul>
<li>shouldn't it? If it's so hard to do right is there a way?</li>
</ul>
<p>"Clearly classes should be great. Our brain excels at classifying everything around us. So it seems natural to classify everything in OO programs too.</p>
<p>However, in the real world, there are only objects. Classes exist only in our minds."</p>
<p>Classes shouldn't be as real as they seem in object oriented code. The fact that changing a class causes a huge ripple of change throughout our code seems to indicate they aren't what they say they are</p>
<p><a href="http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/" rel="noopener noreferrer">http://blog.jot.fm/2010/08/26/ten-things-i-hate-about-object-oriented-programming/comment-page-2/</a></p>
<p>Tags:
<a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a>, <a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a>, <a href="http://localhost:5000/complexity" rel="noopener noreferrer">Complexity</a>, <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a></p>


10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf empty

10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf=530:<h1>Data Availability</h1>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.288 [debug] l:len=5

10:45:07.288 [debug] l:buf=30:<h1>Data Availability</h1>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.288 [debug] l:len=53

10:45:07.288 [debug] l:buf=0:<h1>Data Availability</h1>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
</ul>


10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf empty

10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf=82:<h1>wrong metrics</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.288 [debug] l:len=8

10:45:07.288 [debug] l:buf=2:<h1>wrong metrics</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf empty

10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf=245:<h1>Obsidian--global-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.288 [debug] l:len=2

10:45:07.288 [debug] l:buf=45:<h1>Obsidian--global-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.288 [debug] l:len=24

10:45:07.288 [debug] l:buf=5:<h1>Obsidian--global-graph-view</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf empty

10:45:07.288 [debug] l:len=

10:45:07.288 [debug] l:buf=425:<h1>My Essays MOC</h1>
<p>This is a place where I link out to all the Essays I've written</p>
<ul>
<li>#essay</li>
<li>[[Notebooks/Essays]]</li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.288 [debug] l:len=4

10:45:07.289 [debug] l:buf=25:<h1>My Essays MOC</h1>
<p>This is a place where I link out to all the Essays I've written</p>
<ul>
<li>#essay</li>
<li>[[Notebooks/Essays]]</li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.289 [debug] l:len=42

10:45:07.289 [debug] l:buf=5:<h1>My Essays MOC</h1>
<p>This is a place where I link out to all the Essays I've written</p>
<ul>
<li>#essay</li>
<li>[[Notebooks/Essays]]</li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf empty

10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf=301:<h1>Note Taking Systems</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.289 [debug] l:len=3

10:45:07.289 [debug] l:buf=01:<h1>Note Taking Systems</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.289 [debug] l:len=30

10:45:07.289 [debug] l:buf=1:<h1>Note Taking Systems</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf empty

10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf=736:<h1>Grace is things we don't deserve</h1>
<p>Christ's sacrifice for us is something we don't deserve. It's like a 4,000 pound rock that we could never lift. Neither can anyone else because we're all guilty. We don't have the power to forgive ourselves. Only <a href="http://localhost:5000/christ-can-be-the-mediator" rel="noopener noreferrer">Christ can be the mediator</a>.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
</ul>


10:45:07.289 [debug] l:len=7

10:45:07.289 [debug] l:buf=36:<h1>Grace is things we don't deserve</h1>
<p>Christ's sacrifice for us is something we don't deserve. It's like a 4,000 pound rock that we could never lift. Neither can anyone else because we're all guilty. We don't have the power to forgive ourselves. Only <a href="http://localhost:5000/christ-can-be-the-mediator" rel="noopener noreferrer">Christ can be the mediator</a>.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
</ul>


10:45:07.289 [debug] l:len=73

10:45:07.289 [debug] l:buf=6:<h1>Grace is things we don't deserve</h1>
<p>Christ's sacrifice for us is something we don't deserve. It's like a 4,000 pound rock that we could never lift. Neither can anyone else because we're all guilty. We don't have the power to forgive ourselves. Only <a href="http://localhost:5000/christ-can-be-the-mediator" rel="noopener noreferrer">Christ can be the mediator</a>.</p>
<p><a href="http://localhost:5000/way-of-aloha" rel="noopener noreferrer">Way of Aloha</a>, <a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
</ul>


10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf empty

10:45:07.289 [debug] l:len=

10:45:07.289 [debug] l:buf=798:<h1>unread bankruptcy</h1>
<p>This is a behavior when you realize that you don't have enough time anymore to read everything in Slack anymore so instead you do a good ol' <code>CMD-ESC</code> and clear all your notifications. Sure you might miss something important, but at least you finally have peace and you've lowered <a href="http://localhost:5000/the-stress-of-group-chat" rel="noopener noreferrer">the Stress of Group Chat</a>.</p>
<p>See: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.289 [debug] l:len=7

10:45:07.289 [debug] l:buf=98:<h1>unread bankruptcy</h1>
<p>This is a behavior when you realize that you don't have enough time anymore to read everything in Slack anymore so instead you do a good ol' <code>CMD-ESC</code> and clear all your notifications. Sure you might miss something important, but at least you finally have peace and you've lowered <a href="http://localhost:5000/the-stress-of-group-chat" rel="noopener noreferrer">the Stress of Group Chat</a>.</p>
<p>See: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.289 [debug] l:len=79

10:45:07.289 [debug] l:buf=8:<h1>unread bankruptcy</h1>
<p>This is a behavior when you realize that you don't have enough time anymore to read everything in Slack anymore so instead you do a good ol' <code>CMD-ESC</code> and clear all your notifications. Sure you might miss something important, but at least you finally have peace and you've lowered <a href="http://localhost:5000/the-stress-of-group-chat" rel="noopener noreferrer">the Stress of Group Chat</a>.</p>
<p>See: <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf empty

10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf=288:<h1>Sandi Metz quotes</h1>
<blockquote>
<p>Code is read many more times than it is written. Abstractions add changeability but increase cognitive load. The ones that are actually needed save money, those that aren’t increase costs every time anyone looks at the code.</p>
</blockquote>


10:45:07.290 [debug] l:len=2

10:45:07.290 [debug] l:buf=88:<h1>Sandi Metz quotes</h1>
<blockquote>
<p>Code is read many more times than it is written. Abstractions add changeability but increase cognitive load. The ones that are actually needed save money, those that aren’t increase costs every time anyone looks at the code.</p>
</blockquote>


10:45:07.290 [debug] l:len=28

10:45:07.290 [debug] l:buf=8:<h1>Sandi Metz quotes</h1>
<blockquote>
<p>Code is read many more times than it is written. Abstractions add changeability but increase cognitive load. The ones that are actually needed save money, those that aren’t increase costs every time anyone looks at the code.</p>
</blockquote>


10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf empty

10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf=292:<h1>event-sourcing</h1>
<p>Same as <a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.290 [debug] l:len=2

10:45:07.290 [debug] l:buf=92:<h1>event-sourcing</h1>
<p>Same as <a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.290 [debug] l:len=29

10:45:07.290 [debug] l:buf=2:<h1>event-sourcing</h1>
<p>Same as <a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf empty

10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf=77:<h1>Bullying</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.290 [debug] l:len=7

10:45:07.290 [debug] l:buf=7:<h1>Bullying</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf empty

10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf=76:<h1>empathy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.290 [debug] l:len=7

10:45:07.290 [debug] l:buf=6:<h1>empathy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf empty

10:45:07.290 [debug] l:len=

10:45:07.290 [debug] l:buf=466:<h1>HEY!</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.290 [debug] l:len=4

10:45:07.290 [debug] l:buf=66:<h1>HEY!</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.290 [debug] l:len=46

10:45:07.290 [debug] l:buf=6:<h1>HEY!</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.291 [debug] l:len=

10:45:07.291 [debug] l:buf empty

10:45:07.291 [debug] l:len=

10:45:07.291 [debug] l:buf=86:<h1>Fudge--Deployment</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.291 [debug] l:len=8

10:45:07.291 [debug] l:buf=6:<h1>Fudge--Deployment</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.291 [debug] l:len=

10:45:07.291 [debug] l:buf empty

10:45:07.291 [debug] l:len=

10:45:07.291 [debug] l:buf=2813:<h1>Why Functional CSS will probably never be popular, but is still awesome.</h1>
<h1>The Haters</h1>
<p>So you don't have to look far to find a hater of Functional CSS. Basically "anyone who's anyone" in the CSS world seems to hate it.</p>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./9F3A7D9B-F1F6-47BB-9189-98E72BCA4444.png" alt=""></p>
<blockquote>
<p>Aaron Gustafson, chief editor of A List Apart, former manager of the Web Standards Project, Microsoft employee.</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./E4B5DB9A-EB8A-42A7-84B4-21A07A512C49.png" alt=""></p>
<blockquote>
<p>Mozilla Engineer, Soledad Penades</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./B80459D7-F667-4282-8EF2-42459406BF60.png" alt=""></p>
<blockquote>
<p>From the creator of CSS Zen Garden</p>
</blockquote>
<blockquote>
<p><em>What happens with big redesigns? Is it about the same, time- and difficulty-wise, or do you spend more time tearing down all those classes? What happens when you need a style that isn't available? Write your own? Or does that ruin the spirit of all this and put you in dangerous territory? How intense can all the class names get? I can think of areas I've styled that have three or more media queries that dramatically re-style an element. Putting all that information in HTML seems like it could get awfully messy. Is consistency harder or easier?</em></p>
<p>~ Chris Coyier</p>
</blockquote>
<p>Ok maybe he doesn't in all situations...</p>
<blockquote>
<p>One thing that is often hard to articulate with new tooling is when, exactly do you start to reach for this? <strong>The answer is rarely (if ever) immediately and in all situations</strong></p>
<p>One of those situations, in my limited experience, is on large teams with large codebases. The feeling is that the CSS can get far too large and team members essentially become afraid of it, and the CSS becomes jokingly-but-accurately “append-only”.</p>
<p>Along comes a tool that delivers on a promise of shipping far less CSS and in a way that (after a learning curve) nobody is ever afraid of again… I can see the appeal.</p>
<p>~ Chris Coyier</p>
</blockquote>
<h1>Small Components</h1>
<blockquote>
<p>Taking a component-first approach to CSS means you create components for things even if they will never get reused. This premature abstraction is the source of a lot of bloat and complexity in stylesheets.</p>
<ul>
<li>Adam Wathan</li>
</ul>
<p>The smaller the unit, the more reusable it is.</p>
<ul>
<li>Thierry Koblentz</li>
</ul>
</blockquote>


10:45:07.291 [debug] l:len=2

10:45:07.291 [debug] l:buf=813:<h1>Why Functional CSS will probably never be popular, but is still awesome.</h1>
<h1>The Haters</h1>
<p>So you don't have to look far to find a hater of Functional CSS. Basically "anyone who's anyone" in the CSS world seems to hate it.</p>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./9F3A7D9B-F1F6-47BB-9189-98E72BCA4444.png" alt=""></p>
<blockquote>
<p>Aaron Gustafson, chief editor of A List Apart, former manager of the Web Standards Project, Microsoft employee.</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./E4B5DB9A-EB8A-42A7-84B4-21A07A512C49.png" alt=""></p>
<blockquote>
<p>Mozilla Engineer, Soledad Penades</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./B80459D7-F667-4282-8EF2-42459406BF60.png" alt=""></p>
<blockquote>
<p>From the creator of CSS Zen Garden</p>
</blockquote>
<blockquote>
<p><em>What happens with big redesigns? Is it about the same, time- and difficulty-wise, or do you spend more time tearing down all those classes? What happens when you need a style that isn't available? Write your own? Or does that ruin the spirit of all this and put you in dangerous territory? How intense can all the class names get? I can think of areas I've styled that have three or more media queries that dramatically re-style an element. Putting all that information in HTML seems like it could get awfully messy. Is consistency harder or easier?</em></p>
<p>~ Chris Coyier</p>
</blockquote>
<p>Ok maybe he doesn't in all situations...</p>
<blockquote>
<p>One thing that is often hard to articulate with new tooling is when, exactly do you start to reach for this? <strong>The answer is rarely (if ever) immediately and in all situations</strong></p>
<p>One of those situations, in my limited experience, is on large teams with large codebases. The feeling is that the CSS can get far too large and team members essentially become afraid of it, and the CSS becomes jokingly-but-accurately “append-only”.</p>
<p>Along comes a tool that delivers on a promise of shipping far less CSS and in a way that (after a learning curve) nobody is ever afraid of again… I can see the appeal.</p>
<p>~ Chris Coyier</p>
</blockquote>
<h1>Small Components</h1>
<blockquote>
<p>Taking a component-first approach to CSS means you create components for things even if they will never get reused. This premature abstraction is the source of a lot of bloat and complexity in stylesheets.</p>
<ul>
<li>Adam Wathan</li>
</ul>
<p>The smaller the unit, the more reusable it is.</p>
<ul>
<li>Thierry Koblentz</li>
</ul>
</blockquote>


10:45:07.291 [debug] l:len=28

10:45:07.291 [debug] l:buf=13:<h1>Why Functional CSS will probably never be popular, but is still awesome.</h1>
<h1>The Haters</h1>
<p>So you don't have to look far to find a hater of Functional CSS. Basically "anyone who's anyone" in the CSS world seems to hate it.</p>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./9F3A7D9B-F1F6-47BB-9189-98E72BCA4444.png" alt=""></p>
<blockquote>
<p>Aaron Gustafson, chief editor of A List Apart, former manager of the Web Standards Project, Microsoft employee.</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./E4B5DB9A-EB8A-42A7-84B4-21A07A512C49.png" alt=""></p>
<blockquote>
<p>Mozilla Engineer, Soledad Penades</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./B80459D7-F667-4282-8EF2-42459406BF60.png" alt=""></p>
<blockquote>
<p>From the creator of CSS Zen Garden</p>
</blockquote>
<blockquote>
<p><em>What happens with big redesigns? Is it about the same, time- and difficulty-wise, or do you spend more time tearing down all those classes? What happens when you need a style that isn't available? Write your own? Or does that ruin the spirit of all this and put you in dangerous territory? How intense can all the class names get? I can think of areas I've styled that have three or more media queries that dramatically re-style an element. Putting all that information in HTML seems like it could get awfully messy. Is consistency harder or easier?</em></p>
<p>~ Chris Coyier</p>
</blockquote>
<p>Ok maybe he doesn't in all situations...</p>
<blockquote>
<p>One thing that is often hard to articulate with new tooling is when, exactly do you start to reach for this? <strong>The answer is rarely (if ever) immediately and in all situations</strong></p>
<p>One of those situations, in my limited experience, is on large teams with large codebases. The feeling is that the CSS can get far too large and team members essentially become afraid of it, and the CSS becomes jokingly-but-accurately “append-only”.</p>
<p>Along comes a tool that delivers on a promise of shipping far less CSS and in a way that (after a learning curve) nobody is ever afraid of again… I can see the appeal.</p>
<p>~ Chris Coyier</p>
</blockquote>
<h1>Small Components</h1>
<blockquote>
<p>Taking a component-first approach to CSS means you create components for things even if they will never get reused. This premature abstraction is the source of a lot of bloat and complexity in stylesheets.</p>
<ul>
<li>Adam Wathan</li>
</ul>
<p>The smaller the unit, the more reusable it is.</p>
<ul>
<li>Thierry Koblentz</li>
</ul>
</blockquote>


10:45:07.291 [debug] l:len=281

10:45:07.291 [debug] l:buf=3:<h1>Why Functional CSS will probably never be popular, but is still awesome.</h1>
<h1>The Haters</h1>
<p>So you don't have to look far to find a hater of Functional CSS. Basically "anyone who's anyone" in the CSS world seems to hate it.</p>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./9F3A7D9B-F1F6-47BB-9189-98E72BCA4444.png" alt=""></p>
<blockquote>
<p>Aaron Gustafson, chief editor of A List Apart, former manager of the Web Standards Project, Microsoft employee.</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./E4B5DB9A-EB8A-42A7-84B4-21A07A512C49.png" alt=""></p>
<blockquote>
<p>Mozilla Engineer, Soledad Penades</p>
</blockquote>
<p><img src="http://localhost:5000/Why%20Functional%20CSS%20will%20probably%20never%20be%20popular,%20but%20is%20still%20awesome./B80459D7-F667-4282-8EF2-42459406BF60.png" alt=""></p>
<blockquote>
<p>From the creator of CSS Zen Garden</p>
</blockquote>
<blockquote>
<p><em>What happens with big redesigns? Is it about the same, time- and difficulty-wise, or do you spend more time tearing down all those classes? What happens when you need a style that isn't available? Write your own? Or does that ruin the spirit of all this and put you in dangerous territory? How intense can all the class names get? I can think of areas I've styled that have three or more media queries that dramatically re-style an element. Putting all that information in HTML seems like it could get awfully messy. Is consistency harder or easier?</em></p>
<p>~ Chris Coyier</p>
</blockquote>
<p>Ok maybe he doesn't in all situations...</p>
<blockquote>
<p>One thing that is often hard to articulate with new tooling is when, exactly do you start to reach for this? <strong>The answer is rarely (if ever) immediately and in all situations</strong></p>
<p>One of those situations, in my limited experience, is on large teams with large codebases. The feeling is that the CSS can get far too large and team members essentially become afraid of it, and the CSS becomes jokingly-but-accurately “append-only”.</p>
<p>Along comes a tool that delivers on a promise of shipping far less CSS and in a way that (after a learning curve) nobody is ever afraid of again… I can see the appeal.</p>
<p>~ Chris Coyier</p>
</blockquote>
<h1>Small Components</h1>
<blockquote>
<p>Taking a component-first approach to CSS means you create components for things even if they will never get reused. This premature abstraction is the source of a lot of bloat and complexity in stylesheets.</p>
<ul>
<li>Adam Wathan</li>
</ul>
<p>The smaller the unit, the more reusable it is.</p>
<ul>
<li>Thierry Koblentz</li>
</ul>
</blockquote>


10:45:07.291 [debug] l:len=

10:45:07.291 [debug] l:buf empty

10:45:07.292 [debug] l:len=

10:45:07.292 [debug] l:buf=6474:<h1>How to Elm</h1>
<p>This is a basic guide on how to learn Elm rather than actually teach you. I'm going to mostly link to resources that I feel are valuable and try to "teach you how to fish".</p>
<p>The main purpose is to accelerate your learning and save you a lot of googling and weeding through bad explinations.</p>
<h2>Essential links</h2>
<ul>
<li>Main website <a href="http://elm-lang.org/" rel="noopener noreferrer">http://elm-lang.org</a></li>
<li>Elm packages search and docs  <a href="http://package.elm-lang.org/" rel="noopener noreferrer">http://package.elm-lang.org</a></li>
<li>Elm slack invite <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">http://elmlang.herokuapp.com/</a></li>
<li>Syntax Cheat sheet <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">http://elm-lang.org/docs/syntax</a></li>
<li>Elm code examples <a href="http://elm-lang.org/examples" rel="noopener noreferrer">http://elm-lang.org/examples</a></li>
<li>Automatic JSON decoders <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a></li>
</ul>
<h2>Learning Paths</h2>
<p>There is many different ways to learn Elm. Pick the one that best suits your learning style. With that said I feel that an interactive, "real-ish" project approach to be especially effective for me.</p>
<h3>Path 0: Make something (recommended)</h3>
<p>Assuming you're familiar with JavaScript and reasonably familiar with functional programming you should:</p>
<ol>
<li>Read through the <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">syntax guide</a></li>
<li><a href="https://runelm.io/c/dup" rel="noopener noreferrer">Start with a basic project example</a> that uses <code>Html.beginnerProgram</code></li>
<li>Start making a <strong>prototype</strong> of something (default: to-do list) doing <strong>no JS interop or http requests</strong>.</li>
<li>Refractor some things by changing the models type and following the compiler messages</li>
<li>Pull out some of the larger parts into new files like <code>View.elm</code> etc...</li>
<li>Get to the point it's basically done except for a HTTP request and learn about JSON decoding. I recommend using this: <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a> to do it automatically.</li>
<li>If this path didn't work for you make an issue or tell me in some way</li>
</ol>
<h3>Path 1: By exercise</h3>
<ul>
<li>Exercism <a href="http://exercism.io/languages/elm" rel="noopener noreferrer">http://exercism.io/languages/elm</a></li>
</ul>
<h3>Path 2: By video</h3>
<ul>
<li>This is a great course (and free!)
<a href="https://egghead.io/courses/start-using-elm-to-build-web-applications" rel="noopener noreferrer">https://egghead.io/courses/start-using-elm-to-build-web-applications</a></li>
<li>Elm seeds <a href="https://elmseeds.thaterikperson.com/" rel="noopener noreferrer">https://elmseeds.thaterikperson.com/</a></li>
<li>daily drip (paid + a few free) <a href="https://www.dailydrip.com/topics/elm" rel="noopener noreferrer">https://www.dailydrip.com/topics/elm</a></li>
<li>front-end masters course (paid)</li>
</ul>
<h3>Path 3: By book</h3>
<ul>
<li>Main Elm book <a href="https://guide.elm-lang.org/install.html" rel="noopener noreferrer">https://guide.elm-lang.org/install.html</a></li>
<li>Elm in action (physical / eBook, paid) <a href="https://www.manning.com/books/elm-in-action" rel="noopener noreferrer">https://www.manning.com/books/elm-in-action</a></li>
<li>99 problems solved in Elm <a href="https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/" rel="noopener noreferrer">https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/</a></li>
<li>Elm tutorial <a href="https://www.elm-tutorial.org/en/" rel="noopener noreferrer">https://www.elm-tutorial.org/en/</a></li>
</ul>
<h2>Getting Help</h2>
<ol>
<li><a href="http://localhost:5000/package.elm-lang.org" rel="noopener noreferrer">Package documentation</a></li>
<li>Search the <a href="http://faq.elm-community.org/" rel="noopener noreferrer">Elm community FAQ</a></li>
<li>Ask on <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">the Elm slack</a></li>
</ol>
<h2>A note to JavaScript developers (Especially React.js devs)</h2>
<h3>There is no spoon (components)</h3>
<p>Elm has some serious differences from JavaScript. One of such being <strong>there are no components</strong> only <em>view functions</em>. What is the difference? Well, a component is something that has <em>local state</em> and behaves independently. There is no local state in elm views.</p>
<p>Elm is a functional programming language and as such it's primary form of abstraction is pure functions. As such you should think of the view as a <em>projection</em> of the state of your app. A view literally transforms the model into HTML, that's it.</p>
<p>You may be tempted to try to organize your app <a href="https://medium.freecodecamp.com/scaling-your-redux-app-with-ducks-6115955638be#.f9vs9hiv0" rel="noopener noreferrer">duck style</a> meaning grouping your app into many little model + view + update pieces and then finding a way to combine them together. Don't do that. Because Elm is 100% pure it doesn't allow side-effects which mean that you can't hide things like HTTP request, state updates, etc... inside your "duck". This means there's going to be a ton of wiring pushed up to the app that decides to use your ducks.</p>
<h3>The better way</h3>
<p>The better way is to define <strong>well-encapsulated Models</strong> that don't export their implementation with functions to work on it, then make view to show that state. I think <a href="https://www.youtube.com/watch?v=IcgmSRJHu_8" rel="noopener noreferrer">this talk is the best explination of it</a>.</p>
<p>In a list:</p>
<ol>
<li>Model the state of the front-end in a clear and concice way</li>
<li>Use the view to transform that into html</li>
</ol>
<p>If you find that the view and the model end up looking quite different consider doing the <a href="https://medium.com/@ckoster22/upgrade-your-elm-views-with-selectors-1d8c8308b336#.4f96kkda8" rel="noopener noreferrer">"selector" pattern</a></p>
<p>remember:</p>
<blockquote>
<p>It's easy to change things in Elm</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.292 [debug] l:len=6

10:45:07.292 [debug] l:buf=474:<h1>How to Elm</h1>
<p>This is a basic guide on how to learn Elm rather than actually teach you. I'm going to mostly link to resources that I feel are valuable and try to "teach you how to fish".</p>
<p>The main purpose is to accelerate your learning and save you a lot of googling and weeding through bad explinations.</p>
<h2>Essential links</h2>
<ul>
<li>Main website <a href="http://elm-lang.org/" rel="noopener noreferrer">http://elm-lang.org</a></li>
<li>Elm packages search and docs  <a href="http://package.elm-lang.org/" rel="noopener noreferrer">http://package.elm-lang.org</a></li>
<li>Elm slack invite <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">http://elmlang.herokuapp.com/</a></li>
<li>Syntax Cheat sheet <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">http://elm-lang.org/docs/syntax</a></li>
<li>Elm code examples <a href="http://elm-lang.org/examples" rel="noopener noreferrer">http://elm-lang.org/examples</a></li>
<li>Automatic JSON decoders <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a></li>
</ul>
<h2>Learning Paths</h2>
<p>There is many different ways to learn Elm. Pick the one that best suits your learning style. With that said I feel that an interactive, "real-ish" project approach to be especially effective for me.</p>
<h3>Path 0: Make something (recommended)</h3>
<p>Assuming you're familiar with JavaScript and reasonably familiar with functional programming you should:</p>
<ol>
<li>Read through the <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">syntax guide</a></li>
<li><a href="https://runelm.io/c/dup" rel="noopener noreferrer">Start with a basic project example</a> that uses <code>Html.beginnerProgram</code></li>
<li>Start making a <strong>prototype</strong> of something (default: to-do list) doing <strong>no JS interop or http requests</strong>.</li>
<li>Refractor some things by changing the models type and following the compiler messages</li>
<li>Pull out some of the larger parts into new files like <code>View.elm</code> etc...</li>
<li>Get to the point it's basically done except for a HTTP request and learn about JSON decoding. I recommend using this: <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a> to do it automatically.</li>
<li>If this path didn't work for you make an issue or tell me in some way</li>
</ol>
<h3>Path 1: By exercise</h3>
<ul>
<li>Exercism <a href="http://exercism.io/languages/elm" rel="noopener noreferrer">http://exercism.io/languages/elm</a></li>
</ul>
<h3>Path 2: By video</h3>
<ul>
<li>This is a great course (and free!)
<a href="https://egghead.io/courses/start-using-elm-to-build-web-applications" rel="noopener noreferrer">https://egghead.io/courses/start-using-elm-to-build-web-applications</a></li>
<li>Elm seeds <a href="https://elmseeds.thaterikperson.com/" rel="noopener noreferrer">https://elmseeds.thaterikperson.com/</a></li>
<li>daily drip (paid + a few free) <a href="https://www.dailydrip.com/topics/elm" rel="noopener noreferrer">https://www.dailydrip.com/topics/elm</a></li>
<li>front-end masters course (paid)</li>
</ul>
<h3>Path 3: By book</h3>
<ul>
<li>Main Elm book <a href="https://guide.elm-lang.org/install.html" rel="noopener noreferrer">https://guide.elm-lang.org/install.html</a></li>
<li>Elm in action (physical / eBook, paid) <a href="https://www.manning.com/books/elm-in-action" rel="noopener noreferrer">https://www.manning.com/books/elm-in-action</a></li>
<li>99 problems solved in Elm <a href="https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/" rel="noopener noreferrer">https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/</a></li>
<li>Elm tutorial <a href="https://www.elm-tutorial.org/en/" rel="noopener noreferrer">https://www.elm-tutorial.org/en/</a></li>
</ul>
<h2>Getting Help</h2>
<ol>
<li><a href="http://localhost:5000/package.elm-lang.org" rel="noopener noreferrer">Package documentation</a></li>
<li>Search the <a href="http://faq.elm-community.org/" rel="noopener noreferrer">Elm community FAQ</a></li>
<li>Ask on <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">the Elm slack</a></li>
</ol>
<h2>A note to JavaScript developers (Especially React.js devs)</h2>
<h3>There is no spoon (components)</h3>
<p>Elm has some serious differences from JavaScript. One of such being <strong>there are no components</strong> only <em>view functions</em>. What is the difference? Well, a component is something that has <em>local state</em> and behaves independently. There is no local state in elm views.</p>
<p>Elm is a functional programming language and as such it's primary form of abstraction is pure functions. As such you should think of the view as a <em>projection</em> of the state of your app. A view literally transforms the model into HTML, that's it.</p>
<p>You may be tempted to try to organize your app <a href="https://medium.freecodecamp.com/scaling-your-redux-app-with-ducks-6115955638be#.f9vs9hiv0" rel="noopener noreferrer">duck style</a> meaning grouping your app into many little model + view + update pieces and then finding a way to combine them together. Don't do that. Because Elm is 100% pure it doesn't allow side-effects which mean that you can't hide things like HTTP request, state updates, etc... inside your "duck". This means there's going to be a ton of wiring pushed up to the app that decides to use your ducks.</p>
<h3>The better way</h3>
<p>The better way is to define <strong>well-encapsulated Models</strong> that don't export their implementation with functions to work on it, then make view to show that state. I think <a href="https://www.youtube.com/watch?v=IcgmSRJHu_8" rel="noopener noreferrer">this talk is the best explination of it</a>.</p>
<p>In a list:</p>
<ol>
<li>Model the state of the front-end in a clear and concice way</li>
<li>Use the view to transform that into html</li>
</ol>
<p>If you find that the view and the model end up looking quite different consider doing the <a href="https://medium.com/@ckoster22/upgrade-your-elm-views-with-selectors-1d8c8308b336#.4f96kkda8" rel="noopener noreferrer">"selector" pattern</a></p>
<p>remember:</p>
<blockquote>
<p>It's easy to change things in Elm</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.292 [debug] l:len=64

10:45:07.292 [debug] l:buf=74:<h1>How to Elm</h1>
<p>This is a basic guide on how to learn Elm rather than actually teach you. I'm going to mostly link to resources that I feel are valuable and try to "teach you how to fish".</p>
<p>The main purpose is to accelerate your learning and save you a lot of googling and weeding through bad explinations.</p>
<h2>Essential links</h2>
<ul>
<li>Main website <a href="http://elm-lang.org/" rel="noopener noreferrer">http://elm-lang.org</a></li>
<li>Elm packages search and docs  <a href="http://package.elm-lang.org/" rel="noopener noreferrer">http://package.elm-lang.org</a></li>
<li>Elm slack invite <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">http://elmlang.herokuapp.com/</a></li>
<li>Syntax Cheat sheet <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">http://elm-lang.org/docs/syntax</a></li>
<li>Elm code examples <a href="http://elm-lang.org/examples" rel="noopener noreferrer">http://elm-lang.org/examples</a></li>
<li>Automatic JSON decoders <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a></li>
</ul>
<h2>Learning Paths</h2>
<p>There is many different ways to learn Elm. Pick the one that best suits your learning style. With that said I feel that an interactive, "real-ish" project approach to be especially effective for me.</p>
<h3>Path 0: Make something (recommended)</h3>
<p>Assuming you're familiar with JavaScript and reasonably familiar with functional programming you should:</p>
<ol>
<li>Read through the <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">syntax guide</a></li>
<li><a href="https://runelm.io/c/dup" rel="noopener noreferrer">Start with a basic project example</a> that uses <code>Html.beginnerProgram</code></li>
<li>Start making a <strong>prototype</strong> of something (default: to-do list) doing <strong>no JS interop or http requests</strong>.</li>
<li>Refractor some things by changing the models type and following the compiler messages</li>
<li>Pull out some of the larger parts into new files like <code>View.elm</code> etc...</li>
<li>Get to the point it's basically done except for a HTTP request and learn about JSON decoding. I recommend using this: <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a> to do it automatically.</li>
<li>If this path didn't work for you make an issue or tell me in some way</li>
</ol>
<h3>Path 1: By exercise</h3>
<ul>
<li>Exercism <a href="http://exercism.io/languages/elm" rel="noopener noreferrer">http://exercism.io/languages/elm</a></li>
</ul>
<h3>Path 2: By video</h3>
<ul>
<li>This is a great course (and free!)
<a href="https://egghead.io/courses/start-using-elm-to-build-web-applications" rel="noopener noreferrer">https://egghead.io/courses/start-using-elm-to-build-web-applications</a></li>
<li>Elm seeds <a href="https://elmseeds.thaterikperson.com/" rel="noopener noreferrer">https://elmseeds.thaterikperson.com/</a></li>
<li>daily drip (paid + a few free) <a href="https://www.dailydrip.com/topics/elm" rel="noopener noreferrer">https://www.dailydrip.com/topics/elm</a></li>
<li>front-end masters course (paid)</li>
</ul>
<h3>Path 3: By book</h3>
<ul>
<li>Main Elm book <a href="https://guide.elm-lang.org/install.html" rel="noopener noreferrer">https://guide.elm-lang.org/install.html</a></li>
<li>Elm in action (physical / eBook, paid) <a href="https://www.manning.com/books/elm-in-action" rel="noopener noreferrer">https://www.manning.com/books/elm-in-action</a></li>
<li>99 problems solved in Elm <a href="https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/" rel="noopener noreferrer">https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/</a></li>
<li>Elm tutorial <a href="https://www.elm-tutorial.org/en/" rel="noopener noreferrer">https://www.elm-tutorial.org/en/</a></li>
</ul>
<h2>Getting Help</h2>
<ol>
<li><a href="http://localhost:5000/package.elm-lang.org" rel="noopener noreferrer">Package documentation</a></li>
<li>Search the <a href="http://faq.elm-community.org/" rel="noopener noreferrer">Elm community FAQ</a></li>
<li>Ask on <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">the Elm slack</a></li>
</ol>
<h2>A note to JavaScript developers (Especially React.js devs)</h2>
<h3>There is no spoon (components)</h3>
<p>Elm has some serious differences from JavaScript. One of such being <strong>there are no components</strong> only <em>view functions</em>. What is the difference? Well, a component is something that has <em>local state</em> and behaves independently. There is no local state in elm views.</p>
<p>Elm is a functional programming language and as such it's primary form of abstraction is pure functions. As such you should think of the view as a <em>projection</em> of the state of your app. A view literally transforms the model into HTML, that's it.</p>
<p>You may be tempted to try to organize your app <a href="https://medium.freecodecamp.com/scaling-your-redux-app-with-ducks-6115955638be#.f9vs9hiv0" rel="noopener noreferrer">duck style</a> meaning grouping your app into many little model + view + update pieces and then finding a way to combine them together. Don't do that. Because Elm is 100% pure it doesn't allow side-effects which mean that you can't hide things like HTTP request, state updates, etc... inside your "duck". This means there's going to be a ton of wiring pushed up to the app that decides to use your ducks.</p>
<h3>The better way</h3>
<p>The better way is to define <strong>well-encapsulated Models</strong> that don't export their implementation with functions to work on it, then make view to show that state. I think <a href="https://www.youtube.com/watch?v=IcgmSRJHu_8" rel="noopener noreferrer">this talk is the best explination of it</a>.</p>
<p>In a list:</p>
<ol>
<li>Model the state of the front-end in a clear and concice way</li>
<li>Use the view to transform that into html</li>
</ol>
<p>If you find that the view and the model end up looking quite different consider doing the <a href="https://medium.com/@ckoster22/upgrade-your-elm-views-with-selectors-1d8c8308b336#.4f96kkda8" rel="noopener noreferrer">"selector" pattern</a></p>
<p>remember:</p>
<blockquote>
<p>It's easy to change things in Elm</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.292 [debug] l:len=647

10:45:07.292 [debug] l:buf=4:<h1>How to Elm</h1>
<p>This is a basic guide on how to learn Elm rather than actually teach you. I'm going to mostly link to resources that I feel are valuable and try to "teach you how to fish".</p>
<p>The main purpose is to accelerate your learning and save you a lot of googling and weeding through bad explinations.</p>
<h2>Essential links</h2>
<ul>
<li>Main website <a href="http://elm-lang.org/" rel="noopener noreferrer">http://elm-lang.org</a></li>
<li>Elm packages search and docs  <a href="http://package.elm-lang.org/" rel="noopener noreferrer">http://package.elm-lang.org</a></li>
<li>Elm slack invite <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">http://elmlang.herokuapp.com/</a></li>
<li>Syntax Cheat sheet <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">http://elm-lang.org/docs/syntax</a></li>
<li>Elm code examples <a href="http://elm-lang.org/examples" rel="noopener noreferrer">http://elm-lang.org/examples</a></li>
<li>Automatic JSON decoders <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a></li>
</ul>
<h2>Learning Paths</h2>
<p>There is many different ways to learn Elm. Pick the one that best suits your learning style. With that said I feel that an interactive, "real-ish" project approach to be especially effective for me.</p>
<h3>Path 0: Make something (recommended)</h3>
<p>Assuming you're familiar with JavaScript and reasonably familiar with functional programming you should:</p>
<ol>
<li>Read through the <a href="http://elm-lang.org/docs/syntax" rel="noopener noreferrer">syntax guide</a></li>
<li><a href="https://runelm.io/c/dup" rel="noopener noreferrer">Start with a basic project example</a> that uses <code>Html.beginnerProgram</code></li>
<li>Start making a <strong>prototype</strong> of something (default: to-do list) doing <strong>no JS interop or http requests</strong>.</li>
<li>Refractor some things by changing the models type and following the compiler messages</li>
<li>Pull out some of the larger parts into new files like <code>View.elm</code> etc...</li>
<li>Get to the point it's basically done except for a HTTP request and learn about JSON decoding. I recommend using this: <a href="http://eeue56.github.io/json-to-elm/" rel="noopener noreferrer">http://eeue56.github.io/json-to-elm/</a> to do it automatically.</li>
<li>If this path didn't work for you make an issue or tell me in some way</li>
</ol>
<h3>Path 1: By exercise</h3>
<ul>
<li>Exercism <a href="http://exercism.io/languages/elm" rel="noopener noreferrer">http://exercism.io/languages/elm</a></li>
</ul>
<h3>Path 2: By video</h3>
<ul>
<li>This is a great course (and free!)
<a href="https://egghead.io/courses/start-using-elm-to-build-web-applications" rel="noopener noreferrer">https://egghead.io/courses/start-using-elm-to-build-web-applications</a></li>
<li>Elm seeds <a href="https://elmseeds.thaterikperson.com/" rel="noopener noreferrer">https://elmseeds.thaterikperson.com/</a></li>
<li>daily drip (paid + a few free) <a href="https://www.dailydrip.com/topics/elm" rel="noopener noreferrer">https://www.dailydrip.com/topics/elm</a></li>
<li>front-end masters course (paid)</li>
</ul>
<h3>Path 3: By book</h3>
<ul>
<li>Main Elm book <a href="https://guide.elm-lang.org/install.html" rel="noopener noreferrer">https://guide.elm-lang.org/install.html</a></li>
<li>Elm in action (physical / eBook, paid) <a href="https://www.manning.com/books/elm-in-action" rel="noopener noreferrer">https://www.manning.com/books/elm-in-action</a></li>
<li>99 problems solved in Elm <a href="https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/" rel="noopener noreferrer">https://johncrane.gitbooks.io/ninety-nine-elm-problems/content/</a></li>
<li>Elm tutorial <a href="https://www.elm-tutorial.org/en/" rel="noopener noreferrer">https://www.elm-tutorial.org/en/</a></li>
</ul>
<h2>Getting Help</h2>
<ol>
<li><a href="http://localhost:5000/package.elm-lang.org" rel="noopener noreferrer">Package documentation</a></li>
<li>Search the <a href="http://faq.elm-community.org/" rel="noopener noreferrer">Elm community FAQ</a></li>
<li>Ask on <a href="http://elmlang.herokuapp.com/" rel="noopener noreferrer">the Elm slack</a></li>
</ol>
<h2>A note to JavaScript developers (Especially React.js devs)</h2>
<h3>There is no spoon (components)</h3>
<p>Elm has some serious differences from JavaScript. One of such being <strong>there are no components</strong> only <em>view functions</em>. What is the difference? Well, a component is something that has <em>local state</em> and behaves independently. There is no local state in elm views.</p>
<p>Elm is a functional programming language and as such it's primary form of abstraction is pure functions. As such you should think of the view as a <em>projection</em> of the state of your app. A view literally transforms the model into HTML, that's it.</p>
<p>You may be tempted to try to organize your app <a href="https://medium.freecodecamp.com/scaling-your-redux-app-with-ducks-6115955638be#.f9vs9hiv0" rel="noopener noreferrer">duck style</a> meaning grouping your app into many little model + view + update pieces and then finding a way to combine them together. Don't do that. Because Elm is 100% pure it doesn't allow side-effects which mean that you can't hide things like HTTP request, state updates, etc... inside your "duck". This means there's going to be a ton of wiring pushed up to the app that decides to use your ducks.</p>
<h3>The better way</h3>
<p>The better way is to define <strong>well-encapsulated Models</strong> that don't export their implementation with functions to work on it, then make view to show that state. I think <a href="https://www.youtube.com/watch?v=IcgmSRJHu_8" rel="noopener noreferrer">this talk is the best explination of it</a>.</p>
<p>In a list:</p>
<ol>
<li>Model the state of the front-end in a clear and concice way</li>
<li>Use the view to transform that into html</li>
</ol>
<p>If you find that the view and the model end up looking quite different consider doing the <a href="https://medium.com/@ckoster22/upgrade-your-elm-views-with-selectors-1d8c8308b336#.4f96kkda8" rel="noopener noreferrer">"selector" pattern</a></p>
<p>remember:</p>
<blockquote>
<p>It's easy to change things in Elm</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.292 [debug] l:len=

10:45:07.292 [debug] l:buf empty

10:45:07.292 [debug] l:len=

10:45:07.293 [debug] l:buf=305:<h1>Pasted image 20200922163448</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.293 [debug] l:len=3

10:45:07.293 [debug] l:buf=05:<h1>Pasted image 20200922163448</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.293 [debug] l:len=30

10:45:07.293 [debug] l:buf=5:<h1>Pasted image 20200922163448</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf empty

10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf=504:<h1>Standup</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.293 [debug] l:len=5

10:45:07.293 [debug] l:buf=04:<h1>Standup</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.293 [debug] l:len=50

10:45:07.293 [debug] l:buf=4:<h1>Standup</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a></li>
</ul>


10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf empty

10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf=215:<h1>IMF MOC</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.293 [debug] l:len=2

10:45:07.293 [debug] l:buf=15:<h1>IMF MOC</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.293 [debug] l:len=21

10:45:07.293 [debug] l:buf=5:<h1>IMF MOC</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf empty

10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf=1193:<h1>7 Habits of Highly effective People</h1>
<h2>Personal Values</h2>
<ol>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a></li>
<li><a href="http://localhost:5000/put-first-things-first" rel="noopener noreferrer">Put First Things First</a></li>
</ol>
<h2>Social Values</h2>
<ol>
<li><a href="http://localhost:5000/think-win-win" rel="noopener noreferrer">Think Win-Win</a></li>
<li><a href="http://localhost:5000/seek-first-to-understand,-then-to-be-understood" rel="noopener noreferrer">Seek First to Understand, Then to Be Understood</a></li>
<li><a href="http://localhost:5000/synergize" rel="noopener noreferrer">Synergize</a></li>
</ol>
<h2>Meta Value</h2>
<ol>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">Sharpen the Saw</a></li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.293 [debug] l:len=1

10:45:07.293 [debug] l:buf=193:<h1>7 Habits of Highly effective People</h1>
<h2>Personal Values</h2>
<ol>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a></li>
<li><a href="http://localhost:5000/put-first-things-first" rel="noopener noreferrer">Put First Things First</a></li>
</ol>
<h2>Social Values</h2>
<ol>
<li><a href="http://localhost:5000/think-win-win" rel="noopener noreferrer">Think Win-Win</a></li>
<li><a href="http://localhost:5000/seek-first-to-understand,-then-to-be-understood" rel="noopener noreferrer">Seek First to Understand, Then to Be Understood</a></li>
<li><a href="http://localhost:5000/synergize" rel="noopener noreferrer">Synergize</a></li>
</ol>
<h2>Meta Value</h2>
<ol>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">Sharpen the Saw</a></li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.293 [debug] l:len=11

10:45:07.293 [debug] l:buf=93:<h1>7 Habits of Highly effective People</h1>
<h2>Personal Values</h2>
<ol>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a></li>
<li><a href="http://localhost:5000/put-first-things-first" rel="noopener noreferrer">Put First Things First</a></li>
</ol>
<h2>Social Values</h2>
<ol>
<li><a href="http://localhost:5000/think-win-win" rel="noopener noreferrer">Think Win-Win</a></li>
<li><a href="http://localhost:5000/seek-first-to-understand,-then-to-be-understood" rel="noopener noreferrer">Seek First to Understand, Then to Be Understood</a></li>
<li><a href="http://localhost:5000/synergize" rel="noopener noreferrer">Synergize</a></li>
</ol>
<h2>Meta Value</h2>
<ol>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">Sharpen the Saw</a></li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.293 [debug] l:len=119

10:45:07.293 [debug] l:buf=3:<h1>7 Habits of Highly effective People</h1>
<h2>Personal Values</h2>
<ol>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/begin-with-the-end-in-mind" rel="noopener noreferrer">Begin with the End in Mind</a></li>
<li><a href="http://localhost:5000/put-first-things-first" rel="noopener noreferrer">Put First Things First</a></li>
</ol>
<h2>Social Values</h2>
<ol>
<li><a href="http://localhost:5000/think-win-win" rel="noopener noreferrer">Think Win-Win</a></li>
<li><a href="http://localhost:5000/seek-first-to-understand,-then-to-be-understood" rel="noopener noreferrer">Seek First to Understand, Then to Be Understood</a></li>
<li><a href="http://localhost:5000/synergize" rel="noopener noreferrer">Synergize</a></li>
</ol>
<h2>Meta Value</h2>
<ol>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">Sharpen the Saw</a></li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf empty

10:45:07.293 [debug] l:len=

10:45:07.293 [debug] l:buf=300:<h1>Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
</ul>


10:45:07.293 [debug] l:len=3

10:45:07.293 [debug] l:buf=00:<h1>Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
</ul>


10:45:07.294 [debug] l:len=30

10:45:07.294 [debug] l:buf=0:<h1>Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
</ul>


10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf empty

10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf=271:<h1>Synchronous</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.294 [debug] l:len=2

10:45:07.294 [debug] l:buf=71:<h1>Synchronous</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.294 [debug] l:len=27

10:45:07.294 [debug] l:buf=1:<h1>Synchronous</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf empty

10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf=80:<h1>reason-dojo</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.294 [debug] l:len=8

10:45:07.294 [debug] l:buf=0:<h1>reason-dojo</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf empty

10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf=676:<h1>June 26th Scripture study</h1>
<blockquote>
<p>“He saved others; himself he cannot save” (Matthew 27:42)</p>
</blockquote>
<p>Although this was said because they didn't understand the atonement I think there's a lesson in this. Jesus healed everyone else, but never healed himself. He was able to command the sea but he didn't stop his tormenters.</p>
<p>I think that maybe this is why the preisthood works this way, Jesus was trying to tell us something. He was trying to tell us to help others in all circumstances. Not to think of ourselves, but think of others.</p>
<p>...</p>
<p>I'm not sure I'm crazy good at that currently. I think I could be a lot better.</p>


10:45:07.294 [debug] l:len=6

10:45:07.294 [debug] l:buf=76:<h1>June 26th Scripture study</h1>
<blockquote>
<p>“He saved others; himself he cannot save” (Matthew 27:42)</p>
</blockquote>
<p>Although this was said because they didn't understand the atonement I think there's a lesson in this. Jesus healed everyone else, but never healed himself. He was able to command the sea but he didn't stop his tormenters.</p>
<p>I think that maybe this is why the preisthood works this way, Jesus was trying to tell us something. He was trying to tell us to help others in all circumstances. Not to think of ourselves, but think of others.</p>
<p>...</p>
<p>I'm not sure I'm crazy good at that currently. I think I could be a lot better.</p>


10:45:07.294 [debug] l:len=67

10:45:07.294 [debug] l:buf=6:<h1>June 26th Scripture study</h1>
<blockquote>
<p>“He saved others; himself he cannot save” (Matthew 27:42)</p>
</blockquote>
<p>Although this was said because they didn't understand the atonement I think there's a lesson in this. Jesus healed everyone else, but never healed himself. He was able to command the sea but he didn't stop his tormenters.</p>
<p>I think that maybe this is why the preisthood works this way, Jesus was trying to tell us something. He was trying to tell us to help others in all circumstances. Not to think of ourselves, but think of others.</p>
<p>...</p>
<p>I'm not sure I'm crazy good at that currently. I think I could be a lot better.</p>


10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf empty

10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf=748:<h1>actually, no ad, good mobile games (video idea)</h1>
<ul>
<li>
<p> Minedustry</p>
</li>
<li>
<p> Arelux (RTS)</p>
</li>
<li>
<p> Pixel Dungeon</p>
</li>
<li>
<p> Downwell</p>
</li>
<li>
<p> Hoplite</p>
</li>
<li>
<p> Battle of Polytopia (4X)</p>
</li>
<li>
<p>[[Other/Old Notes/bear/Talk Ideas]]</p>
</li>
<li>
<p><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></p>
</li>
<li>
<p><a href="http://localhost:5000/youtube-video-ideas" rel="noopener noreferrer">Youtube video ideas</a></p>
</li>
</ul>


10:45:07.294 [debug] l:len=7

10:45:07.294 [debug] l:buf=48:<h1>actually, no ad, good mobile games (video idea)</h1>
<ul>
<li>
<p> Minedustry</p>
</li>
<li>
<p> Arelux (RTS)</p>
</li>
<li>
<p> Pixel Dungeon</p>
</li>
<li>
<p> Downwell</p>
</li>
<li>
<p> Hoplite</p>
</li>
<li>
<p> Battle of Polytopia (4X)</p>
</li>
<li>
<p>[[Other/Old Notes/bear/Talk Ideas]]</p>
</li>
<li>
<p><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></p>
</li>
<li>
<p><a href="http://localhost:5000/youtube-video-ideas" rel="noopener noreferrer">Youtube video ideas</a></p>
</li>
</ul>


10:45:07.294 [debug] l:len=74

10:45:07.294 [debug] l:buf=8:<h1>actually, no ad, good mobile games (video idea)</h1>
<ul>
<li>
<p> Minedustry</p>
</li>
<li>
<p> Arelux (RTS)</p>
</li>
<li>
<p> Pixel Dungeon</p>
</li>
<li>
<p> Downwell</p>
</li>
<li>
<p> Hoplite</p>
</li>
<li>
<p> Battle of Polytopia (4X)</p>
</li>
<li>
<p>[[Other/Old Notes/bear/Talk Ideas]]</p>
</li>
<li>
<p><a href="http://localhost:5000/blog-post-ideas" rel="noopener noreferrer">Blog post ideas</a></p>
</li>
<li>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>
</li>
<li>
<p><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></p>
</li>
<li>
<p><a href="http://localhost:5000/youtube-video-ideas" rel="noopener noreferrer">Youtube video ideas</a></p>
</li>
</ul>


10:45:07.294 [debug] l:len=

10:45:07.294 [debug] l:buf empty

10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf=77:<h1>newafeed</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.295 [debug] l:len=7

10:45:07.295 [debug] l:buf=7:<h1>newafeed</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf empty

10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf=423:<h1>reason</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.295 [debug] l:len=4

10:45:07.295 [debug] l:buf=23:<h1>reason</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.295 [debug] l:len=42

10:45:07.295 [debug] l:buf=3:<h1>reason</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/teaching-reasonml" rel="noopener noreferrer">Teaching ReasonML</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf empty

10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf=340:<h1>Books</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.295 [debug] l:len=3

10:45:07.295 [debug] l:buf=40:<h1>Books</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.295 [debug] l:len=34

10:45:07.295 [debug] l:buf=0:<h1>Books</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf empty

10:45:07.295 [debug] l:len=

10:45:07.295 [debug] l:buf=3550:<h1>Github Projects Navigation V</h1>
<p>The image below shows how crazy it is to just get to a <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> ticket to talk on it. It's so convoluted that it's unlikely anyone will ever do it.</p>
<hr>
<h2><a href="http://localhost:5000/github-projects.png" rel="noopener noreferrer">Github Projects</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It takes <code>6</code> hops from the <a href="http://localhost:5000/github" rel="noopener noreferrer">Github</a> home screen screens <code>3</code> of which are basically completely unrelated pages to <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> multiple dead-ends and confusing places to get lost.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> it takes <code>3</code>  hops total to get to any todo's details and discussions. <code>2</code> to see the todos of any project. <code>1</code> to see any project or team. Also the notifications aren't garbage.</p>
<p>Why does this matter? Well because <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a> in <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a>.</p>
<hr>
<h2><a href="http://localhost:5000/simplicity-freaking-matters.md" rel="noopener noreferrer">Simplicity freaking matters</a> ⤴</h2>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p>See also <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a>.</p>


10:45:07.295 [debug] l:len=3

10:45:07.296 [debug] l:buf=550:<h1>Github Projects Navigation V</h1>
<p>The image below shows how crazy it is to just get to a <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> ticket to talk on it. It's so convoluted that it's unlikely anyone will ever do it.</p>
<hr>
<h2><a href="http://localhost:5000/github-projects.png" rel="noopener noreferrer">Github Projects</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It takes <code>6</code> hops from the <a href="http://localhost:5000/github" rel="noopener noreferrer">Github</a> home screen screens <code>3</code> of which are basically completely unrelated pages to <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> multiple dead-ends and confusing places to get lost.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> it takes <code>3</code>  hops total to get to any todo's details and discussions. <code>2</code> to see the todos of any project. <code>1</code> to see any project or team. Also the notifications aren't garbage.</p>
<p>Why does this matter? Well because <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a> in <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a>.</p>
<hr>
<h2><a href="http://localhost:5000/simplicity-freaking-matters.md" rel="noopener noreferrer">Simplicity freaking matters</a> ⤴</h2>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p>See also <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a>.</p>


10:45:07.296 [debug] l:len=35

10:45:07.296 [debug] l:buf=50:<h1>Github Projects Navigation V</h1>
<p>The image below shows how crazy it is to just get to a <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> ticket to talk on it. It's so convoluted that it's unlikely anyone will ever do it.</p>
<hr>
<h2><a href="http://localhost:5000/github-projects.png" rel="noopener noreferrer">Github Projects</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It takes <code>6</code> hops from the <a href="http://localhost:5000/github" rel="noopener noreferrer">Github</a> home screen screens <code>3</code> of which are basically completely unrelated pages to <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> multiple dead-ends and confusing places to get lost.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> it takes <code>3</code>  hops total to get to any todo's details and discussions. <code>2</code> to see the todos of any project. <code>1</code> to see any project or team. Also the notifications aren't garbage.</p>
<p>Why does this matter? Well because <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a> in <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a>.</p>
<hr>
<h2><a href="http://localhost:5000/simplicity-freaking-matters.md" rel="noopener noreferrer">Simplicity freaking matters</a> ⤴</h2>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p>See also <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a>.</p>


10:45:07.296 [debug] l:len=355

10:45:07.296 [debug] l:buf=0:<h1>Github Projects Navigation V</h1>
<p>The image below shows how crazy it is to just get to a <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> ticket to talk on it. It's so convoluted that it's unlikely anyone will ever do it.</p>
<hr>
<h2><a href="http://localhost:5000/github-projects.png" rel="noopener noreferrer">Github Projects</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>It takes <code>6</code> hops from the <a href="http://localhost:5000/github" rel="noopener noreferrer">Github</a> home screen screens <code>3</code> of which are basically completely unrelated pages to <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> multiple dead-ends and confusing places to get lost.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> it takes <code>3</code>  hops total to get to any todo's details and discussions. <code>2</code> to see the todos of any project. <code>1</code> to see any project or team. Also the notifications aren't garbage.</p>
<p>Why does this matter? Well because <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a> in <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a>.</p>
<hr>
<h2><a href="http://localhost:5000/simplicity-freaking-matters.md" rel="noopener noreferrer">Simplicity freaking matters</a> ⤴</h2>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p>See also <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a>.</p>


10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf empty

10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf=85:<h1>Software quality</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.296 [debug] l:len=8

10:45:07.296 [debug] l:buf=5:<h1>Software quality</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf empty

10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf=270:<h1>take a stand</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a></li>
</ul>


10:45:07.296 [debug] l:len=2

10:45:07.296 [debug] l:buf=70:<h1>take a stand</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a></li>
</ul>


10:45:07.296 [debug] l:len=27

10:45:07.296 [debug] l:buf=0:<h1>take a stand</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a></li>
</ul>


10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf empty

10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf=414:<h1>Slack did not produce more engagement for us</h1>
<p>in <a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.296 [debug] l:len=4

10:45:07.296 [debug] l:buf=14:<h1>Slack did not produce more engagement for us</h1>
<p>in <a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.296 [debug] l:len=41

10:45:07.296 [debug] l:buf=4:<h1>Slack did not produce more engagement for us</h1>
<p>in <a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a>,</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.296 [debug] l:len=

10:45:07.296 [debug] l:buf empty

10:45:07.297 [debug] l:len=

10:45:07.297 [debug] l:buf=1676:<h1>2020-09-25</h1>
<p>Johnny posted this: <a href="https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500" rel="noopener noreferrer">https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500</a></p>
<blockquote>
<p>Today was a PM day for sure. I just started looking into the watch issue that Paul messaged me about, but before that I was doing a lot of project organization stuff. <strong>I’ve noticed the the planning boards have become more like trash receptacles</strong>. They have <strong>so many issues</strong> in them and <strong>it is so disorganized</strong>, the pretty much <strong>80% of the tickets that are created there will stay there for a long time</strong>. I hopped on a call with Spencer and we sorted through the current S2's and defined whether they were really ready for the next sprint or if they should be put in the backlog.
<br>
I’m hoping that if we can keep the planning boards cleaner, we can have more effective planning meetings, and <strong>we can actually get reported stuff fixed instead of it being lost in an array of bugs</strong>. Planning on meeting with Spencer and Justin weekly to do a planning review and making sure things are prioritized and ready for sprint planning on Mondays.</p>
</blockquote>
<ul>
<li>So there's real pain around managing the <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> of bugs.</li>
<li>People just <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">dump</a> things there but never look at them</li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.297 [debug] l:len=1

10:45:07.297 [debug] l:buf=676:<h1>2020-09-25</h1>
<p>Johnny posted this: <a href="https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500" rel="noopener noreferrer">https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500</a></p>
<blockquote>
<p>Today was a PM day for sure. I just started looking into the watch issue that Paul messaged me about, but before that I was doing a lot of project organization stuff. <strong>I’ve noticed the the planning boards have become more like trash receptacles</strong>. They have <strong>so many issues</strong> in them and <strong>it is so disorganized</strong>, the pretty much <strong>80% of the tickets that are created there will stay there for a long time</strong>. I hopped on a call with Spencer and we sorted through the current S2's and defined whether they were really ready for the next sprint or if they should be put in the backlog.
<br>
I’m hoping that if we can keep the planning boards cleaner, we can have more effective planning meetings, and <strong>we can actually get reported stuff fixed instead of it being lost in an array of bugs</strong>. Planning on meeting with Spencer and Justin weekly to do a planning review and making sure things are prioritized and ready for sprint planning on Mondays.</p>
</blockquote>
<ul>
<li>So there's real pain around managing the <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> of bugs.</li>
<li>People just <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">dump</a> things there but never look at them</li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.297 [debug] l:len=16

10:45:07.297 [debug] l:buf=76:<h1>2020-09-25</h1>
<p>Johnny posted this: <a href="https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500" rel="noopener noreferrer">https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500</a></p>
<blockquote>
<p>Today was a PM day for sure. I just started looking into the watch issue that Paul messaged me about, but before that I was doing a lot of project organization stuff. <strong>I’ve noticed the the planning boards have become more like trash receptacles</strong>. They have <strong>so many issues</strong> in them and <strong>it is so disorganized</strong>, the pretty much <strong>80% of the tickets that are created there will stay there for a long time</strong>. I hopped on a call with Spencer and we sorted through the current S2's and defined whether they were really ready for the next sprint or if they should be put in the backlog.
<br>
I’m hoping that if we can keep the planning boards cleaner, we can have more effective planning meetings, and <strong>we can actually get reported stuff fixed instead of it being lost in an array of bugs</strong>. Planning on meeting with Spencer and Justin weekly to do a planning review and making sure things are prioritized and ready for sprint planning on Mondays.</p>
</blockquote>
<ul>
<li>So there's real pain around managing the <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> of bugs.</li>
<li>People just <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">dump</a> things there but never look at them</li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.297 [debug] l:len=167

10:45:07.297 [debug] l:buf=6:<h1>2020-09-25</h1>
<p>Johnny posted this: <a href="https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500" rel="noopener noreferrer">https://bloombuilt.slack.com/archives/CQQM3TJ6L/p1600986959002500</a></p>
<blockquote>
<p>Today was a PM day for sure. I just started looking into the watch issue that Paul messaged me about, but before that I was doing a lot of project organization stuff. <strong>I’ve noticed the the planning boards have become more like trash receptacles</strong>. They have <strong>so many issues</strong> in them and <strong>it is so disorganized</strong>, the pretty much <strong>80% of the tickets that are created there will stay there for a long time</strong>. I hopped on a call with Spencer and we sorted through the current S2's and defined whether they were really ready for the next sprint or if they should be put in the backlog.
<br>
I’m hoping that if we can keep the planning boards cleaner, we can have more effective planning meetings, and <strong>we can actually get reported stuff fixed instead of it being lost in an array of bugs</strong>. Planning on meeting with Spencer and Justin weekly to do a planning review and making sure things are prioritized and ready for sprint planning on Mondays.</p>
</blockquote>
<ul>
<li>So there's real pain around managing the <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> of bugs.</li>
<li>People just <a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">dump</a> things there but never look at them</li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.297 [debug] l:len=

10:45:07.297 [debug] l:buf empty

10:45:07.297 [debug] l:len=

10:45:07.297 [debug] l:buf=2585:<h1>Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest</h1>
<p>Link: <a href="https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s" rel="noopener noreferrer">https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s</a></p>
<ul>
<li>People think: we all just want to relax on a beach drinking a cool drink
<ul>
<li>AKA the human's are lazy mentality
<ul>
<li>Humans will avoid work as much as possible</li>
</ul>
</li>
</ul>
</li>
<li>This doesn't really line up with how people work.
<ul>
<li>Why do people climb mountains and do hard things?
<ul>
<li>Because they are enjoying them at the time?</li>
<li>Nope, they are cold and miserable and don't even get a nice view because it's too cloudy</li>
</ul>
</li>
</ul>
</li>
<li>What motivates humans?</li>
<li>The canceled project
<ul>
<li>A project that wasn't ever going to go to customers</li>
<li>Functionally OK:
<ul>
<li>They had done a good job</li>
<li>They were going to probably get a raise</li>
<li>Boss was happy with their work</li>
</ul>
</li>
<li>Emotionally wrecked
<ul>
<li>The least motivated team</li>
</ul>
</li>
</ul>
</li>
<li>Building Bionicle's
<ul>
<li>They paid people to built bionicles for lower and lower pay to see when the pay wasn't enough to build more.</li>
<li>"the motivated"
<ul>
<li>Their work would go to live on under the table, they wouldn't see it destroyed</li>
<li>They quit at 11</li>
<li>There was differences between those that loved legos and those that didn't</li>
</ul>
</li>
<li>"The <a href="http://localhost:5000/sysphus" rel="noopener noreferrer">sysphus</a>"
<ul>
<li>They would see their work destroyed before their eyes</li>
<li>After they were done with the 2nd one they would be handed back the 1st one</li>
<li>They quit at 7</li>
<li>There was no difference between those that liked legos and those that didn't
<ul>
<li>They sucked all the enjoyment out of building legos for everyone</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Paperwork experiment
<ul>
<li>Takeaway: we want people to care about our work</li>
<li>3 categories
<ul>
<li>Smile at your work</li>
<li>Ignore your work
<ul>
<li>Actually almost as bad as shred your work</li>
</ul>
</li>
<li>Shred your work</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
<li><a href="http://localhost:5000/behavioral-economics" rel="noopener noreferrer">Behavioral Economics</a></li>
<li><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></li>
</ul>


10:45:07.297 [debug] l:len=2

10:45:07.297 [debug] l:buf=585:<h1>Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest</h1>
<p>Link: <a href="https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s" rel="noopener noreferrer">https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s</a></p>
<ul>
<li>People think: we all just want to relax on a beach drinking a cool drink
<ul>
<li>AKA the human's are lazy mentality
<ul>
<li>Humans will avoid work as much as possible</li>
</ul>
</li>
</ul>
</li>
<li>This doesn't really line up with how people work.
<ul>
<li>Why do people climb mountains and do hard things?
<ul>
<li>Because they are enjoying them at the time?</li>
<li>Nope, they are cold and miserable and don't even get a nice view because it's too cloudy</li>
</ul>
</li>
</ul>
</li>
<li>What motivates humans?</li>
<li>The canceled project
<ul>
<li>A project that wasn't ever going to go to customers</li>
<li>Functionally OK:
<ul>
<li>They had done a good job</li>
<li>They were going to probably get a raise</li>
<li>Boss was happy with their work</li>
</ul>
</li>
<li>Emotionally wrecked
<ul>
<li>The least motivated team</li>
</ul>
</li>
</ul>
</li>
<li>Building Bionicle's
<ul>
<li>They paid people to built bionicles for lower and lower pay to see when the pay wasn't enough to build more.</li>
<li>"the motivated"
<ul>
<li>Their work would go to live on under the table, they wouldn't see it destroyed</li>
<li>They quit at 11</li>
<li>There was differences between those that loved legos and those that didn't</li>
</ul>
</li>
<li>"The <a href="http://localhost:5000/sysphus" rel="noopener noreferrer">sysphus</a>"
<ul>
<li>They would see their work destroyed before their eyes</li>
<li>After they were done with the 2nd one they would be handed back the 1st one</li>
<li>They quit at 7</li>
<li>There was no difference between those that liked legos and those that didn't
<ul>
<li>They sucked all the enjoyment out of building legos for everyone</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Paperwork experiment
<ul>
<li>Takeaway: we want people to care about our work</li>
<li>3 categories
<ul>
<li>Smile at your work</li>
<li>Ignore your work
<ul>
<li>Actually almost as bad as shred your work</li>
</ul>
</li>
<li>Shred your work</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
<li><a href="http://localhost:5000/behavioral-economics" rel="noopener noreferrer">Behavioral Economics</a></li>
<li><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></li>
</ul>


10:45:07.297 [debug] l:len=25

10:45:07.297 [debug] l:buf=85:<h1>Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest</h1>
<p>Link: <a href="https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s" rel="noopener noreferrer">https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s</a></p>
<ul>
<li>People think: we all just want to relax on a beach drinking a cool drink
<ul>
<li>AKA the human's are lazy mentality
<ul>
<li>Humans will avoid work as much as possible</li>
</ul>
</li>
</ul>
</li>
<li>This doesn't really line up with how people work.
<ul>
<li>Why do people climb mountains and do hard things?
<ul>
<li>Because they are enjoying them at the time?</li>
<li>Nope, they are cold and miserable and don't even get a nice view because it's too cloudy</li>
</ul>
</li>
</ul>
</li>
<li>What motivates humans?</li>
<li>The canceled project
<ul>
<li>A project that wasn't ever going to go to customers</li>
<li>Functionally OK:
<ul>
<li>They had done a good job</li>
<li>They were going to probably get a raise</li>
<li>Boss was happy with their work</li>
</ul>
</li>
<li>Emotionally wrecked
<ul>
<li>The least motivated team</li>
</ul>
</li>
</ul>
</li>
<li>Building Bionicle's
<ul>
<li>They paid people to built bionicles for lower and lower pay to see when the pay wasn't enough to build more.</li>
<li>"the motivated"
<ul>
<li>Their work would go to live on under the table, they wouldn't see it destroyed</li>
<li>They quit at 11</li>
<li>There was differences between those that loved legos and those that didn't</li>
</ul>
</li>
<li>"The <a href="http://localhost:5000/sysphus" rel="noopener noreferrer">sysphus</a>"
<ul>
<li>They would see their work destroyed before their eyes</li>
<li>After they were done with the 2nd one they would be handed back the 1st one</li>
<li>They quit at 7</li>
<li>There was no difference between those that liked legos and those that didn't
<ul>
<li>They sucked all the enjoyment out of building legos for everyone</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Paperwork experiment
<ul>
<li>Takeaway: we want people to care about our work</li>
<li>3 categories
<ul>
<li>Smile at your work</li>
<li>Ignore your work
<ul>
<li>Actually almost as bad as shred your work</li>
</ul>
</li>
<li>Shred your work</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
<li><a href="http://localhost:5000/behavioral-economics" rel="noopener noreferrer">Behavioral Economics</a></li>
<li><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></li>
</ul>


10:45:07.297 [debug] l:len=258

10:45:07.297 [debug] l:buf=5:<h1>Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest</h1>
<p>Link: <a href="https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s" rel="noopener noreferrer">https://www.youtube.com/watch?v=wfcro5iM5vw&amp;t=377s</a></p>
<ul>
<li>People think: we all just want to relax on a beach drinking a cool drink
<ul>
<li>AKA the human's are lazy mentality
<ul>
<li>Humans will avoid work as much as possible</li>
</ul>
</li>
</ul>
</li>
<li>This doesn't really line up with how people work.
<ul>
<li>Why do people climb mountains and do hard things?
<ul>
<li>Because they are enjoying them at the time?</li>
<li>Nope, they are cold and miserable and don't even get a nice view because it's too cloudy</li>
</ul>
</li>
</ul>
</li>
<li>What motivates humans?</li>
<li>The canceled project
<ul>
<li>A project that wasn't ever going to go to customers</li>
<li>Functionally OK:
<ul>
<li>They had done a good job</li>
<li>They were going to probably get a raise</li>
<li>Boss was happy with their work</li>
</ul>
</li>
<li>Emotionally wrecked
<ul>
<li>The least motivated team</li>
</ul>
</li>
</ul>
</li>
<li>Building Bionicle's
<ul>
<li>They paid people to built bionicles for lower and lower pay to see when the pay wasn't enough to build more.</li>
<li>"the motivated"
<ul>
<li>Their work would go to live on under the table, they wouldn't see it destroyed</li>
<li>They quit at 11</li>
<li>There was differences between those that loved legos and those that didn't</li>
</ul>
</li>
<li>"The <a href="http://localhost:5000/sysphus" rel="noopener noreferrer">sysphus</a>"
<ul>
<li>They would see their work destroyed before their eyes</li>
<li>After they were done with the 2nd one they would be handed back the 1st one</li>
<li>They quit at 7</li>
<li>There was no difference between those that liked legos and those that didn't
<ul>
<li>They sucked all the enjoyment out of building legos for everyone</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Paperwork experiment
<ul>
<li>Takeaway: we want people to care about our work</li>
<li>3 categories
<ul>
<li>Smile at your work</li>
<li>Ignore your work
<ul>
<li>Actually almost as bad as shred your work</li>
</ul>
</li>
<li>Shred your work</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
<li><a href="http://localhost:5000/behavioral-economics" rel="noopener noreferrer">Behavioral Economics</a></li>
<li><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></li>
</ul>


10:45:07.297 [debug] l:len=

10:45:07.298 [debug] l:buf empty

10:45:07.298 [debug] l:len=

10:45:07.298 [debug] l:buf=974:<h1>roadmap</h1>
<p>Roadmaps are a bit problematic because they order all the projects you're going to do along a linear timeline. This creates premature commitment to projects that often leads to anger and disappointment when they don't work out. Either that, or they lock the development team into a long term commitment that they are bound to do despite it not being the most important thing.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/priories" rel="noopener noreferrer">Priories</a></li>
<li><a href="http://localhost:5000/gant-charts" rel="noopener noreferrer">Gant Charts</a></li>
<li><a href="http://localhost:5000/waterfall" rel="noopener noreferrer">Waterfall</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.298 [debug] l:len=9

10:45:07.298 [debug] l:buf=74:<h1>roadmap</h1>
<p>Roadmaps are a bit problematic because they order all the projects you're going to do along a linear timeline. This creates premature commitment to projects that often leads to anger and disappointment when they don't work out. Either that, or they lock the development team into a long term commitment that they are bound to do despite it not being the most important thing.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/priories" rel="noopener noreferrer">Priories</a></li>
<li><a href="http://localhost:5000/gant-charts" rel="noopener noreferrer">Gant Charts</a></li>
<li><a href="http://localhost:5000/waterfall" rel="noopener noreferrer">Waterfall</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.298 [debug] l:len=97

10:45:07.298 [debug] l:buf=4:<h1>roadmap</h1>
<p>Roadmaps are a bit problematic because they order all the projects you're going to do along a linear timeline. This creates premature commitment to projects that often leads to anger and disappointment when they don't work out. Either that, or they lock the development team into a long term commitment that they are bound to do despite it not being the most important thing.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/priories" rel="noopener noreferrer">Priories</a></li>
<li><a href="http://localhost:5000/gant-charts" rel="noopener noreferrer">Gant Charts</a></li>
<li><a href="http://localhost:5000/waterfall" rel="noopener noreferrer">Waterfall</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.298 [debug] l:len=

10:45:07.298 [debug] l:buf empty

10:45:07.298 [debug] l:len=

10:45:07.298 [debug] l:buf=266:<h1>product design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.298 [debug] l:len=2

10:45:07.298 [debug] l:buf=66:<h1>product design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.298 [debug] l:len=26

10:45:07.298 [debug] l:buf=6:<h1>product design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">Try the weird stuff first</a></li>
</ul>


10:45:07.298 [debug] l:len=

10:45:07.298 [debug] l:buf empty

10:45:07.298 [debug] l:len=

10:45:07.298 [debug] l:buf=83:<h1>Christ's grace</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.298 [debug] l:len=8

10:45:07.298 [debug] l:buf=3:<h1>Christ's grace</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.298 [debug] l:len=

10:45:07.299 [debug] l:buf empty

10:45:07.299 [debug] l:len=

10:45:07.299 [debug] l:buf=306:<h1>Slack won because it was fun</h1>
<p>The front line worker didn't want to use something that's overly formal if they didn't have to.</p>
<p>Just like how a posh designer wouldn't dream of using a windows computer with clunky web based software. It goes against their values. It doesn't make sense.</p>


10:45:07.299 [debug] l:len=3

10:45:07.299 [debug] l:buf=06:<h1>Slack won because it was fun</h1>
<p>The front line worker didn't want to use something that's overly formal if they didn't have to.</p>
<p>Just like how a posh designer wouldn't dream of using a windows computer with clunky web based software. It goes against their values. It doesn't make sense.</p>


10:45:07.299 [debug] l:len=30

10:45:07.299 [debug] l:buf=6:<h1>Slack won because it was fun</h1>
<p>The front line worker didn't want to use something that's overly formal if they didn't have to.</p>
<p>Just like how a posh designer wouldn't dream of using a windows computer with clunky web based software. It goes against their values. It doesn't make sense.</p>


10:45:07.299 [debug] l:len=

10:45:07.299 [debug] l:buf empty

10:45:07.299 [debug] l:len=

10:45:07.299 [debug] l:buf=415:<h1>Smartphones</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
</ul>


10:45:07.299 [debug] l:len=4

10:45:07.299 [debug] l:buf=15:<h1>Smartphones</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
</ul>


10:45:07.299 [debug] l:len=41

10:45:07.299 [debug] l:buf=5:<h1>Smartphones</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
</ul>


10:45:07.299 [debug] l:len=

10:45:07.299 [debug] l:buf empty

10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf=4805:<h1>Roadmap vs Kanban Boards slash To Do lists</h1>
<p>ref: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a> from the people that make <a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a>.</p>
<blockquote>
<p>Most teams believe they shape their tools to fit their processes. But in reality, it's our tools that influence our processes and dictate our work. You've seen this in our personal lives. How social media can change the way we behave or think.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/farzad-ban" rel="noopener noreferrer">Farzad Ban</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<blockquote>
<p>Kanban board is a great tool to organise your tasks in lists. But is organising tasks in lists the same as prioritising them? How do we prioritise tasks when we don't know their estimates? <strong>Every task in these tools look the same</strong>. They are all just cards in lists. So regardless if a task takes a <strong>day to complete or a month</strong>, at a glance, they are no different.</p>
</blockquote>
<blockquote>
<p>This is why teams came up with hacks like tagging tasks with Priority 1, Priority 2 or Small, Medium, Large. These failed attempts at trying to make these tools do what they weren't designed for is just the proof that they don't work.</p>
</blockquote>
<p>I don't think this is true, they are doing what they are designed for, but they aren't good for estimation.</p>
<blockquote>
<p>What's the cost of choosing the wrong metrics to track? We focus on the wrong things. In other words, if the tools we use emphasis on the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a> as progress, we set the wrong expectations for our teams. So now, are the number completed tasks an indicator of progress? Or is it just your team's activity?</p>
<p>When there's no order, there's no direction.* So everyone pick what they feel like working on*. As a result, everyone <a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">moves in different directions and as a team</a>, little progress is being made. At a glance, the backlog looks half empty. <strong>Everyone has completed something. But in reality, they worked on the wrong things at the wrong time.</strong></p>
</blockquote>
<p>This is really interesting and related to <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a>.</p>
<blockquote>
<p>What do you do when you want to <strong>see what your team is currently working on</strong>? Drop them a message on Slack? Call a meeting? <strong>Scrolling their to-do list is probably the last thing you do</strong>. Because how do you know what they are currently working on? Or more importantly, <strong>how long they've been working on it</strong>?</p>
<p>The lack of <a href="http://localhost:5000/transparency" rel="noopener noreferrer">transparency</a> in your team's workload is the reason everyone feel stressed. Nobody knows what's next. Nobody can see the connections between the work they are doing now, and the work their colleagues are doing.</p>
</blockquote>
<p>This is interesting, also it's interesting to add that most people won't update "what people are doing" list if they aren't in it constantly.</p>
<blockquote>
<p>Imagine a place where all of your team's tasks, across all projects, are simply visualised on a timeline so you can see what's been done, <strong>how long it took them</strong> and what's next.</p>
</blockquote>
<p>Seeing how long a task took is actually super helpful. Although it can be embarising to people.</p>
<blockquote>
<p>Imagine a place where you can see all your projects tasks, their estimates and milestones are visualised on a timeline so you can prioritise with just drag and drop.</p>
</blockquote>
<blockquote>
<p>Imagine a place where you can just type your team members name to see what they are currently working on now, their latest status and what's next so you can focus on your own tasks.</p>
</blockquote>
<p>This is also super cool, although you can basically do this in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well.</p>
<p>My main argument against roadmap is the fact that they tie you down to goal far into the future (see: <a href="http://localhost:5000/options,-not-roadmaps" rel="noopener noreferrer">Options, not roadmaps</a>)</p>


10:45:07.300 [debug] l:len=4

10:45:07.300 [debug] l:buf=805:<h1>Roadmap vs Kanban Boards slash To Do lists</h1>
<p>ref: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a> from the people that make <a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a>.</p>
<blockquote>
<p>Most teams believe they shape their tools to fit their processes. But in reality, it's our tools that influence our processes and dictate our work. You've seen this in our personal lives. How social media can change the way we behave or think.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/farzad-ban" rel="noopener noreferrer">Farzad Ban</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<blockquote>
<p>Kanban board is a great tool to organise your tasks in lists. But is organising tasks in lists the same as prioritising them? How do we prioritise tasks when we don't know their estimates? <strong>Every task in these tools look the same</strong>. They are all just cards in lists. So regardless if a task takes a <strong>day to complete or a month</strong>, at a glance, they are no different.</p>
</blockquote>
<blockquote>
<p>This is why teams came up with hacks like tagging tasks with Priority 1, Priority 2 or Small, Medium, Large. These failed attempts at trying to make these tools do what they weren't designed for is just the proof that they don't work.</p>
</blockquote>
<p>I don't think this is true, they are doing what they are designed for, but they aren't good for estimation.</p>
<blockquote>
<p>What's the cost of choosing the wrong metrics to track? We focus on the wrong things. In other words, if the tools we use emphasis on the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a> as progress, we set the wrong expectations for our teams. So now, are the number completed tasks an indicator of progress? Or is it just your team's activity?</p>
<p>When there's no order, there's no direction.* So everyone pick what they feel like working on*. As a result, everyone <a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">moves in different directions and as a team</a>, little progress is being made. At a glance, the backlog looks half empty. <strong>Everyone has completed something. But in reality, they worked on the wrong things at the wrong time.</strong></p>
</blockquote>
<p>This is really interesting and related to <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a>.</p>
<blockquote>
<p>What do you do when you want to <strong>see what your team is currently working on</strong>? Drop them a message on Slack? Call a meeting? <strong>Scrolling their to-do list is probably the last thing you do</strong>. Because how do you know what they are currently working on? Or more importantly, <strong>how long they've been working on it</strong>?</p>
<p>The lack of <a href="http://localhost:5000/transparency" rel="noopener noreferrer">transparency</a> in your team's workload is the reason everyone feel stressed. Nobody knows what's next. Nobody can see the connections between the work they are doing now, and the work their colleagues are doing.</p>
</blockquote>
<p>This is interesting, also it's interesting to add that most people won't update "what people are doing" list if they aren't in it constantly.</p>
<blockquote>
<p>Imagine a place where all of your team's tasks, across all projects, are simply visualised on a timeline so you can see what's been done, <strong>how long it took them</strong> and what's next.</p>
</blockquote>
<p>Seeing how long a task took is actually super helpful. Although it can be embarising to people.</p>
<blockquote>
<p>Imagine a place where you can see all your projects tasks, their estimates and milestones are visualised on a timeline so you can prioritise with just drag and drop.</p>
</blockquote>
<blockquote>
<p>Imagine a place where you can just type your team members name to see what they are currently working on now, their latest status and what's next so you can focus on your own tasks.</p>
</blockquote>
<p>This is also super cool, although you can basically do this in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well.</p>
<p>My main argument against roadmap is the fact that they tie you down to goal far into the future (see: <a href="http://localhost:5000/options,-not-roadmaps" rel="noopener noreferrer">Options, not roadmaps</a>)</p>


10:45:07.300 [debug] l:len=48

10:45:07.300 [debug] l:buf=05:<h1>Roadmap vs Kanban Boards slash To Do lists</h1>
<p>ref: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a> from the people that make <a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a>.</p>
<blockquote>
<p>Most teams believe they shape their tools to fit their processes. But in reality, it's our tools that influence our processes and dictate our work. You've seen this in our personal lives. How social media can change the way we behave or think.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/farzad-ban" rel="noopener noreferrer">Farzad Ban</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<blockquote>
<p>Kanban board is a great tool to organise your tasks in lists. But is organising tasks in lists the same as prioritising them? How do we prioritise tasks when we don't know their estimates? <strong>Every task in these tools look the same</strong>. They are all just cards in lists. So regardless if a task takes a <strong>day to complete or a month</strong>, at a glance, they are no different.</p>
</blockquote>
<blockquote>
<p>This is why teams came up with hacks like tagging tasks with Priority 1, Priority 2 or Small, Medium, Large. These failed attempts at trying to make these tools do what they weren't designed for is just the proof that they don't work.</p>
</blockquote>
<p>I don't think this is true, they are doing what they are designed for, but they aren't good for estimation.</p>
<blockquote>
<p>What's the cost of choosing the wrong metrics to track? We focus on the wrong things. In other words, if the tools we use emphasis on the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a> as progress, we set the wrong expectations for our teams. So now, are the number completed tasks an indicator of progress? Or is it just your team's activity?</p>
<p>When there's no order, there's no direction.* So everyone pick what they feel like working on*. As a result, everyone <a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">moves in different directions and as a team</a>, little progress is being made. At a glance, the backlog looks half empty. <strong>Everyone has completed something. But in reality, they worked on the wrong things at the wrong time.</strong></p>
</blockquote>
<p>This is really interesting and related to <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a>.</p>
<blockquote>
<p>What do you do when you want to <strong>see what your team is currently working on</strong>? Drop them a message on Slack? Call a meeting? <strong>Scrolling their to-do list is probably the last thing you do</strong>. Because how do you know what they are currently working on? Or more importantly, <strong>how long they've been working on it</strong>?</p>
<p>The lack of <a href="http://localhost:5000/transparency" rel="noopener noreferrer">transparency</a> in your team's workload is the reason everyone feel stressed. Nobody knows what's next. Nobody can see the connections between the work they are doing now, and the work their colleagues are doing.</p>
</blockquote>
<p>This is interesting, also it's interesting to add that most people won't update "what people are doing" list if they aren't in it constantly.</p>
<blockquote>
<p>Imagine a place where all of your team's tasks, across all projects, are simply visualised on a timeline so you can see what's been done, <strong>how long it took them</strong> and what's next.</p>
</blockquote>
<p>Seeing how long a task took is actually super helpful. Although it can be embarising to people.</p>
<blockquote>
<p>Imagine a place where you can see all your projects tasks, their estimates and milestones are visualised on a timeline so you can prioritise with just drag and drop.</p>
</blockquote>
<blockquote>
<p>Imagine a place where you can just type your team members name to see what they are currently working on now, their latest status and what's next so you can focus on your own tasks.</p>
</blockquote>
<p>This is also super cool, although you can basically do this in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well.</p>
<p>My main argument against roadmap is the fact that they tie you down to goal far into the future (see: <a href="http://localhost:5000/options,-not-roadmaps" rel="noopener noreferrer">Options, not roadmaps</a>)</p>


10:45:07.300 [debug] l:len=480

10:45:07.300 [debug] l:buf=5:<h1>Roadmap vs Kanban Boards slash To Do lists</h1>
<p>ref: <a href="https://www.3dro.ps/post/roadmap" rel="noopener noreferrer">https://www.3dro.ps/post/roadmap</a> from the people that make <a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a>.</p>
<blockquote>
<p>Most teams believe they shape their tools to fit their processes. But in reality, it's our tools that influence our processes and dictate our work. You've seen this in our personal lives. How social media can change the way we behave or think.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/farzad-ban" rel="noopener noreferrer">Farzad Ban</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>
<blockquote>
<p>Kanban board is a great tool to organise your tasks in lists. But is organising tasks in lists the same as prioritising them? How do we prioritise tasks when we don't know their estimates? <strong>Every task in these tools look the same</strong>. They are all just cards in lists. So regardless if a task takes a <strong>day to complete or a month</strong>, at a glance, they are no different.</p>
</blockquote>
<blockquote>
<p>This is why teams came up with hacks like tagging tasks with Priority 1, Priority 2 or Small, Medium, Large. These failed attempts at trying to make these tools do what they weren't designed for is just the proof that they don't work.</p>
</blockquote>
<p>I don't think this is true, they are doing what they are designed for, but they aren't good for estimation.</p>
<blockquote>
<p>What's the cost of choosing the wrong metrics to track? We focus on the wrong things. In other words, if the tools we use emphasis on the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a> as progress, we set the wrong expectations for our teams. So now, are the number completed tasks an indicator of progress? Or is it just your team's activity?</p>
<p>When there's no order, there's no direction.* So everyone pick what they feel like working on*. As a result, everyone <a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">moves in different directions and as a team</a>, little progress is being made. At a glance, the backlog looks half empty. <strong>Everyone has completed something. But in reality, they worked on the wrong things at the wrong time.</strong></p>
</blockquote>
<p>This is really interesting and related to <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a>.</p>
<blockquote>
<p>What do you do when you want to <strong>see what your team is currently working on</strong>? Drop them a message on Slack? Call a meeting? <strong>Scrolling their to-do list is probably the last thing you do</strong>. Because how do you know what they are currently working on? Or more importantly, <strong>how long they've been working on it</strong>?</p>
<p>The lack of <a href="http://localhost:5000/transparency" rel="noopener noreferrer">transparency</a> in your team's workload is the reason everyone feel stressed. Nobody knows what's next. Nobody can see the connections between the work they are doing now, and the work their colleagues are doing.</p>
</blockquote>
<p>This is interesting, also it's interesting to add that most people won't update "what people are doing" list if they aren't in it constantly.</p>
<blockquote>
<p>Imagine a place where all of your team's tasks, across all projects, are simply visualised on a timeline so you can see what's been done, <strong>how long it took them</strong> and what's next.</p>
</blockquote>
<p>Seeing how long a task took is actually super helpful. Although it can be embarising to people.</p>
<blockquote>
<p>Imagine a place where you can see all your projects tasks, their estimates and milestones are visualised on a timeline so you can prioritise with just drag and drop.</p>
</blockquote>
<blockquote>
<p>Imagine a place where you can just type your team members name to see what they are currently working on now, their latest status and what's next so you can focus on your own tasks.</p>
</blockquote>
<p>This is also super cool, although you can basically do this in <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well.</p>
<p>My main argument against roadmap is the fact that they tie you down to goal far into the future (see: <a href="http://localhost:5000/options,-not-roadmaps" rel="noopener noreferrer">Options, not roadmaps</a>)</p>


10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf empty

10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf=408:<h1>Slack is also optimized for the writer</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.300 [debug] l:len=4

10:45:07.300 [debug] l:buf=08:<h1>Slack is also optimized for the writer</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.300 [debug] l:len=40

10:45:07.300 [debug] l:buf=8:<h1>Slack is also optimized for the writer</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
</ul>


10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf empty

10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf=466:<h1>Meeting Math</h1>
<blockquote>
<p>Eight people in a one hour meeting isn’t a one hour meeting, it’s an eight hour meeting — that’s what it’s costing your organization</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>, <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></p>


10:45:07.300 [debug] l:len=4

10:45:07.300 [debug] l:buf=66:<h1>Meeting Math</h1>
<blockquote>
<p>Eight people in a one hour meeting isn’t a one hour meeting, it’s an eight hour meeting — that’s what it’s costing your organization</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>, <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></p>


10:45:07.300 [debug] l:len=46

10:45:07.300 [debug] l:buf=6:<h1>Meeting Math</h1>
<blockquote>
<p>Eight people in a one hour meeting isn’t a one hour meeting, it’s an eight hour meeting — that’s what it’s costing your organization</p>
</blockquote>
<p>Keywords: <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a>, <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></p>


10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf empty

10:45:07.300 [debug] l:len=

10:45:07.300 [debug] l:buf=303:<h1>Messy drawer of communication#Why dividing makes a difference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.300 [debug] l:len=3

10:45:07.300 [debug] l:buf=03:<h1>Messy drawer of communication#Why dividing makes a difference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.300 [debug] l:len=30

10:45:07.301 [debug] l:buf=3:<h1>Messy drawer of communication#Why dividing makes a difference</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
</ul>


10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf empty

10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf=272:<h1>Twist topic flow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.301 [debug] l:len=2

10:45:07.301 [debug] l:buf=72:<h1>Twist topic flow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.301 [debug] l:len=27

10:45:07.301 [debug] l:buf=2:<h1>Twist topic flow</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf empty

10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf=1301:<h1>Agile Manifesto</h1>
<ul>
<li>We are uncovering better ways of developing software by doing it and helping others do it.</li>
<li>Through this work we have come to value:
<ul>
<li>Individuals and interactions over <a href="http://localhost:5000/processes" rel="noopener noreferrer">processes</a> and <a href="http://localhost:5000/tools" rel="noopener noreferrer">tools</a></li>
<li><a href="http://localhost:5000/working-software" rel="noopener noreferrer">Working software</a> over comprehensive <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li><a href="http://localhost:5000/customer-collaboration" rel="noopener noreferrer">Customer collaboration</a> over <a href="http://localhost:5000/contract-negotiation" rel="noopener noreferrer">contract negotiation</a></li>
<li><a href="http://localhost:5000/responding-to-change" rel="noopener noreferrer">Responding to change</a> over <a href="http://localhost:5000/following-a-plan" rel="noopener noreferrer">following a plan</a></li>
</ul>
</li>
<li>That is, while there is value in the items on the right, we value the items on the left more.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
</ul>


10:45:07.301 [debug] l:len=1

10:45:07.301 [debug] l:buf=301:<h1>Agile Manifesto</h1>
<ul>
<li>We are uncovering better ways of developing software by doing it and helping others do it.</li>
<li>Through this work we have come to value:
<ul>
<li>Individuals and interactions over <a href="http://localhost:5000/processes" rel="noopener noreferrer">processes</a> and <a href="http://localhost:5000/tools" rel="noopener noreferrer">tools</a></li>
<li><a href="http://localhost:5000/working-software" rel="noopener noreferrer">Working software</a> over comprehensive <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li><a href="http://localhost:5000/customer-collaboration" rel="noopener noreferrer">Customer collaboration</a> over <a href="http://localhost:5000/contract-negotiation" rel="noopener noreferrer">contract negotiation</a></li>
<li><a href="http://localhost:5000/responding-to-change" rel="noopener noreferrer">Responding to change</a> over <a href="http://localhost:5000/following-a-plan" rel="noopener noreferrer">following a plan</a></li>
</ul>
</li>
<li>That is, while there is value in the items on the right, we value the items on the left more.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
</ul>


10:45:07.301 [debug] l:len=13

10:45:07.301 [debug] l:buf=01:<h1>Agile Manifesto</h1>
<ul>
<li>We are uncovering better ways of developing software by doing it and helping others do it.</li>
<li>Through this work we have come to value:
<ul>
<li>Individuals and interactions over <a href="http://localhost:5000/processes" rel="noopener noreferrer">processes</a> and <a href="http://localhost:5000/tools" rel="noopener noreferrer">tools</a></li>
<li><a href="http://localhost:5000/working-software" rel="noopener noreferrer">Working software</a> over comprehensive <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li><a href="http://localhost:5000/customer-collaboration" rel="noopener noreferrer">Customer collaboration</a> over <a href="http://localhost:5000/contract-negotiation" rel="noopener noreferrer">contract negotiation</a></li>
<li><a href="http://localhost:5000/responding-to-change" rel="noopener noreferrer">Responding to change</a> over <a href="http://localhost:5000/following-a-plan" rel="noopener noreferrer">following a plan</a></li>
</ul>
</li>
<li>That is, while there is value in the items on the right, we value the items on the left more.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
</ul>


10:45:07.301 [debug] l:len=130

10:45:07.301 [debug] l:buf=1:<h1>Agile Manifesto</h1>
<ul>
<li>We are uncovering better ways of developing software by doing it and helping others do it.</li>
<li>Through this work we have come to value:
<ul>
<li>Individuals and interactions over <a href="http://localhost:5000/processes" rel="noopener noreferrer">processes</a> and <a href="http://localhost:5000/tools" rel="noopener noreferrer">tools</a></li>
<li><a href="http://localhost:5000/working-software" rel="noopener noreferrer">Working software</a> over comprehensive <a href="http://localhost:5000/documentation" rel="noopener noreferrer">documentation</a></li>
<li><a href="http://localhost:5000/customer-collaboration" rel="noopener noreferrer">Customer collaboration</a> over <a href="http://localhost:5000/contract-negotiation" rel="noopener noreferrer">contract negotiation</a></li>
<li><a href="http://localhost:5000/responding-to-change" rel="noopener noreferrer">Responding to change</a> over <a href="http://localhost:5000/following-a-plan" rel="noopener noreferrer">following a plan</a></li>
</ul>
</li>
<li>That is, while there is value in the items on the right, we value the items on the left more.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
</ul>


10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf empty

10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf=230:<h1>Betting</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.301 [debug] l:len=2

10:45:07.301 [debug] l:buf=30:<h1>Betting</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.301 [debug] l:len=23

10:45:07.301 [debug] l:buf=0:<h1>Betting</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf empty

10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf=93:<h1>Basecamp's boost feature</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.301 [debug] l:len=9

10:45:07.301 [debug] l:buf=3:<h1>Basecamp's boost feature</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.301 [debug] l:len=

10:45:07.301 [debug] l:buf empty

10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf=589:<h1>Slack CEO describes what makes it different</h1>
<ul>
<li>Email is "individual centered" and Slack is "team centered"</li>
<li>In Slack, "everyone has the same view" (think he's referring to <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a>)</li>
<li>The amount of information that's <em>available</em> is greatly increased. (NOTE: it's not easily available)</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be</a></p>


10:45:07.302 [debug] l:len=5

10:45:07.302 [debug] l:buf=89:<h1>Slack CEO describes what makes it different</h1>
<ul>
<li>Email is "individual centered" and Slack is "team centered"</li>
<li>In Slack, "everyone has the same view" (think he's referring to <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a>)</li>
<li>The amount of information that's <em>available</em> is greatly increased. (NOTE: it's not easily available)</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be</a></p>


10:45:07.302 [debug] l:len=58

10:45:07.302 [debug] l:buf=9:<h1>Slack CEO describes what makes it different</h1>
<ul>
<li>Email is "individual centered" and Slack is "team centered"</li>
<li>In Slack, "everyone has the same view" (think he's referring to <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a>)</li>
<li>The amount of information that's <em>available</em> is greatly increased. (NOTE: it's not easily available)</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be" rel="noopener noreferrer">https://www.youtube.com/watch?v=Dr1NmyMK9lU&amp;feature=youtu.be</a></p>


10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf empty

10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf=257:<h1>contract negotiation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.302 [debug] l:len=2

10:45:07.302 [debug] l:buf=57:<h1>contract negotiation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.302 [debug] l:len=25

10:45:07.302 [debug] l:buf=7:<h1>contract negotiation</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
</ul>


10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf empty

10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf=339:<h1>The open air problem</h1>
<p>In all forms of synchronous communication you have a problem of not being able to talk about more than one thing at the same time. This is because the channel such as a radio frequency is busy with other chatter.</p>
<p><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></p>


10:45:07.302 [debug] l:len=3

10:45:07.302 [debug] l:buf=39:<h1>The open air problem</h1>
<p>In all forms of synchronous communication you have a problem of not being able to talk about more than one thing at the same time. This is because the channel such as a radio frequency is busy with other chatter.</p>
<p><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></p>


10:45:07.302 [debug] l:len=33

10:45:07.302 [debug] l:buf=9:<h1>The open air problem</h1>
<p>In all forms of synchronous communication you have a problem of not being able to talk about more than one thing at the same time. This is because the channel such as a radio frequency is busy with other chatter.</p>
<p><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></p>


10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf empty

10:45:07.302 [debug] l:len=

10:45:07.302 [debug] l:buf=1405:<h1>Basecamp replace meetings with the message board</h1>
<p><a href="https://basecamp.com/learn#why-discussion-threads/" rel="noopener noreferrer">Why discussion Threads Video</a></p>
<ul>
<li>Discussions leave a <a href="http://localhost:5000/papertrail" rel="noopener noreferrer">papertrail</a></li>
<li>These are more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</li>
<li>Meetings are always like, "How did we decide that?", "When did we discuss that?"</li>
<li>Allows them to <a href="http://localhost:5000/juggles-are-there" rel="noopener noreferrer">juggles are there</a></li>
<li>Takes you to where you left off in the discussion without any <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a>.</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
</ul>


10:45:07.302 [debug] l:len=1

10:45:07.302 [debug] l:buf=405:<h1>Basecamp replace meetings with the message board</h1>
<p><a href="https://basecamp.com/learn#why-discussion-threads/" rel="noopener noreferrer">Why discussion Threads Video</a></p>
<ul>
<li>Discussions leave a <a href="http://localhost:5000/papertrail" rel="noopener noreferrer">papertrail</a></li>
<li>These are more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</li>
<li>Meetings are always like, "How did we decide that?", "When did we discuss that?"</li>
<li>Allows them to <a href="http://localhost:5000/juggles-are-there" rel="noopener noreferrer">juggles are there</a></li>
<li>Takes you to where you left off in the discussion without any <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a>.</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
</ul>


10:45:07.303 [debug] l:len=14

10:45:07.303 [debug] l:buf=05:<h1>Basecamp replace meetings with the message board</h1>
<p><a href="https://basecamp.com/learn#why-discussion-threads/" rel="noopener noreferrer">Why discussion Threads Video</a></p>
<ul>
<li>Discussions leave a <a href="http://localhost:5000/papertrail" rel="noopener noreferrer">papertrail</a></li>
<li>These are more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</li>
<li>Meetings are always like, "How did we decide that?", "When did we discuss that?"</li>
<li>Allows them to <a href="http://localhost:5000/juggles-are-there" rel="noopener noreferrer">juggles are there</a></li>
<li>Takes you to where you left off in the discussion without any <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a>.</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
</ul>


10:45:07.303 [debug] l:len=140

10:45:07.303 [debug] l:buf=5:<h1>Basecamp replace meetings with the message board</h1>
<p><a href="https://basecamp.com/learn#why-discussion-threads/" rel="noopener noreferrer">Why discussion Threads Video</a></p>
<ul>
<li>Discussions leave a <a href="http://localhost:5000/papertrail" rel="noopener noreferrer">papertrail</a></li>
<li>These are more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperent</a>.</li>
<li>Meetings are always like, "How did we decide that?", "When did we discuss that?"</li>
<li>Allows them to <a href="http://localhost:5000/juggles-are-there" rel="noopener noreferrer">juggles are there</a></li>
<li>Takes you to where you left off in the discussion without any <a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a>.</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a></li>
</ul>


10:45:07.303 [debug] l:len=

10:45:07.303 [debug] l:buf empty

10:45:07.303 [debug] l:len=

10:45:07.303 [debug] l:buf=890:<h1>4 quadrants</h1>
<ul>
<li>From <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Helps you categorize activities and how <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> they are</li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
<li><a href="http://localhost:5000/quadrant-3" rel="noopener noreferrer">quadrant 3</a></li>
<li><a href="http://localhost:5000/quadrant-4" rel="noopener noreferrer">quadrant 4</a></li>
<li>Also called the "Eisenhower Matrix"</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.303 [debug] l:len=8

10:45:07.303 [debug] l:buf=90:<h1>4 quadrants</h1>
<ul>
<li>From <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Helps you categorize activities and how <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> they are</li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
<li><a href="http://localhost:5000/quadrant-3" rel="noopener noreferrer">quadrant 3</a></li>
<li><a href="http://localhost:5000/quadrant-4" rel="noopener noreferrer">quadrant 4</a></li>
<li>Also called the "Eisenhower Matrix"</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.303 [debug] l:len=89

10:45:07.303 [debug] l:buf=0:<h1>4 quadrants</h1>
<ul>
<li>From <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Helps you categorize activities and how <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> they are</li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
<li><a href="http://localhost:5000/quadrant-3" rel="noopener noreferrer">quadrant 3</a></li>
<li><a href="http://localhost:5000/quadrant-4" rel="noopener noreferrer">quadrant 4</a></li>
<li>Also called the "Eisenhower Matrix"</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.303 [debug] l:len=

10:45:07.303 [debug] l:buf empty

10:45:07.303 [debug] l:len=

10:45:07.303 [debug] l:buf=78:<h1>ship</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.303 [debug] l:len=7

10:45:07.303 [debug] l:buf=8:<h1>ship</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.303 [debug] l:len=

10:45:07.303 [debug] l:buf empty

10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf=1898:<h1>Slack fragments your hardrive</h1>
<p>Fragmented hardrives are when one file is stored across many places. This makes it hard for the computer to find and retrieve quickly, yet it would often happen on Windows because by default it would put files super close together and if one grew it would be forced to split up the file into multiple places. You could defragment the hard drive but this takes forever because of how disorganized the information is stored by default. This is due to poor organization.</p>
<p><img src="http://localhost:5000/defrag-windowsxp.png" alt=""></p>
<p>Unix computers solved this problem by just putting a file in the biggest possible space on the hard drive so it could grow if it needed to without running into another file.</p>
<p>Slack does this too by forcing you to put information in a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> which means that information just can't live in the right place, there's just too few categories. Also, this means that it lives in DMs due to people being <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a>.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.304 [debug] l:len=1

10:45:07.304 [debug] l:buf=898:<h1>Slack fragments your hardrive</h1>
<p>Fragmented hardrives are when one file is stored across many places. This makes it hard for the computer to find and retrieve quickly, yet it would often happen on Windows because by default it would put files super close together and if one grew it would be forced to split up the file into multiple places. You could defragment the hard drive but this takes forever because of how disorganized the information is stored by default. This is due to poor organization.</p>
<p><img src="http://localhost:5000/defrag-windowsxp.png" alt=""></p>
<p>Unix computers solved this problem by just putting a file in the biggest possible space on the hard drive so it could grow if it needed to without running into another file.</p>
<p>Slack does this too by forcing you to put information in a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> which means that information just can't live in the right place, there's just too few categories. Also, this means that it lives in DMs due to people being <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a>.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.304 [debug] l:len=18

10:45:07.304 [debug] l:buf=98:<h1>Slack fragments your hardrive</h1>
<p>Fragmented hardrives are when one file is stored across many places. This makes it hard for the computer to find and retrieve quickly, yet it would often happen on Windows because by default it would put files super close together and if one grew it would be forced to split up the file into multiple places. You could defragment the hard drive but this takes forever because of how disorganized the information is stored by default. This is due to poor organization.</p>
<p><img src="http://localhost:5000/defrag-windowsxp.png" alt=""></p>
<p>Unix computers solved this problem by just putting a file in the biggest possible space on the hard drive so it could grow if it needed to without running into another file.</p>
<p>Slack does this too by forcing you to put information in a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> which means that information just can't live in the right place, there's just too few categories. Also, this means that it lives in DMs due to people being <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a>.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.304 [debug] l:len=189

10:45:07.304 [debug] l:buf=8:<h1>Slack fragments your hardrive</h1>
<p>Fragmented hardrives are when one file is stored across many places. This makes it hard for the computer to find and retrieve quickly, yet it would often happen on Windows because by default it would put files super close together and if one grew it would be forced to split up the file into multiple places. You could defragment the hard drive but this takes forever because of how disorganized the information is stored by default. This is due to poor organization.</p>
<p><img src="http://localhost:5000/defrag-windowsxp.png" alt=""></p>
<p>Unix computers solved this problem by just putting a file in the biggest possible space on the hard drive so it could grow if it needed to without running into another file.</p>
<p>Slack does this too by forcing you to put information in a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> which means that information just can't live in the right place, there's just too few categories. Also, this means that it lives in DMs due to people being <a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a>.</p>
<hr>
<p>Builds on: <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf empty

10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf=1438:<h1>Agile</h1>
<ul>
<li>As defined by the <a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li>As defined by <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.304 [debug] l:len=1

10:45:07.304 [debug] l:buf=438:<h1>Agile</h1>
<ul>
<li>As defined by the <a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li>As defined by <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.304 [debug] l:len=14

10:45:07.304 [debug] l:buf=38:<h1>Agile</h1>
<ul>
<li>As defined by the <a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li>As defined by <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.304 [debug] l:len=143

10:45:07.304 [debug] l:buf=8:<h1>Agile</h1>
<ul>
<li>As defined by the <a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li>As defined by <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf empty

10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf=79:<h1>Draft</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.304 [debug] l:len=7

10:45:07.304 [debug] l:buf=9:<h1>Draft</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf empty

10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf=305:<h1>Pasted image 20201020083722</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.304 [debug] l:len=3

10:45:07.304 [debug] l:buf=05:<h1>Pasted image 20201020083722</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.304 [debug] l:len=30

10:45:07.304 [debug] l:buf=5:<h1>Pasted image 20201020083722</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.304 [debug] l:len=

10:45:07.304 [debug] l:buf empty

10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf=76:<h1>Privacy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.305 [debug] l:len=7

10:45:07.305 [debug] l:buf=6:<h1>Privacy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf empty

10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf=290:<h1>Gitlab only keeps chat for 90 days</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.305 [debug] l:len=2

10:45:07.305 [debug] l:buf=90:<h1>Gitlab only keeps chat for 90 days</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.305 [debug] l:len=29

10:45:07.305 [debug] l:buf=0:<h1>Gitlab only keeps chat for 90 days</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf empty

10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf=1305:<h1>index</h1>
<h2>Introduction</h2>
<p>This is my (Gage Peterson's) <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>. This was generated using custom software written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a> (the primary programming language I know). This is supposed to be a sort of <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a>. This was made possible by <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, thank you!.</p>
<h2>Maps of Content</h2>
<p>Here's some places to start reading about what I'm thinking about</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


10:45:07.305 [debug] l:len=1

10:45:07.305 [debug] l:buf=305:<h1>index</h1>
<h2>Introduction</h2>
<p>This is my (Gage Peterson's) <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>. This was generated using custom software written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a> (the primary programming language I know). This is supposed to be a sort of <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a>. This was made possible by <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, thank you!.</p>
<h2>Maps of Content</h2>
<p>Here's some places to start reading about what I'm thinking about</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


10:45:07.305 [debug] l:len=13

10:45:07.305 [debug] l:buf=05:<h1>index</h1>
<h2>Introduction</h2>
<p>This is my (Gage Peterson's) <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>. This was generated using custom software written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a> (the primary programming language I know). This is supposed to be a sort of <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a>. This was made possible by <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, thank you!.</p>
<h2>Maps of Content</h2>
<p>Here's some places to start reading about what I'm thinking about</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


10:45:07.305 [debug] l:len=130

10:45:07.305 [debug] l:buf=5:<h1>index</h1>
<h2>Introduction</h2>
<p>This is my (Gage Peterson's) <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>. This was generated using custom software written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a> (the primary programming language I know). This is supposed to be a sort of <a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a>. This was made possible by <a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a>, thank you!.</p>
<h2>Maps of Content</h2>
<p>Here's some places to start reading about what I'm thinking about</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


10:45:07.305 [debug] l:len=

10:45:07.305 [debug] l:buf empty

10:45:07.306 [debug] l:len=

10:45:07.306 [debug] l:buf=1128:<h1>Slack competitors</h1>
<p>More <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> based ones:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.306 [debug] l:len=1

10:45:07.306 [debug] l:buf=128:<h1>Slack competitors</h1>
<p>More <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> based ones:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.306 [debug] l:len=11

10:45:07.306 [debug] l:buf=28:<h1>Slack competitors</h1>
<p>More <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> based ones:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.306 [debug] l:len=112

10:45:07.306 [debug] l:buf=8:<h1>Slack competitors</h1>
<p>More <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> based ones:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.306 [debug] l:len=

10:45:07.306 [debug] l:buf empty

10:45:07.306 [debug] l:len=

10:45:07.306 [debug] l:buf=305:<h1>Pasted image 20200922163455</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.306 [debug] l:len=3

10:45:07.306 [debug] l:buf=05:<h1>Pasted image 20200922163455</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.306 [debug] l:len=30

10:45:07.306 [debug] l:buf=5:<h1>Pasted image 20200922163455</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.306 [debug] l:len=

10:45:07.306 [debug] l:buf empty

10:45:07.306 [debug] l:len=

10:45:07.306 [debug] l:buf=4316:<p>The many signs you're in Elm denial</p>
<p>In JavaScript land we are doing your best to make it easy on ourselves. We I use libraries, frameworks, build tools and even compilers to try to make JavaScript easier to use and more palatable. I don't blame you. For instance I couldn't imagine doing a UI of any size without React.</p>
<p>However, if you put fur all over your pig, trying to teach him to fetch and attaching a voice changer perhaps we just need to admit that we just want a dog. I think many of you are in this stage, where you're trying to fix JavaScript but you really want to just use Elm. Here are the signs;</p>
<h2>You compile your JavaScript</h2>
<p>This is the first sign. It's the sign that you aren't happy with the language. I'm not talking about bundling or minification but when you compile JavaScript just to add features or make it prettier.
Babel is perhaps the most subtle because you can convince yourself that you're still using the same JavaScript, it's just <em>from the future.</em> However most if not all are using features that very well many may never get added to the language. If that's the case you'll be writing Babel, not JavaScript. That build step will never go away. People using CoffeeScript and Typescript, same goes for you. Even those just doing JSX.</p>
<p>The sad thing about all these transpilers and compilers is that they give you far less benefit than the Elm compiler. Most of them don't do <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and the ones that do make them optional or make you write them everywhere.</p>
<p>I'm Elm every .elm file is fully statically typed. You literally don't have to write any type signatures yet the language will just figure it out by the context. Not to mention the compiler is super helpful and friendly. Last but not least it can gerentee there's no runtime exceptions. Not to mention it's faster than most JavaScript based compilers because it's multi threaded.</p>
<h2>You use React</h2>
<p>If you're using React you probably believe that pure functions rendering the view is a good idea.</p>
<p>Elm has what most would recognize as a react implementation that is actually faster in many cases due to prevasive immutability that makes the diffing easier. Elm has the added benefit that it's syntax is very minimal so instead of using JSX it has a simple DSL that's really just functions that take two lists. One for the attributes like <code>href</code> and one for the children. If you feel that one way data flow and reactive rendering is the right way than you might as well use a language that enforces it.</p>
<h2>You use Redux</h2>
<p>This is the easiest one. Redux is shamelessly inspired by Elm. It's the architecture every Elm program follows.</p>
<p>Elm has the added benefit of not letting people do dumb things like making an object oriented wrapper around their stores or secretly attaching state to the window. Not to mention accidentally mutating their objects and creating a hard debugging session for themselves.</p>
<h2>You use Lodash, Randa or other functional programming libraries or practices</h2>
<p>JavaScript is a functional language in many ways, however it's also a prototypal object oriented language too. Many people even write procedural style jQuery code. Some just want to use classes for everything and knock off the "script" part.  Imagine the language had <em>one</em> paradigm? Elm is a pure functional language. That's it. It's far more cohesive and simple because of it.</p>
<h2>You make things immutabile or at least would if it weren't so hard</h2>
<p>Immutably is nice to make your code simpler because it means that functions can't modify your objects without you realizing after you pass them as arguments. Although there's libraries to add this to JS they are hard to use, and are generally going against most of the grain of the language. Elm is immutabile everywhere. You couldn't modify anything in place of you tried.</p>
<h2>You add <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and/or linting</h2>
<p>The final sign. If you're add<a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a>ping in the form of:</p>
<ul>
<li>React proptypes</li>
</ul>


10:45:07.306 [debug] l:len=4

10:45:07.306 [debug] l:buf=316:<p>The many signs you're in Elm denial</p>
<p>In JavaScript land we are doing your best to make it easy on ourselves. We I use libraries, frameworks, build tools and even compilers to try to make JavaScript easier to use and more palatable. I don't blame you. For instance I couldn't imagine doing a UI of any size without React.</p>
<p>However, if you put fur all over your pig, trying to teach him to fetch and attaching a voice changer perhaps we just need to admit that we just want a dog. I think many of you are in this stage, where you're trying to fix JavaScript but you really want to just use Elm. Here are the signs;</p>
<h2>You compile your JavaScript</h2>
<p>This is the first sign. It's the sign that you aren't happy with the language. I'm not talking about bundling or minification but when you compile JavaScript just to add features or make it prettier.
Babel is perhaps the most subtle because you can convince yourself that you're still using the same JavaScript, it's just <em>from the future.</em> However most if not all are using features that very well many may never get added to the language. If that's the case you'll be writing Babel, not JavaScript. That build step will never go away. People using CoffeeScript and Typescript, same goes for you. Even those just doing JSX.</p>
<p>The sad thing about all these transpilers and compilers is that they give you far less benefit than the Elm compiler. Most of them don't do <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and the ones that do make them optional or make you write them everywhere.</p>
<p>I'm Elm every .elm file is fully statically typed. You literally don't have to write any type signatures yet the language will just figure it out by the context. Not to mention the compiler is super helpful and friendly. Last but not least it can gerentee there's no runtime exceptions. Not to mention it's faster than most JavaScript based compilers because it's multi threaded.</p>
<h2>You use React</h2>
<p>If you're using React you probably believe that pure functions rendering the view is a good idea.</p>
<p>Elm has what most would recognize as a react implementation that is actually faster in many cases due to prevasive immutability that makes the diffing easier. Elm has the added benefit that it's syntax is very minimal so instead of using JSX it has a simple DSL that's really just functions that take two lists. One for the attributes like <code>href</code> and one for the children. If you feel that one way data flow and reactive rendering is the right way than you might as well use a language that enforces it.</p>
<h2>You use Redux</h2>
<p>This is the easiest one. Redux is shamelessly inspired by Elm. It's the architecture every Elm program follows.</p>
<p>Elm has the added benefit of not letting people do dumb things like making an object oriented wrapper around their stores or secretly attaching state to the window. Not to mention accidentally mutating their objects and creating a hard debugging session for themselves.</p>
<h2>You use Lodash, Randa or other functional programming libraries or practices</h2>
<p>JavaScript is a functional language in many ways, however it's also a prototypal object oriented language too. Many people even write procedural style jQuery code. Some just want to use classes for everything and knock off the "script" part.  Imagine the language had <em>one</em> paradigm? Elm is a pure functional language. That's it. It's far more cohesive and simple because of it.</p>
<h2>You make things immutabile or at least would if it weren't so hard</h2>
<p>Immutably is nice to make your code simpler because it means that functions can't modify your objects without you realizing after you pass them as arguments. Although there's libraries to add this to JS they are hard to use, and are generally going against most of the grain of the language. Elm is immutabile everywhere. You couldn't modify anything in place of you tried.</p>
<h2>You add <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and/or linting</h2>
<p>The final sign. If you're add<a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a>ping in the form of:</p>
<ul>
<li>React proptypes</li>
</ul>


10:45:07.306 [debug] l:len=43

10:45:07.306 [debug] l:buf=16:<p>The many signs you're in Elm denial</p>
<p>In JavaScript land we are doing your best to make it easy on ourselves. We I use libraries, frameworks, build tools and even compilers to try to make JavaScript easier to use and more palatable. I don't blame you. For instance I couldn't imagine doing a UI of any size without React.</p>
<p>However, if you put fur all over your pig, trying to teach him to fetch and attaching a voice changer perhaps we just need to admit that we just want a dog. I think many of you are in this stage, where you're trying to fix JavaScript but you really want to just use Elm. Here are the signs;</p>
<h2>You compile your JavaScript</h2>
<p>This is the first sign. It's the sign that you aren't happy with the language. I'm not talking about bundling or minification but when you compile JavaScript just to add features or make it prettier.
Babel is perhaps the most subtle because you can convince yourself that you're still using the same JavaScript, it's just <em>from the future.</em> However most if not all are using features that very well many may never get added to the language. If that's the case you'll be writing Babel, not JavaScript. That build step will never go away. People using CoffeeScript and Typescript, same goes for you. Even those just doing JSX.</p>
<p>The sad thing about all these transpilers and compilers is that they give you far less benefit than the Elm compiler. Most of them don't do <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and the ones that do make them optional or make you write them everywhere.</p>
<p>I'm Elm every .elm file is fully statically typed. You literally don't have to write any type signatures yet the language will just figure it out by the context. Not to mention the compiler is super helpful and friendly. Last but not least it can gerentee there's no runtime exceptions. Not to mention it's faster than most JavaScript based compilers because it's multi threaded.</p>
<h2>You use React</h2>
<p>If you're using React you probably believe that pure functions rendering the view is a good idea.</p>
<p>Elm has what most would recognize as a react implementation that is actually faster in many cases due to prevasive immutability that makes the diffing easier. Elm has the added benefit that it's syntax is very minimal so instead of using JSX it has a simple DSL that's really just functions that take two lists. One for the attributes like <code>href</code> and one for the children. If you feel that one way data flow and reactive rendering is the right way than you might as well use a language that enforces it.</p>
<h2>You use Redux</h2>
<p>This is the easiest one. Redux is shamelessly inspired by Elm. It's the architecture every Elm program follows.</p>
<p>Elm has the added benefit of not letting people do dumb things like making an object oriented wrapper around their stores or secretly attaching state to the window. Not to mention accidentally mutating their objects and creating a hard debugging session for themselves.</p>
<h2>You use Lodash, Randa or other functional programming libraries or practices</h2>
<p>JavaScript is a functional language in many ways, however it's also a prototypal object oriented language too. Many people even write procedural style jQuery code. Some just want to use classes for everything and knock off the "script" part.  Imagine the language had <em>one</em> paradigm? Elm is a pure functional language. That's it. It's far more cohesive and simple because of it.</p>
<h2>You make things immutabile or at least would if it weren't so hard</h2>
<p>Immutably is nice to make your code simpler because it means that functions can't modify your objects without you realizing after you pass them as arguments. Although there's libraries to add this to JS they are hard to use, and are generally going against most of the grain of the language. Elm is immutabile everywhere. You couldn't modify anything in place of you tried.</p>
<h2>You add <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and/or linting</h2>
<p>The final sign. If you're add<a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a>ping in the form of:</p>
<ul>
<li>React proptypes</li>
</ul>


10:45:07.306 [debug] l:len=431

10:45:07.306 [debug] l:buf=6:<p>The many signs you're in Elm denial</p>
<p>In JavaScript land we are doing your best to make it easy on ourselves. We I use libraries, frameworks, build tools and even compilers to try to make JavaScript easier to use and more palatable. I don't blame you. For instance I couldn't imagine doing a UI of any size without React.</p>
<p>However, if you put fur all over your pig, trying to teach him to fetch and attaching a voice changer perhaps we just need to admit that we just want a dog. I think many of you are in this stage, where you're trying to fix JavaScript but you really want to just use Elm. Here are the signs;</p>
<h2>You compile your JavaScript</h2>
<p>This is the first sign. It's the sign that you aren't happy with the language. I'm not talking about bundling or minification but when you compile JavaScript just to add features or make it prettier.
Babel is perhaps the most subtle because you can convince yourself that you're still using the same JavaScript, it's just <em>from the future.</em> However most if not all are using features that very well many may never get added to the language. If that's the case you'll be writing Babel, not JavaScript. That build step will never go away. People using CoffeeScript and Typescript, same goes for you. Even those just doing JSX.</p>
<p>The sad thing about all these transpilers and compilers is that they give you far less benefit than the Elm compiler. Most of them don't do <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and the ones that do make them optional or make you write them everywhere.</p>
<p>I'm Elm every .elm file is fully statically typed. You literally don't have to write any type signatures yet the language will just figure it out by the context. Not to mention the compiler is super helpful and friendly. Last but not least it can gerentee there's no runtime exceptions. Not to mention it's faster than most JavaScript based compilers because it's multi threaded.</p>
<h2>You use React</h2>
<p>If you're using React you probably believe that pure functions rendering the view is a good idea.</p>
<p>Elm has what most would recognize as a react implementation that is actually faster in many cases due to prevasive immutability that makes the diffing easier. Elm has the added benefit that it's syntax is very minimal so instead of using JSX it has a simple DSL that's really just functions that take two lists. One for the attributes like <code>href</code> and one for the children. If you feel that one way data flow and reactive rendering is the right way than you might as well use a language that enforces it.</p>
<h2>You use Redux</h2>
<p>This is the easiest one. Redux is shamelessly inspired by Elm. It's the architecture every Elm program follows.</p>
<p>Elm has the added benefit of not letting people do dumb things like making an object oriented wrapper around their stores or secretly attaching state to the window. Not to mention accidentally mutating their objects and creating a hard debugging session for themselves.</p>
<h2>You use Lodash, Randa or other functional programming libraries or practices</h2>
<p>JavaScript is a functional language in many ways, however it's also a prototypal object oriented language too. Many people even write procedural style jQuery code. Some just want to use classes for everything and knock off the "script" part.  Imagine the language had <em>one</em> paradigm? Elm is a pure functional language. That's it. It's far more cohesive and simple because of it.</p>
<h2>You make things immutabile or at least would if it weren't so hard</h2>
<p>Immutably is nice to make your code simpler because it means that functions can't modify your objects without you realizing after you pass them as arguments. Although there's libraries to add this to JS they are hard to use, and are generally going against most of the grain of the language. Elm is immutabile everywhere. You couldn't modify anything in place of you tried.</p>
<h2>You add <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> and/or linting</h2>
<p>The final sign. If you're add<a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a>ping in the form of:</p>
<ul>
<li>React proptypes</li>
</ul>


10:45:07.306 [debug] l:len=

10:45:07.307 [debug] l:buf empty

10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf=797:<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.307 [debug] l:len=7

10:45:07.307 [debug] l:buf=97:<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.307 [debug] l:len=79

10:45:07.307 [debug] l:buf=7:<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
</ul>


10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf empty

10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf=305:<h1>Pasted image 20200922163558</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.307 [debug] l:len=3

10:45:07.307 [debug] l:buf=05:<h1>Pasted image 20200922163558</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.307 [debug] l:len=30

10:45:07.307 [debug] l:buf=5:<h1>Pasted image 20200922163558</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf empty

10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf=312:<h1>the third door</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.307 [debug] l:len=3

10:45:07.307 [debug] l:buf=12:<h1>the third door</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.307 [debug] l:len=31

10:45:07.307 [debug] l:buf=2:<h1>the third door</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf empty

10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf=96:<h1>Pasted image 20200923060531</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.307 [debug] l:len=9

10:45:07.307 [debug] l:buf=6:<h1>Pasted image 20200923060531</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.307 [debug] l:len=

10:45:07.307 [debug] l:buf empty

10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf=388:<h1>Poor communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.308 [debug] l:len=3

10:45:07.308 [debug] l:buf=88:<h1>Poor communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.308 [debug] l:len=38

10:45:07.308 [debug] l:buf=8:<h1>Poor communication</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
</ul>


10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf empty

10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf=499:<h1>Stay abord the old ship Zion</h1>
<p>Christ is at the helm</p>
<p>You need to hold on.</p>
<p>What do we hold on to</p>
<hr>
<p>Looking for physical weakness is easy in</p>
<p>If we look for human weakness we will miss out on the spiritual potentially.</p>
<hr>
<p>What will you become through the atonement of Jesus christ.</p>
<p>The ship is a vehicle, and vehicles take us too some place, what's the place is the full blessings of the gospel.</p>
<p>You can't jump out and swim yourself.</p>


10:45:07.308 [debug] l:len=4

10:45:07.308 [debug] l:buf=99:<h1>Stay abord the old ship Zion</h1>
<p>Christ is at the helm</p>
<p>You need to hold on.</p>
<p>What do we hold on to</p>
<hr>
<p>Looking for physical weakness is easy in</p>
<p>If we look for human weakness we will miss out on the spiritual potentially.</p>
<hr>
<p>What will you become through the atonement of Jesus christ.</p>
<p>The ship is a vehicle, and vehicles take us too some place, what's the place is the full blessings of the gospel.</p>
<p>You can't jump out and swim yourself.</p>


10:45:07.308 [debug] l:len=49

10:45:07.308 [debug] l:buf=9:<h1>Stay abord the old ship Zion</h1>
<p>Christ is at the helm</p>
<p>You need to hold on.</p>
<p>What do we hold on to</p>
<hr>
<p>Looking for physical weakness is easy in</p>
<p>If we look for human weakness we will miss out on the spiritual potentially.</p>
<hr>
<p>What will you become through the atonement of Jesus christ.</p>
<p>The ship is a vehicle, and vehicles take us too some place, what's the place is the full blessings of the gospel.</p>
<p>You can't jump out and swim yourself.</p>


10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf empty

10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf=283:<h1>Pasted image 20200925153903</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.308 [debug] l:len=2

10:45:07.308 [debug] l:buf=83:<h1>Pasted image 20200925153903</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.308 [debug] l:len=28

10:45:07.308 [debug] l:buf=3:<h1>Pasted image 20200925153903</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf empty

10:45:07.308 [debug] l:len=

10:45:07.308 [debug] l:buf=939:<p>My calling notes</p>
<p>The Young Men secretary has the following responsibilities:</p>
<p>He consults with the Young Men presidency to prepare agendas for presidency meetings. He attends these meetings, takes notes, and keeps track of assignments.
He instructs quorum secretaries and oversees their work in keeping quorum attendance records. At least quarterly, he compiles attendance information, reviews it with the Young Men president, and submits it to the ward clerk.</p>
<p>He ensures that the bishopric and the Young Men presidency are aware of young men who are not attending meetings regularly and young men who will soon be eligible to be ordained to another office in the priesthood.</p>
<p>(He may be assigned to record the progress of individual young men as they participate in the Duty to God program.)</p>
<p>He helps the Young Men presidency prepare an annual budget and account for expenses.</p>
<p>Tags:
calling</p>


10:45:07.308 [debug] l:len=9

10:45:07.308 [debug] l:buf=39:<p>My calling notes</p>
<p>The Young Men secretary has the following responsibilities:</p>
<p>He consults with the Young Men presidency to prepare agendas for presidency meetings. He attends these meetings, takes notes, and keeps track of assignments.
He instructs quorum secretaries and oversees their work in keeping quorum attendance records. At least quarterly, he compiles attendance information, reviews it with the Young Men president, and submits it to the ward clerk.</p>
<p>He ensures that the bishopric and the Young Men presidency are aware of young men who are not attending meetings regularly and young men who will soon be eligible to be ordained to another office in the priesthood.</p>
<p>(He may be assigned to record the progress of individual young men as they participate in the Duty to God program.)</p>
<p>He helps the Young Men presidency prepare an annual budget and account for expenses.</p>
<p>Tags:
calling</p>


10:45:07.308 [debug] l:len=93

10:45:07.308 [debug] l:buf=9:<p>My calling notes</p>
<p>The Young Men secretary has the following responsibilities:</p>
<p>He consults with the Young Men presidency to prepare agendas for presidency meetings. He attends these meetings, takes notes, and keeps track of assignments.
He instructs quorum secretaries and oversees their work in keeping quorum attendance records. At least quarterly, he compiles attendance information, reviews it with the Young Men president, and submits it to the ward clerk.</p>
<p>He ensures that the bishopric and the Young Men presidency are aware of young men who are not attending meetings regularly and young men who will soon be eligible to be ordained to another office in the priesthood.</p>
<p>(He may be assigned to record the progress of individual young men as they participate in the Duty to God program.)</p>
<p>He helps the Young Men presidency prepare an annual budget and account for expenses.</p>
<p>Tags:
calling</p>


10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf empty

10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf=577:<h1>Agile process framework</h1>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.309 [debug] l:len=5

10:45:07.309 [debug] l:buf=77:<h1>Agile process framework</h1>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.309 [debug] l:len=57

10:45:07.309 [debug] l:buf=7:<h1>Agile process framework</h1>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf empty

10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf=1968:<h1>P2</h1>
<p><a href="https://wordpress.com/p2/" rel="noopener noreferrer">https://wordpress.com/p2/</a></p>
<p>Interestingly <a href="https://videopress.com/v/YYNW9iSj" rel="noopener noreferrer">it started out</a> as a more <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a> tool that <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> used.</p>
<p>However, compared to <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, it has far better <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> due to it's permalinks and such, making it more of a <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. On their website they say:</p>
<blockquote>
<p>Automattic is an office-less, globally distributed company, and P2 is our lifeblood. We built it to give everyone a place to see all of their projects and files, collaborate <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparently</a>, and to do it all** without constant distractions**.</p>
</blockquote>
<p>Looks like they're trying to develop it into a product eventually at the link above.</p>
<p>See: <a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.309 [debug] l:len=1

10:45:07.309 [debug] l:buf=968:<h1>P2</h1>
<p><a href="https://wordpress.com/p2/" rel="noopener noreferrer">https://wordpress.com/p2/</a></p>
<p>Interestingly <a href="https://videopress.com/v/YYNW9iSj" rel="noopener noreferrer">it started out</a> as a more <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a> tool that <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> used.</p>
<p>However, compared to <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, it has far better <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> due to it's permalinks and such, making it more of a <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. On their website they say:</p>
<blockquote>
<p>Automattic is an office-less, globally distributed company, and P2 is our lifeblood. We built it to give everyone a place to see all of their projects and files, collaborate <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparently</a>, and to do it all** without constant distractions**.</p>
</blockquote>
<p>Looks like they're trying to develop it into a product eventually at the link above.</p>
<p>See: <a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.309 [debug] l:len=19

10:45:07.309 [debug] l:buf=68:<h1>P2</h1>
<p><a href="https://wordpress.com/p2/" rel="noopener noreferrer">https://wordpress.com/p2/</a></p>
<p>Interestingly <a href="https://videopress.com/v/YYNW9iSj" rel="noopener noreferrer">it started out</a> as a more <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a> tool that <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> used.</p>
<p>However, compared to <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, it has far better <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> due to it's permalinks and such, making it more of a <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. On their website they say:</p>
<blockquote>
<p>Automattic is an office-less, globally distributed company, and P2 is our lifeblood. We built it to give everyone a place to see all of their projects and files, collaborate <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparently</a>, and to do it all** without constant distractions**.</p>
</blockquote>
<p>Looks like they're trying to develop it into a product eventually at the link above.</p>
<p>See: <a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.309 [debug] l:len=196

10:45:07.309 [debug] l:buf=8:<h1>P2</h1>
<p><a href="https://wordpress.com/p2/" rel="noopener noreferrer">https://wordpress.com/p2/</a></p>
<p>Interestingly <a href="https://videopress.com/v/YYNW9iSj" rel="noopener noreferrer">it started out</a> as a more <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a> tool that <a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> used.</p>
<p>However, compared to <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, it has far better <a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a> due to it's permalinks and such, making it more of a <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. On their website they say:</p>
<blockquote>
<p>Automattic is an office-less, globally distributed company, and P2 is our lifeblood. We built it to give everyone a place to see all of their projects and files, collaborate <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparently</a>, and to do it all** without constant distractions**.</p>
</blockquote>
<p>Looks like they're trying to develop it into a product eventually at the link above.</p>
<p>See: <a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf empty

10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf=74:<h1>Doist</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.309 [debug] l:len=7

10:45:07.309 [debug] l:buf=4:<h1>Doist</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf empty

10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf=152:<p>Lehi Address
4200 N Seasons View Drive
<a href="http://localhost:5000/m1107" rel="noopener noreferrer">M1107</a>
Lehi UT 84043</p>
<p>Tags:
info</p>


10:45:07.309 [debug] l:len=1

10:45:07.309 [debug] l:buf=52:<p>Lehi Address
4200 N Seasons View Drive
<a href="http://localhost:5000/m1107" rel="noopener noreferrer">M1107</a>
Lehi UT 84043</p>
<p>Tags:
info</p>


10:45:07.309 [debug] l:len=15

10:45:07.309 [debug] l:buf=2:<p>Lehi Address
4200 N Seasons View Drive
<a href="http://localhost:5000/m1107" rel="noopener noreferrer">M1107</a>
Lehi UT 84043</p>
<p>Tags:
info</p>


10:45:07.309 [debug] l:len=

10:45:07.309 [debug] l:buf empty

10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf=78:<h1>deadlines</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.310 [debug] l:len=7

10:45:07.310 [debug] l:buf=8:<h1>deadlines</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf empty

10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf=961:<h1>a visible project</h1>
<p>Most <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> don't have any real concept of which project you're working on. Some, such as <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> just have a <a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a> to filter which cards are being shown.</p>
<p>But this lacks the ability to quickly <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> what's the main <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">goal</a> of the project. How do you know what's the <a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a>?</p>
<p>In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> projects are first class citizens and as such you don't get as many</p>


10:45:07.310 [debug] l:len=9

10:45:07.310 [debug] l:buf=61:<h1>a visible project</h1>
<p>Most <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> don't have any real concept of which project you're working on. Some, such as <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> just have a <a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a> to filter which cards are being shown.</p>
<p>But this lacks the ability to quickly <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> what's the main <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">goal</a> of the project. How do you know what's the <a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a>?</p>
<p>In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> projects are first class citizens and as such you don't get as many</p>


10:45:07.310 [debug] l:len=96

10:45:07.310 [debug] l:buf=1:<h1>a visible project</h1>
<p>Most <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a> don't have any real concept of which project you're working on. Some, such as <a href="http://localhost:5000/github-projects" rel="noopener noreferrer">Github Projects</a> just have a <a href="http://localhost:5000/tagging-system" rel="noopener noreferrer">tagging system</a> to filter which cards are being shown.</p>
<p>But this lacks the ability to quickly <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> what's the main <a href="http://localhost:5000/high-level-goals" rel="noopener noreferrer">goal</a> of the project. How do you know what's the <a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a>?</p>
<p>In <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> projects are first class citizens and as such you don't get as many</p>


10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf empty

10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf=176:<h1>Options, not roadmaps</h1>
<p><a href="https://m.signalvnoise.com/options-not-roadmaps/" rel="noopener noreferrer">https://m.signalvnoise.com/options-not-roadmaps/</a></p>


10:45:07.310 [debug] l:len=1

10:45:07.310 [debug] l:buf=76:<h1>Options, not roadmaps</h1>
<p><a href="https://m.signalvnoise.com/options-not-roadmaps/" rel="noopener noreferrer">https://m.signalvnoise.com/options-not-roadmaps/</a></p>


10:45:07.310 [debug] l:len=17

10:45:07.310 [debug] l:buf=6:<h1>Options, not roadmaps</h1>
<p><a href="https://m.signalvnoise.com/options-not-roadmaps/" rel="noopener noreferrer">https://m.signalvnoise.com/options-not-roadmaps/</a></p>


10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf empty

10:45:07.310 [debug] l:len=

10:45:07.310 [debug] l:buf=1834:<h1>Basecamp like a Town</h1>
<p>At first this might seem that Basecamp is far more complex because there's a lot more places to to put conversations and to some degree that is true. However, because you're constantly going up and down back and forth through the tree It starts to become like a town that you've lived in for a long time. Unlike Slack, there's so many "<a href="http://localhost:5000/signposts" rel="noopener noreferrer">signposts</a>" such as <a href="http://localhost:5000/titles" rel="noopener noreferrer">Power of a Title</a> of todos and message board posts, and because every project structured this way it's easy to find pretty much any piece of information inside of it, no matter how old it is.</p>
<p>For example you could say, "what project was that a part of?" then go inside that project, then think, "was it announcement or todo?" decide on announcement then scroll through the <a href="http://localhost:5000/messy-drawer-of-communication#why-dividing-makes-a-difference" rel="noopener noreferrer">nicely folded titles</a> and find exactly what you were looking for.</p>
<p>This also makes it easier to link to whole conversations because <a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">things aren't fragmented</a>.</p>
<p>See also: <a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.310 [debug] l:len=1

10:45:07.310 [debug] l:buf=834:<h1>Basecamp like a Town</h1>
<p>At first this might seem that Basecamp is far more complex because there's a lot more places to to put conversations and to some degree that is true. However, because you're constantly going up and down back and forth through the tree It starts to become like a town that you've lived in for a long time. Unlike Slack, there's so many "<a href="http://localhost:5000/signposts" rel="noopener noreferrer">signposts</a>" such as <a href="http://localhost:5000/titles" rel="noopener noreferrer">Power of a Title</a> of todos and message board posts, and because every project structured this way it's easy to find pretty much any piece of information inside of it, no matter how old it is.</p>
<p>For example you could say, "what project was that a part of?" then go inside that project, then think, "was it announcement or todo?" decide on announcement then scroll through the <a href="http://localhost:5000/messy-drawer-of-communication#why-dividing-makes-a-difference" rel="noopener noreferrer">nicely folded titles</a> and find exactly what you were looking for.</p>
<p>This also makes it easier to link to whole conversations because <a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">things aren't fragmented</a>.</p>
<p>See also: <a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.310 [debug] l:len=18

10:45:07.310 [debug] l:buf=34:<h1>Basecamp like a Town</h1>
<p>At first this might seem that Basecamp is far more complex because there's a lot more places to to put conversations and to some degree that is true. However, because you're constantly going up and down back and forth through the tree It starts to become like a town that you've lived in for a long time. Unlike Slack, there's so many "<a href="http://localhost:5000/signposts" rel="noopener noreferrer">signposts</a>" such as <a href="http://localhost:5000/titles" rel="noopener noreferrer">Power of a Title</a> of todos and message board posts, and because every project structured this way it's easy to find pretty much any piece of information inside of it, no matter how old it is.</p>
<p>For example you could say, "what project was that a part of?" then go inside that project, then think, "was it announcement or todo?" decide on announcement then scroll through the <a href="http://localhost:5000/messy-drawer-of-communication#why-dividing-makes-a-difference" rel="noopener noreferrer">nicely folded titles</a> and find exactly what you were looking for.</p>
<p>This also makes it easier to link to whole conversations because <a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">things aren't fragmented</a>.</p>
<p>See also: <a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.311 [debug] l:len=183

10:45:07.311 [debug] l:buf=4:<h1>Basecamp like a Town</h1>
<p>At first this might seem that Basecamp is far more complex because there's a lot more places to to put conversations and to some degree that is true. However, because you're constantly going up and down back and forth through the tree It starts to become like a town that you've lived in for a long time. Unlike Slack, there's so many "<a href="http://localhost:5000/signposts" rel="noopener noreferrer">signposts</a>" such as <a href="http://localhost:5000/titles" rel="noopener noreferrer">Power of a Title</a> of todos and message board posts, and because every project structured this way it's easy to find pretty much any piece of information inside of it, no matter how old it is.</p>
<p>For example you could say, "what project was that a part of?" then go inside that project, then think, "was it announcement or todo?" decide on announcement then scroll through the <a href="http://localhost:5000/messy-drawer-of-communication#why-dividing-makes-a-difference" rel="noopener noreferrer">nicely folded titles</a> and find exactly what you were looking for.</p>
<p>This also makes it easier to link to whole conversations because <a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">things aren't fragmented</a>.</p>
<p>See also: <a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
</ul>


10:45:07.311 [debug] l:len=

10:45:07.311 [debug] l:buf empty

10:45:07.311 [debug] l:len=

10:45:07.311 [debug] l:buf=280:<h1>End-to-end Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.311 [debug] l:len=2

10:45:07.311 [debug] l:buf=80:<h1>End-to-end Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.311 [debug] l:len=28

10:45:07.311 [debug] l:buf=0:<h1>End-to-end Tests</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.311 [debug] l:len=

10:45:07.311 [debug] l:buf empty

10:45:07.311 [debug] l:len=

10:45:07.311 [debug] l:buf=239:<h1>addictive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.311 [debug] l:len=2

10:45:07.311 [debug] l:buf=39:<h1>addictive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.311 [debug] l:len=23

10:45:07.311 [debug] l:buf=9:<h1>addictive</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.311 [debug] l:len=

10:45:07.311 [debug] l:buf empty

10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf=3547:<h1>Intro to Kubernetees (K8S)</h1>
<p>At We've</p>
<ul>
<li>2012  -Monolith Python app (turned off 4 weeks ago)</li>
<li>2014 - Migration to Go &amp; Microservices (on their own VM each $$$$)</li>
<li>2016 - Kubernetees  in prod (in a month!)</li>
<li>2018 - Service mesh in prod</li>
</ul>
<h1>Go</h1>
<p>Go can compile down to it's own binary, which basically means that you only need "scratch" docker image <strong>mindblown</strong></p>
<ul>
<li>Docker</li>
<li>rkt</li>
<li>ContainerD - docker except more opensource</li>
</ul>
<h2>How do manage if you have thousands???</h2>
<ul>
<li>Resource usage?</li>
<li>How do you rolling updates with no downtime?</li>
</ul>
<h1>Kubernetes: orchestration tools</h1>
<p><strong>Google's Borg</strong>: their private instance of Kubernetes.  for <strong>15 years</strong></p>
<p>They behave as one machine</p>
<p>One of the most active projects on Github.</p>
<p>AWS launched their own hosted version of Kubernetes.</p>
<blockquote>
<p>So let me get this strait. You want to build an external version of the borg task schedule. One of the most important competitive advantages. The one we don't even talk about externally. And. On top of that, you want to open source it?</p>
</blockquote>
<h1>Install</h1>
<ul>
<li>Mini-cube is the easiest bet + virtual box</li>
</ul>
<h1>Architecture</h1>
<ul>
<li>Work nodes</li>
<li>Master nodes</li>
</ul>
<p>Key value store</p>
<p>API server -&gt; what you talk to</p>
<p>Manager:</p>
<ul>
<li>make sure it's in the right state</li>
</ul>
<p>Scheduler</p>
<ul>
<li>What services startup were</li>
</ul>
<p>kubelet / proxy</p>
<ul>
<li>a bunch of docker containers (simplified)</li>
</ul>
<p><strong>kubectl</strong>: cube cuttle?</p>
<h1>Pods</h1>
<p>This is the biggest difference. (Mesos wasn't on the map)</p>
<p><strong>the lowest level</strong> is a pod. And a pod can multiple containers. It has an IP address. It can have volumes as well.</p>
<p>You have a micro service inside the container that just has a address, we could change how it works.</p>
<p>YML defines a <strong>pod</strong></p>
<pre><code>kubectl run busy box -i -t --image busy box --restart=Never /bin/sh
</code></pre>
<p>^- drops you into a cli</p>
<pre><code>minikube dashbaord (visualize)
</code></pre>
<p>What happens when a pod runs out of memory</p>
<pre><code>kubectl -f &lt;confg.yml&gt;
</code></pre>
<h2>Pods are ephemeral (mortal), it's just going to create new ones every time, new ip's every time</h2>
<p>Pods random hostname
etc...</p>
<h1>Services logical grouping of pods</h1>
<ul>
<li>round-robin requests to them</li>
<li>Example</li>
<li>Selector:
<ul>
<li>route to right pod specifically</li>
</ul>
</li>
<li>Services
<ul>
<li>NodePort: easy way</li>
</ul>
</li>
</ul>
<h1>How do we do rolling updates and other fancy magic???</h1>
<p>Promethius Bringing -Fire- Kubernetees to man</p>
<h2>Deployment</h2>
<ul>
<li>Wraps around pods, declarative</li>
<li>Auto-scaling setup</li>
<li></li>
</ul>
<h1>Creating your own kind of Object in K8s</h1>
<pre><code>kc create
</code></pre>
<ul>
<li>Create a smoke tests</li>
<li>etc.</li>
</ul>
<p>Defining it:</p>
<ul>
<li>nice name</li>
<li>Version name</li>
<li>spec:
<ul>
<li>any key values you want</li>
</ul>
</li>
</ul>
<h1>Service Mesh - Helm</h1>
<ul>
<li>
<p>Dedicated infrastructure for handling <strong>service to service communication</strong></p>
</li>
<li>
<p>Sidecar: middleware?</p>
</li>
</ul>
<h1>Join the community.</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.312 [debug] l:len=3

10:45:07.312 [debug] l:buf=547:<h1>Intro to Kubernetees (K8S)</h1>
<p>At We've</p>
<ul>
<li>2012  -Monolith Python app (turned off 4 weeks ago)</li>
<li>2014 - Migration to Go &amp; Microservices (on their own VM each $$$$)</li>
<li>2016 - Kubernetees  in prod (in a month!)</li>
<li>2018 - Service mesh in prod</li>
</ul>
<h1>Go</h1>
<p>Go can compile down to it's own binary, which basically means that you only need "scratch" docker image <strong>mindblown</strong></p>
<ul>
<li>Docker</li>
<li>rkt</li>
<li>ContainerD - docker except more opensource</li>
</ul>
<h2>How do manage if you have thousands???</h2>
<ul>
<li>Resource usage?</li>
<li>How do you rolling updates with no downtime?</li>
</ul>
<h1>Kubernetes: orchestration tools</h1>
<p><strong>Google's Borg</strong>: their private instance of Kubernetes.  for <strong>15 years</strong></p>
<p>They behave as one machine</p>
<p>One of the most active projects on Github.</p>
<p>AWS launched their own hosted version of Kubernetes.</p>
<blockquote>
<p>So let me get this strait. You want to build an external version of the borg task schedule. One of the most important competitive advantages. The one we don't even talk about externally. And. On top of that, you want to open source it?</p>
</blockquote>
<h1>Install</h1>
<ul>
<li>Mini-cube is the easiest bet + virtual box</li>
</ul>
<h1>Architecture</h1>
<ul>
<li>Work nodes</li>
<li>Master nodes</li>
</ul>
<p>Key value store</p>
<p>API server -&gt; what you talk to</p>
<p>Manager:</p>
<ul>
<li>make sure it's in the right state</li>
</ul>
<p>Scheduler</p>
<ul>
<li>What services startup were</li>
</ul>
<p>kubelet / proxy</p>
<ul>
<li>a bunch of docker containers (simplified)</li>
</ul>
<p><strong>kubectl</strong>: cube cuttle?</p>
<h1>Pods</h1>
<p>This is the biggest difference. (Mesos wasn't on the map)</p>
<p><strong>the lowest level</strong> is a pod. And a pod can multiple containers. It has an IP address. It can have volumes as well.</p>
<p>You have a micro service inside the container that just has a address, we could change how it works.</p>
<p>YML defines a <strong>pod</strong></p>
<pre><code>kubectl run busy box -i -t --image busy box --restart=Never /bin/sh
</code></pre>
<p>^- drops you into a cli</p>
<pre><code>minikube dashbaord (visualize)
</code></pre>
<p>What happens when a pod runs out of memory</p>
<pre><code>kubectl -f &lt;confg.yml&gt;
</code></pre>
<h2>Pods are ephemeral (mortal), it's just going to create new ones every time, new ip's every time</h2>
<p>Pods random hostname
etc...</p>
<h1>Services logical grouping of pods</h1>
<ul>
<li>round-robin requests to them</li>
<li>Example</li>
<li>Selector:
<ul>
<li>route to right pod specifically</li>
</ul>
</li>
<li>Services
<ul>
<li>NodePort: easy way</li>
</ul>
</li>
</ul>
<h1>How do we do rolling updates and other fancy magic???</h1>
<p>Promethius Bringing -Fire- Kubernetees to man</p>
<h2>Deployment</h2>
<ul>
<li>Wraps around pods, declarative</li>
<li>Auto-scaling setup</li>
<li></li>
</ul>
<h1>Creating your own kind of Object in K8s</h1>
<pre><code>kc create
</code></pre>
<ul>
<li>Create a smoke tests</li>
<li>etc.</li>
</ul>
<p>Defining it:</p>
<ul>
<li>nice name</li>
<li>Version name</li>
<li>spec:
<ul>
<li>any key values you want</li>
</ul>
</li>
</ul>
<h1>Service Mesh - Helm</h1>
<ul>
<li>
<p>Dedicated infrastructure for handling <strong>service to service communication</strong></p>
</li>
<li>
<p>Sidecar: middleware?</p>
</li>
</ul>
<h1>Join the community.</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.312 [debug] l:len=35

10:45:07.312 [debug] l:buf=47:<h1>Intro to Kubernetees (K8S)</h1>
<p>At We've</p>
<ul>
<li>2012  -Monolith Python app (turned off 4 weeks ago)</li>
<li>2014 - Migration to Go &amp; Microservices (on their own VM each $$$$)</li>
<li>2016 - Kubernetees  in prod (in a month!)</li>
<li>2018 - Service mesh in prod</li>
</ul>
<h1>Go</h1>
<p>Go can compile down to it's own binary, which basically means that you only need "scratch" docker image <strong>mindblown</strong></p>
<ul>
<li>Docker</li>
<li>rkt</li>
<li>ContainerD - docker except more opensource</li>
</ul>
<h2>How do manage if you have thousands???</h2>
<ul>
<li>Resource usage?</li>
<li>How do you rolling updates with no downtime?</li>
</ul>
<h1>Kubernetes: orchestration tools</h1>
<p><strong>Google's Borg</strong>: their private instance of Kubernetes.  for <strong>15 years</strong></p>
<p>They behave as one machine</p>
<p>One of the most active projects on Github.</p>
<p>AWS launched their own hosted version of Kubernetes.</p>
<blockquote>
<p>So let me get this strait. You want to build an external version of the borg task schedule. One of the most important competitive advantages. The one we don't even talk about externally. And. On top of that, you want to open source it?</p>
</blockquote>
<h1>Install</h1>
<ul>
<li>Mini-cube is the easiest bet + virtual box</li>
</ul>
<h1>Architecture</h1>
<ul>
<li>Work nodes</li>
<li>Master nodes</li>
</ul>
<p>Key value store</p>
<p>API server -&gt; what you talk to</p>
<p>Manager:</p>
<ul>
<li>make sure it's in the right state</li>
</ul>
<p>Scheduler</p>
<ul>
<li>What services startup were</li>
</ul>
<p>kubelet / proxy</p>
<ul>
<li>a bunch of docker containers (simplified)</li>
</ul>
<p><strong>kubectl</strong>: cube cuttle?</p>
<h1>Pods</h1>
<p>This is the biggest difference. (Mesos wasn't on the map)</p>
<p><strong>the lowest level</strong> is a pod. And a pod can multiple containers. It has an IP address. It can have volumes as well.</p>
<p>You have a micro service inside the container that just has a address, we could change how it works.</p>
<p>YML defines a <strong>pod</strong></p>
<pre><code>kubectl run busy box -i -t --image busy box --restart=Never /bin/sh
</code></pre>
<p>^- drops you into a cli</p>
<pre><code>minikube dashbaord (visualize)
</code></pre>
<p>What happens when a pod runs out of memory</p>
<pre><code>kubectl -f &lt;confg.yml&gt;
</code></pre>
<h2>Pods are ephemeral (mortal), it's just going to create new ones every time, new ip's every time</h2>
<p>Pods random hostname
etc...</p>
<h1>Services logical grouping of pods</h1>
<ul>
<li>round-robin requests to them</li>
<li>Example</li>
<li>Selector:
<ul>
<li>route to right pod specifically</li>
</ul>
</li>
<li>Services
<ul>
<li>NodePort: easy way</li>
</ul>
</li>
</ul>
<h1>How do we do rolling updates and other fancy magic???</h1>
<p>Promethius Bringing -Fire- Kubernetees to man</p>
<h2>Deployment</h2>
<ul>
<li>Wraps around pods, declarative</li>
<li>Auto-scaling setup</li>
<li></li>
</ul>
<h1>Creating your own kind of Object in K8s</h1>
<pre><code>kc create
</code></pre>
<ul>
<li>Create a smoke tests</li>
<li>etc.</li>
</ul>
<p>Defining it:</p>
<ul>
<li>nice name</li>
<li>Version name</li>
<li>spec:
<ul>
<li>any key values you want</li>
</ul>
</li>
</ul>
<h1>Service Mesh - Helm</h1>
<ul>
<li>
<p>Dedicated infrastructure for handling <strong>service to service communication</strong></p>
</li>
<li>
<p>Sidecar: middleware?</p>
</li>
</ul>
<h1>Join the community.</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.312 [debug] l:len=354

10:45:07.312 [debug] l:buf=7:<h1>Intro to Kubernetees (K8S)</h1>
<p>At We've</p>
<ul>
<li>2012  -Monolith Python app (turned off 4 weeks ago)</li>
<li>2014 - Migration to Go &amp; Microservices (on their own VM each $$$$)</li>
<li>2016 - Kubernetees  in prod (in a month!)</li>
<li>2018 - Service mesh in prod</li>
</ul>
<h1>Go</h1>
<p>Go can compile down to it's own binary, which basically means that you only need "scratch" docker image <strong>mindblown</strong></p>
<ul>
<li>Docker</li>
<li>rkt</li>
<li>ContainerD - docker except more opensource</li>
</ul>
<h2>How do manage if you have thousands???</h2>
<ul>
<li>Resource usage?</li>
<li>How do you rolling updates with no downtime?</li>
</ul>
<h1>Kubernetes: orchestration tools</h1>
<p><strong>Google's Borg</strong>: their private instance of Kubernetes.  for <strong>15 years</strong></p>
<p>They behave as one machine</p>
<p>One of the most active projects on Github.</p>
<p>AWS launched their own hosted version of Kubernetes.</p>
<blockquote>
<p>So let me get this strait. You want to build an external version of the borg task schedule. One of the most important competitive advantages. The one we don't even talk about externally. And. On top of that, you want to open source it?</p>
</blockquote>
<h1>Install</h1>
<ul>
<li>Mini-cube is the easiest bet + virtual box</li>
</ul>
<h1>Architecture</h1>
<ul>
<li>Work nodes</li>
<li>Master nodes</li>
</ul>
<p>Key value store</p>
<p>API server -&gt; what you talk to</p>
<p>Manager:</p>
<ul>
<li>make sure it's in the right state</li>
</ul>
<p>Scheduler</p>
<ul>
<li>What services startup were</li>
</ul>
<p>kubelet / proxy</p>
<ul>
<li>a bunch of docker containers (simplified)</li>
</ul>
<p><strong>kubectl</strong>: cube cuttle?</p>
<h1>Pods</h1>
<p>This is the biggest difference. (Mesos wasn't on the map)</p>
<p><strong>the lowest level</strong> is a pod. And a pod can multiple containers. It has an IP address. It can have volumes as well.</p>
<p>You have a micro service inside the container that just has a address, we could change how it works.</p>
<p>YML defines a <strong>pod</strong></p>
<pre><code>kubectl run busy box -i -t --image busy box --restart=Never /bin/sh
</code></pre>
<p>^- drops you into a cli</p>
<pre><code>minikube dashbaord (visualize)
</code></pre>
<p>What happens when a pod runs out of memory</p>
<pre><code>kubectl -f &lt;confg.yml&gt;
</code></pre>
<h2>Pods are ephemeral (mortal), it's just going to create new ones every time, new ip's every time</h2>
<p>Pods random hostname
etc...</p>
<h1>Services logical grouping of pods</h1>
<ul>
<li>round-robin requests to them</li>
<li>Example</li>
<li>Selector:
<ul>
<li>route to right pod specifically</li>
</ul>
</li>
<li>Services
<ul>
<li>NodePort: easy way</li>
</ul>
</li>
</ul>
<h1>How do we do rolling updates and other fancy magic???</h1>
<p>Promethius Bringing -Fire- Kubernetees to man</p>
<h2>Deployment</h2>
<ul>
<li>Wraps around pods, declarative</li>
<li>Auto-scaling setup</li>
<li></li>
</ul>
<h1>Creating your own kind of Object in K8s</h1>
<pre><code>kc create
</code></pre>
<ul>
<li>Create a smoke tests</li>
<li>etc.</li>
</ul>
<p>Defining it:</p>
<ul>
<li>nice name</li>
<li>Version name</li>
<li>spec:
<ul>
<li>any key values you want</li>
</ul>
</li>
</ul>
<h1>Service Mesh - Helm</h1>
<ul>
<li>
<p>Dedicated infrastructure for handling <strong>service to service communication</strong></p>
</li>
<li>
<p>Sidecar: middleware?</p>
</li>
</ul>
<h1>Join the community.</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf empty

10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf=259:<h1>Cleaner API's with the Facade Pattern</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.312 [debug] l:len=2

10:45:07.312 [debug] l:buf=59:<h1>Cleaner API's with the Facade Pattern</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.312 [debug] l:len=25

10:45:07.312 [debug] l:buf=9:<h1>Cleaner API's with the Facade Pattern</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf empty

10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf=316:<h1>Doist on Asynchronus Communication</h1>
<p><a href="https://doist.com/blog/asynchronous-communication/" rel="noopener noreferrer">https://doist.com/blog/asynchronous-communication/</a></p>
<p><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.312 [debug] l:len=3

10:45:07.312 [debug] l:buf=16:<h1>Doist on Asynchronus Communication</h1>
<p><a href="https://doist.com/blog/asynchronous-communication/" rel="noopener noreferrer">https://doist.com/blog/asynchronous-communication/</a></p>
<p><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.312 [debug] l:len=31

10:45:07.312 [debug] l:buf=6:<h1>Doist on Asynchronus Communication</h1>
<p><a href="https://doist.com/blog/asynchronous-communication/" rel="noopener noreferrer">https://doist.com/blog/asynchronous-communication/</a></p>
<p><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></p>


10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf empty

10:45:07.312 [debug] l:len=

10:45:07.312 [debug] l:buf=245:<h1>Murphy's Hawaii neigbors are selling their home</h1>
<ul>
<li>2 bedroom</li>
<li>very nice yard</li>
<li>$650 - $670,000</li>
<li>Office in tough shed</li>
<li>Super close (they have had troubles)</li>
<li>3 level closed bunk-bed</li>
</ul>


10:45:07.312 [debug] l:len=2

10:45:07.312 [debug] l:buf=45:<h1>Murphy's Hawaii neigbors are selling their home</h1>
<ul>
<li>2 bedroom</li>
<li>very nice yard</li>
<li>$650 - $670,000</li>
<li>Office in tough shed</li>
<li>Super close (they have had troubles)</li>
<li>3 level closed bunk-bed</li>
</ul>


10:45:07.313 [debug] l:len=24

10:45:07.313 [debug] l:buf=5:<h1>Murphy's Hawaii neigbors are selling their home</h1>
<ul>
<li>2 bedroom</li>
<li>very nice yard</li>
<li>$650 - $670,000</li>
<li>Office in tough shed</li>
<li>Super close (they have had troubles)</li>
<li>3 level closed bunk-bed</li>
</ul>


10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf empty

10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf=344:<h1>synthesize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.313 [debug] l:len=3

10:45:07.313 [debug] l:buf=44:<h1>synthesize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.313 [debug] l:len=34

10:45:07.313 [debug] l:buf=4:<h1>synthesize</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf empty

10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf=134:<h1>Zettelkasten Apps</h1>
<p><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></p>


10:45:07.313 [debug] l:len=1

10:45:07.313 [debug] l:buf=34:<h1>Zettelkasten Apps</h1>
<p><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></p>


10:45:07.313 [debug] l:len=13

10:45:07.313 [debug] l:buf=4:<h1>Zettelkasten Apps</h1>
<p><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></p>


10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf empty

10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf=912:<h1>Dark Matter</h1>
<p>Dark matter is the idea that there's to-dos that get done, but never get logged in a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>	system. These cause your <a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a> to get bigger, but you never see them.</p>
<p>Keywords: <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a>, <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a>, <a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a>, <a href="http://localhost:5000/tech-debt" rel="noopener noreferrer">Tech Debt</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.313 [debug] l:len=9

10:45:07.313 [debug] l:buf=12:<h1>Dark Matter</h1>
<p>Dark matter is the idea that there's to-dos that get done, but never get logged in a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>	system. These cause your <a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a> to get bigger, but you never see them.</p>
<p>Keywords: <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a>, <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a>, <a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a>, <a href="http://localhost:5000/tech-debt" rel="noopener noreferrer">Tech Debt</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.313 [debug] l:len=91

10:45:07.313 [debug] l:buf=2:<h1>Dark Matter</h1>
<p>Dark matter is the idea that there's to-dos that get done, but never get logged in a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>	system. These cause your <a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a> to get bigger, but you never see them.</p>
<p>Keywords: <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a>, <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a>, <a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a>, <a href="http://localhost:5000/tech-debt" rel="noopener noreferrer">Tech Debt</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.313 [debug] l:len=

10:45:07.313 [debug] l:buf empty

10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf=2804:<h1>Keynote 1 - Friday</h1>
<p>Cydni Tero</p>
<p>About her</p>
<ul>
<li>
<p>Worked at Disney</p>
</li>
<li>
<p>I was walking the street in Paris and I didn't need anything but my phone to find the right train, go to the right place, etc...</p>
</li>
</ul>
<h1>Metaphysics &amp; Cursing</h1>
<p>Over think things, and Over think things ar the same time</p>
<blockquote>
<p>Those are not Giants, those are windmills.</p>
<p>You don't know that much about adventure ~ Dokey hotè</p>
</blockquote>
<h1>1998: Github</h1>
<ul>
<li>Cathedral &amp; the Bazaar: on opensouce
<ul>
<li>A problem of knowledge</li>
<li>We need to do more than think about how to write code in isolation</li>
<li>Given enough eyeballs, all bugs are killed</li>
</ul>
</li>
<li>Cathedral
<ul>
<li>Closed source</li>
</ul>
</li>
<li>Bazaar
<ul>
<li>Everyone can modify</li>
</ul>
</li>
</ul>
<p>Revolutions are not so clear cut. Dokey hotè</p>
<p>Does everyone have a voice in a Bazaar?</p>
<blockquote>
<p>Neither good or evil can last forever</p>
</blockquote>
<h1>First Wave 19885-1998 Richard Stallman</h1>
<p>he's a complicated fellow, meaning he's been an A hold for the last few years</p>
<blockquote>
<p><strong>Freedom</strong> of individual users. ~ RS</p>
</blockquote>
<p>Punk Rock is freedum.</p>
<p><strong>Why I must GNU</strong>: Live your life as though every act were to become a universal law</p>
<p>A MORAL IMPERITIVE:
* An idea of "duty"</p>
<p>If I like a program I <strong>must</strong> share it.</p>
<p>Galidarian Freedom: Golden Rule</p>
<h1>The Wimzical Jail</h1>
<ul>
<li>He sneaks around and unlocks the doors at night, but before they wake up they he locks them
<ul>
<li>Are they free? No.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Open Source gives us the opportunity that we could never do on our own</p>
</blockquote>
<p>Freedom -&gt; Opportunity -&gt; Responsibility</p>
<h1>Responsibility</h1>
<p>Bad stuff:</p>
<ul>
<li>Social Media</li>
<li>Global Poverty</li>
<li>etc..</li>
</ul>
<p>Next 20 years.</p>
<p>What Force shall represents the fut</p>
<blockquote>
<p>The past ethics have left us unprepared. What force shall represent<br>
~ Hans Honas</p>
</blockquote>
<blockquote>
<p>Don't lie to yourself ~ dostoyevsky</p>
</blockquote>
<p>Most of the software is a lie</p>
<blockquote>
<p>They can't distinguish the truth around him, what's real or not</p>
</blockquote>
<h3>Imagine there's a world</h3>
<ul>
<li>30% chance you'll be rich</li>
<li>30% change you'll be a begar</li>
<li>30% chance you'll be middle class</li>
</ul>
<p>Go Design a system!</p>
<h1>Inclusion is a MUST if we believe that the best software comes from the most different eyeballs</h1>
<h1>We must steer the ship out of the storm</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.314 [debug] l:len=2

10:45:07.314 [debug] l:buf=804:<h1>Keynote 1 - Friday</h1>
<p>Cydni Tero</p>
<p>About her</p>
<ul>
<li>
<p>Worked at Disney</p>
</li>
<li>
<p>I was walking the street in Paris and I didn't need anything but my phone to find the right train, go to the right place, etc...</p>
</li>
</ul>
<h1>Metaphysics &amp; Cursing</h1>
<p>Over think things, and Over think things ar the same time</p>
<blockquote>
<p>Those are not Giants, those are windmills.</p>
<p>You don't know that much about adventure ~ Dokey hotè</p>
</blockquote>
<h1>1998: Github</h1>
<ul>
<li>Cathedral &amp; the Bazaar: on opensouce
<ul>
<li>A problem of knowledge</li>
<li>We need to do more than think about how to write code in isolation</li>
<li>Given enough eyeballs, all bugs are killed</li>
</ul>
</li>
<li>Cathedral
<ul>
<li>Closed source</li>
</ul>
</li>
<li>Bazaar
<ul>
<li>Everyone can modify</li>
</ul>
</li>
</ul>
<p>Revolutions are not so clear cut. Dokey hotè</p>
<p>Does everyone have a voice in a Bazaar?</p>
<blockquote>
<p>Neither good or evil can last forever</p>
</blockquote>
<h1>First Wave 19885-1998 Richard Stallman</h1>
<p>he's a complicated fellow, meaning he's been an A hold for the last few years</p>
<blockquote>
<p><strong>Freedom</strong> of individual users. ~ RS</p>
</blockquote>
<p>Punk Rock is freedum.</p>
<p><strong>Why I must GNU</strong>: Live your life as though every act were to become a universal law</p>
<p>A MORAL IMPERITIVE:
* An idea of "duty"</p>
<p>If I like a program I <strong>must</strong> share it.</p>
<p>Galidarian Freedom: Golden Rule</p>
<h1>The Wimzical Jail</h1>
<ul>
<li>He sneaks around and unlocks the doors at night, but before they wake up they he locks them
<ul>
<li>Are they free? No.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Open Source gives us the opportunity that we could never do on our own</p>
</blockquote>
<p>Freedom -&gt; Opportunity -&gt; Responsibility</p>
<h1>Responsibility</h1>
<p>Bad stuff:</p>
<ul>
<li>Social Media</li>
<li>Global Poverty</li>
<li>etc..</li>
</ul>
<p>Next 20 years.</p>
<p>What Force shall represents the fut</p>
<blockquote>
<p>The past ethics have left us unprepared. What force shall represent<br>
~ Hans Honas</p>
</blockquote>
<blockquote>
<p>Don't lie to yourself ~ dostoyevsky</p>
</blockquote>
<p>Most of the software is a lie</p>
<blockquote>
<p>They can't distinguish the truth around him, what's real or not</p>
</blockquote>
<h3>Imagine there's a world</h3>
<ul>
<li>30% chance you'll be rich</li>
<li>30% change you'll be a begar</li>
<li>30% chance you'll be middle class</li>
</ul>
<p>Go Design a system!</p>
<h1>Inclusion is a MUST if we believe that the best software comes from the most different eyeballs</h1>
<h1>We must steer the ship out of the storm</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.314 [debug] l:len=28

10:45:07.314 [debug] l:buf=04:<h1>Keynote 1 - Friday</h1>
<p>Cydni Tero</p>
<p>About her</p>
<ul>
<li>
<p>Worked at Disney</p>
</li>
<li>
<p>I was walking the street in Paris and I didn't need anything but my phone to find the right train, go to the right place, etc...</p>
</li>
</ul>
<h1>Metaphysics &amp; Cursing</h1>
<p>Over think things, and Over think things ar the same time</p>
<blockquote>
<p>Those are not Giants, those are windmills.</p>
<p>You don't know that much about adventure ~ Dokey hotè</p>
</blockquote>
<h1>1998: Github</h1>
<ul>
<li>Cathedral &amp; the Bazaar: on opensouce
<ul>
<li>A problem of knowledge</li>
<li>We need to do more than think about how to write code in isolation</li>
<li>Given enough eyeballs, all bugs are killed</li>
</ul>
</li>
<li>Cathedral
<ul>
<li>Closed source</li>
</ul>
</li>
<li>Bazaar
<ul>
<li>Everyone can modify</li>
</ul>
</li>
</ul>
<p>Revolutions are not so clear cut. Dokey hotè</p>
<p>Does everyone have a voice in a Bazaar?</p>
<blockquote>
<p>Neither good or evil can last forever</p>
</blockquote>
<h1>First Wave 19885-1998 Richard Stallman</h1>
<p>he's a complicated fellow, meaning he's been an A hold for the last few years</p>
<blockquote>
<p><strong>Freedom</strong> of individual users. ~ RS</p>
</blockquote>
<p>Punk Rock is freedum.</p>
<p><strong>Why I must GNU</strong>: Live your life as though every act were to become a universal law</p>
<p>A MORAL IMPERITIVE:
* An idea of "duty"</p>
<p>If I like a program I <strong>must</strong> share it.</p>
<p>Galidarian Freedom: Golden Rule</p>
<h1>The Wimzical Jail</h1>
<ul>
<li>He sneaks around and unlocks the doors at night, but before they wake up they he locks them
<ul>
<li>Are they free? No.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Open Source gives us the opportunity that we could never do on our own</p>
</blockquote>
<p>Freedom -&gt; Opportunity -&gt; Responsibility</p>
<h1>Responsibility</h1>
<p>Bad stuff:</p>
<ul>
<li>Social Media</li>
<li>Global Poverty</li>
<li>etc..</li>
</ul>
<p>Next 20 years.</p>
<p>What Force shall represents the fut</p>
<blockquote>
<p>The past ethics have left us unprepared. What force shall represent<br>
~ Hans Honas</p>
</blockquote>
<blockquote>
<p>Don't lie to yourself ~ dostoyevsky</p>
</blockquote>
<p>Most of the software is a lie</p>
<blockquote>
<p>They can't distinguish the truth around him, what's real or not</p>
</blockquote>
<h3>Imagine there's a world</h3>
<ul>
<li>30% chance you'll be rich</li>
<li>30% change you'll be a begar</li>
<li>30% chance you'll be middle class</li>
</ul>
<p>Go Design a system!</p>
<h1>Inclusion is a MUST if we believe that the best software comes from the most different eyeballs</h1>
<h1>We must steer the ship out of the storm</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.314 [debug] l:len=280

10:45:07.314 [debug] l:buf=4:<h1>Keynote 1 - Friday</h1>
<p>Cydni Tero</p>
<p>About her</p>
<ul>
<li>
<p>Worked at Disney</p>
</li>
<li>
<p>I was walking the street in Paris and I didn't need anything but my phone to find the right train, go to the right place, etc...</p>
</li>
</ul>
<h1>Metaphysics &amp; Cursing</h1>
<p>Over think things, and Over think things ar the same time</p>
<blockquote>
<p>Those are not Giants, those are windmills.</p>
<p>You don't know that much about adventure ~ Dokey hotè</p>
</blockquote>
<h1>1998: Github</h1>
<ul>
<li>Cathedral &amp; the Bazaar: on opensouce
<ul>
<li>A problem of knowledge</li>
<li>We need to do more than think about how to write code in isolation</li>
<li>Given enough eyeballs, all bugs are killed</li>
</ul>
</li>
<li>Cathedral
<ul>
<li>Closed source</li>
</ul>
</li>
<li>Bazaar
<ul>
<li>Everyone can modify</li>
</ul>
</li>
</ul>
<p>Revolutions are not so clear cut. Dokey hotè</p>
<p>Does everyone have a voice in a Bazaar?</p>
<blockquote>
<p>Neither good or evil can last forever</p>
</blockquote>
<h1>First Wave 19885-1998 Richard Stallman</h1>
<p>he's a complicated fellow, meaning he's been an A hold for the last few years</p>
<blockquote>
<p><strong>Freedom</strong> of individual users. ~ RS</p>
</blockquote>
<p>Punk Rock is freedum.</p>
<p><strong>Why I must GNU</strong>: Live your life as though every act were to become a universal law</p>
<p>A MORAL IMPERITIVE:
* An idea of "duty"</p>
<p>If I like a program I <strong>must</strong> share it.</p>
<p>Galidarian Freedom: Golden Rule</p>
<h1>The Wimzical Jail</h1>
<ul>
<li>He sneaks around and unlocks the doors at night, but before they wake up they he locks them
<ul>
<li>Are they free? No.</li>
</ul>
</li>
</ul>
<blockquote>
<p>Open Source gives us the opportunity that we could never do on our own</p>
</blockquote>
<p>Freedom -&gt; Opportunity -&gt; Responsibility</p>
<h1>Responsibility</h1>
<p>Bad stuff:</p>
<ul>
<li>Social Media</li>
<li>Global Poverty</li>
<li>etc..</li>
</ul>
<p>Next 20 years.</p>
<p>What Force shall represents the fut</p>
<blockquote>
<p>The past ethics have left us unprepared. What force shall represent<br>
~ Hans Honas</p>
</blockquote>
<blockquote>
<p>Don't lie to yourself ~ dostoyevsky</p>
</blockquote>
<p>Most of the software is a lie</p>
<blockquote>
<p>They can't distinguish the truth around him, what's real or not</p>
</blockquote>
<h3>Imagine there's a world</h3>
<ul>
<li>30% chance you'll be rich</li>
<li>30% change you'll be a begar</li>
<li>30% chance you'll be middle class</li>
</ul>
<p>Go Design a system!</p>
<h1>Inclusion is a MUST if we believe that the best software comes from the most different eyeballs</h1>
<h1>We must steer the ship out of the storm</h1>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf empty

10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf=127:<h1>Tachyons</h1>
<p>A <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a> library</p>


10:45:07.314 [debug] l:len=1

10:45:07.314 [debug] l:buf=27:<h1>Tachyons</h1>
<p>A <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a> library</p>


10:45:07.314 [debug] l:len=12

10:45:07.314 [debug] l:buf=7:<h1>Tachyons</h1>
<p>A <a href="http://localhost:5000/funcitonal-css" rel="noopener noreferrer">Funcitonal Css</a> library</p>


10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf empty

10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf=1359:<h1>Agile is about productivity, Basecamp is about effectiveness</h1>
<p>Agile is about getting as many things done as quick as possible (<a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a>). However, it lacks a great way to see if the things people are doing are actually the right things without a deep look into every ticket.</p>
<p>Focus on how fast you can get things through the funnel instead of trying to guard the top of the funnel very judiciously.</p>
<p>This is a related to the idea that code is a liability. So trying to write this code if you can avoid it then write code that is not going to be useful to you in the future.</p>
<hr>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.314 [debug] l:len=1

10:45:07.314 [debug] l:buf=359:<h1>Agile is about productivity, Basecamp is about effectiveness</h1>
<p>Agile is about getting as many things done as quick as possible (<a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a>). However, it lacks a great way to see if the things people are doing are actually the right things without a deep look into every ticket.</p>
<p>Focus on how fast you can get things through the funnel instead of trying to guard the top of the funnel very judiciously.</p>
<p>This is a related to the idea that code is a liability. So trying to write this code if you can avoid it then write code that is not going to be useful to you in the future.</p>
<hr>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.314 [debug] l:len=13

10:45:07.314 [debug] l:buf=59:<h1>Agile is about productivity, Basecamp is about effectiveness</h1>
<p>Agile is about getting as many things done as quick as possible (<a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a>). However, it lacks a great way to see if the things people are doing are actually the right things without a deep look into every ticket.</p>
<p>Focus on how fast you can get things through the funnel instead of trying to guard the top of the funnel very judiciously.</p>
<p>This is a related to the idea that code is a liability. So trying to write this code if you can avoid it then write code that is not going to be useful to you in the future.</p>
<hr>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.314 [debug] l:len=135

10:45:07.314 [debug] l:buf=9:<h1>Agile is about productivity, Basecamp is about effectiveness</h1>
<p>Agile is about getting as many things done as quick as possible (<a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a>). However, it lacks a great way to see if the things people are doing are actually the right things without a deep look into every ticket.</p>
<p>Focus on how fast you can get things through the funnel instead of trying to guard the top of the funnel very judiciously.</p>
<p>This is a related to the idea that code is a liability. So trying to write this code if you can avoid it then write code that is not going to be useful to you in the future.</p>
<hr>
<p>See also:</p>
<ul>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.314 [debug] l:len=

10:45:07.314 [debug] l:buf empty

10:45:07.315 [debug] l:len=

10:45:07.315 [debug] l:buf=3955:<h1>Job to Be done</h1>
<p>A thing that <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> often talks about related to <a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></p>
<h3>References</h3>
<ul>
<li>There's a playlist here: <a href="https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe" rel="noopener noreferrer">https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe</a></li>
<li>Here's another <a href="https://www.youtube.com/watch?v=AfOwIXEbs9o" rel="noopener noreferrer">video from Clay Christensen on "The Job to be Done" and Convergence</a>.</li>
<li><a href="https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp" rel="noopener noreferrer">https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp</a></li>
<li>Animated version (<a href="https://www.youtube.com/watch?v=RQjBawcU_qg" rel="noopener noreferrer">https://www.youtube.com/watch?v=RQjBawcU_qg</a>)</li>
<li><a href="http://localhost:5000/jobtobedone.org" rel="noopener noreferrer">jobtobedone.org</a></li>
</ul>
<p>Also related to the book <a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></p>
<h3>Overview</h3>
<ul>
<li>IKEA, they've built this <em>experience</em>.
<ul>
<li>Their boxes fit in small cars</li>
<li>They offer food and child care</li>
<li>People have time (can drive far) but not a ton of money</li>
<li>We don't buy products because we fit a persona, or because users told us what they wanted.</li>
<li>We ==hire== products because we have a <em>job to be done</em>.
<ul>
<li>Help me feed the kids as fast as possible</li>
<li>Help me celebrate a special occasion with my wife
<ul>
<li>Could have been</li>
</ul>
</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
<h2>Questions</h2>
<p>Good interview questions:
Jobs To Be Done Questions to Ask:
Unlike other kinds of interviews, you don’t need to always ask every question in the exact same order. These are all just ways to explore the process of their purchase and help them remember their story.</p>
<ul>
<li>When did you first start thinking about your purchase?</li>
<li>Was it in the morning or evening? What time was it?</li>
<li>Where were you when you made that decision?</li>
<li>Was anyone else involved in the purchasing decision?</li>
<li>Why?</li>
<li>Visualize the environment you were in when you made the decision to purchase…where were you? What was around you?</li>
<li>Tell me more about that…(When you hear something interesting/intriguing)</li>
<li>Did you consider any competitors? Which ones? Why?</li>
<li>Why didn’t you choose them?</li>
<li>How did you decide between what you bought and the other options?</li>
<li>Why specifically did you buy that day versus any other? Why then? What was unique about that day?</li>
<li>What else were you doing that day?</li>
<li>Did anyone contribute to sparking the decision that day? Why?</li>
<li>What were you using before you had X?</li>
<li>Why did you use that? What did you like about it?</li>
<li>When did you start using that?</li>
<li>What were its shortcomings?</li>
<li>What does the new product do that your old solution couldn’t?</li>
<li>How do you normally approach choosing a new product?</li>
<li>What was your process for this product?</li>
<li>Why was it the same/different this time?</li>
<li>How do you use the product you’ve purchased?</li>
<li>Are there features you use all the time? How?</li>
<li>Are there features you never use? Why not?</li>
<li>If in doubt, ask them to tell you more about whatever tangential thing they bring up in the discussion.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
</ul>


10:45:07.315 [debug] l:len=3

10:45:07.315 [debug] l:buf=955:<h1>Job to Be done</h1>
<p>A thing that <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> often talks about related to <a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></p>
<h3>References</h3>
<ul>
<li>There's a playlist here: <a href="https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe" rel="noopener noreferrer">https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe</a></li>
<li>Here's another <a href="https://www.youtube.com/watch?v=AfOwIXEbs9o" rel="noopener noreferrer">video from Clay Christensen on "The Job to be Done" and Convergence</a>.</li>
<li><a href="https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp" rel="noopener noreferrer">https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp</a></li>
<li>Animated version (<a href="https://www.youtube.com/watch?v=RQjBawcU_qg" rel="noopener noreferrer">https://www.youtube.com/watch?v=RQjBawcU_qg</a>)</li>
<li><a href="http://localhost:5000/jobtobedone.org" rel="noopener noreferrer">jobtobedone.org</a></li>
</ul>
<p>Also related to the book <a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></p>
<h3>Overview</h3>
<ul>
<li>IKEA, they've built this <em>experience</em>.
<ul>
<li>Their boxes fit in small cars</li>
<li>They offer food and child care</li>
<li>People have time (can drive far) but not a ton of money</li>
<li>We don't buy products because we fit a persona, or because users told us what they wanted.</li>
<li>We ==hire== products because we have a <em>job to be done</em>.
<ul>
<li>Help me feed the kids as fast as possible</li>
<li>Help me celebrate a special occasion with my wife
<ul>
<li>Could have been</li>
</ul>
</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
<h2>Questions</h2>
<p>Good interview questions:
Jobs To Be Done Questions to Ask:
Unlike other kinds of interviews, you don’t need to always ask every question in the exact same order. These are all just ways to explore the process of their purchase and help them remember their story.</p>
<ul>
<li>When did you first start thinking about your purchase?</li>
<li>Was it in the morning or evening? What time was it?</li>
<li>Where were you when you made that decision?</li>
<li>Was anyone else involved in the purchasing decision?</li>
<li>Why?</li>
<li>Visualize the environment you were in when you made the decision to purchase…where were you? What was around you?</li>
<li>Tell me more about that…(When you hear something interesting/intriguing)</li>
<li>Did you consider any competitors? Which ones? Why?</li>
<li>Why didn’t you choose them?</li>
<li>How did you decide between what you bought and the other options?</li>
<li>Why specifically did you buy that day versus any other? Why then? What was unique about that day?</li>
<li>What else were you doing that day?</li>
<li>Did anyone contribute to sparking the decision that day? Why?</li>
<li>What were you using before you had X?</li>
<li>Why did you use that? What did you like about it?</li>
<li>When did you start using that?</li>
<li>What were its shortcomings?</li>
<li>What does the new product do that your old solution couldn’t?</li>
<li>How do you normally approach choosing a new product?</li>
<li>What was your process for this product?</li>
<li>Why was it the same/different this time?</li>
<li>How do you use the product you’ve purchased?</li>
<li>Are there features you use all the time? How?</li>
<li>Are there features you never use? Why not?</li>
<li>If in doubt, ask them to tell you more about whatever tangential thing they bring up in the discussion.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
</ul>


10:45:07.315 [debug] l:len=39

10:45:07.315 [debug] l:buf=55:<h1>Job to Be done</h1>
<p>A thing that <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> often talks about related to <a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></p>
<h3>References</h3>
<ul>
<li>There's a playlist here: <a href="https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe" rel="noopener noreferrer">https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe</a></li>
<li>Here's another <a href="https://www.youtube.com/watch?v=AfOwIXEbs9o" rel="noopener noreferrer">video from Clay Christensen on "The Job to be Done" and Convergence</a>.</li>
<li><a href="https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp" rel="noopener noreferrer">https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp</a></li>
<li>Animated version (<a href="https://www.youtube.com/watch?v=RQjBawcU_qg" rel="noopener noreferrer">https://www.youtube.com/watch?v=RQjBawcU_qg</a>)</li>
<li><a href="http://localhost:5000/jobtobedone.org" rel="noopener noreferrer">jobtobedone.org</a></li>
</ul>
<p>Also related to the book <a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></p>
<h3>Overview</h3>
<ul>
<li>IKEA, they've built this <em>experience</em>.
<ul>
<li>Their boxes fit in small cars</li>
<li>They offer food and child care</li>
<li>People have time (can drive far) but not a ton of money</li>
<li>We don't buy products because we fit a persona, or because users told us what they wanted.</li>
<li>We ==hire== products because we have a <em>job to be done</em>.
<ul>
<li>Help me feed the kids as fast as possible</li>
<li>Help me celebrate a special occasion with my wife
<ul>
<li>Could have been</li>
</ul>
</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
<h2>Questions</h2>
<p>Good interview questions:
Jobs To Be Done Questions to Ask:
Unlike other kinds of interviews, you don’t need to always ask every question in the exact same order. These are all just ways to explore the process of their purchase and help them remember their story.</p>
<ul>
<li>When did you first start thinking about your purchase?</li>
<li>Was it in the morning or evening? What time was it?</li>
<li>Where were you when you made that decision?</li>
<li>Was anyone else involved in the purchasing decision?</li>
<li>Why?</li>
<li>Visualize the environment you were in when you made the decision to purchase…where were you? What was around you?</li>
<li>Tell me more about that…(When you hear something interesting/intriguing)</li>
<li>Did you consider any competitors? Which ones? Why?</li>
<li>Why didn’t you choose them?</li>
<li>How did you decide between what you bought and the other options?</li>
<li>Why specifically did you buy that day versus any other? Why then? What was unique about that day?</li>
<li>What else were you doing that day?</li>
<li>Did anyone contribute to sparking the decision that day? Why?</li>
<li>What were you using before you had X?</li>
<li>Why did you use that? What did you like about it?</li>
<li>When did you start using that?</li>
<li>What were its shortcomings?</li>
<li>What does the new product do that your old solution couldn’t?</li>
<li>How do you normally approach choosing a new product?</li>
<li>What was your process for this product?</li>
<li>Why was it the same/different this time?</li>
<li>How do you use the product you’ve purchased?</li>
<li>Are there features you use all the time? How?</li>
<li>Are there features you never use? Why not?</li>
<li>If in doubt, ask them to tell you more about whatever tangential thing they bring up in the discussion.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
</ul>


10:45:07.315 [debug] l:len=395

10:45:07.315 [debug] l:buf=5:<h1>Job to Be done</h1>
<p>A thing that <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> often talks about related to <a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></p>
<h3>References</h3>
<ul>
<li>There's a playlist here: <a href="https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe" rel="noopener noreferrer">https://www.youtube.com/playlist?list=PLoU-PFauVXDaKPvPVMx4VkHdyEgKB8Fqe</a></li>
<li>Here's another <a href="https://www.youtube.com/watch?v=AfOwIXEbs9o" rel="noopener noreferrer">video from Clay Christensen on "The Job to be Done" and Convergence</a>.</li>
<li><a href="https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp" rel="noopener noreferrer">https://soundcloud.com/user-172996613/jason-fried-on-using-jtbd-at-basecamp</a></li>
<li>Animated version (<a href="https://www.youtube.com/watch?v=RQjBawcU_qg" rel="noopener noreferrer">https://www.youtube.com/watch?v=RQjBawcU_qg</a>)</li>
<li><a href="http://localhost:5000/jobtobedone.org" rel="noopener noreferrer">jobtobedone.org</a></li>
</ul>
<p>Also related to the book <a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></p>
<h3>Overview</h3>
<ul>
<li>IKEA, they've built this <em>experience</em>.
<ul>
<li>Their boxes fit in small cars</li>
<li>They offer food and child care</li>
<li>People have time (can drive far) but not a ton of money</li>
<li>We don't buy products because we fit a persona, or because users told us what they wanted.</li>
<li>We ==hire== products because we have a <em>job to be done</em>.
<ul>
<li>Help me feed the kids as fast as possible</li>
<li>Help me celebrate a special occasion with my wife
<ul>
<li>Could have been</li>
</ul>
</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>
<h2>Questions</h2>
<p>Good interview questions:
Jobs To Be Done Questions to Ask:
Unlike other kinds of interviews, you don’t need to always ask every question in the exact same order. These are all just ways to explore the process of their purchase and help them remember their story.</p>
<ul>
<li>When did you first start thinking about your purchase?</li>
<li>Was it in the morning or evening? What time was it?</li>
<li>Where were you when you made that decision?</li>
<li>Was anyone else involved in the purchasing decision?</li>
<li>Why?</li>
<li>Visualize the environment you were in when you made the decision to purchase…where were you? What was around you?</li>
<li>Tell me more about that…(When you hear something interesting/intriguing)</li>
<li>Did you consider any competitors? Which ones? Why?</li>
<li>Why didn’t you choose them?</li>
<li>How did you decide between what you bought and the other options?</li>
<li>Why specifically did you buy that day versus any other? Why then? What was unique about that day?</li>
<li>What else were you doing that day?</li>
<li>Did anyone contribute to sparking the decision that day? Why?</li>
<li>What were you using before you had X?</li>
<li>Why did you use that? What did you like about it?</li>
<li>When did you start using that?</li>
<li>What were its shortcomings?</li>
<li>What does the new product do that your old solution couldn’t?</li>
<li>How do you normally approach choosing a new product?</li>
<li>What was your process for this product?</li>
<li>Why was it the same/different this time?</li>
<li>How do you use the product you’ve purchased?</li>
<li>Are there features you use all the time? How?</li>
<li>Are there features you never use? Why not?</li>
<li>If in doubt, ask them to tell you more about whatever tangential thing they bring up in the discussion.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/competing-against-luck" rel="noopener noreferrer">Competing Against Luck</a></li>
</ul>


10:45:07.315 [debug] l:len=

10:45:07.315 [debug] l:buf empty

10:45:07.316 [debug] l:len=

10:45:07.316 [debug] l:buf=2491:<h1>Lightning Talk notes:</h1>
<h2>Write some docs:</h2>
<p>There's a ReasonML book!
<a href="https://pragprog.com/book/reasonml/web-development-with-reasonml" rel="noopener noreferrer">Web Development with ReasonML: Type-Safe, Functional Programming for JavaScript Developers by J. David Eisenberg |  The Pragmatic Bookshelf</a></p>
<h2>Something</h2>
<p><code>Cypress</code> bindings!</p>
<h2>AWS lambda OCaml. Just staticky linked executable.</h2>
<p><a href="https://github.com/anmonteiro/aws-lambda-ocaml-runtime" rel="noopener noreferrer">https://github.com/anmonteiro/aws-lambda-ocaml-runtime</a></p>
<h2>[[Other/Old Notes/Simplenote/Elm]]-like decoders for ReasonML</h2>
<p><a href="https://github.com/mattjbray/ocaml-decoders" rel="noopener noreferrer">https://github.com/mattjbray/ocaml-decoders</a></p>
<p>Works in native and browser</p>
<pre><code>D.decode_value D.int json;;

D.decode_string D.int "1";;
</code></pre>
<h2>Polymorphic variant</h2>
<p>Structural.</p>
<p>Allow two libraries to use the same bindings.</p>
<p><strong>Error messages</strong> can be crappy.</p>
<p><code>{. "structually": "string}</code></p>
<h2>ReasonML video course!</h2>
<p>[<a href="http://localhost:5000/learn-reasonml-" rel="noopener noreferrer"> Learn ReasonML</a>](<a href="https://learnreasonml.com/" rel="noopener noreferrer">https://learnreasonml.com/</a>)</p>
<h2>Arefs, the full full stack</h2>
<p>10k camp
50k reason lines in website
600,000 lines generated</p>
<p><strong>Atdgen</strong> (dojo)</p>
<h2>ReLearning stuff (teaching co-workers)</h2>
<pre><code>
- Unit as a last argument is confusing
  - don't do them, so you don't have to pass unit
	- Optional Arguments are great for non-breaking changes
</code></pre>
<p>Linked lists V.S. Array</p>
<h3>"BuckleScript"? Belt???</h3>
<h3>Custom Operators</h3>
<p>Can be useful for monadic operations</p>
<pre><code>Reason # let (or) (x, y) = switch (x) {
| None =&gt; y
| Some(_) as x =&gt; x
}
;
let ( or ): (option('a), option('a)) =&gt; option('a) = &lt;fun&gt;;

Reason # Some("cool") or Some("not cool");
- : option(string) = Some("cool")

Reason # None or Some("not cool");
- : option(string) = Some("not cool")
</code></pre>
<h2>RFCs</h2>
<p>Works at Stockholm Research Center</p>
<ul>
<li>ReasonSTHLM creates</li>
<li>ReasonableCoding Livestream (Pony too!)</li>
<li>Reason Design Patterns</li>
</ul>
<h2>Brisk &amp; Revery</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.316 [debug] l:len=2

10:45:07.316 [debug] l:buf=491:<h1>Lightning Talk notes:</h1>
<h2>Write some docs:</h2>
<p>There's a ReasonML book!
<a href="https://pragprog.com/book/reasonml/web-development-with-reasonml" rel="noopener noreferrer">Web Development with ReasonML: Type-Safe, Functional Programming for JavaScript Developers by J. David Eisenberg |  The Pragmatic Bookshelf</a></p>
<h2>Something</h2>
<p><code>Cypress</code> bindings!</p>
<h2>AWS lambda OCaml. Just staticky linked executable.</h2>
<p><a href="https://github.com/anmonteiro/aws-lambda-ocaml-runtime" rel="noopener noreferrer">https://github.com/anmonteiro/aws-lambda-ocaml-runtime</a></p>
<h2>[[Other/Old Notes/Simplenote/Elm]]-like decoders for ReasonML</h2>
<p><a href="https://github.com/mattjbray/ocaml-decoders" rel="noopener noreferrer">https://github.com/mattjbray/ocaml-decoders</a></p>
<p>Works in native and browser</p>
<pre><code>D.decode_value D.int json;;

D.decode_string D.int "1";;
</code></pre>
<h2>Polymorphic variant</h2>
<p>Structural.</p>
<p>Allow two libraries to use the same bindings.</p>
<p><strong>Error messages</strong> can be crappy.</p>
<p><code>{. "structually": "string}</code></p>
<h2>ReasonML video course!</h2>
<p>[<a href="http://localhost:5000/learn-reasonml-" rel="noopener noreferrer"> Learn ReasonML</a>](<a href="https://learnreasonml.com/" rel="noopener noreferrer">https://learnreasonml.com/</a>)</p>
<h2>Arefs, the full full stack</h2>
<p>10k camp
50k reason lines in website
600,000 lines generated</p>
<p><strong>Atdgen</strong> (dojo)</p>
<h2>ReLearning stuff (teaching co-workers)</h2>
<pre><code>
- Unit as a last argument is confusing
  - don't do them, so you don't have to pass unit
	- Optional Arguments are great for non-breaking changes
</code></pre>
<p>Linked lists V.S. Array</p>
<h3>"BuckleScript"? Belt???</h3>
<h3>Custom Operators</h3>
<p>Can be useful for monadic operations</p>
<pre><code>Reason # let (or) (x, y) = switch (x) {
| None =&gt; y
| Some(_) as x =&gt; x
}
;
let ( or ): (option('a), option('a)) =&gt; option('a) = &lt;fun&gt;;

Reason # Some("cool") or Some("not cool");
- : option(string) = Some("cool")

Reason # None or Some("not cool");
- : option(string) = Some("not cool")
</code></pre>
<h2>RFCs</h2>
<p>Works at Stockholm Research Center</p>
<ul>
<li>ReasonSTHLM creates</li>
<li>ReasonableCoding Livestream (Pony too!)</li>
<li>Reason Design Patterns</li>
</ul>
<h2>Brisk &amp; Revery</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.316 [debug] l:len=24

10:45:07.316 [debug] l:buf=91:<h1>Lightning Talk notes:</h1>
<h2>Write some docs:</h2>
<p>There's a ReasonML book!
<a href="https://pragprog.com/book/reasonml/web-development-with-reasonml" rel="noopener noreferrer">Web Development with ReasonML: Type-Safe, Functional Programming for JavaScript Developers by J. David Eisenberg |  The Pragmatic Bookshelf</a></p>
<h2>Something</h2>
<p><code>Cypress</code> bindings!</p>
<h2>AWS lambda OCaml. Just staticky linked executable.</h2>
<p><a href="https://github.com/anmonteiro/aws-lambda-ocaml-runtime" rel="noopener noreferrer">https://github.com/anmonteiro/aws-lambda-ocaml-runtime</a></p>
<h2>[[Other/Old Notes/Simplenote/Elm]]-like decoders for ReasonML</h2>
<p><a href="https://github.com/mattjbray/ocaml-decoders" rel="noopener noreferrer">https://github.com/mattjbray/ocaml-decoders</a></p>
<p>Works in native and browser</p>
<pre><code>D.decode_value D.int json;;

D.decode_string D.int "1";;
</code></pre>
<h2>Polymorphic variant</h2>
<p>Structural.</p>
<p>Allow two libraries to use the same bindings.</p>
<p><strong>Error messages</strong> can be crappy.</p>
<p><code>{. "structually": "string}</code></p>
<h2>ReasonML video course!</h2>
<p>[<a href="http://localhost:5000/learn-reasonml-" rel="noopener noreferrer"> Learn ReasonML</a>](<a href="https://learnreasonml.com/" rel="noopener noreferrer">https://learnreasonml.com/</a>)</p>
<h2>Arefs, the full full stack</h2>
<p>10k camp
50k reason lines in website
600,000 lines generated</p>
<p><strong>Atdgen</strong> (dojo)</p>
<h2>ReLearning stuff (teaching co-workers)</h2>
<pre><code>
- Unit as a last argument is confusing
  - don't do them, so you don't have to pass unit
	- Optional Arguments are great for non-breaking changes
</code></pre>
<p>Linked lists V.S. Array</p>
<h3>"BuckleScript"? Belt???</h3>
<h3>Custom Operators</h3>
<p>Can be useful for monadic operations</p>
<pre><code>Reason # let (or) (x, y) = switch (x) {
| None =&gt; y
| Some(_) as x =&gt; x
}
;
let ( or ): (option('a), option('a)) =&gt; option('a) = &lt;fun&gt;;

Reason # Some("cool") or Some("not cool");
- : option(string) = Some("cool")

Reason # None or Some("not cool");
- : option(string) = Some("not cool")
</code></pre>
<h2>RFCs</h2>
<p>Works at Stockholm Research Center</p>
<ul>
<li>ReasonSTHLM creates</li>
<li>ReasonableCoding Livestream (Pony too!)</li>
<li>Reason Design Patterns</li>
</ul>
<h2>Brisk &amp; Revery</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.316 [debug] l:len=249

10:45:07.316 [debug] l:buf=1:<h1>Lightning Talk notes:</h1>
<h2>Write some docs:</h2>
<p>There's a ReasonML book!
<a href="https://pragprog.com/book/reasonml/web-development-with-reasonml" rel="noopener noreferrer">Web Development with ReasonML: Type-Safe, Functional Programming for JavaScript Developers by J. David Eisenberg |  The Pragmatic Bookshelf</a></p>
<h2>Something</h2>
<p><code>Cypress</code> bindings!</p>
<h2>AWS lambda OCaml. Just staticky linked executable.</h2>
<p><a href="https://github.com/anmonteiro/aws-lambda-ocaml-runtime" rel="noopener noreferrer">https://github.com/anmonteiro/aws-lambda-ocaml-runtime</a></p>
<h2>[[Other/Old Notes/Simplenote/Elm]]-like decoders for ReasonML</h2>
<p><a href="https://github.com/mattjbray/ocaml-decoders" rel="noopener noreferrer">https://github.com/mattjbray/ocaml-decoders</a></p>
<p>Works in native and browser</p>
<pre><code>D.decode_value D.int json;;

D.decode_string D.int "1";;
</code></pre>
<h2>Polymorphic variant</h2>
<p>Structural.</p>
<p>Allow two libraries to use the same bindings.</p>
<p><strong>Error messages</strong> can be crappy.</p>
<p><code>{. "structually": "string}</code></p>
<h2>ReasonML video course!</h2>
<p>[<a href="http://localhost:5000/learn-reasonml-" rel="noopener noreferrer"> Learn ReasonML</a>](<a href="https://learnreasonml.com/" rel="noopener noreferrer">https://learnreasonml.com/</a>)</p>
<h2>Arefs, the full full stack</h2>
<p>10k camp
50k reason lines in website
600,000 lines generated</p>
<p><strong>Atdgen</strong> (dojo)</p>
<h2>ReLearning stuff (teaching co-workers)</h2>
<pre><code>
- Unit as a last argument is confusing
  - don't do them, so you don't have to pass unit
	- Optional Arguments are great for non-breaking changes
</code></pre>
<p>Linked lists V.S. Array</p>
<h3>"BuckleScript"? Belt???</h3>
<h3>Custom Operators</h3>
<p>Can be useful for monadic operations</p>
<pre><code>Reason # let (or) (x, y) = switch (x) {
| None =&gt; y
| Some(_) as x =&gt; x
}
;
let ( or ): (option('a), option('a)) =&gt; option('a) = &lt;fun&gt;;

Reason # Some("cool") or Some("not cool");
- : option(string) = Some("cool")

Reason # None or Some("not cool");
- : option(string) = Some("not cool")
</code></pre>
<h2>RFCs</h2>
<p>Works at Stockholm Research Center</p>
<ul>
<li>ReasonSTHLM creates</li>
<li>ReasonableCoding Livestream (Pony too!)</li>
<li>Reason Design Patterns</li>
</ul>
<h2>Brisk &amp; Revery</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.316 [debug] l:len=

10:45:07.316 [debug] l:buf empty

10:45:07.316 [debug] l:len=

10:45:07.316 [debug] l:buf=1335:<h1>Parfait Server Project</h1>
<p>This is a version of v4 Sync written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a>.</p>
<p>These are my tasks as of <a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></p>
<ul>
<li> <a href="http://localhost:5000/fudge--sycables-endpoints" rel="noopener noreferrer">Fudge--Sycables Endpoints</a></li>
<li> <a href="http://localhost:5000/fudge--siwa-support" rel="noopener noreferrer">Fudge--SIWA support</a></li>
<li> <a href="http://localhost:5000/fudge--deployment" rel="noopener noreferrer">Fudge--Deployment</a></li>
</ul>
<h2>Project Estimation</h2>
<p>I think I'm a bit nervous about the scope of it because there's 12 endpoints (at least) that need to be implemented.</p>
<p>12 endpoints / 1 every 2 days =&gt; 5 weeks (5 working days in each week)</p>
<p>I would hope I could bang them out faster, which might be 100% true, but I figure if I'm adding comprehensive unit tests as I go it could take take a decent amount longer. Even if I didn't I'm not entirely convinced that we could do it in a shorter amount of time.</p>
<p>Also, not sure if re-implementing it is worth it. I love Elixir probably as much as the next guy but I don't think ReasonML is going to :boom:  over night or anything... just thinking :confused:.</p>


10:45:07.316 [debug] l:len=1

10:45:07.316 [debug] l:buf=335:<h1>Parfait Server Project</h1>
<p>This is a version of v4 Sync written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a>.</p>
<p>These are my tasks as of <a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></p>
<ul>
<li> <a href="http://localhost:5000/fudge--sycables-endpoints" rel="noopener noreferrer">Fudge--Sycables Endpoints</a></li>
<li> <a href="http://localhost:5000/fudge--siwa-support" rel="noopener noreferrer">Fudge--SIWA support</a></li>
<li> <a href="http://localhost:5000/fudge--deployment" rel="noopener noreferrer">Fudge--Deployment</a></li>
</ul>
<h2>Project Estimation</h2>
<p>I think I'm a bit nervous about the scope of it because there's 12 endpoints (at least) that need to be implemented.</p>
<p>12 endpoints / 1 every 2 days =&gt; 5 weeks (5 working days in each week)</p>
<p>I would hope I could bang them out faster, which might be 100% true, but I figure if I'm adding comprehensive unit tests as I go it could take take a decent amount longer. Even if I didn't I'm not entirely convinced that we could do it in a shorter amount of time.</p>
<p>Also, not sure if re-implementing it is worth it. I love Elixir probably as much as the next guy but I don't think ReasonML is going to :boom:  over night or anything... just thinking :confused:.</p>


10:45:07.316 [debug] l:len=13

10:45:07.316 [debug] l:buf=35:<h1>Parfait Server Project</h1>
<p>This is a version of v4 Sync written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a>.</p>
<p>These are my tasks as of <a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></p>
<ul>
<li> <a href="http://localhost:5000/fudge--sycables-endpoints" rel="noopener noreferrer">Fudge--Sycables Endpoints</a></li>
<li> <a href="http://localhost:5000/fudge--siwa-support" rel="noopener noreferrer">Fudge--SIWA support</a></li>
<li> <a href="http://localhost:5000/fudge--deployment" rel="noopener noreferrer">Fudge--Deployment</a></li>
</ul>
<h2>Project Estimation</h2>
<p>I think I'm a bit nervous about the scope of it because there's 12 endpoints (at least) that need to be implemented.</p>
<p>12 endpoints / 1 every 2 days =&gt; 5 weeks (5 working days in each week)</p>
<p>I would hope I could bang them out faster, which might be 100% true, but I figure if I'm adding comprehensive unit tests as I go it could take take a decent amount longer. Even if I didn't I'm not entirely convinced that we could do it in a shorter amount of time.</p>
<p>Also, not sure if re-implementing it is worth it. I love Elixir probably as much as the next guy but I don't think ReasonML is going to :boom:  over night or anything... just thinking :confused:.</p>


10:45:07.316 [debug] l:len=133

10:45:07.316 [debug] l:buf=5:<h1>Parfait Server Project</h1>
<p>This is a version of v4 Sync written in <a href="http://localhost:5000/elixir" rel="noopener noreferrer">Elixir</a>.</p>
<p>These are my tasks as of <a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></p>
<ul>
<li> <a href="http://localhost:5000/fudge--sycables-endpoints" rel="noopener noreferrer">Fudge--Sycables Endpoints</a></li>
<li> <a href="http://localhost:5000/fudge--siwa-support" rel="noopener noreferrer">Fudge--SIWA support</a></li>
<li> <a href="http://localhost:5000/fudge--deployment" rel="noopener noreferrer">Fudge--Deployment</a></li>
</ul>
<h2>Project Estimation</h2>
<p>I think I'm a bit nervous about the scope of it because there's 12 endpoints (at least) that need to be implemented.</p>
<p>12 endpoints / 1 every 2 days =&gt; 5 weeks (5 working days in each week)</p>
<p>I would hope I could bang them out faster, which might be 100% true, but I figure if I'm adding comprehensive unit tests as I go it could take take a decent amount longer. Even if I didn't I'm not entirely convinced that we could do it in a shorter amount of time.</p>
<p>Also, not sure if re-implementing it is worth it. I love Elixir probably as much as the next guy but I don't think ReasonML is going to :boom:  over night or anything... just thinking :confused:.</p>


10:45:07.316 [debug] l:len=

10:45:07.316 [debug] l:buf empty

10:45:07.316 [debug] l:len=

10:45:07.316 [debug] l:buf=2139:<h1>A</h1>
<p><a href="https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764" rel="noopener noreferrer">https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764</a></p>
<p>From time to time, Musk will send out an e-mail to the entire company to enforce a new policy or let them know about something that's bothering him. One of the more famous e-mails arrived in May 2010 with the subject line: Acronyms Seriously Suck:</p>
<p>There is a creeping tendency to use made up acronyms at SpaceX. Excessive use of made up acronyms is a significant impediment to communication and keeping communication good as we grow is incredibly important. Individually, a few acronyms here and there may not seem so bad, but if a thousand people are making these up, over time the result will be a huge glossary that we have to issue to new employees. No one can actually remember all these acronyms and people don't want to seem dumb in a meeting, so they just sit there in ignorance. This is particularly tough on new employees.</p>
<p>That needs to stop immediately or I will take drastic action - I have given enough warning over the years. Unless an acronym is approved by me, it should not enter the SpaceX glossary. If there is an existing acronym that cannot reasonably be justified, it should be eliminated, as I have requested in the past.</p>
<p>For example, there should be not "HTS" [horizontal test stand] or "VTS" [vertical test stand] designations for test stands. Those are particularly dumb, as they contain unnecessary words. A "stand" at our test site is obviously a test stand. VTS-3 is four syllables compared with "Tripod", which is two, so the bloody acronym version actually takes longer to say than the name!</p>
<p>The key test for an acronym is to ask whether it helps or hurts communication. An acronym that most engineers outside of SpaceX already know, such as GUI, is fine to use. It is also ok to make up a few acronyms/contractions every now and again, assuming I have approved them, e.g. MVac and M9 instead of Merlin 1C-Vacuum or Merlin 1C-Sea Level, but those need to be kept to a minimum.</p>


10:45:07.317 [debug] l:len=2

10:45:07.317 [debug] l:buf=139:<h1>A</h1>
<p><a href="https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764" rel="noopener noreferrer">https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764</a></p>
<p>From time to time, Musk will send out an e-mail to the entire company to enforce a new policy or let them know about something that's bothering him. One of the more famous e-mails arrived in May 2010 with the subject line: Acronyms Seriously Suck:</p>
<p>There is a creeping tendency to use made up acronyms at SpaceX. Excessive use of made up acronyms is a significant impediment to communication and keeping communication good as we grow is incredibly important. Individually, a few acronyms here and there may not seem so bad, but if a thousand people are making these up, over time the result will be a huge glossary that we have to issue to new employees. No one can actually remember all these acronyms and people don't want to seem dumb in a meeting, so they just sit there in ignorance. This is particularly tough on new employees.</p>
<p>That needs to stop immediately or I will take drastic action - I have given enough warning over the years. Unless an acronym is approved by me, it should not enter the SpaceX glossary. If there is an existing acronym that cannot reasonably be justified, it should be eliminated, as I have requested in the past.</p>
<p>For example, there should be not "HTS" [horizontal test stand] or "VTS" [vertical test stand] designations for test stands. Those are particularly dumb, as they contain unnecessary words. A "stand" at our test site is obviously a test stand. VTS-3 is four syllables compared with "Tripod", which is two, so the bloody acronym version actually takes longer to say than the name!</p>
<p>The key test for an acronym is to ask whether it helps or hurts communication. An acronym that most engineers outside of SpaceX already know, such as GUI, is fine to use. It is also ok to make up a few acronyms/contractions every now and again, assuming I have approved them, e.g. MVac and M9 instead of Merlin 1C-Vacuum or Merlin 1C-Sea Level, but those need to be kept to a minimum.</p>


10:45:07.317 [debug] l:len=21

10:45:07.317 [debug] l:buf=39:<h1>A</h1>
<p><a href="https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764" rel="noopener noreferrer">https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764</a></p>
<p>From time to time, Musk will send out an e-mail to the entire company to enforce a new policy or let them know about something that's bothering him. One of the more famous e-mails arrived in May 2010 with the subject line: Acronyms Seriously Suck:</p>
<p>There is a creeping tendency to use made up acronyms at SpaceX. Excessive use of made up acronyms is a significant impediment to communication and keeping communication good as we grow is incredibly important. Individually, a few acronyms here and there may not seem so bad, but if a thousand people are making these up, over time the result will be a huge glossary that we have to issue to new employees. No one can actually remember all these acronyms and people don't want to seem dumb in a meeting, so they just sit there in ignorance. This is particularly tough on new employees.</p>
<p>That needs to stop immediately or I will take drastic action - I have given enough warning over the years. Unless an acronym is approved by me, it should not enter the SpaceX glossary. If there is an existing acronym that cannot reasonably be justified, it should be eliminated, as I have requested in the past.</p>
<p>For example, there should be not "HTS" [horizontal test stand] or "VTS" [vertical test stand] designations for test stands. Those are particularly dumb, as they contain unnecessary words. A "stand" at our test site is obviously a test stand. VTS-3 is four syllables compared with "Tripod", which is two, so the bloody acronym version actually takes longer to say than the name!</p>
<p>The key test for an acronym is to ask whether it helps or hurts communication. An acronym that most engineers outside of SpaceX already know, such as GUI, is fine to use. It is also ok to make up a few acronyms/contractions every now and again, assuming I have approved them, e.g. MVac and M9 instead of Merlin 1C-Vacuum or Merlin 1C-Sea Level, but those need to be kept to a minimum.</p>


10:45:07.317 [debug] l:len=213

10:45:07.317 [debug] l:buf=9:<h1>A</h1>
<p><a href="https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764" rel="noopener noreferrer">https://gist.github.com/klaaspieter/12cd68f54bb71a3940eae5cdd4ea1764</a></p>
<p>From time to time, Musk will send out an e-mail to the entire company to enforce a new policy or let them know about something that's bothering him. One of the more famous e-mails arrived in May 2010 with the subject line: Acronyms Seriously Suck:</p>
<p>There is a creeping tendency to use made up acronyms at SpaceX. Excessive use of made up acronyms is a significant impediment to communication and keeping communication good as we grow is incredibly important. Individually, a few acronyms here and there may not seem so bad, but if a thousand people are making these up, over time the result will be a huge glossary that we have to issue to new employees. No one can actually remember all these acronyms and people don't want to seem dumb in a meeting, so they just sit there in ignorance. This is particularly tough on new employees.</p>
<p>That needs to stop immediately or I will take drastic action - I have given enough warning over the years. Unless an acronym is approved by me, it should not enter the SpaceX glossary. If there is an existing acronym that cannot reasonably be justified, it should be eliminated, as I have requested in the past.</p>
<p>For example, there should be not "HTS" [horizontal test stand] or "VTS" [vertical test stand] designations for test stands. Those are particularly dumb, as they contain unnecessary words. A "stand" at our test site is obviously a test stand. VTS-3 is four syllables compared with "Tripod", which is two, so the bloody acronym version actually takes longer to say than the name!</p>
<p>The key test for an acronym is to ask whether it helps or hurts communication. An acronym that most engineers outside of SpaceX already know, such as GUI, is fine to use. It is also ok to make up a few acronyms/contractions every now and again, assuming I have approved them, e.g. MVac and M9 instead of Merlin 1C-Vacuum or Merlin 1C-Sea Level, but those need to be kept to a minimum.</p>


10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf empty

10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf=1256:<h1>Abstractions considered harmful</h1>
<blockquote>
<p>Computers, after all, are just shaky towers of nested abstractions: from the code that tells them what to do, to the interfaces that suggest to the user what’s possible to do with them. Each level of abstraction becomes an opportunity to make work more efficient, communicate more clearly, and assist understanding.</p>
<p>Of course, abstractions also become chances to complicate what was clear, slow down what was fast, and [mess] up what was perfectly fine.</p>
<p><strong>Choosing the proper amount of abstraction is tricky, because each user comes to what you’re making with their own amount of experience.</strong> Experience gaps are not unique to computing, but I think it matters more here than in many other situations.</p>
<p>Frank Chimero <a href="https://www.frankchimero.com/writing/what-screens-want/" rel="noopener noreferrer">what screens want</a></p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
<li><a href="http://localhost:5000/responsive-design" rel="noopener noreferrer">Responsive Design</a></li>
</ul>


10:45:07.317 [debug] l:len=1

10:45:07.317 [debug] l:buf=256:<h1>Abstractions considered harmful</h1>
<blockquote>
<p>Computers, after all, are just shaky towers of nested abstractions: from the code that tells them what to do, to the interfaces that suggest to the user what’s possible to do with them. Each level of abstraction becomes an opportunity to make work more efficient, communicate more clearly, and assist understanding.</p>
<p>Of course, abstractions also become chances to complicate what was clear, slow down what was fast, and [mess] up what was perfectly fine.</p>
<p><strong>Choosing the proper amount of abstraction is tricky, because each user comes to what you’re making with their own amount of experience.</strong> Experience gaps are not unique to computing, but I think it matters more here than in many other situations.</p>
<p>Frank Chimero <a href="https://www.frankchimero.com/writing/what-screens-want/" rel="noopener noreferrer">what screens want</a></p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
<li><a href="http://localhost:5000/responsive-design" rel="noopener noreferrer">Responsive Design</a></li>
</ul>


10:45:07.317 [debug] l:len=12

10:45:07.317 [debug] l:buf=56:<h1>Abstractions considered harmful</h1>
<blockquote>
<p>Computers, after all, are just shaky towers of nested abstractions: from the code that tells them what to do, to the interfaces that suggest to the user what’s possible to do with them. Each level of abstraction becomes an opportunity to make work more efficient, communicate more clearly, and assist understanding.</p>
<p>Of course, abstractions also become chances to complicate what was clear, slow down what was fast, and [mess] up what was perfectly fine.</p>
<p><strong>Choosing the proper amount of abstraction is tricky, because each user comes to what you’re making with their own amount of experience.</strong> Experience gaps are not unique to computing, but I think it matters more here than in many other situations.</p>
<p>Frank Chimero <a href="https://www.frankchimero.com/writing/what-screens-want/" rel="noopener noreferrer">what screens want</a></p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
<li><a href="http://localhost:5000/responsive-design" rel="noopener noreferrer">Responsive Design</a></li>
</ul>


10:45:07.317 [debug] l:len=125

10:45:07.317 [debug] l:buf=6:<h1>Abstractions considered harmful</h1>
<blockquote>
<p>Computers, after all, are just shaky towers of nested abstractions: from the code that tells them what to do, to the interfaces that suggest to the user what’s possible to do with them. Each level of abstraction becomes an opportunity to make work more efficient, communicate more clearly, and assist understanding.</p>
<p>Of course, abstractions also become chances to complicate what was clear, slow down what was fast, and [mess] up what was perfectly fine.</p>
<p><strong>Choosing the proper amount of abstraction is tricky, because each user comes to what you’re making with their own amount of experience.</strong> Experience gaps are not unique to computing, but I think it matters more here than in many other situations.</p>
<p>Frank Chimero <a href="https://www.frankchimero.com/writing/what-screens-want/" rel="noopener noreferrer">what screens want</a></p>
</blockquote>
<h2>Keywords</h2>
<ul>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
<li><a href="http://localhost:5000/responsive-design" rel="noopener noreferrer">Responsive Design</a></li>
</ul>


10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf empty

10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf=2070:<h1>Simplicity freaking matters</h1>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.317 [debug] l:len=2

10:45:07.317 [debug] l:buf=070:<h1>Simplicity freaking matters</h1>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.317 [debug] l:len=20

10:45:07.317 [debug] l:buf=70:<h1>Simplicity freaking matters</h1>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.317 [debug] l:len=207

10:45:07.317 [debug] l:buf=0:<h1>Simplicity freaking matters</h1>
<p>When it comes to <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> it's crazy important to keep things simple. Why? Because a <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> tool's whole point is to help people understand the project and what needs to be done. Or better said the whole point of the tool is to bring clarity and a shared understanding of a project. If a project managment tool confuses people, it hasn't done it's job.</p>
<p>There's also the problem of adoption. If the tool becomes a source of stress, not a source of calm, a source of confusion not a source of clarity, then people won't want to use it and they'll <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">use Slack instead</a>, because at least that's <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a>.</p>
<p>Human brains can only accept so much information. Avoid overwhelm.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a>, <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a>, <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>, <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>, <a href="http://localhost:5000/confusion" rel="noopener noreferrer">Confusion</a>, <a href="http://localhost:5000/our-brains" rel="noopener noreferrer">Our brains</a>, <a href="http://localhost:5000/intentional-thinking" rel="noopener noreferrer">intentional thinking</a> <a href="http://localhost:5000/complexity-of-basecamp-v.s.-github-issues" rel="noopener noreferrer">Complexity of Basecamp V.S. Github Issues</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf empty

10:45:07.317 [debug] l:len=

10:45:07.317 [debug] l:buf=487:<h1>Simplicity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.318 [debug] l:len=4

10:45:07.318 [debug] l:buf=87:<h1>Simplicity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.318 [debug] l:len=48

10:45:07.318 [debug] l:buf=7:<h1>Simplicity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.318 [debug] l:len=

10:45:07.318 [debug] l:buf empty

10:45:07.319 [debug] l:len=

10:45:07.320 [debug] l:buf=15666:<h1>Why your ReasonML evangelism isn't Working (references)</h1>
<h2>TL;DR</h2>
<p>SOOO. What's my talk all about? Understanding people. Understanding people so that you can understand how to cater to them better.</p>
<hr>
<p>We all want to sell <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> but often it seems that our arguments fall on deft ears. There's perhaps many reasons that this might and there's no right answers. I'm going to tell you now I'm no expert, not in the least, I haven't (as of yet) convinced my job to even try out ReasonML, however I have introduced other technologies and changes that were big and even better I can draw on the advice and experience of people that have made large language leaps in their companies.</p>
<p>The namesake of this talk is the blog post, <a href="https://ericsink.com/entries/fsharp_chasm.html" rel="noopener noreferrer">"Why your F# evangelism isn't working"</a> . I'll now proceed to quote this directly because of how good it is.</p>
<p>There's 4 kinds of people...</p>
<ol>
<li>**The "<a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a>"**people who like trying new technologies</li>
<li>**The "<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>"*<em>people who only care about technology to get something done</em></li>
<li>**The "<a href="http://localhost:5000/conservatives" rel="noopener noreferrer">conservatives</a>"**pragmatists, but even more risk-averse</li>
<li>**The "<a href="http://localhost:5000/laggards" rel="noopener noreferrer">laggards</a>"**people who actively avoid new things</li>
</ol>
<p>They are laid out on a spectrum below. As you can see it's a sort of bell curve. The height is about the number of people, from left to right is how likely people are to adopt new technologies. Guess where we are? Yep, the far left.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/8A9A0DFC-D441-4910-8DDD-EF0DF7D43145.png" alt=""></p>
<p>Also you can see "The Chasm" which is an indication that most technologies struggle to cross from being a new and hip technology to one used by every day people. I think it's because <strong>there's a fundamental personality difference in the way these two types of people think about technologies</strong>.</p>
<p>On the one hand Early Adopters think, "Wow this technology looks fun to use and would expand my mind by learning it"</p>
<p>On the other hand Pragmatists and their more conservative counterparts are thinking, "Is this popular enough to use this? Is it safe to use? Or even, Do I have to change?" Why do they think this way, don't they want to learn?</p>
<p>It's not about that. Pragmatists are all about <strong>getting stuff done</strong>. Meaning that is their only goal. Technology is a means to an end. <strong>Technology doesn't matter to them, so long as it doesn't get in their way.</strong></p>
<h1><a href="https://medium.com/the-political-informer/the-rogers-adoption-curve-how-you-spread-new-ideas-throughout-culture-d848462fcd24" rel="noopener noreferrer">The Rogers Adoption Curve &amp; How You Spread New Ideas Throughout Culture</a></h1>
<p><strong>Innovators</strong>— these are the risk taking, highly educated, prosperous people. They’re always trying those new beta apps, technologies, and lifestyle habits.</p>
<p>In a political context, they’re the fringe. They hangout in their esoteric groups where they discuss theories, philosophers, and other theoretical works and applications. These political innovators aren’t your average Americans. They’re not watching the latest TV series, or reading popular books and magazines.</p>
<p><strong>Early Adopters</strong>— also risk takers and highly educated, but more leadership orientated than innovators. Think of these guys as community organizers; informed, risk takers, less prosperous, and more connected with their communities (i.e. popular).</p>
<p>Early adopters are <strong>the movers and shakers.</strong> They push the idea out into broader culture. Where the <strong>innovators nurtured and matured the idea, these guys push it out of the nest.</strong></p>
<p><strong>Early Majority</strong>— less risk taking, tending to be more conventional with a willingness to accept new ideas. They’re active in their community, knowledgeable about social trends, and have an influence over their neighbors.
These are people who arrive to the party on time. They’re not afraid of change, but they don’t go after it. Change comes to them.
<strong>Late Majority</strong>— usually traditional, and less educated and socially active. Unsurprisingly, this group age wise is older.
They show up to the party late. Showing up at a growing party isn’t fun for them.
Change isn’t fun for them either. Unlike the early majority, who lets change come to them, the late majority is more likely hide from it. They’ll push against change if it doesn’t fit neatly into their worldview.
Your grandpa is probably in this category.<em>Sorry, not sorry.</em>
<strong>Laggards</strong>— the oldest and most traditionalist of the stages, this group will fight against change. They’re connected to their community, but not in a way that encourages transmission of new ideas. Think of Clint Eastwood in Gran Torino. He’d <a href="https://www.youtube.com/watch?v=NelBNtNm8l0" rel="noopener noreferrer">fit nicely</a> into this category.</p>
<ul>
<li><strong>Knowledge</strong> — learning about the existence and function of the idea</li>
<li><strong>Persuasion</strong> — becoming convinced of the value of the idea</li>
<li><strong>Decision</strong> — committing to the adoption of the idea</li>
<li><strong>Implementation</strong> — putting it to use</li>
<li><strong>Confirmation</strong> — the ultimate acceptance (or rejection) of the idea [ <a href="https://nhokanson.wordpress.com/2007/07/12/everett-m-rogers-diffusion-of-innovations-and-more/" rel="noopener noreferrer">source</a> ]</li>
</ul>
<p>If the above Rogers Adoption Curve graph doesn’t make total sense to you (or you want to look at it differently), Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/09/how-idea-adoption-works-the-idea-progression.html" rel="noopener noreferrer">came up with an alternative graph</a> displaying how the theory works.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*6gRV9HaD_GrxQW4r.png" alt="">
In his graph, six stages make up the gradual acceptance and adoption of a new idea.</p>
<ul>
<li><strong>Fringe</strong>—the idea is on the outskirts of society and acceptance. “It’s not obvious, proven or readily explained.”</li>
<li><strong>Risky</strong>—the idea is unknown, and potentially dangerous to utilize</li>
<li><strong>New</strong>— the idea is seen as “hip” by influencers and gets shared with their audiences</li>
<li><strong>Hot</strong> — The idea is now being accepted by enough people. It’s a trend</li>
<li><strong>Mass</strong>— The idea is now accepted by most people. The_masses_are the ones “who only buy pop hits, who only go to restaurant chains, who only drive the most popular car.”</li>
<li><strong>Always</strong> — Ultimately, the idea becomes so popular and accepted that the_masses_push it on everyone else who hasn’t already accepted the idea (going back to the “you either begrudgingly accept the new idea or are forced to live with it”_laggard_section)</li>
</ul>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*dVFjeZWtARxFdpHh.jpg" alt=""></p>
<h1>Selling Reason</h1>
<h2>Tip 1: Don't bash languages! (Yes, essentially, JavaScript but also TypeScript)</h2>
<p>Bashing other languages is a really bad habit, one even I do. <strong>The problem lies that people love their languages, they worked hard to learn them, by bashing them yo (truncated)

10:45:07.320 [debug] l:len=1

10:45:07.320 [debug] l:buf=5666:<h1>Why your ReasonML evangelism isn't Working (references)</h1>
<h2>TL;DR</h2>
<p>SOOO. What's my talk all about? Understanding people. Understanding people so that you can understand how to cater to them better.</p>
<hr>
<p>We all want to sell <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> but often it seems that our arguments fall on deft ears. There's perhaps many reasons that this might and there's no right answers. I'm going to tell you now I'm no expert, not in the least, I haven't (as of yet) convinced my job to even try out ReasonML, however I have introduced other technologies and changes that were big and even better I can draw on the advice and experience of people that have made large language leaps in their companies.</p>
<p>The namesake of this talk is the blog post, <a href="https://ericsink.com/entries/fsharp_chasm.html" rel="noopener noreferrer">"Why your F# evangelism isn't working"</a> . I'll now proceed to quote this directly because of how good it is.</p>
<p>There's 4 kinds of people...</p>
<ol>
<li>**The "<a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a>"**people who like trying new technologies</li>
<li>**The "<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>"*<em>people who only care about technology to get something done</em></li>
<li>**The "<a href="http://localhost:5000/conservatives" rel="noopener noreferrer">conservatives</a>"**pragmatists, but even more risk-averse</li>
<li>**The "<a href="http://localhost:5000/laggards" rel="noopener noreferrer">laggards</a>"**people who actively avoid new things</li>
</ol>
<p>They are laid out on a spectrum below. As you can see it's a sort of bell curve. The height is about the number of people, from left to right is how likely people are to adopt new technologies. Guess where we are? Yep, the far left.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/8A9A0DFC-D441-4910-8DDD-EF0DF7D43145.png" alt=""></p>
<p>Also you can see "The Chasm" which is an indication that most technologies struggle to cross from being a new and hip technology to one used by every day people. I think it's because <strong>there's a fundamental personality difference in the way these two types of people think about technologies</strong>.</p>
<p>On the one hand Early Adopters think, "Wow this technology looks fun to use and would expand my mind by learning it"</p>
<p>On the other hand Pragmatists and their more conservative counterparts are thinking, "Is this popular enough to use this? Is it safe to use? Or even, Do I have to change?" Why do they think this way, don't they want to learn?</p>
<p>It's not about that. Pragmatists are all about <strong>getting stuff done</strong>. Meaning that is their only goal. Technology is a means to an end. <strong>Technology doesn't matter to them, so long as it doesn't get in their way.</strong></p>
<h1><a href="https://medium.com/the-political-informer/the-rogers-adoption-curve-how-you-spread-new-ideas-throughout-culture-d848462fcd24" rel="noopener noreferrer">The Rogers Adoption Curve &amp; How You Spread New Ideas Throughout Culture</a></h1>
<p><strong>Innovators</strong>— these are the risk taking, highly educated, prosperous people. They’re always trying those new beta apps, technologies, and lifestyle habits.</p>
<p>In a political context, they’re the fringe. They hangout in their esoteric groups where they discuss theories, philosophers, and other theoretical works and applications. These political innovators aren’t your average Americans. They’re not watching the latest TV series, or reading popular books and magazines.</p>
<p><strong>Early Adopters</strong>— also risk takers and highly educated, but more leadership orientated than innovators. Think of these guys as community organizers; informed, risk takers, less prosperous, and more connected with their communities (i.e. popular).</p>
<p>Early adopters are <strong>the movers and shakers.</strong> They push the idea out into broader culture. Where the <strong>innovators nurtured and matured the idea, these guys push it out of the nest.</strong></p>
<p><strong>Early Majority</strong>— less risk taking, tending to be more conventional with a willingness to accept new ideas. They’re active in their community, knowledgeable about social trends, and have an influence over their neighbors.
These are people who arrive to the party on time. They’re not afraid of change, but they don’t go after it. Change comes to them.
<strong>Late Majority</strong>— usually traditional, and less educated and socially active. Unsurprisingly, this group age wise is older.
They show up to the party late. Showing up at a growing party isn’t fun for them.
Change isn’t fun for them either. Unlike the early majority, who lets change come to them, the late majority is more likely hide from it. They’ll push against change if it doesn’t fit neatly into their worldview.
Your grandpa is probably in this category.<em>Sorry, not sorry.</em>
<strong>Laggards</strong>— the oldest and most traditionalist of the stages, this group will fight against change. They’re connected to their community, but not in a way that encourages transmission of new ideas. Think of Clint Eastwood in Gran Torino. He’d <a href="https://www.youtube.com/watch?v=NelBNtNm8l0" rel="noopener noreferrer">fit nicely</a> into this category.</p>
<ul>
<li><strong>Knowledge</strong> — learning about the existence and function of the idea</li>
<li><strong>Persuasion</strong> — becoming convinced of the value of the idea</li>
<li><strong>Decision</strong> — committing to the adoption of the idea</li>
<li><strong>Implementation</strong> — putting it to use</li>
<li><strong>Confirmation</strong> — the ultimate acceptance (or rejection) of the idea [ <a href="https://nhokanson.wordpress.com/2007/07/12/everett-m-rogers-diffusion-of-innovations-and-more/" rel="noopener noreferrer">source</a> ]</li>
</ul>
<p>If the above Rogers Adoption Curve graph doesn’t make total sense to you (or you want to look at it differently), Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/09/how-idea-adoption-works-the-idea-progression.html" rel="noopener noreferrer">came up with an alternative graph</a> displaying how the theory works.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*6gRV9HaD_GrxQW4r.png" alt="">
In his graph, six stages make up the gradual acceptance and adoption of a new idea.</p>
<ul>
<li><strong>Fringe</strong>—the idea is on the outskirts of society and acceptance. “It’s not obvious, proven or readily explained.”</li>
<li><strong>Risky</strong>—the idea is unknown, and potentially dangerous to utilize</li>
<li><strong>New</strong>— the idea is seen as “hip” by influencers and gets shared with their audiences</li>
<li><strong>Hot</strong> — The idea is now being accepted by enough people. It’s a trend</li>
<li><strong>Mass</strong>— The idea is now accepted by most people. The_masses_are the ones “who only buy pop hits, who only go to restaurant chains, who only drive the most popular car.”</li>
<li><strong>Always</strong> — Ultimately, the idea becomes so popular and accepted that the_masses_push it on everyone else who hasn’t already accepted the idea (going back to the “you either begrudgingly accept the new idea or are forced to live with it”_laggard_section)</li>
</ul>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*dVFjeZWtARxFdpHh.jpg" alt=""></p>
<h1>Selling Reason</h1>
<h2>Tip 1: Don't bash languages! (Yes, essentially, JavaScript but also TypeScript)</h2>
<p>Bashing other languages is a really bad habit, one even I do. <strong>The problem lies that people love their languages, they worked hard to learn them, by bashing them you (truncated)

10:45:07.320 [debug] l:len=15

10:45:07.320 [debug] l:buf=666:<h1>Why your ReasonML evangelism isn't Working (references)</h1>
<h2>TL;DR</h2>
<p>SOOO. What's my talk all about? Understanding people. Understanding people so that you can understand how to cater to them better.</p>
<hr>
<p>We all want to sell <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> but often it seems that our arguments fall on deft ears. There's perhaps many reasons that this might and there's no right answers. I'm going to tell you now I'm no expert, not in the least, I haven't (as of yet) convinced my job to even try out ReasonML, however I have introduced other technologies and changes that were big and even better I can draw on the advice and experience of people that have made large language leaps in their companies.</p>
<p>The namesake of this talk is the blog post, <a href="https://ericsink.com/entries/fsharp_chasm.html" rel="noopener noreferrer">"Why your F# evangelism isn't working"</a> . I'll now proceed to quote this directly because of how good it is.</p>
<p>There's 4 kinds of people...</p>
<ol>
<li>**The "<a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a>"**people who like trying new technologies</li>
<li>**The "<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>"*<em>people who only care about technology to get something done</em></li>
<li>**The "<a href="http://localhost:5000/conservatives" rel="noopener noreferrer">conservatives</a>"**pragmatists, but even more risk-averse</li>
<li>**The "<a href="http://localhost:5000/laggards" rel="noopener noreferrer">laggards</a>"**people who actively avoid new things</li>
</ol>
<p>They are laid out on a spectrum below. As you can see it's a sort of bell curve. The height is about the number of people, from left to right is how likely people are to adopt new technologies. Guess where we are? Yep, the far left.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/8A9A0DFC-D441-4910-8DDD-EF0DF7D43145.png" alt=""></p>
<p>Also you can see "The Chasm" which is an indication that most technologies struggle to cross from being a new and hip technology to one used by every day people. I think it's because <strong>there's a fundamental personality difference in the way these two types of people think about technologies</strong>.</p>
<p>On the one hand Early Adopters think, "Wow this technology looks fun to use and would expand my mind by learning it"</p>
<p>On the other hand Pragmatists and their more conservative counterparts are thinking, "Is this popular enough to use this? Is it safe to use? Or even, Do I have to change?" Why do they think this way, don't they want to learn?</p>
<p>It's not about that. Pragmatists are all about <strong>getting stuff done</strong>. Meaning that is their only goal. Technology is a means to an end. <strong>Technology doesn't matter to them, so long as it doesn't get in their way.</strong></p>
<h1><a href="https://medium.com/the-political-informer/the-rogers-adoption-curve-how-you-spread-new-ideas-throughout-culture-d848462fcd24" rel="noopener noreferrer">The Rogers Adoption Curve &amp; How You Spread New Ideas Throughout Culture</a></h1>
<p><strong>Innovators</strong>— these are the risk taking, highly educated, prosperous people. They’re always trying those new beta apps, technologies, and lifestyle habits.</p>
<p>In a political context, they’re the fringe. They hangout in their esoteric groups where they discuss theories, philosophers, and other theoretical works and applications. These political innovators aren’t your average Americans. They’re not watching the latest TV series, or reading popular books and magazines.</p>
<p><strong>Early Adopters</strong>— also risk takers and highly educated, but more leadership orientated than innovators. Think of these guys as community organizers; informed, risk takers, less prosperous, and more connected with their communities (i.e. popular).</p>
<p>Early adopters are <strong>the movers and shakers.</strong> They push the idea out into broader culture. Where the <strong>innovators nurtured and matured the idea, these guys push it out of the nest.</strong></p>
<p><strong>Early Majority</strong>— less risk taking, tending to be more conventional with a willingness to accept new ideas. They’re active in their community, knowledgeable about social trends, and have an influence over their neighbors.
These are people who arrive to the party on time. They’re not afraid of change, but they don’t go after it. Change comes to them.
<strong>Late Majority</strong>— usually traditional, and less educated and socially active. Unsurprisingly, this group age wise is older.
They show up to the party late. Showing up at a growing party isn’t fun for them.
Change isn’t fun for them either. Unlike the early majority, who lets change come to them, the late majority is more likely hide from it. They’ll push against change if it doesn’t fit neatly into their worldview.
Your grandpa is probably in this category.<em>Sorry, not sorry.</em>
<strong>Laggards</strong>— the oldest and most traditionalist of the stages, this group will fight against change. They’re connected to their community, but not in a way that encourages transmission of new ideas. Think of Clint Eastwood in Gran Torino. He’d <a href="https://www.youtube.com/watch?v=NelBNtNm8l0" rel="noopener noreferrer">fit nicely</a> into this category.</p>
<ul>
<li><strong>Knowledge</strong> — learning about the existence and function of the idea</li>
<li><strong>Persuasion</strong> — becoming convinced of the value of the idea</li>
<li><strong>Decision</strong> — committing to the adoption of the idea</li>
<li><strong>Implementation</strong> — putting it to use</li>
<li><strong>Confirmation</strong> — the ultimate acceptance (or rejection) of the idea [ <a href="https://nhokanson.wordpress.com/2007/07/12/everett-m-rogers-diffusion-of-innovations-and-more/" rel="noopener noreferrer">source</a> ]</li>
</ul>
<p>If the above Rogers Adoption Curve graph doesn’t make total sense to you (or you want to look at it differently), Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/09/how-idea-adoption-works-the-idea-progression.html" rel="noopener noreferrer">came up with an alternative graph</a> displaying how the theory works.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*6gRV9HaD_GrxQW4r.png" alt="">
In his graph, six stages make up the gradual acceptance and adoption of a new idea.</p>
<ul>
<li><strong>Fringe</strong>—the idea is on the outskirts of society and acceptance. “It’s not obvious, proven or readily explained.”</li>
<li><strong>Risky</strong>—the idea is unknown, and potentially dangerous to utilize</li>
<li><strong>New</strong>— the idea is seen as “hip” by influencers and gets shared with their audiences</li>
<li><strong>Hot</strong> — The idea is now being accepted by enough people. It’s a trend</li>
<li><strong>Mass</strong>— The idea is now accepted by most people. The_masses_are the ones “who only buy pop hits, who only go to restaurant chains, who only drive the most popular car.”</li>
<li><strong>Always</strong> — Ultimately, the idea becomes so popular and accepted that the_masses_push it on everyone else who hasn’t already accepted the idea (going back to the “you either begrudgingly accept the new idea or are forced to live with it”_laggard_section)</li>
</ul>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*dVFjeZWtARxFdpHh.jpg" alt=""></p>
<h1>Selling Reason</h1>
<h2>Tip 1: Don't bash languages! (Yes, essentially, JavaScript but also TypeScript)</h2>
<p>Bashing other languages is a really bad habit, one even I do. <strong>The problem lies that people love their languages, they worked hard to learn them, by bashing them you  (truncated)

10:45:07.320 [debug] l:len=156

10:45:07.320 [debug] l:buf=66:<h1>Why your ReasonML evangelism isn't Working (references)</h1>
<h2>TL;DR</h2>
<p>SOOO. What's my talk all about? Understanding people. Understanding people so that you can understand how to cater to them better.</p>
<hr>
<p>We all want to sell <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> but often it seems that our arguments fall on deft ears. There's perhaps many reasons that this might and there's no right answers. I'm going to tell you now I'm no expert, not in the least, I haven't (as of yet) convinced my job to even try out ReasonML, however I have introduced other technologies and changes that were big and even better I can draw on the advice and experience of people that have made large language leaps in their companies.</p>
<p>The namesake of this talk is the blog post, <a href="https://ericsink.com/entries/fsharp_chasm.html" rel="noopener noreferrer">"Why your F# evangelism isn't working"</a> . I'll now proceed to quote this directly because of how good it is.</p>
<p>There's 4 kinds of people...</p>
<ol>
<li>**The "<a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a>"**people who like trying new technologies</li>
<li>**The "<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>"*<em>people who only care about technology to get something done</em></li>
<li>**The "<a href="http://localhost:5000/conservatives" rel="noopener noreferrer">conservatives</a>"**pragmatists, but even more risk-averse</li>
<li>**The "<a href="http://localhost:5000/laggards" rel="noopener noreferrer">laggards</a>"**people who actively avoid new things</li>
</ol>
<p>They are laid out on a spectrum below. As you can see it's a sort of bell curve. The height is about the number of people, from left to right is how likely people are to adopt new technologies. Guess where we are? Yep, the far left.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/8A9A0DFC-D441-4910-8DDD-EF0DF7D43145.png" alt=""></p>
<p>Also you can see "The Chasm" which is an indication that most technologies struggle to cross from being a new and hip technology to one used by every day people. I think it's because <strong>there's a fundamental personality difference in the way these two types of people think about technologies</strong>.</p>
<p>On the one hand Early Adopters think, "Wow this technology looks fun to use and would expand my mind by learning it"</p>
<p>On the other hand Pragmatists and their more conservative counterparts are thinking, "Is this popular enough to use this? Is it safe to use? Or even, Do I have to change?" Why do they think this way, don't they want to learn?</p>
<p>It's not about that. Pragmatists are all about <strong>getting stuff done</strong>. Meaning that is their only goal. Technology is a means to an end. <strong>Technology doesn't matter to them, so long as it doesn't get in their way.</strong></p>
<h1><a href="https://medium.com/the-political-informer/the-rogers-adoption-curve-how-you-spread-new-ideas-throughout-culture-d848462fcd24" rel="noopener noreferrer">The Rogers Adoption Curve &amp; How You Spread New Ideas Throughout Culture</a></h1>
<p><strong>Innovators</strong>— these are the risk taking, highly educated, prosperous people. They’re always trying those new beta apps, technologies, and lifestyle habits.</p>
<p>In a political context, they’re the fringe. They hangout in their esoteric groups where they discuss theories, philosophers, and other theoretical works and applications. These political innovators aren’t your average Americans. They’re not watching the latest TV series, or reading popular books and magazines.</p>
<p><strong>Early Adopters</strong>— also risk takers and highly educated, but more leadership orientated than innovators. Think of these guys as community organizers; informed, risk takers, less prosperous, and more connected with their communities (i.e. popular).</p>
<p>Early adopters are <strong>the movers and shakers.</strong> They push the idea out into broader culture. Where the <strong>innovators nurtured and matured the idea, these guys push it out of the nest.</strong></p>
<p><strong>Early Majority</strong>— less risk taking, tending to be more conventional with a willingness to accept new ideas. They’re active in their community, knowledgeable about social trends, and have an influence over their neighbors.
These are people who arrive to the party on time. They’re not afraid of change, but they don’t go after it. Change comes to them.
<strong>Late Majority</strong>— usually traditional, and less educated and socially active. Unsurprisingly, this group age wise is older.
They show up to the party late. Showing up at a growing party isn’t fun for them.
Change isn’t fun for them either. Unlike the early majority, who lets change come to them, the late majority is more likely hide from it. They’ll push against change if it doesn’t fit neatly into their worldview.
Your grandpa is probably in this category.<em>Sorry, not sorry.</em>
<strong>Laggards</strong>— the oldest and most traditionalist of the stages, this group will fight against change. They’re connected to their community, but not in a way that encourages transmission of new ideas. Think of Clint Eastwood in Gran Torino. He’d <a href="https://www.youtube.com/watch?v=NelBNtNm8l0" rel="noopener noreferrer">fit nicely</a> into this category.</p>
<ul>
<li><strong>Knowledge</strong> — learning about the existence and function of the idea</li>
<li><strong>Persuasion</strong> — becoming convinced of the value of the idea</li>
<li><strong>Decision</strong> — committing to the adoption of the idea</li>
<li><strong>Implementation</strong> — putting it to use</li>
<li><strong>Confirmation</strong> — the ultimate acceptance (or rejection) of the idea [ <a href="https://nhokanson.wordpress.com/2007/07/12/everett-m-rogers-diffusion-of-innovations-and-more/" rel="noopener noreferrer">source</a> ]</li>
</ul>
<p>If the above Rogers Adoption Curve graph doesn’t make total sense to you (or you want to look at it differently), Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/09/how-idea-adoption-works-the-idea-progression.html" rel="noopener noreferrer">came up with an alternative graph</a> displaying how the theory works.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*6gRV9HaD_GrxQW4r.png" alt="">
In his graph, six stages make up the gradual acceptance and adoption of a new idea.</p>
<ul>
<li><strong>Fringe</strong>—the idea is on the outskirts of society and acceptance. “It’s not obvious, proven or readily explained.”</li>
<li><strong>Risky</strong>—the idea is unknown, and potentially dangerous to utilize</li>
<li><strong>New</strong>— the idea is seen as “hip” by influencers and gets shared with their audiences</li>
<li><strong>Hot</strong> — The idea is now being accepted by enough people. It’s a trend</li>
<li><strong>Mass</strong>— The idea is now accepted by most people. The_masses_are the ones “who only buy pop hits, who only go to restaurant chains, who only drive the most popular car.”</li>
<li><strong>Always</strong> — Ultimately, the idea becomes so popular and accepted that the_masses_push it on everyone else who hasn’t already accepted the idea (going back to the “you either begrudgingly accept the new idea or are forced to live with it”_laggard_section)</li>
</ul>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*dVFjeZWtARxFdpHh.jpg" alt=""></p>
<h1>Selling Reason</h1>
<h2>Tip 1: Don't bash languages! (Yes, essentially, JavaScript but also TypeScript)</h2>
<p>Bashing other languages is a really bad habit, one even I do. <strong>The problem lies that people love their languages, they worked hard to learn them, by bashing them you j (truncated)

10:45:07.320 [debug] l:len=1566

10:45:07.320 [debug] l:buf=6:<h1>Why your ReasonML evangelism isn't Working (references)</h1>
<h2>TL;DR</h2>
<p>SOOO. What's my talk all about? Understanding people. Understanding people so that you can understand how to cater to them better.</p>
<hr>
<p>We all want to sell <a href="http://localhost:5000/reasonml" rel="noopener noreferrer">ReasonML</a> but often it seems that our arguments fall on deft ears. There's perhaps many reasons that this might and there's no right answers. I'm going to tell you now I'm no expert, not in the least, I haven't (as of yet) convinced my job to even try out ReasonML, however I have introduced other technologies and changes that were big and even better I can draw on the advice and experience of people that have made large language leaps in their companies.</p>
<p>The namesake of this talk is the blog post, <a href="https://ericsink.com/entries/fsharp_chasm.html" rel="noopener noreferrer">"Why your F# evangelism isn't working"</a> . I'll now proceed to quote this directly because of how good it is.</p>
<p>There's 4 kinds of people...</p>
<ol>
<li>**The "<a href="http://localhost:5000/early-adopters" rel="noopener noreferrer">early adopters</a>"**people who like trying new technologies</li>
<li>**The "<a href="http://localhost:5000/pragmatists-or-early-majority" rel="noopener noreferrer">Pragmatists or Early Majority</a>"*<em>people who only care about technology to get something done</em></li>
<li>**The "<a href="http://localhost:5000/conservatives" rel="noopener noreferrer">conservatives</a>"**pragmatists, but even more risk-averse</li>
<li>**The "<a href="http://localhost:5000/laggards" rel="noopener noreferrer">laggards</a>"**people who actively avoid new things</li>
</ol>
<p>They are laid out on a spectrum below. As you can see it's a sort of bell curve. The height is about the number of people, from left to right is how likely people are to adopt new technologies. Guess where we are? Yep, the far left.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/8A9A0DFC-D441-4910-8DDD-EF0DF7D43145.png" alt=""></p>
<p>Also you can see "The Chasm" which is an indication that most technologies struggle to cross from being a new and hip technology to one used by every day people. I think it's because <strong>there's a fundamental personality difference in the way these two types of people think about technologies</strong>.</p>
<p>On the one hand Early Adopters think, "Wow this technology looks fun to use and would expand my mind by learning it"</p>
<p>On the other hand Pragmatists and their more conservative counterparts are thinking, "Is this popular enough to use this? Is it safe to use? Or even, Do I have to change?" Why do they think this way, don't they want to learn?</p>
<p>It's not about that. Pragmatists are all about <strong>getting stuff done</strong>. Meaning that is their only goal. Technology is a means to an end. <strong>Technology doesn't matter to them, so long as it doesn't get in their way.</strong></p>
<h1><a href="https://medium.com/the-political-informer/the-rogers-adoption-curve-how-you-spread-new-ideas-throughout-culture-d848462fcd24" rel="noopener noreferrer">The Rogers Adoption Curve &amp; How You Spread New Ideas Throughout Culture</a></h1>
<p><strong>Innovators</strong>— these are the risk taking, highly educated, prosperous people. They’re always trying those new beta apps, technologies, and lifestyle habits.</p>
<p>In a political context, they’re the fringe. They hangout in their esoteric groups where they discuss theories, philosophers, and other theoretical works and applications. These political innovators aren’t your average Americans. They’re not watching the latest TV series, or reading popular books and magazines.</p>
<p><strong>Early Adopters</strong>— also risk takers and highly educated, but more leadership orientated than innovators. Think of these guys as community organizers; informed, risk takers, less prosperous, and more connected with their communities (i.e. popular).</p>
<p>Early adopters are <strong>the movers and shakers.</strong> They push the idea out into broader culture. Where the <strong>innovators nurtured and matured the idea, these guys push it out of the nest.</strong></p>
<p><strong>Early Majority</strong>— less risk taking, tending to be more conventional with a willingness to accept new ideas. They’re active in their community, knowledgeable about social trends, and have an influence over their neighbors.
These are people who arrive to the party on time. They’re not afraid of change, but they don’t go after it. Change comes to them.
<strong>Late Majority</strong>— usually traditional, and less educated and socially active. Unsurprisingly, this group age wise is older.
They show up to the party late. Showing up at a growing party isn’t fun for them.
Change isn’t fun for them either. Unlike the early majority, who lets change come to them, the late majority is more likely hide from it. They’ll push against change if it doesn’t fit neatly into their worldview.
Your grandpa is probably in this category.<em>Sorry, not sorry.</em>
<strong>Laggards</strong>— the oldest and most traditionalist of the stages, this group will fight against change. They’re connected to their community, but not in a way that encourages transmission of new ideas. Think of Clint Eastwood in Gran Torino. He’d <a href="https://www.youtube.com/watch?v=NelBNtNm8l0" rel="noopener noreferrer">fit nicely</a> into this category.</p>
<ul>
<li><strong>Knowledge</strong> — learning about the existence and function of the idea</li>
<li><strong>Persuasion</strong> — becoming convinced of the value of the idea</li>
<li><strong>Decision</strong> — committing to the adoption of the idea</li>
<li><strong>Implementation</strong> — putting it to use</li>
<li><strong>Confirmation</strong> — the ultimate acceptance (or rejection) of the idea [ <a href="https://nhokanson.wordpress.com/2007/07/12/everett-m-rogers-diffusion-of-innovations-and-more/" rel="noopener noreferrer">source</a> ]</li>
</ul>
<p>If the above Rogers Adoption Curve graph doesn’t make total sense to you (or you want to look at it differently), Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/09/how-idea-adoption-works-the-idea-progression.html" rel="noopener noreferrer">came up with an alternative graph</a> displaying how the theory works.</p>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*6gRV9HaD_GrxQW4r.png" alt="">
In his graph, six stages make up the gradual acceptance and adoption of a new idea.</p>
<ul>
<li><strong>Fringe</strong>—the idea is on the outskirts of society and acceptance. “It’s not obvious, proven or readily explained.”</li>
<li><strong>Risky</strong>—the idea is unknown, and potentially dangerous to utilize</li>
<li><strong>New</strong>— the idea is seen as “hip” by influencers and gets shared with their audiences</li>
<li><strong>Hot</strong> — The idea is now being accepted by enough people. It’s a trend</li>
<li><strong>Mass</strong>— The idea is now accepted by most people. The_masses_are the ones “who only buy pop hits, who only go to restaurant chains, who only drive the most popular car.”</li>
<li><strong>Always</strong> — Ultimately, the idea becomes so popular and accepted that the_masses_push it on everyone else who hasn’t already accepted the idea (going back to the “you either begrudgingly accept the new idea or are forced to live with it”_laggard_section)</li>
</ul>
<p><img src="http://localhost:5000/Why%20your%20ReasonML%20evangelism%20isn't%20Working%20(references)/0*dVFjeZWtARxFdpHh.jpg" alt=""></p>
<h1>Selling Reason</h1>
<h2>Tip 1: Don't bash languages! (Yes, essentially, JavaScript but also TypeScript)</h2>
<p>Bashing other languages is a really bad habit, one even I do. <strong>The problem lies that people love their languages, they worked hard to learn them, by bashing them you ju (truncated)

10:45:07.320 [debug] l:len=

10:45:07.320 [debug] l:buf empty

10:45:07.320 [debug] l:len=

10:45:07.320 [debug] l:buf=210:<p>To differentiate not from the Customer's perspective not from the feature perspective. Maybe two products look very similar (roam / workflowy) but the way users use it it's quite different!</p>
<p>#jtbd</p>


10:45:07.320 [debug] l:len=2

10:45:07.320 [debug] l:buf=10:<p>To differentiate not from the Customer's perspective not from the feature perspective. Maybe two products look very similar (roam / workflowy) but the way users use it it's quite different!</p>
<p>#jtbd</p>


10:45:07.320 [debug] l:len=21

10:45:07.320 [debug] l:buf=0:<p>To differentiate not from the Customer's perspective not from the feature perspective. Maybe two products look very similar (roam / workflowy) but the way users use it it's quite different!</p>
<p>#jtbd</p>


10:45:07.320 [debug] l:len=

10:45:07.320 [debug] l:buf empty

10:45:07.320 [debug] l:len=

10:45:07.320 [debug] l:buf=167:<h1>Cleaning</h1>
<p>Related to: <a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></p>


10:45:07.320 [debug] l:len=1

10:45:07.320 [debug] l:buf=67:<h1>Cleaning</h1>
<p>Related to: <a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></p>


10:45:07.320 [debug] l:len=16

10:45:07.321 [debug] l:buf=7:<h1>Cleaning</h1>
<p>Related to: <a href="http://localhost:5000/life-changing-magic-of-tidying-up" rel="noopener noreferrer">Life Changing Magic of Tidying Up</a></p>


10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf empty

10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf=317:<h1>shaped</h1>
<p>When work has been defied enough to <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risk</a> it.</p>
<p>See <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> and <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.321 [debug] l:len=3

10:45:07.321 [debug] l:buf=17:<h1>shaped</h1>
<p>When work has been defied enough to <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risk</a> it.</p>
<p>See <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> and <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.321 [debug] l:len=31

10:45:07.321 [debug] l:buf=7:<h1>shaped</h1>
<p>When work has been defied enough to <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risk</a> it.</p>
<p>See <a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a> and <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf empty

10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf=78:<h1>Community</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.321 [debug] l:len=7

10:45:07.321 [debug] l:buf=8:<h1>Community</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf empty

10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf=504:<h1>Email's overly formal problem</h1>
<p>Email tends to emulate physical letters. As such people feel the need to have overly formal language like, "Dear Mr. CEO, ..." and end with, "Sincerely, Gage". Also they tend to add in a lot of fluff that just makes the email take longer to read through. This slows down communication needlessly.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.321 [debug] l:len=5

10:45:07.321 [debug] l:buf=04:<h1>Email's overly formal problem</h1>
<p>Email tends to emulate physical letters. As such people feel the need to have overly formal language like, "Dear Mr. CEO, ..." and end with, "Sincerely, Gage". Also they tend to add in a lot of fluff that just makes the email take longer to read through. This slows down communication needlessly.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.321 [debug] l:len=50

10:45:07.321 [debug] l:buf=4:<h1>Email's overly formal problem</h1>
<p>Email tends to emulate physical letters. As such people feel the need to have overly formal language like, "Dear Mr. CEO, ..." and end with, "Sincerely, Gage". Also they tend to add in a lot of fluff that just makes the email take longer to read through. This slows down communication needlessly.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf empty

10:45:07.321 [debug] l:len=

10:45:07.321 [debug] l:buf=268:<h1>crank-city</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.321 [debug] l:len=2

10:45:07.321 [debug] l:buf=68:<h1>crank-city</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.321 [debug] l:len=26

10:45:07.321 [debug] l:buf=8:<h1>crank-city</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.321 [debug] l:len=

10:45:07.322 [debug] l:buf empty

10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf=1008:<h1>HEY!'s design</h1>
<hr>
<h2><a href="http://localhost:5000/boyfriend-meme-hey.png" rel="noopener noreferrer">boyfriend-meme-HEY</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/jonasdowney/status/1280620028774305792?s=20" rel="noopener noreferrer">https://twitter.com/jonasdowney/status/1280620028774305792?s=20</a></p>
<p><a href="https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/" rel="noopener noreferrer">https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.322 [debug] l:len=1

10:45:07.322 [debug] l:buf=008:<h1>HEY!'s design</h1>
<hr>
<h2><a href="http://localhost:5000/boyfriend-meme-hey.png" rel="noopener noreferrer">boyfriend-meme-HEY</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/jonasdowney/status/1280620028774305792?s=20" rel="noopener noreferrer">https://twitter.com/jonasdowney/status/1280620028774305792?s=20</a></p>
<p><a href="https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/" rel="noopener noreferrer">https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.322 [debug] l:len=10

10:45:07.322 [debug] l:buf=08:<h1>HEY!'s design</h1>
<hr>
<h2><a href="http://localhost:5000/boyfriend-meme-hey.png" rel="noopener noreferrer">boyfriend-meme-HEY</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/jonasdowney/status/1280620028774305792?s=20" rel="noopener noreferrer">https://twitter.com/jonasdowney/status/1280620028774305792?s=20</a></p>
<p><a href="https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/" rel="noopener noreferrer">https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.322 [debug] l:len=100

10:45:07.322 [debug] l:buf=8:<h1>HEY!'s design</h1>
<hr>
<h2><a href="http://localhost:5000/boyfriend-meme-hey.png" rel="noopener noreferrer">boyfriend-meme-HEY</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://twitter.com/jonasdowney/status/1280620028774305792?s=20" rel="noopener noreferrer">https://twitter.com/jonasdowney/status/1280620028774305792?s=20</a></p>
<p><a href="https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/" rel="noopener noreferrer">https://m.signalvnoise.com/how-we-achieve-simple-design-for-basecamp-and-hey/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
</ul>


10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf empty

10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf=230:<h1>Speare--overview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.322 [debug] l:len=2

10:45:07.322 [debug] l:buf=30:<h1>Speare--overview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.322 [debug] l:len=23

10:45:07.322 [debug] l:buf=0:<h1>Speare--overview</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf empty

10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf=1155:<h1>Information Stability</h1>
<p>Information about why a decision was made is available, even into the future. Things don't get harder to find over time.</p>
<p>Bad examples of this are a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and anything with <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
</ul>


10:45:07.322 [debug] l:len=1

10:45:07.322 [debug] l:buf=155:<h1>Information Stability</h1>
<p>Information about why a decision was made is available, even into the future. Things don't get harder to find over time.</p>
<p>Bad examples of this are a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and anything with <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
</ul>


10:45:07.322 [debug] l:len=11

10:45:07.322 [debug] l:buf=55:<h1>Information Stability</h1>
<p>Information about why a decision was made is available, even into the future. Things don't get harder to find over time.</p>
<p>Bad examples of this are a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and anything with <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
</ul>


10:45:07.322 [debug] l:len=115

10:45:07.322 [debug] l:buf=5:<h1>Information Stability</h1>
<p>Information about why a decision was made is available, even into the future. Things don't get harder to find over time.</p>
<p>Bad examples of this are a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> and anything with <a href="http://localhost:5000/infinite-scrolling" rel="noopener noreferrer">Infinite Scrolling</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
</ul>


10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf empty

10:45:07.322 [debug] l:len=

10:45:07.322 [debug] l:buf=84:<h1>Junior Devloper</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.322 [debug] l:len=8

10:45:07.322 [debug] l:buf=4:<h1>Junior Devloper</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.322 [debug] l:len=

10:45:07.323 [debug] l:buf empty

10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf=360:<h1>Clean Code</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
</ul>


10:45:07.323 [debug] l:len=3

10:45:07.323 [debug] l:buf=60:<h1>Clean Code</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
</ul>


10:45:07.323 [debug] l:len=36

10:45:07.323 [debug] l:buf=0:<h1>Clean Code</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
</ul>


10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf empty

10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf=366:<h1>apps that act like your brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.323 [debug] l:len=3

10:45:07.323 [debug] l:buf=66:<h1>apps that act like your brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.323 [debug] l:len=36

10:45:07.323 [debug] l:buf=6:<h1>apps that act like your brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roam-research" rel="noopener noreferrer">Roam Research</a></li>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf empty

10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf=69:<p>Nature Names</p>
<ul>
<li>Coral</li>
<li>Ray</li>
<li></li>
</ul>


10:45:07.323 [debug] l:len=6

10:45:07.323 [debug] l:buf=9:<p>Nature Names</p>
<ul>
<li>Coral</li>
<li>Ray</li>
<li></li>
</ul>


10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf empty

10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf=153:<h1>Tragedy of the commons</h1>
<p>Write about this</p>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.323 [debug] l:len=1

10:45:07.323 [debug] l:buf=53:<h1>Tragedy of the commons</h1>
<p>Write about this</p>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.323 [debug] l:len=15

10:45:07.323 [debug] l:buf=3:<h1>Tragedy of the commons</h1>
<p>Write about this</p>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.323 [debug] l:len=

10:45:07.323 [debug] l:buf empty

10:45:07.323 [debug] l:len=

10:45:07.324 [debug] l:buf=560:<h1>User Stories</h1>
<p>The idea is you write a short fictional narrative of the user using your app in their normal daily lives. This helps prevent tasks that bring no <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>
<p>Often used in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a></li>
</ul>


10:45:07.324 [debug] l:len=5

10:45:07.324 [debug] l:buf=60:<h1>User Stories</h1>
<p>The idea is you write a short fictional narrative of the user using your app in their normal daily lives. This helps prevent tasks that bring no <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>
<p>Often used in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a></li>
</ul>


10:45:07.324 [debug] l:len=56

10:45:07.324 [debug] l:buf=0:<h1>User Stories</h1>
<p>The idea is you write a short fictional narrative of the user using your app in their normal daily lives. This helps prevent tasks that bring no <a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a>.</p>
<p>Often used in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/tangible-customer-value" rel="noopener noreferrer">tangible customer value</a></li>
</ul>


10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf empty

10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf=30:<p>Netgear 99
shinysun650</p>


10:45:07.324 [debug] l:len=3

10:45:07.324 [debug] l:buf=0:<p>Netgear 99
shinysun650</p>


10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf empty

10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf=1659:<h1>Gentle Birth To-dos</h1>
<h2>Progress</h2>
<ul>
<li>Worked on logo for second website</li>
<li>Tried to make website look more modern (soon I'm thinking I'll make it better mach brosure)</li>
</ul>
<h2>Pricing</h2>
<ul>
<li>$5.00 a month for a custom gmail account (maybe less for others)</li>
<li>$12/year for &lt;gentlebirthutah.com&gt; (or we can transfer your current domain)</li>
<li>$12/year for &lt;homebirthutah.com&gt; for the other website</li>
</ul>
<h2>For the website</h2>
<ol>
<li>Vector format for logo</li>
</ol>
<ul>
<li>Fonts used in tri-fold</li>
<li>Purple color in digital form</li>
<li>What you usually tell people about why home-birth is a good idea / safe</li>
<li>What areas of Utah you're willing to service too.</li>
<li>Access to old website so we can begin tracking how well it currently works</li>
<li>Access to Movie?</li>
</ul>
<h2>Things I've been thinking about</h2>
<ul>
<li>Maybe need to step back and figure out what the content should be, and overall message.</li>
<li>Need to portray you're <strong>Authentic</strong>.
<ul>
<li>Three things people look for:
<ol>
<li>Commitment to Quality:</li>
<li>Sincerity:</li>
<li>Heritage: Tell you're story with passion</li>
</ol>
</li>
</ul>
</li>
<li>Maybe more use of Humor, it helps people relate with you and feel comfortable</li>
</ul>
<p>Good examples:</p>
<ul>
<li><a href="https://simple.com/" rel="noopener noreferrer">https://Simple.com</a></li>
<li><a href="https://onpurple.com/" rel="noopener noreferrer">https://onpurple.com</a></li>
<li><a href="https://chatbooks.com/" rel="noopener noreferrer">https://chatbooks.com/</a></li>
</ul>
<p>Tags:
gentle-birth</p>


10:45:07.324 [debug] l:len=1

10:45:07.324 [debug] l:buf=659:<h1>Gentle Birth To-dos</h1>
<h2>Progress</h2>
<ul>
<li>Worked on logo for second website</li>
<li>Tried to make website look more modern (soon I'm thinking I'll make it better mach brosure)</li>
</ul>
<h2>Pricing</h2>
<ul>
<li>$5.00 a month for a custom gmail account (maybe less for others)</li>
<li>$12/year for &lt;gentlebirthutah.com&gt; (or we can transfer your current domain)</li>
<li>$12/year for &lt;homebirthutah.com&gt; for the other website</li>
</ul>
<h2>For the website</h2>
<ol>
<li>Vector format for logo</li>
</ol>
<ul>
<li>Fonts used in tri-fold</li>
<li>Purple color in digital form</li>
<li>What you usually tell people about why home-birth is a good idea / safe</li>
<li>What areas of Utah you're willing to service too.</li>
<li>Access to old website so we can begin tracking how well it currently works</li>
<li>Access to Movie?</li>
</ul>
<h2>Things I've been thinking about</h2>
<ul>
<li>Maybe need to step back and figure out what the content should be, and overall message.</li>
<li>Need to portray you're <strong>Authentic</strong>.
<ul>
<li>Three things people look for:
<ol>
<li>Commitment to Quality:</li>
<li>Sincerity:</li>
<li>Heritage: Tell you're story with passion</li>
</ol>
</li>
</ul>
</li>
<li>Maybe more use of Humor, it helps people relate with you and feel comfortable</li>
</ul>
<p>Good examples:</p>
<ul>
<li><a href="https://simple.com/" rel="noopener noreferrer">https://Simple.com</a></li>
<li><a href="https://onpurple.com/" rel="noopener noreferrer">https://onpurple.com</a></li>
<li><a href="https://chatbooks.com/" rel="noopener noreferrer">https://chatbooks.com/</a></li>
</ul>
<p>Tags:
gentle-birth</p>


10:45:07.324 [debug] l:len=16

10:45:07.324 [debug] l:buf=59:<h1>Gentle Birth To-dos</h1>
<h2>Progress</h2>
<ul>
<li>Worked on logo for second website</li>
<li>Tried to make website look more modern (soon I'm thinking I'll make it better mach brosure)</li>
</ul>
<h2>Pricing</h2>
<ul>
<li>$5.00 a month for a custom gmail account (maybe less for others)</li>
<li>$12/year for &lt;gentlebirthutah.com&gt; (or we can transfer your current domain)</li>
<li>$12/year for &lt;homebirthutah.com&gt; for the other website</li>
</ul>
<h2>For the website</h2>
<ol>
<li>Vector format for logo</li>
</ol>
<ul>
<li>Fonts used in tri-fold</li>
<li>Purple color in digital form</li>
<li>What you usually tell people about why home-birth is a good idea / safe</li>
<li>What areas of Utah you're willing to service too.</li>
<li>Access to old website so we can begin tracking how well it currently works</li>
<li>Access to Movie?</li>
</ul>
<h2>Things I've been thinking about</h2>
<ul>
<li>Maybe need to step back and figure out what the content should be, and overall message.</li>
<li>Need to portray you're <strong>Authentic</strong>.
<ul>
<li>Three things people look for:
<ol>
<li>Commitment to Quality:</li>
<li>Sincerity:</li>
<li>Heritage: Tell you're story with passion</li>
</ol>
</li>
</ul>
</li>
<li>Maybe more use of Humor, it helps people relate with you and feel comfortable</li>
</ul>
<p>Good examples:</p>
<ul>
<li><a href="https://simple.com/" rel="noopener noreferrer">https://Simple.com</a></li>
<li><a href="https://onpurple.com/" rel="noopener noreferrer">https://onpurple.com</a></li>
<li><a href="https://chatbooks.com/" rel="noopener noreferrer">https://chatbooks.com/</a></li>
</ul>
<p>Tags:
gentle-birth</p>


10:45:07.324 [debug] l:len=165

10:45:07.324 [debug] l:buf=9:<h1>Gentle Birth To-dos</h1>
<h2>Progress</h2>
<ul>
<li>Worked on logo for second website</li>
<li>Tried to make website look more modern (soon I'm thinking I'll make it better mach brosure)</li>
</ul>
<h2>Pricing</h2>
<ul>
<li>$5.00 a month for a custom gmail account (maybe less for others)</li>
<li>$12/year for &lt;gentlebirthutah.com&gt; (or we can transfer your current domain)</li>
<li>$12/year for &lt;homebirthutah.com&gt; for the other website</li>
</ul>
<h2>For the website</h2>
<ol>
<li>Vector format for logo</li>
</ol>
<ul>
<li>Fonts used in tri-fold</li>
<li>Purple color in digital form</li>
<li>What you usually tell people about why home-birth is a good idea / safe</li>
<li>What areas of Utah you're willing to service too.</li>
<li>Access to old website so we can begin tracking how well it currently works</li>
<li>Access to Movie?</li>
</ul>
<h2>Things I've been thinking about</h2>
<ul>
<li>Maybe need to step back and figure out what the content should be, and overall message.</li>
<li>Need to portray you're <strong>Authentic</strong>.
<ul>
<li>Three things people look for:
<ol>
<li>Commitment to Quality:</li>
<li>Sincerity:</li>
<li>Heritage: Tell you're story with passion</li>
</ol>
</li>
</ul>
</li>
<li>Maybe more use of Humor, it helps people relate with you and feel comfortable</li>
</ul>
<p>Good examples:</p>
<ul>
<li><a href="https://simple.com/" rel="noopener noreferrer">https://Simple.com</a></li>
<li><a href="https://onpurple.com/" rel="noopener noreferrer">https://onpurple.com</a></li>
<li><a href="https://chatbooks.com/" rel="noopener noreferrer">https://chatbooks.com/</a></li>
</ul>
<p>Tags:
gentle-birth</p>


10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf empty

10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf=80:<h1>thread</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.324 [debug] l:len=8

10:45:07.324 [debug] l:buf=0:<h1>thread</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf empty

10:45:07.324 [debug] l:len=

10:45:07.324 [debug] l:buf=329:<h1>Weekly &amp; Daily Goals</h1>
<p>see: <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.324 [debug] l:len=3

10:45:07.324 [debug] l:buf=29:<h1>Weekly &amp; Daily Goals</h1>
<p>see: <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.324 [debug] l:len=32

10:45:07.324 [debug] l:buf=9:<h1>Weekly &amp; Daily Goals</h1>
<p>see: <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.324 [debug] l:len=

10:45:07.325 [debug] l:buf empty

10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf=296:<h1>Graph of Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.325 [debug] l:len=2

10:45:07.325 [debug] l:buf=96:<h1>Graph of Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.325 [debug] l:len=29

10:45:07.325 [debug] l:buf=6:<h1>Graph of Notes</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf empty

10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf=265:<h1>Async</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.325 [debug] l:len=2

10:45:07.325 [debug] l:buf=65:<h1>Async</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.325 [debug] l:len=26

10:45:07.325 [debug] l:buf=5:<h1>Async</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
</ul>


10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf empty

10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf=310:<p>Software developers as an immune system</p>
<p>Sometimes you need surgery, sometimes you need a band aid.</p>
<p>Small fixes are good but sometimes we need intervention</p>
<ul>
<li><a href="http://localhost:5000/software-quality" rel="noopener noreferrer">Software quality</a></li>
</ul>
<p>#anecdotes</p>


10:45:07.325 [debug] l:len=3

10:45:07.325 [debug] l:buf=10:<p>Software developers as an immune system</p>
<p>Sometimes you need surgery, sometimes you need a band aid.</p>
<p>Small fixes are good but sometimes we need intervention</p>
<ul>
<li><a href="http://localhost:5000/software-quality" rel="noopener noreferrer">Software quality</a></li>
</ul>
<p>#anecdotes</p>


10:45:07.325 [debug] l:len=31

10:45:07.325 [debug] l:buf=0:<p>Software developers as an immune system</p>
<p>Sometimes you need surgery, sometimes you need a band aid.</p>
<p>Small fixes are good but sometimes we need intervention</p>
<ul>
<li><a href="http://localhost:5000/software-quality" rel="noopener noreferrer">Software quality</a></li>
</ul>
<p>#anecdotes</p>


10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf empty

10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf=909:<h1>Blog--Software Estimation in Agile</h1>
<p>ref: <a href="https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management" rel="noopener noreferrer">https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management</a></p>
<p>This is an intersting post by Toptal which states with this picture that <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> is about <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ing things. Which is interesting, I guess it is at a small level.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-21.png" rel="noopener noreferrer">Pasted image 21</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also weirdly enough they also suggest a preposal... smells like a <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a> doesn't it?</p>


10:45:07.325 [debug] l:len=9

10:45:07.325 [debug] l:buf=09:<h1>Blog--Software Estimation in Agile</h1>
<p>ref: <a href="https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management" rel="noopener noreferrer">https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management</a></p>
<p>This is an intersting post by Toptal which states with this picture that <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> is about <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ing things. Which is interesting, I guess it is at a small level.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-21.png" rel="noopener noreferrer">Pasted image 21</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also weirdly enough they also suggest a preposal... smells like a <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a> doesn't it?</p>


10:45:07.325 [debug] l:len=90

10:45:07.325 [debug] l:buf=9:<h1>Blog--Software Estimation in Agile</h1>
<p>ref: <a href="https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management" rel="noopener noreferrer">https://www.toptal.com/agile/software-costs-estimation-in-agile-project-management</a></p>
<p>This is an intersting post by Toptal which states with this picture that <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> is about <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a>ing things. Which is interesting, I guess it is at a small level.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-21.png" rel="noopener noreferrer">Pasted image 21</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also weirdly enough they also suggest a preposal... smells like a <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a> doesn't it?</p>


10:45:07.325 [debug] l:len=

10:45:07.325 [debug] l:buf empty

10:45:07.326 [debug] l:len=

10:45:07.326 [debug] l:buf=4256:<h1>Presentation, why Slack SUCKS for remote work</h1>
<h3>I didn't want to talk about Slack... but I must</h3>
<hr>
<h2>I can no longer ignore the problems with it.</h2>
<p>not that I've tried much...</p>
<hr>
<h1>Slack sucks for Remote work</h1>
<p>There... I said it.</p>
<hr>
<p>Why is this?</p>
<p>Because it wasn't built for it.</p>
<hr>
Slack was built to remotely tap people on the shoulder
<p>it's a, "Joe isn't sitting at his desk" problem.</p>
<p>Like when you're at home, enjoying your family.</p>
<hr>
<p>Well if it sucks so much... why do people use it?</p>
<hr>
<p>Simple, it's better than email.</p>
<hr>
<p>Email sucks for the following reasons:</p>
<hr>
<h3>1) Email is FILLED with "spam"</h3>
<p>newsletters, app engagement, marketing). 99% of email clients do nothing to stop this.</p>
<hr>
<h3>2) Email isn't transparent</h3>
<p>meaning the only way to get information is to have people send it to you. This means a lot of silos.</p>
<hr>
<h3>3) Dear listener, Email caused people to be overly formal, Sincerely Gage.</h3>
<p>People started noticing problems with it...</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060038.png" rel="noopener noreferrer">Pasted image 20200923060038</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<blockquote>
<p>I’m finding that “always on” tendency to be a self-perpetuating feedback loop: the more everyone’s hanging out, the more conversations take place. The more conversations, the more everyone’s expected to participate. Lather, rinse, repeat.</p>
</blockquote>
<hr>
<p>99 inboxes, take one down pass it around...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060531.png" rel="noopener noreferrer">Pasted image 20200923060531</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>All day meetings...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060549.png" rel="noopener noreferrer">Pasted image 20200923060549</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><strong>supreme irony</strong>: While it has replaced the tyranny of email for many, it has unleashed a chaotic tyranny of its own.
<br></p>
<p>Posts and their responses pour in so fast that even</p>
<h3><strong>being away from Slack for a couple of hours</strong> can leave you <strong>feeling hopelessly behind</strong>.</h3>
<hr>
<h3>How fast you can glean information from this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062424.png" rel="noopener noreferrer">Pasted image 20200923062424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h3>What about this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062534.png" rel="noopener noreferrer">Pasted image 20200923062534</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<hr>
<h1>Instant is problem</h1>
<hr>
<p>People think it's all the rage...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062710.png" rel="noopener noreferrer">Pasted image 20200923062710</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Yet it leaves you feeling like this</p>
<hr>
<h2><a href="http://localhost:5000/1_ylhuzt9my2gmkat_ma8qaq.gif" rel="noopener noreferrer">1_YlhUzT9my2GmkaT_ma8qaQ</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Slack made the writer happy 😌</p>
<p>Now you can get answers <em>sooo much faster!</em></p>
<hr>
<p>But... the reader far less 🥵</p>
<p>Now you have to answer <em>soo much faster!</em></p>
<hr>
<h1>The Solution: An App that supports <em>real</em> threaded conversations</h1>
<hr>
<p>Slack threads are better than nothing...</p>
<hr>
<p>But they don't solve the real problem.</p>
<blockquote>
<p>We need to be given us a space to fully discuss complex ideas and projects from start to finish
to give more meaningful feedback
to promote transparency in our decision-making
and to disconnect to do the deep work that we’re truly excited about.
<a href="http://localhost:5000/article--betting-against-slack" rel="noopener noreferrer">Article--Betting Against Slack</a></p>
</blockquote>


10:45:07.326 [debug] l:len=4

10:45:07.326 [debug] l:buf=256:<h1>Presentation, why Slack SUCKS for remote work</h1>
<h3>I didn't want to talk about Slack... but I must</h3>
<hr>
<h2>I can no longer ignore the problems with it.</h2>
<p>not that I've tried much...</p>
<hr>
<h1>Slack sucks for Remote work</h1>
<p>There... I said it.</p>
<hr>
<p>Why is this?</p>
<p>Because it wasn't built for it.</p>
<hr>
Slack was built to remotely tap people on the shoulder
<p>it's a, "Joe isn't sitting at his desk" problem.</p>
<p>Like when you're at home, enjoying your family.</p>
<hr>
<p>Well if it sucks so much... why do people use it?</p>
<hr>
<p>Simple, it's better than email.</p>
<hr>
<p>Email sucks for the following reasons:</p>
<hr>
<h3>1) Email is FILLED with "spam"</h3>
<p>newsletters, app engagement, marketing). 99% of email clients do nothing to stop this.</p>
<hr>
<h3>2) Email isn't transparent</h3>
<p>meaning the only way to get information is to have people send it to you. This means a lot of silos.</p>
<hr>
<h3>3) Dear listener, Email caused people to be overly formal, Sincerely Gage.</h3>
<p>People started noticing problems with it...</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060038.png" rel="noopener noreferrer">Pasted image 20200923060038</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<blockquote>
<p>I’m finding that “always on” tendency to be a self-perpetuating feedback loop: the more everyone’s hanging out, the more conversations take place. The more conversations, the more everyone’s expected to participate. Lather, rinse, repeat.</p>
</blockquote>
<hr>
<p>99 inboxes, take one down pass it around...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060531.png" rel="noopener noreferrer">Pasted image 20200923060531</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>All day meetings...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060549.png" rel="noopener noreferrer">Pasted image 20200923060549</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><strong>supreme irony</strong>: While it has replaced the tyranny of email for many, it has unleashed a chaotic tyranny of its own.
<br></p>
<p>Posts and their responses pour in so fast that even</p>
<h3><strong>being away from Slack for a couple of hours</strong> can leave you <strong>feeling hopelessly behind</strong>.</h3>
<hr>
<h3>How fast you can glean information from this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062424.png" rel="noopener noreferrer">Pasted image 20200923062424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h3>What about this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062534.png" rel="noopener noreferrer">Pasted image 20200923062534</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<hr>
<h1>Instant is problem</h1>
<hr>
<p>People think it's all the rage...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062710.png" rel="noopener noreferrer">Pasted image 20200923062710</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Yet it leaves you feeling like this</p>
<hr>
<h2><a href="http://localhost:5000/1_ylhuzt9my2gmkat_ma8qaq.gif" rel="noopener noreferrer">1_YlhUzT9my2GmkaT_ma8qaQ</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Slack made the writer happy 😌</p>
<p>Now you can get answers <em>sooo much faster!</em></p>
<hr>
<p>But... the reader far less 🥵</p>
<p>Now you have to answer <em>soo much faster!</em></p>
<hr>
<h1>The Solution: An App that supports <em>real</em> threaded conversations</h1>
<hr>
<p>Slack threads are better than nothing...</p>
<hr>
<p>But they don't solve the real problem.</p>
<blockquote>
<p>We need to be given us a space to fully discuss complex ideas and projects from start to finish
to give more meaningful feedback
to promote transparency in our decision-making
and to disconnect to do the deep work that we’re truly excited about.
<a href="http://localhost:5000/article--betting-against-slack" rel="noopener noreferrer">Article--Betting Against Slack</a></p>
</blockquote>


10:45:07.326 [debug] l:len=42

10:45:07.326 [debug] l:buf=56:<h1>Presentation, why Slack SUCKS for remote work</h1>
<h3>I didn't want to talk about Slack... but I must</h3>
<hr>
<h2>I can no longer ignore the problems with it.</h2>
<p>not that I've tried much...</p>
<hr>
<h1>Slack sucks for Remote work</h1>
<p>There... I said it.</p>
<hr>
<p>Why is this?</p>
<p>Because it wasn't built for it.</p>
<hr>
Slack was built to remotely tap people on the shoulder
<p>it's a, "Joe isn't sitting at his desk" problem.</p>
<p>Like when you're at home, enjoying your family.</p>
<hr>
<p>Well if it sucks so much... why do people use it?</p>
<hr>
<p>Simple, it's better than email.</p>
<hr>
<p>Email sucks for the following reasons:</p>
<hr>
<h3>1) Email is FILLED with "spam"</h3>
<p>newsletters, app engagement, marketing). 99% of email clients do nothing to stop this.</p>
<hr>
<h3>2) Email isn't transparent</h3>
<p>meaning the only way to get information is to have people send it to you. This means a lot of silos.</p>
<hr>
<h3>3) Dear listener, Email caused people to be overly formal, Sincerely Gage.</h3>
<p>People started noticing problems with it...</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060038.png" rel="noopener noreferrer">Pasted image 20200923060038</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<blockquote>
<p>I’m finding that “always on” tendency to be a self-perpetuating feedback loop: the more everyone’s hanging out, the more conversations take place. The more conversations, the more everyone’s expected to participate. Lather, rinse, repeat.</p>
</blockquote>
<hr>
<p>99 inboxes, take one down pass it around...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060531.png" rel="noopener noreferrer">Pasted image 20200923060531</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>All day meetings...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060549.png" rel="noopener noreferrer">Pasted image 20200923060549</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><strong>supreme irony</strong>: While it has replaced the tyranny of email for many, it has unleashed a chaotic tyranny of its own.
<br></p>
<p>Posts and their responses pour in so fast that even</p>
<h3><strong>being away from Slack for a couple of hours</strong> can leave you <strong>feeling hopelessly behind</strong>.</h3>
<hr>
<h3>How fast you can glean information from this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062424.png" rel="noopener noreferrer">Pasted image 20200923062424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h3>What about this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062534.png" rel="noopener noreferrer">Pasted image 20200923062534</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<hr>
<h1>Instant is problem</h1>
<hr>
<p>People think it's all the rage...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062710.png" rel="noopener noreferrer">Pasted image 20200923062710</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Yet it leaves you feeling like this</p>
<hr>
<h2><a href="http://localhost:5000/1_ylhuzt9my2gmkat_ma8qaq.gif" rel="noopener noreferrer">1_YlhUzT9my2GmkaT_ma8qaQ</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Slack made the writer happy 😌</p>
<p>Now you can get answers <em>sooo much faster!</em></p>
<hr>
<p>But... the reader far less 🥵</p>
<p>Now you have to answer <em>soo much faster!</em></p>
<hr>
<h1>The Solution: An App that supports <em>real</em> threaded conversations</h1>
<hr>
<p>Slack threads are better than nothing...</p>
<hr>
<p>But they don't solve the real problem.</p>
<blockquote>
<p>We need to be given us a space to fully discuss complex ideas and projects from start to finish
to give more meaningful feedback
to promote transparency in our decision-making
and to disconnect to do the deep work that we’re truly excited about.
<a href="http://localhost:5000/article--betting-against-slack" rel="noopener noreferrer">Article--Betting Against Slack</a></p>
</blockquote>


10:45:07.326 [debug] l:len=425

10:45:07.326 [debug] l:buf=6:<h1>Presentation, why Slack SUCKS for remote work</h1>
<h3>I didn't want to talk about Slack... but I must</h3>
<hr>
<h2>I can no longer ignore the problems with it.</h2>
<p>not that I've tried much...</p>
<hr>
<h1>Slack sucks for Remote work</h1>
<p>There... I said it.</p>
<hr>
<p>Why is this?</p>
<p>Because it wasn't built for it.</p>
<hr>
Slack was built to remotely tap people on the shoulder
<p>it's a, "Joe isn't sitting at his desk" problem.</p>
<p>Like when you're at home, enjoying your family.</p>
<hr>
<p>Well if it sucks so much... why do people use it?</p>
<hr>
<p>Simple, it's better than email.</p>
<hr>
<p>Email sucks for the following reasons:</p>
<hr>
<h3>1) Email is FILLED with "spam"</h3>
<p>newsletters, app engagement, marketing). 99% of email clients do nothing to stop this.</p>
<hr>
<h3>2) Email isn't transparent</h3>
<p>meaning the only way to get information is to have people send it to you. This means a lot of silos.</p>
<hr>
<h3>3) Dear listener, Email caused people to be overly formal, Sincerely Gage.</h3>
<p>People started noticing problems with it...</p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060038.png" rel="noopener noreferrer">Pasted image 20200923060038</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<blockquote>
<p>I’m finding that “always on” tendency to be a self-perpetuating feedback loop: the more everyone’s hanging out, the more conversations take place. The more conversations, the more everyone’s expected to participate. Lather, rinse, repeat.</p>
</blockquote>
<hr>
<p>99 inboxes, take one down pass it around...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060531.png" rel="noopener noreferrer">Pasted image 20200923060531</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>All day meetings...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923060549.png" rel="noopener noreferrer">Pasted image 20200923060549</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><strong>supreme irony</strong>: While it has replaced the tyranny of email for many, it has unleashed a chaotic tyranny of its own.
<br></p>
<p>Posts and their responses pour in so fast that even</p>
<h3><strong>being away from Slack for a couple of hours</strong> can leave you <strong>feeling hopelessly behind</strong>.</h3>
<hr>
<h3>How fast you can glean information from this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062424.png" rel="noopener noreferrer">Pasted image 20200923062424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h3>What about this?</h3>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062534.png" rel="noopener noreferrer">Pasted image 20200923062534</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<hr>
<h1>Instant is problem</h1>
<hr>
<p>People think it's all the rage...</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923062710.png" rel="noopener noreferrer">Pasted image 20200923062710</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Yet it leaves you feeling like this</p>
<hr>
<h2><a href="http://localhost:5000/1_ylhuzt9my2gmkat_ma8qaq.gif" rel="noopener noreferrer">1_YlhUzT9my2GmkaT_ma8qaQ</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Slack made the writer happy 😌</p>
<p>Now you can get answers <em>sooo much faster!</em></p>
<hr>
<p>But... the reader far less 🥵</p>
<p>Now you have to answer <em>soo much faster!</em></p>
<hr>
<h1>The Solution: An App that supports <em>real</em> threaded conversations</h1>
<hr>
<p>Slack threads are better than nothing...</p>
<hr>
<p>But they don't solve the real problem.</p>
<blockquote>
<p>We need to be given us a space to fully discuss complex ideas and projects from start to finish
to give more meaningful feedback
to promote transparency in our decision-making
and to disconnect to do the deep work that we’re truly excited about.
<a href="http://localhost:5000/article--betting-against-slack" rel="noopener noreferrer">Article--Betting Against Slack</a></p>
</blockquote>


10:45:07.326 [debug] l:len=

10:45:07.326 [debug] l:buf empty

10:45:07.326 [debug] l:len=

10:45:07.326 [debug] l:buf=293:<h1>WP on Attention Residue</h1>
<p><a href="https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html" rel="noopener noreferrer">https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html</a></p>
<p><a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a></p>


10:45:07.326 [debug] l:len=2

10:45:07.326 [debug] l:buf=93:<h1>WP on Attention Residue</h1>
<p><a href="https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html" rel="noopener noreferrer">https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html</a></p>
<p><a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a></p>


10:45:07.326 [debug] l:len=29

10:45:07.326 [debug] l:buf=3:<h1>WP on Attention Residue</h1>
<p><a href="https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html" rel="noopener noreferrer">https://ideas.repec.org/a/eee/jobhdp/v109y2009i2p168-181.html</a></p>
<p><a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a></p>


10:45:07.326 [debug] l:len=

10:45:07.326 [debug] l:buf empty

10:45:07.326 [debug] l:len=

10:45:07.326 [debug] l:buf=332:<h1>Murphy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.326 [debug] l:len=3

10:45:07.327 [debug] l:buf=32:<h1>Murphy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.327 [debug] l:len=33

10:45:07.327 [debug] l:buf=2:<h1>Murphy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
</ul>


10:45:07.327 [debug] l:len=

10:45:07.327 [debug] l:buf empty

10:45:07.327 [debug] l:len=

10:45:07.327 [debug] l:buf=1254:<h1>The Toxic World of Self Help: Hustle Culture, Toxic Positivity, Addiction, and Fake Gurus.</h1>
<p><a href="https://www.youtube.com/watch?v=dmLTLkCBSN8" rel="noopener noreferrer">https://www.youtube.com/watch?v=dmLTLkCBSN8</a></p>
<p><a href="http://localhost:5000/toxic-positivity" rel="noopener noreferrer">toxic positivity</a>, <a href="http://localhost:5000/self-help" rel="noopener noreferrer">self help</a> <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a>, <a href="http://localhost:5000/fake-gurus" rel="noopener noreferrer">fake gurus</a>, and <a href="http://localhost:5000/hustle" rel="noopener noreferrer">hustle</a> culture.</p>
<p>The main ideas in this video is that many Self-help books are just <a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a> trying to get a <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> hit, but not actually helping you at all.</p>
<p>AKA: the <a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
</ul>


10:45:07.327 [debug] l:len=1

10:45:07.327 [debug] l:buf=254:<h1>The Toxic World of Self Help: Hustle Culture, Toxic Positivity, Addiction, and Fake Gurus.</h1>
<p><a href="https://www.youtube.com/watch?v=dmLTLkCBSN8" rel="noopener noreferrer">https://www.youtube.com/watch?v=dmLTLkCBSN8</a></p>
<p><a href="http://localhost:5000/toxic-positivity" rel="noopener noreferrer">toxic positivity</a>, <a href="http://localhost:5000/self-help" rel="noopener noreferrer">self help</a> <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a>, <a href="http://localhost:5000/fake-gurus" rel="noopener noreferrer">fake gurus</a>, and <a href="http://localhost:5000/hustle" rel="noopener noreferrer">hustle</a> culture.</p>
<p>The main ideas in this video is that many Self-help books are just <a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a> trying to get a <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> hit, but not actually helping you at all.</p>
<p>AKA: the <a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
</ul>


10:45:07.327 [debug] l:len=12

10:45:07.327 [debug] l:buf=54:<h1>The Toxic World of Self Help: Hustle Culture, Toxic Positivity, Addiction, and Fake Gurus.</h1>
<p><a href="https://www.youtube.com/watch?v=dmLTLkCBSN8" rel="noopener noreferrer">https://www.youtube.com/watch?v=dmLTLkCBSN8</a></p>
<p><a href="http://localhost:5000/toxic-positivity" rel="noopener noreferrer">toxic positivity</a>, <a href="http://localhost:5000/self-help" rel="noopener noreferrer">self help</a> <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a>, <a href="http://localhost:5000/fake-gurus" rel="noopener noreferrer">fake gurus</a>, and <a href="http://localhost:5000/hustle" rel="noopener noreferrer">hustle</a> culture.</p>
<p>The main ideas in this video is that many Self-help books are just <a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a> trying to get a <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> hit, but not actually helping you at all.</p>
<p>AKA: the <a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
</ul>


10:45:07.327 [debug] l:len=125

10:45:07.327 [debug] l:buf=4:<h1>The Toxic World of Self Help: Hustle Culture, Toxic Positivity, Addiction, and Fake Gurus.</h1>
<p><a href="https://www.youtube.com/watch?v=dmLTLkCBSN8" rel="noopener noreferrer">https://www.youtube.com/watch?v=dmLTLkCBSN8</a></p>
<p><a href="http://localhost:5000/toxic-positivity" rel="noopener noreferrer">toxic positivity</a>, <a href="http://localhost:5000/self-help" rel="noopener noreferrer">self help</a> <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a>, <a href="http://localhost:5000/fake-gurus" rel="noopener noreferrer">fake gurus</a>, and <a href="http://localhost:5000/hustle" rel="noopener noreferrer">hustle</a> culture.</p>
<p>The main ideas in this video is that many Self-help books are just <a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a> trying to get a <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> hit, but not actually helping you at all.</p>
<p>AKA: the <a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
</ul>


10:45:07.327 [debug] l:len=

10:45:07.327 [debug] l:buf empty

10:45:07.327 [debug] l:len=

10:45:07.327 [debug] l:buf=1486:<h1>'easier to ask then find' problem</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, but also in many other contexts, it's often <strong>easier to ask a person for a piece of information than it is to look for it</strong>. Why is this a problem? Mostly because you're forcing the person to <a href="http://localhost:5000/context-switch" rel="noopener noreferrer">context switch</a> which causes them to break their concentration and prevents <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>While this is a problem in general when there's not enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction in design</a>, Slack makes this all the easier with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a>.</p>
<p>This can also happen in code when it's hasn't been properly <a href="http://localhost:5000/organization" rel="noopener noreferrer">organized</a> and needs <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.327 [debug] l:len=1

10:45:07.327 [debug] l:buf=486:<h1>'easier to ask then find' problem</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, but also in many other contexts, it's often <strong>easier to ask a person for a piece of information than it is to look for it</strong>. Why is this a problem? Mostly because you're forcing the person to <a href="http://localhost:5000/context-switch" rel="noopener noreferrer">context switch</a> which causes them to break their concentration and prevents <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>While this is a problem in general when there's not enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction in design</a>, Slack makes this all the easier with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a>.</p>
<p>This can also happen in code when it's hasn't been properly <a href="http://localhost:5000/organization" rel="noopener noreferrer">organized</a> and needs <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.327 [debug] l:len=14

10:45:07.327 [debug] l:buf=86:<h1>'easier to ask then find' problem</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, but also in many other contexts, it's often <strong>easier to ask a person for a piece of information than it is to look for it</strong>. Why is this a problem? Mostly because you're forcing the person to <a href="http://localhost:5000/context-switch" rel="noopener noreferrer">context switch</a> which causes them to break their concentration and prevents <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>While this is a problem in general when there's not enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction in design</a>, Slack makes this all the easier with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a>.</p>
<p>This can also happen in code when it's hasn't been properly <a href="http://localhost:5000/organization" rel="noopener noreferrer">organized</a> and needs <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.327 [debug] l:len=148

10:45:07.327 [debug] l:buf=6:<h1>'easier to ask then find' problem</h1>
<p>In <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, but also in many other contexts, it's often <strong>easier to ask a person for a piece of information than it is to look for it</strong>. Why is this a problem? Mostly because you're forcing the person to <a href="http://localhost:5000/context-switch" rel="noopener noreferrer">context switch</a> which causes them to break their concentration and prevents <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>.</p>
<p>While this is a problem in general when there's not enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction in design</a>, Slack makes this all the easier with <a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a>.</p>
<p>This can also happen in code when it's hasn't been properly <a href="http://localhost:5000/organization" rel="noopener noreferrer">organized</a> and needs <a href="http://localhost:5000/refactoring" rel="noopener noreferrer">Refactoring</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.327 [debug] l:len=

10:45:07.327 [debug] l:buf empty

10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf=114:<p>I got a feeling that's worth dying for</p>
<p>We might as well</p>
<p>Burn it all</p>
<p>Let's light it up</p>


10:45:07.328 [debug] l:len=1

10:45:07.328 [debug] l:buf=14:<p>I got a feeling that's worth dying for</p>
<p>We might as well</p>
<p>Burn it all</p>
<p>Let's light it up</p>


10:45:07.328 [debug] l:len=11

10:45:07.328 [debug] l:buf=4:<p>I got a feeling that's worth dying for</p>
<p>We might as well</p>
<p>Burn it all</p>
<p>Let's light it up</p>


10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf empty

10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf=271:<h1>Divergent thought I'd the same as the hackers mindset</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a> is the same as <a href="http://localhost:5000/the-hackers-mindset" rel="noopener noreferrer">the hackers mindset</a></p>


10:45:07.328 [debug] l:len=2

10:45:07.328 [debug] l:buf=71:<h1>Divergent thought I'd the same as the hackers mindset</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a> is the same as <a href="http://localhost:5000/the-hackers-mindset" rel="noopener noreferrer">the hackers mindset</a></p>


10:45:07.328 [debug] l:len=27

10:45:07.328 [debug] l:buf=1:<h1>Divergent thought I'd the same as the hackers mindset</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a> is the same as <a href="http://localhost:5000/the-hackers-mindset" rel="noopener noreferrer">the hackers mindset</a></p>


10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf empty

10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf=1809:<h1>small amount of categories that are infinitely deep</h1>
<p>To help visualize this you can see how slack is really simple categories with very deep amount of messages.</p>
<p><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a>
<a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.328 [debug] l:len=1

10:45:07.328 [debug] l:buf=809:<h1>small amount of categories that are infinitely deep</h1>
<p>To help visualize this you can see how slack is really simple categories with very deep amount of messages.</p>
<p><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a>
<a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.328 [debug] l:len=18

10:45:07.328 [debug] l:buf=09:<h1>small amount of categories that are infinitely deep</h1>
<p>To help visualize this you can see how slack is really simple categories with very deep amount of messages.</p>
<p><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a>
<a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.328 [debug] l:len=180

10:45:07.328 [debug] l:buf=9:<h1>small amount of categories that are infinitely deep</h1>
<p>To help visualize this you can see how slack is really simple categories with very deep amount of messages.</p>
<p><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a>
<a href="http://localhost:5000/slack-like-a-meandering-walk-through-the-woods" rel="noopener noreferrer">Slack like a meandering walk through the woods</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.328 [debug] l:len=

10:45:07.328 [debug] l:buf empty

10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf=1125:<h1>Setting boundaries in software is a two way street</h1>
<blockquote>
<p>I understand that it’s my responsibility to set boundaries in all my relationships, but every software product comes with its own bias towards supporting some human tendencies over others, and I don’t think it’s arguable that you skew pretty hard towards “always on” over “dip in every so often”.</p>
</blockquote>
<p><a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">Software as a relationship</a> is interesting because it shows how things are a two way street. If a software pushes really hard you usually give in until you get so fed up that you break up :broken_heart:.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.329 [debug] l:len=1

10:45:07.329 [debug] l:buf=125:<h1>Setting boundaries in software is a two way street</h1>
<blockquote>
<p>I understand that it’s my responsibility to set boundaries in all my relationships, but every software product comes with its own bias towards supporting some human tendencies over others, and I don’t think it’s arguable that you skew pretty hard towards “always on” over “dip in every so often”.</p>
</blockquote>
<p><a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">Software as a relationship</a> is interesting because it shows how things are a two way street. If a software pushes really hard you usually give in until you get so fed up that you break up :broken_heart:.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.329 [debug] l:len=11

10:45:07.329 [debug] l:buf=25:<h1>Setting boundaries in software is a two way street</h1>
<blockquote>
<p>I understand that it’s my responsibility to set boundaries in all my relationships, but every software product comes with its own bias towards supporting some human tendencies over others, and I don’t think it’s arguable that you skew pretty hard towards “always on” over “dip in every so often”.</p>
</blockquote>
<p><a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">Software as a relationship</a> is interesting because it shows how things are a two way street. If a software pushes really hard you usually give in until you get so fed up that you break up :broken_heart:.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.329 [debug] l:len=112

10:45:07.329 [debug] l:buf=5:<h1>Setting boundaries in software is a two way street</h1>
<blockquote>
<p>I understand that it’s my responsibility to set boundaries in all my relationships, but every software product comes with its own bias towards supporting some human tendencies over others, and I don’t think it’s arguable that you skew pretty hard towards “always on” over “dip in every so often”.</p>
</blockquote>
<p><a href="http://localhost:5000/software-as-a-relationship" rel="noopener noreferrer">Software as a relationship</a> is interesting because it shows how things are a two way street. If a software pushes really hard you usually give in until you get so fed up that you break up :broken_heart:.</p>
<p><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf empty

10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf=79:<h1>Unity</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.329 [debug] l:len=7

10:45:07.329 [debug] l:buf=9:<h1>Unity</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf empty

10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf=733:<h1>email</h1>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.329 [debug] l:len=7

10:45:07.329 [debug] l:buf=33:<h1>email</h1>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.329 [debug] l:len=73

10:45:07.329 [debug] l:buf=3:<h1>email</h1>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/hey!" rel="noopener noreferrer">HEY!</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf empty

10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf=451:<h1>Need theory to have questions</h1>
<p>I thought of you when I read this quote from "Demand-Side Sales 101: Stop Selling and Help Your Customers Make Progress" by Bob Moesta -</p>
<p>"Without theory, experience has no meaning. Without theory, one has no questions to ask. Hence, without theory, there is no learning.”"</p>
<p>Start reading this book for free: <a href="https://a.co/0bpdJT5" rel="noopener noreferrer">https://a.co/0bpdJT5</a></p>


10:45:07.329 [debug] l:len=4

10:45:07.329 [debug] l:buf=51:<h1>Need theory to have questions</h1>
<p>I thought of you when I read this quote from "Demand-Side Sales 101: Stop Selling and Help Your Customers Make Progress" by Bob Moesta -</p>
<p>"Without theory, experience has no meaning. Without theory, one has no questions to ask. Hence, without theory, there is no learning.”"</p>
<p>Start reading this book for free: <a href="https://a.co/0bpdJT5" rel="noopener noreferrer">https://a.co/0bpdJT5</a></p>


10:45:07.329 [debug] l:len=45

10:45:07.329 [debug] l:buf=1:<h1>Need theory to have questions</h1>
<p>I thought of you when I read this quote from "Demand-Side Sales 101: Stop Selling and Help Your Customers Make Progress" by Bob Moesta -</p>
<p>"Without theory, experience has no meaning. Without theory, one has no questions to ask. Hence, without theory, there is no learning.”"</p>
<p>Start reading this book for free: <a href="https://a.co/0bpdJT5" rel="noopener noreferrer">https://a.co/0bpdJT5</a></p>


10:45:07.329 [debug] l:len=

10:45:07.329 [debug] l:buf empty

10:45:07.329 [debug] l:len=

10:45:07.330 [debug] l:buf=838:<h1>Basecamp's chat sucks</h1>
<p>Basecamp's chat has far less features than Slacks, but this is by design. Basecamp is trying to discourage you from using group chat because they know <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">the dangers of group chat</a>. They know because of it's high notification priority you'll resort to it.</p>
<p>This is another example of <a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.330 [debug] l:len=8

10:45:07.330 [debug] l:buf=38:<h1>Basecamp's chat sucks</h1>
<p>Basecamp's chat has far less features than Slacks, but this is by design. Basecamp is trying to discourage you from using group chat because they know <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">the dangers of group chat</a>. They know because of it's high notification priority you'll resort to it.</p>
<p>This is another example of <a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.330 [debug] l:len=83

10:45:07.330 [debug] l:buf=8:<h1>Basecamp's chat sucks</h1>
<p>Basecamp's chat has far less features than Slacks, but this is by design. Basecamp is trying to discourage you from using group chat because they know <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">the dangers of group chat</a>. They know because of it's high notification priority you'll resort to it.</p>
<p>This is another example of <a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/people-crippling-group-chat" rel="noopener noreferrer">People Crippling Group Chat</a></li>
</ul>


10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf empty

10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf=1825:<h1>Doist Values</h1>
<p>ref: <a href="https://doist.com/about-us" rel="noopener noreferrer">https://doist.com/about-us</a></p>
<h2>1. Independence</h2>
<blockquote>
<p>Others can trust that you’ll deliver on time and your teammates don’t need to worry about you keeping your word. You can easily manage your work and remain accountable with little or no direction.</p>
</blockquote>
<h2>2. Mastery</h2>
<blockquote>
<p>You love what you do and care deeply about the quality of your work, down to the smallest details. You’re continuously learning and always pushing yourself to the limits of your ability. You’re never satisfied with the status-quo.</p>
</blockquote>
<h2>3. Communication</h2>
<blockquote>
<p>Your communication is clear, concise, and engaging whether you’re explaining a complex idea or providing feedback to a teammate. You keep others in the loop and never go radio silent. You’re culturally and socially aware and can appropriately navigate different types of social interactions.</p>
</blockquote>
<h2>4. Ambition &amp; Balance</h2>
<blockquote>
<p>You aspire to put a dent in the universe. To do this, you set high standards for yourself and those around you. The time you spend on work isn’t measured by quantity, but by quality.</p>
</blockquote>
<h2>5. Impact</h2>
<blockquote>
<p>You’re able to take a bird’s eye view to pinpoint and then solve issues that have a high impact on our customers, our team, and our company. You’re committed to the health and success of both your teammates and Doist as a company.</p>
</blockquote>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/doist" rel="noopener noreferrer">Doist</a></li>
</ul>


10:45:07.330 [debug] l:len=1

10:45:07.330 [debug] l:buf=825:<h1>Doist Values</h1>
<p>ref: <a href="https://doist.com/about-us" rel="noopener noreferrer">https://doist.com/about-us</a></p>
<h2>1. Independence</h2>
<blockquote>
<p>Others can trust that you’ll deliver on time and your teammates don’t need to worry about you keeping your word. You can easily manage your work and remain accountable with little or no direction.</p>
</blockquote>
<h2>2. Mastery</h2>
<blockquote>
<p>You love what you do and care deeply about the quality of your work, down to the smallest details. You’re continuously learning and always pushing yourself to the limits of your ability. You’re never satisfied with the status-quo.</p>
</blockquote>
<h2>3. Communication</h2>
<blockquote>
<p>Your communication is clear, concise, and engaging whether you’re explaining a complex idea or providing feedback to a teammate. You keep others in the loop and never go radio silent. You’re culturally and socially aware and can appropriately navigate different types of social interactions.</p>
</blockquote>
<h2>4. Ambition &amp; Balance</h2>
<blockquote>
<p>You aspire to put a dent in the universe. To do this, you set high standards for yourself and those around you. The time you spend on work isn’t measured by quantity, but by quality.</p>
</blockquote>
<h2>5. Impact</h2>
<blockquote>
<p>You’re able to take a bird’s eye view to pinpoint and then solve issues that have a high impact on our customers, our team, and our company. You’re committed to the health and success of both your teammates and Doist as a company.</p>
</blockquote>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/doist" rel="noopener noreferrer">Doist</a></li>
</ul>


10:45:07.330 [debug] l:len=18

10:45:07.330 [debug] l:buf=25:<h1>Doist Values</h1>
<p>ref: <a href="https://doist.com/about-us" rel="noopener noreferrer">https://doist.com/about-us</a></p>
<h2>1. Independence</h2>
<blockquote>
<p>Others can trust that you’ll deliver on time and your teammates don’t need to worry about you keeping your word. You can easily manage your work and remain accountable with little or no direction.</p>
</blockquote>
<h2>2. Mastery</h2>
<blockquote>
<p>You love what you do and care deeply about the quality of your work, down to the smallest details. You’re continuously learning and always pushing yourself to the limits of your ability. You’re never satisfied with the status-quo.</p>
</blockquote>
<h2>3. Communication</h2>
<blockquote>
<p>Your communication is clear, concise, and engaging whether you’re explaining a complex idea or providing feedback to a teammate. You keep others in the loop and never go radio silent. You’re culturally and socially aware and can appropriately navigate different types of social interactions.</p>
</blockquote>
<h2>4. Ambition &amp; Balance</h2>
<blockquote>
<p>You aspire to put a dent in the universe. To do this, you set high standards for yourself and those around you. The time you spend on work isn’t measured by quantity, but by quality.</p>
</blockquote>
<h2>5. Impact</h2>
<blockquote>
<p>You’re able to take a bird’s eye view to pinpoint and then solve issues that have a high impact on our customers, our team, and our company. You’re committed to the health and success of both your teammates and Doist as a company.</p>
</blockquote>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/doist" rel="noopener noreferrer">Doist</a></li>
</ul>


10:45:07.330 [debug] l:len=182

10:45:07.330 [debug] l:buf=5:<h1>Doist Values</h1>
<p>ref: <a href="https://doist.com/about-us" rel="noopener noreferrer">https://doist.com/about-us</a></p>
<h2>1. Independence</h2>
<blockquote>
<p>Others can trust that you’ll deliver on time and your teammates don’t need to worry about you keeping your word. You can easily manage your work and remain accountable with little or no direction.</p>
</blockquote>
<h2>2. Mastery</h2>
<blockquote>
<p>You love what you do and care deeply about the quality of your work, down to the smallest details. You’re continuously learning and always pushing yourself to the limits of your ability. You’re never satisfied with the status-quo.</p>
</blockquote>
<h2>3. Communication</h2>
<blockquote>
<p>Your communication is clear, concise, and engaging whether you’re explaining a complex idea or providing feedback to a teammate. You keep others in the loop and never go radio silent. You’re culturally and socially aware and can appropriately navigate different types of social interactions.</p>
</blockquote>
<h2>4. Ambition &amp; Balance</h2>
<blockquote>
<p>You aspire to put a dent in the universe. To do this, you set high standards for yourself and those around you. The time you spend on work isn’t measured by quantity, but by quality.</p>
</blockquote>
<h2>5. Impact</h2>
<blockquote>
<p>You’re able to take a bird’s eye view to pinpoint and then solve issues that have a high impact on our customers, our team, and our company. You’re committed to the health and success of both your teammates and Doist as a company.</p>
</blockquote>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/doist" rel="noopener noreferrer">Doist</a></li>
</ul>


10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf empty

10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf=2176:<h1>Why are you doing Event Sourcing in Mind Flayer? Wouldn't it be faster to just use Postgres like all the other apps?</h1>
<p>I think using Postgres as our main datastore would have been fine for the short term but wouldn't be scalable in the long term.</p>
<p>Mind Flayer is the API for webchat which gets loaded on people's websites thousands of times every single day. <strong>All it would take is one huge customer using it for it to skyrocket in it's traffic</strong>. Postgres is a great general purpose database but it would most likely not be able to match the read speeds we need in the long run.</p>
<p>So we have to cache the database.</p>
<p>But <strong>how do you do cache invalidation</strong>? When someone changes their bubble color to change they would expect it to happen instantly after they save right? Yet we don't want to be constantly polling the database to know if any configs changed.</p>
<p><strong>What if something is deleted</strong> from the database, how do you know that? <strong>There's no trace of the record left</strong>. How often do we search around and try to find things that no longer belong in the database?</p>
<p>We could just try to <strong>always remember to write to both places</strong>. However this is easily subverted by someone logging in and changing something in the database directly (usually in development but not always 😉) Now they're super confused why their value isn't showing up in the GraphQL API. They drop and reseed their database, IT'S STILL THERE 😭!</p>
<p>Basically what I'm saying is <strong>Mutable state is very hard to track</strong>.</p>
<p>So instead if use an <strong>Immutable log of what changed</strong> then it's easy to stream! All you have to do is start from the beginning and go to the present. Keep track of every event you've seen.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.330 [debug] l:len=2

10:45:07.330 [debug] l:buf=176:<h1>Why are you doing Event Sourcing in Mind Flayer? Wouldn't it be faster to just use Postgres like all the other apps?</h1>
<p>I think using Postgres as our main datastore would have been fine for the short term but wouldn't be scalable in the long term.</p>
<p>Mind Flayer is the API for webchat which gets loaded on people's websites thousands of times every single day. <strong>All it would take is one huge customer using it for it to skyrocket in it's traffic</strong>. Postgres is a great general purpose database but it would most likely not be able to match the read speeds we need in the long run.</p>
<p>So we have to cache the database.</p>
<p>But <strong>how do you do cache invalidation</strong>? When someone changes their bubble color to change they would expect it to happen instantly after they save right? Yet we don't want to be constantly polling the database to know if any configs changed.</p>
<p><strong>What if something is deleted</strong> from the database, how do you know that? <strong>There's no trace of the record left</strong>. How often do we search around and try to find things that no longer belong in the database?</p>
<p>We could just try to <strong>always remember to write to both places</strong>. However this is easily subverted by someone logging in and changing something in the database directly (usually in development but not always 😉) Now they're super confused why their value isn't showing up in the GraphQL API. They drop and reseed their database, IT'S STILL THERE 😭!</p>
<p>Basically what I'm saying is <strong>Mutable state is very hard to track</strong>.</p>
<p>So instead if use an <strong>Immutable log of what changed</strong> then it's easy to stream! All you have to do is start from the beginning and go to the present. Keep track of every event you've seen.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.330 [debug] l:len=21

10:45:07.330 [debug] l:buf=76:<h1>Why are you doing Event Sourcing in Mind Flayer? Wouldn't it be faster to just use Postgres like all the other apps?</h1>
<p>I think using Postgres as our main datastore would have been fine for the short term but wouldn't be scalable in the long term.</p>
<p>Mind Flayer is the API for webchat which gets loaded on people's websites thousands of times every single day. <strong>All it would take is one huge customer using it for it to skyrocket in it's traffic</strong>. Postgres is a great general purpose database but it would most likely not be able to match the read speeds we need in the long run.</p>
<p>So we have to cache the database.</p>
<p>But <strong>how do you do cache invalidation</strong>? When someone changes their bubble color to change they would expect it to happen instantly after they save right? Yet we don't want to be constantly polling the database to know if any configs changed.</p>
<p><strong>What if something is deleted</strong> from the database, how do you know that? <strong>There's no trace of the record left</strong>. How often do we search around and try to find things that no longer belong in the database?</p>
<p>We could just try to <strong>always remember to write to both places</strong>. However this is easily subverted by someone logging in and changing something in the database directly (usually in development but not always 😉) Now they're super confused why their value isn't showing up in the GraphQL API. They drop and reseed their database, IT'S STILL THERE 😭!</p>
<p>Basically what I'm saying is <strong>Mutable state is very hard to track</strong>.</p>
<p>So instead if use an <strong>Immutable log of what changed</strong> then it's easy to stream! All you have to do is start from the beginning and go to the present. Keep track of every event you've seen.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.330 [debug] l:len=217

10:45:07.330 [debug] l:buf=6:<h1>Why are you doing Event Sourcing in Mind Flayer? Wouldn't it be faster to just use Postgres like all the other apps?</h1>
<p>I think using Postgres as our main datastore would have been fine for the short term but wouldn't be scalable in the long term.</p>
<p>Mind Flayer is the API for webchat which gets loaded on people's websites thousands of times every single day. <strong>All it would take is one huge customer using it for it to skyrocket in it's traffic</strong>. Postgres is a great general purpose database but it would most likely not be able to match the read speeds we need in the long run.</p>
<p>So we have to cache the database.</p>
<p>But <strong>how do you do cache invalidation</strong>? When someone changes their bubble color to change they would expect it to happen instantly after they save right? Yet we don't want to be constantly polling the database to know if any configs changed.</p>
<p><strong>What if something is deleted</strong> from the database, how do you know that? <strong>There's no trace of the record left</strong>. How often do we search around and try to find things that no longer belong in the database?</p>
<p>We could just try to <strong>always remember to write to both places</strong>. However this is easily subverted by someone logging in and changing something in the database directly (usually in development but not always 😉) Now they're super confused why their value isn't showing up in the GraphQL API. They drop and reseed their database, IT'S STILL THERE 😭!</p>
<p>Basically what I'm saying is <strong>Mutable state is very hard to track</strong>.</p>
<p>So instead if use an <strong>Immutable log of what changed</strong> then it's easy to stream! All you have to do is start from the beginning and go to the present. Keep track of every event you've seen.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">Event Sourcing</a></li>
</ul>


10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf empty

10:45:07.330 [debug] l:len=

10:45:07.330 [debug] l:buf=127:<p>Meetinghouse for Melissa
Supposedly...</p>
<p>Meetinghouse</p>
<p>10580 S 5060 W
SOUTH JORDAN, UTAH 84095
United States</p>


10:45:07.330 [debug] l:len=1

10:45:07.330 [debug] l:buf=27:<p>Meetinghouse for Melissa
Supposedly...</p>
<p>Meetinghouse</p>
<p>10580 S 5060 W
SOUTH JORDAN, UTAH 84095
United States</p>


10:45:07.330 [debug] l:len=12

10:45:07.331 [debug] l:buf=7:<p>Meetinghouse for Melissa
Supposedly...</p>
<p>Meetinghouse</p>
<p>10580 S 5060 W
SOUTH JORDAN, UTAH 84095
United States</p>


10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf empty

10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf=96:<h1>Pasted image 20201021134412</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.331 [debug] l:len=9

10:45:07.331 [debug] l:buf=6:<h1>Pasted image 20201021134412</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf empty

10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf=838:<h1>Youtube--This Note-Taking App is a Game Changer - Roam Research</h1>
<ul>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a> NOT Top down hierarchical like every other app.</li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li>Tangled web of ideas, or an ideas</li>
<li>Neurons you fire together wire together</li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>
<p>By <a href="http://localhost:5000/tomas-frank" rel="noopener noreferrer">Tomas Frank</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.331 [debug] l:len=8

10:45:07.331 [debug] l:buf=38:<h1>Youtube--This Note-Taking App is a Game Changer - Roam Research</h1>
<ul>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a> NOT Top down hierarchical like every other app.</li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li>Tangled web of ideas, or an ideas</li>
<li>Neurons you fire together wire together</li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>
<p>By <a href="http://localhost:5000/tomas-frank" rel="noopener noreferrer">Tomas Frank</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.331 [debug] l:len=83

10:45:07.331 [debug] l:buf=8:<h1>Youtube--This Note-Taking App is a Game Changer - Roam Research</h1>
<ul>
<li><a href="http://localhost:5000/associative-thought" rel="noopener noreferrer">Associative Thought</a> NOT Top down hierarchical like every other app.</li>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li>Tangled web of ideas, or an ideas</li>
<li>Neurons you fire together wire together</li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>
<p>By <a href="http://localhost:5000/tomas-frank" rel="noopener noreferrer">Tomas Frank</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf empty

10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf=282:<h1>Basecamp's work can wait feature</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.331 [debug] l:len=2

10:45:07.331 [debug] l:buf=82:<h1>Basecamp's work can wait feature</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.331 [debug] l:len=28

10:45:07.331 [debug] l:buf=2:<h1>Basecamp's work can wait feature</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf empty

10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf=298:<h1>make comments in context</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.331 [debug] l:len=2

10:45:07.331 [debug] l:buf=98:<h1>make comments in context</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.331 [debug] l:len=29

10:45:07.331 [debug] l:buf=8:<h1>make comments in context</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
</ul>


10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf empty

10:45:07.331 [debug] l:len=

10:45:07.331 [debug] l:buf=87:<h1>moonlandingwasfake</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.332 [debug] l:len=8

10:45:07.332 [debug] l:buf=7:<h1>moonlandingwasfake</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.332 [debug] l:len=

10:45:07.332 [debug] l:buf empty

10:45:07.332 [debug] l:len=

10:45:07.332 [debug] l:buf=1464:<h1>Guilt of Backlogs</h1>
<blockquote>
<p>It’s unbelievable how often the word “guilt” comes up when talking to people who do issue-based, reactive work.</p>
<p>There’s more work than time, the work comes from other people, and it’s hard to ignore it, delete it, or say ‘no.’</p>
<p>Long lists or backlogs aren’t inherently bad.</p>
</blockquote>
<blockquote>
<p>What makes them bad is the feeling of guilt when you see all these issues you couldn’t solve or fix, and you know there will never be time for them.</p>
</blockquote>
<p>~<a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> <a href="https://twitter.com/rjs/status/1298035153919307782" rel="noopener noreferrer">ref</a></p>
<p>There's always more time than work than time and backlogs constantly remind you of that. It's a large wall of constant dissatisfaction.</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a> <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
</ul>


10:45:07.332 [debug] l:len=1

10:45:07.332 [debug] l:buf=464:<h1>Guilt of Backlogs</h1>
<blockquote>
<p>It’s unbelievable how often the word “guilt” comes up when talking to people who do issue-based, reactive work.</p>
<p>There’s more work than time, the work comes from other people, and it’s hard to ignore it, delete it, or say ‘no.’</p>
<p>Long lists or backlogs aren’t inherently bad.</p>
</blockquote>
<blockquote>
<p>What makes them bad is the feeling of guilt when you see all these issues you couldn’t solve or fix, and you know there will never be time for them.</p>
</blockquote>
<p>~<a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> <a href="https://twitter.com/rjs/status/1298035153919307782" rel="noopener noreferrer">ref</a></p>
<p>There's always more time than work than time and backlogs constantly remind you of that. It's a large wall of constant dissatisfaction.</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a> <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
</ul>


10:45:07.332 [debug] l:len=14

10:45:07.332 [debug] l:buf=64:<h1>Guilt of Backlogs</h1>
<blockquote>
<p>It’s unbelievable how often the word “guilt” comes up when talking to people who do issue-based, reactive work.</p>
<p>There’s more work than time, the work comes from other people, and it’s hard to ignore it, delete it, or say ‘no.’</p>
<p>Long lists or backlogs aren’t inherently bad.</p>
</blockquote>
<blockquote>
<p>What makes them bad is the feeling of guilt when you see all these issues you couldn’t solve or fix, and you know there will never be time for them.</p>
</blockquote>
<p>~<a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> <a href="https://twitter.com/rjs/status/1298035153919307782" rel="noopener noreferrer">ref</a></p>
<p>There's always more time than work than time and backlogs constantly remind you of that. It's a large wall of constant dissatisfaction.</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a> <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
</ul>


10:45:07.332 [debug] l:len=146

10:45:07.332 [debug] l:buf=4:<h1>Guilt of Backlogs</h1>
<blockquote>
<p>It’s unbelievable how often the word “guilt” comes up when talking to people who do issue-based, reactive work.</p>
<p>There’s more work than time, the work comes from other people, and it’s hard to ignore it, delete it, or say ‘no.’</p>
<p>Long lists or backlogs aren’t inherently bad.</p>
</blockquote>
<blockquote>
<p>What makes them bad is the feeling of guilt when you see all these issues you couldn’t solve or fix, and you know there will never be time for them.</p>
</blockquote>
<p>~<a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> <a href="https://twitter.com/rjs/status/1298035153919307782" rel="noopener noreferrer">ref</a></p>
<p>There's always more time than work than time and backlogs constantly remind you of that. It's a large wall of constant dissatisfaction.</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a> <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a> <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
</ul>


10:45:07.332 [debug] l:len=

10:45:07.332 [debug] l:buf empty

10:45:07.332 [debug] l:len=

10:45:07.332 [debug] l:buf=4622:<h1>The Argument for <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>Elm is a whole new language, it seems easier to just add redux</h2>
<p>Elm adds far more value than redux such as a type system and no runtime exceptions not to mention is a lot easier to understand in elm because
ility is enforced for all data structures.</p>
<h2>how can we trust elm if it isn't stable yet?</h2>
<p>Although Evan has made breaking changes to the language they have been pretty minimal and have always been large improvements. This essentially means that every so often you get an upgrade that will help your codebases quality improve. Also much of that upgrade can be handled by elm-format.</p>
<p>Elm has been around for about 5 years which is far more stable than the JS libraries you would use to replace it</p>
<h2>You have to use ports to interact with JavaScript which has a lot of boiler-plate</h2>
<p>That's the price you pay for no runtime exceptions and immutability. The elm package ecosystem is very good for it's age. Most of the common stuff would like to do like http, web sockets and interacting with the navigation bar is there.</p>
<h2>Wouldn't it be hard to train people on?</h2>
<p>Elm is perhaps one of the easiest and most friendly languages to learn. The language itself is <a href="http://www.elmbark.com/2016/03/16/mainstream-elm-user-focused-design" rel="noopener noreferrer"><em>designed</em> to be easy to learn</a> and <a href="http://elm-lang.org/blog/compilers-as-assistants" rel="noopener noreferrer">helpful to new people</a>.</p>
<p>It has basically no cruft. In fact the author Evan has basically been systematically getting rid of the dark corners of the language. The language has literally gotten smaller as time goes by. Can't say that for JavaScript can you?</p>
<p>Not to mention think the amounts of code takes to replace it:</p>
<ul>
<li>React</li>
<li>Redux</li>
<li>Babel</li>
<li>Web Pack</li>
<li>Flow</li>
<li>Immutable.js</li>
<li>lodash</li>
<li>time travel debugger for redux?</li>
<li>maybe even Sass</li>
<li>Libraries to generate SVGs</li>
<li>momment (dates library)</li>
</ul>
<p>That is far harder than one language and a few core libraries.</p>
<p>Also the community is full of very friendly people and help us never far away. Not to mention a whole series of videos for free on egghead.io</p>
<h2>What about hiring?</h2>
<p>We use Elixir which has a small hiring pool and it's only helped us. People want to work in Elm and would probably would attract more rather than less.  NoRedInk said that Elm had drastically improved the amount of people that apply in the Q and A at elm conf.</p>
<p>Not to mention Elm programmers (Elmos?) Are the kinds of people you want to hire: compassionate and smart.</p>
<p>Also think of the flip side, you'll have to hire less people because the ones you have can be more productive plus you'll have less leaving because the front end makes them happy than sob into their pillow.</p>
<p>Also see: <a href="http://paulgraham.com/pypar.html" rel="noopener noreferrer">http://paulgraham.com/pypar.html</a></p>
<h2>Is it worth it? What do I gain?</h2>
<p>You gain:</p>
<ul>
<li>Far better Reliability</li>
<li><strong>No runtime exceptions!!!</strong> All edge cases must be handled.</li>
<li>No problems with null / undefined / nan (Maybe has your back)</li>
<li>Refactoring without fear of forgetting to find all the usages</li>
<li>Enforced Symantec versioning. Meaning people can't break the public API without bumping the major version. Not to mention you can diff the changes</li>
<li>Less tests by making things impossible via the type system</li>
<li>Faster / Leaner</li>
<li>Faster rendering</li>
<li>Less code</li>
<li>Less complied code</li>
<li>Easier to understand</li>
<li>less fancy programming language features that inevitably gets into the codebase</li>
<li>simpler language overall</li>
<li>Immutability everywhere (Immutable.js gets confusing and goes against everying else in JavaScript)</li>
<li>New features</li>
<li>pipes! (|&gt;)</li>
<li>Option types to help model different scenarios like loading states or other things</li>
<li>A good easy to understand module system like Elixir</li>
<li>Tooling like auto complete and looking up docs inline and a <code>go fmt</code> solution</li>
<li>Record types (enforce fields being there)</li>
<li>More Beginner Friendly</li>
<li>Friendly error messages</li>
<li>Better designed browser APIs</li>
<li>More like Elixir</li>
</ul>
<p>I feel the pros far outweigh the cons</p>
<h2>Keywords</h2>
<ul>
<li>[[Other/Old Notes/Simplenote/Elm]]</li>
</ul>


10:45:07.332 [debug] l:len=4

10:45:07.333 [debug] l:buf=622:<h1>The Argument for <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>Elm is a whole new language, it seems easier to just add redux</h2>
<p>Elm adds far more value than redux such as a type system and no runtime exceptions not to mention is a lot easier to understand in elm because
ility is enforced for all data structures.</p>
<h2>how can we trust elm if it isn't stable yet?</h2>
<p>Although Evan has made breaking changes to the language they have been pretty minimal and have always been large improvements. This essentially means that every so often you get an upgrade that will help your codebases quality improve. Also much of that upgrade can be handled by elm-format.</p>
<p>Elm has been around for about 5 years which is far more stable than the JS libraries you would use to replace it</p>
<h2>You have to use ports to interact with JavaScript which has a lot of boiler-plate</h2>
<p>That's the price you pay for no runtime exceptions and immutability. The elm package ecosystem is very good for it's age. Most of the common stuff would like to do like http, web sockets and interacting with the navigation bar is there.</p>
<h2>Wouldn't it be hard to train people on?</h2>
<p>Elm is perhaps one of the easiest and most friendly languages to learn. The language itself is <a href="http://www.elmbark.com/2016/03/16/mainstream-elm-user-focused-design" rel="noopener noreferrer"><em>designed</em> to be easy to learn</a> and <a href="http://elm-lang.org/blog/compilers-as-assistants" rel="noopener noreferrer">helpful to new people</a>.</p>
<p>It has basically no cruft. In fact the author Evan has basically been systematically getting rid of the dark corners of the language. The language has literally gotten smaller as time goes by. Can't say that for JavaScript can you?</p>
<p>Not to mention think the amounts of code takes to replace it:</p>
<ul>
<li>React</li>
<li>Redux</li>
<li>Babel</li>
<li>Web Pack</li>
<li>Flow</li>
<li>Immutable.js</li>
<li>lodash</li>
<li>time travel debugger for redux?</li>
<li>maybe even Sass</li>
<li>Libraries to generate SVGs</li>
<li>momment (dates library)</li>
</ul>
<p>That is far harder than one language and a few core libraries.</p>
<p>Also the community is full of very friendly people and help us never far away. Not to mention a whole series of videos for free on egghead.io</p>
<h2>What about hiring?</h2>
<p>We use Elixir which has a small hiring pool and it's only helped us. People want to work in Elm and would probably would attract more rather than less.  NoRedInk said that Elm had drastically improved the amount of people that apply in the Q and A at elm conf.</p>
<p>Not to mention Elm programmers (Elmos?) Are the kinds of people you want to hire: compassionate and smart.</p>
<p>Also think of the flip side, you'll have to hire less people because the ones you have can be more productive plus you'll have less leaving because the front end makes them happy than sob into their pillow.</p>
<p>Also see: <a href="http://paulgraham.com/pypar.html" rel="noopener noreferrer">http://paulgraham.com/pypar.html</a></p>
<h2>Is it worth it? What do I gain?</h2>
<p>You gain:</p>
<ul>
<li>Far better Reliability</li>
<li><strong>No runtime exceptions!!!</strong> All edge cases must be handled.</li>
<li>No problems with null / undefined / nan (Maybe has your back)</li>
<li>Refactoring without fear of forgetting to find all the usages</li>
<li>Enforced Symantec versioning. Meaning people can't break the public API without bumping the major version. Not to mention you can diff the changes</li>
<li>Less tests by making things impossible via the type system</li>
<li>Faster / Leaner</li>
<li>Faster rendering</li>
<li>Less code</li>
<li>Less complied code</li>
<li>Easier to understand</li>
<li>less fancy programming language features that inevitably gets into the codebase</li>
<li>simpler language overall</li>
<li>Immutability everywhere (Immutable.js gets confusing and goes against everying else in JavaScript)</li>
<li>New features</li>
<li>pipes! (|&gt;)</li>
<li>Option types to help model different scenarios like loading states or other things</li>
<li>A good easy to understand module system like Elixir</li>
<li>Tooling like auto complete and looking up docs inline and a <code>go fmt</code> solution</li>
<li>Record types (enforce fields being there)</li>
<li>More Beginner Friendly</li>
<li>Friendly error messages</li>
<li>Better designed browser APIs</li>
<li>More like Elixir</li>
</ul>
<p>I feel the pros far outweigh the cons</p>
<h2>Keywords</h2>
<ul>
<li>[[Other/Old Notes/Simplenote/Elm]]</li>
</ul>


10:45:07.333 [debug] l:len=46

10:45:07.333 [debug] l:buf=22:<h1>The Argument for <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>Elm is a whole new language, it seems easier to just add redux</h2>
<p>Elm adds far more value than redux such as a type system and no runtime exceptions not to mention is a lot easier to understand in elm because
ility is enforced for all data structures.</p>
<h2>how can we trust elm if it isn't stable yet?</h2>
<p>Although Evan has made breaking changes to the language they have been pretty minimal and have always been large improvements. This essentially means that every so often you get an upgrade that will help your codebases quality improve. Also much of that upgrade can be handled by elm-format.</p>
<p>Elm has been around for about 5 years which is far more stable than the JS libraries you would use to replace it</p>
<h2>You have to use ports to interact with JavaScript which has a lot of boiler-plate</h2>
<p>That's the price you pay for no runtime exceptions and immutability. The elm package ecosystem is very good for it's age. Most of the common stuff would like to do like http, web sockets and interacting with the navigation bar is there.</p>
<h2>Wouldn't it be hard to train people on?</h2>
<p>Elm is perhaps one of the easiest and most friendly languages to learn. The language itself is <a href="http://www.elmbark.com/2016/03/16/mainstream-elm-user-focused-design" rel="noopener noreferrer"><em>designed</em> to be easy to learn</a> and <a href="http://elm-lang.org/blog/compilers-as-assistants" rel="noopener noreferrer">helpful to new people</a>.</p>
<p>It has basically no cruft. In fact the author Evan has basically been systematically getting rid of the dark corners of the language. The language has literally gotten smaller as time goes by. Can't say that for JavaScript can you?</p>
<p>Not to mention think the amounts of code takes to replace it:</p>
<ul>
<li>React</li>
<li>Redux</li>
<li>Babel</li>
<li>Web Pack</li>
<li>Flow</li>
<li>Immutable.js</li>
<li>lodash</li>
<li>time travel debugger for redux?</li>
<li>maybe even Sass</li>
<li>Libraries to generate SVGs</li>
<li>momment (dates library)</li>
</ul>
<p>That is far harder than one language and a few core libraries.</p>
<p>Also the community is full of very friendly people and help us never far away. Not to mention a whole series of videos for free on egghead.io</p>
<h2>What about hiring?</h2>
<p>We use Elixir which has a small hiring pool and it's only helped us. People want to work in Elm and would probably would attract more rather than less.  NoRedInk said that Elm had drastically improved the amount of people that apply in the Q and A at elm conf.</p>
<p>Not to mention Elm programmers (Elmos?) Are the kinds of people you want to hire: compassionate and smart.</p>
<p>Also think of the flip side, you'll have to hire less people because the ones you have can be more productive plus you'll have less leaving because the front end makes them happy than sob into their pillow.</p>
<p>Also see: <a href="http://paulgraham.com/pypar.html" rel="noopener noreferrer">http://paulgraham.com/pypar.html</a></p>
<h2>Is it worth it? What do I gain?</h2>
<p>You gain:</p>
<ul>
<li>Far better Reliability</li>
<li><strong>No runtime exceptions!!!</strong> All edge cases must be handled.</li>
<li>No problems with null / undefined / nan (Maybe has your back)</li>
<li>Refactoring without fear of forgetting to find all the usages</li>
<li>Enforced Symantec versioning. Meaning people can't break the public API without bumping the major version. Not to mention you can diff the changes</li>
<li>Less tests by making things impossible via the type system</li>
<li>Faster / Leaner</li>
<li>Faster rendering</li>
<li>Less code</li>
<li>Less complied code</li>
<li>Easier to understand</li>
<li>less fancy programming language features that inevitably gets into the codebase</li>
<li>simpler language overall</li>
<li>Immutability everywhere (Immutable.js gets confusing and goes against everying else in JavaScript)</li>
<li>New features</li>
<li>pipes! (|&gt;)</li>
<li>Option types to help model different scenarios like loading states or other things</li>
<li>A good easy to understand module system like Elixir</li>
<li>Tooling like auto complete and looking up docs inline and a <code>go fmt</code> solution</li>
<li>Record types (enforce fields being there)</li>
<li>More Beginner Friendly</li>
<li>Friendly error messages</li>
<li>Better designed browser APIs</li>
<li>More like Elixir</li>
</ul>
<p>I feel the pros far outweigh the cons</p>
<h2>Keywords</h2>
<ul>
<li>[[Other/Old Notes/Simplenote/Elm]]</li>
</ul>


10:45:07.333 [debug] l:len=462

10:45:07.333 [debug] l:buf=2:<h1>The Argument for <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></h1>
<h2>Elm is a whole new language, it seems easier to just add redux</h2>
<p>Elm adds far more value than redux such as a type system and no runtime exceptions not to mention is a lot easier to understand in elm because
ility is enforced for all data structures.</p>
<h2>how can we trust elm if it isn't stable yet?</h2>
<p>Although Evan has made breaking changes to the language they have been pretty minimal and have always been large improvements. This essentially means that every so often you get an upgrade that will help your codebases quality improve. Also much of that upgrade can be handled by elm-format.</p>
<p>Elm has been around for about 5 years which is far more stable than the JS libraries you would use to replace it</p>
<h2>You have to use ports to interact with JavaScript which has a lot of boiler-plate</h2>
<p>That's the price you pay for no runtime exceptions and immutability. The elm package ecosystem is very good for it's age. Most of the common stuff would like to do like http, web sockets and interacting with the navigation bar is there.</p>
<h2>Wouldn't it be hard to train people on?</h2>
<p>Elm is perhaps one of the easiest and most friendly languages to learn. The language itself is <a href="http://www.elmbark.com/2016/03/16/mainstream-elm-user-focused-design" rel="noopener noreferrer"><em>designed</em> to be easy to learn</a> and <a href="http://elm-lang.org/blog/compilers-as-assistants" rel="noopener noreferrer">helpful to new people</a>.</p>
<p>It has basically no cruft. In fact the author Evan has basically been systematically getting rid of the dark corners of the language. The language has literally gotten smaller as time goes by. Can't say that for JavaScript can you?</p>
<p>Not to mention think the amounts of code takes to replace it:</p>
<ul>
<li>React</li>
<li>Redux</li>
<li>Babel</li>
<li>Web Pack</li>
<li>Flow</li>
<li>Immutable.js</li>
<li>lodash</li>
<li>time travel debugger for redux?</li>
<li>maybe even Sass</li>
<li>Libraries to generate SVGs</li>
<li>momment (dates library)</li>
</ul>
<p>That is far harder than one language and a few core libraries.</p>
<p>Also the community is full of very friendly people and help us never far away. Not to mention a whole series of videos for free on egghead.io</p>
<h2>What about hiring?</h2>
<p>We use Elixir which has a small hiring pool and it's only helped us. People want to work in Elm and would probably would attract more rather than less.  NoRedInk said that Elm had drastically improved the amount of people that apply in the Q and A at elm conf.</p>
<p>Not to mention Elm programmers (Elmos?) Are the kinds of people you want to hire: compassionate and smart.</p>
<p>Also think of the flip side, you'll have to hire less people because the ones you have can be more productive plus you'll have less leaving because the front end makes them happy than sob into their pillow.</p>
<p>Also see: <a href="http://paulgraham.com/pypar.html" rel="noopener noreferrer">http://paulgraham.com/pypar.html</a></p>
<h2>Is it worth it? What do I gain?</h2>
<p>You gain:</p>
<ul>
<li>Far better Reliability</li>
<li><strong>No runtime exceptions!!!</strong> All edge cases must be handled.</li>
<li>No problems with null / undefined / nan (Maybe has your back)</li>
<li>Refactoring without fear of forgetting to find all the usages</li>
<li>Enforced Symantec versioning. Meaning people can't break the public API without bumping the major version. Not to mention you can diff the changes</li>
<li>Less tests by making things impossible via the type system</li>
<li>Faster / Leaner</li>
<li>Faster rendering</li>
<li>Less code</li>
<li>Less complied code</li>
<li>Easier to understand</li>
<li>less fancy programming language features that inevitably gets into the codebase</li>
<li>simpler language overall</li>
<li>Immutability everywhere (Immutable.js gets confusing and goes against everying else in JavaScript)</li>
<li>New features</li>
<li>pipes! (|&gt;)</li>
<li>Option types to help model different scenarios like loading states or other things</li>
<li>A good easy to understand module system like Elixir</li>
<li>Tooling like auto complete and looking up docs inline and a <code>go fmt</code> solution</li>
<li>Record types (enforce fields being there)</li>
<li>More Beginner Friendly</li>
<li>Friendly error messages</li>
<li>Better designed browser APIs</li>
<li>More like Elixir</li>
</ul>
<p>I feel the pros far outweigh the cons</p>
<h2>Keywords</h2>
<ul>
<li>[[Other/Old Notes/Simplenote/Elm]]</li>
</ul>


10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf empty

10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf=542:<h1>Thank you for completing the 2020 Census questionnaire for:</h1>
<p>798 E 480 S AMERICAN FORK, UT 84003-5544</p>
<p>Wednesday, March 18, 2020 9:53 PM</p>
<p>If you receive other mail from the Census Bureau about the 2020 Census in the next few days, please disregard it. That mail may have been sent out before today.</p>
<p>If you have any questions, please call the phone number printed in your materials or listed below.</p>
<p>1-844-330-2020</p>
<p>Confirmation #: 256b74c9-a744-4234-98ae-50adda45af7e</p>
<p>Visit 2020Census.gov</p>


10:45:07.333 [debug] l:len=5

10:45:07.333 [debug] l:buf=42:<h1>Thank you for completing the 2020 Census questionnaire for:</h1>
<p>798 E 480 S AMERICAN FORK, UT 84003-5544</p>
<p>Wednesday, March 18, 2020 9:53 PM</p>
<p>If you receive other mail from the Census Bureau about the 2020 Census in the next few days, please disregard it. That mail may have been sent out before today.</p>
<p>If you have any questions, please call the phone number printed in your materials or listed below.</p>
<p>1-844-330-2020</p>
<p>Confirmation #: 256b74c9-a744-4234-98ae-50adda45af7e</p>
<p>Visit 2020Census.gov</p>


10:45:07.333 [debug] l:len=54

10:45:07.333 [debug] l:buf=2:<h1>Thank you for completing the 2020 Census questionnaire for:</h1>
<p>798 E 480 S AMERICAN FORK, UT 84003-5544</p>
<p>Wednesday, March 18, 2020 9:53 PM</p>
<p>If you receive other mail from the Census Bureau about the 2020 Census in the next few days, please disregard it. That mail may have been sent out before today.</p>
<p>If you have any questions, please call the phone number printed in your materials or listed below.</p>
<p>1-844-330-2020</p>
<p>Confirmation #: 256b74c9-a744-4234-98ae-50adda45af7e</p>
<p>Visit 2020Census.gov</p>


10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf empty

10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf=75:<h1>Gating</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.333 [debug] l:len=7

10:45:07.333 [debug] l:buf=5:<h1>Gating</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf empty

10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf=473:<h1>Start-up books</h1>
<ul>
<li>Ikigai: The Japanese Secret to a Long and Happy Life</li>
<li>Show your work</li>
<li>Magic Words: The Science and Secrets Behind Seven Words That Motivate, Engage, and Influence</li>
</ul>
<p>These three books helped me in:</p>
<ul>
<li>The Startup Owner’s Manual - by Steve Blank, Bob Village</li>
<li>The Lean Startup - by Eric Ries</li>
</ul>
<p><a href="http://localhost:5000/todo-lists" rel="noopener noreferrer">Todo Lists</a></p>


10:45:07.333 [debug] l:len=4

10:45:07.333 [debug] l:buf=73:<h1>Start-up books</h1>
<ul>
<li>Ikigai: The Japanese Secret to a Long and Happy Life</li>
<li>Show your work</li>
<li>Magic Words: The Science and Secrets Behind Seven Words That Motivate, Engage, and Influence</li>
</ul>
<p>These three books helped me in:</p>
<ul>
<li>The Startup Owner’s Manual - by Steve Blank, Bob Village</li>
<li>The Lean Startup - by Eric Ries</li>
</ul>
<p><a href="http://localhost:5000/todo-lists" rel="noopener noreferrer">Todo Lists</a></p>


10:45:07.333 [debug] l:len=47

10:45:07.333 [debug] l:buf=3:<h1>Start-up books</h1>
<ul>
<li>Ikigai: The Japanese Secret to a Long and Happy Life</li>
<li>Show your work</li>
<li>Magic Words: The Science and Secrets Behind Seven Words That Motivate, Engage, and Influence</li>
</ul>
<p>These three books helped me in:</p>
<ul>
<li>The Startup Owner’s Manual - by Steve Blank, Bob Village</li>
<li>The Lean Startup - by Eric Ries</li>
</ul>
<p><a href="http://localhost:5000/todo-lists" rel="noopener noreferrer">Todo Lists</a></p>


10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf empty

10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf=237:<h1>exercising</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.333 [debug] l:len=2

10:45:07.333 [debug] l:buf=37:<h1>exercising</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.333 [debug] l:len=23

10:45:07.333 [debug] l:buf=7:<h1>exercising</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.333 [debug] l:len=

10:45:07.333 [debug] l:buf empty

10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf=667:<p>Journal entry for march 11th</p>
<p>Today was not very productive today I a spend most of my time playing around with the phaser.es bank friend and that wisin most my time after that I spent too much time talking to my friends and hoping someone with a problem I did not do any mind mark ana that was a huge problem's.</p>
<p>However today I learned that I need to be able to do the things that will bring any success. Okay I guess the nicholas send. Today I learned that I need to be proactive. Practically means that I have the ability to choose maya options</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.334 [debug] l:len=6

10:45:07.334 [debug] l:buf=67:<p>Journal entry for march 11th</p>
<p>Today was not very productive today I a spend most of my time playing around with the phaser.es bank friend and that wisin most my time after that I spent too much time talking to my friends and hoping someone with a problem I did not do any mind mark ana that was a huge problem's.</p>
<p>However today I learned that I need to be able to do the things that will bring any success. Okay I guess the nicholas send. Today I learned that I need to be proactive. Practically means that I have the ability to choose maya options</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.334 [debug] l:len=66

10:45:07.334 [debug] l:buf=7:<p>Journal entry for march 11th</p>
<p>Today was not very productive today I a spend most of my time playing around with the phaser.es bank friend and that wisin most my time after that I spent too much time talking to my friends and hoping someone with a problem I did not do any mind mark ana that was a huge problem's.</p>
<p>However today I learned that I need to be able to do the things that will bring any success. Okay I guess the nicholas send. Today I learned that I need to be proactive. Practically means that I have the ability to choose maya options</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a></p>


10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf empty

10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf=1215:<h1>transperency</h1>
<p>See: <a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.334 [debug] l:len=1

10:45:07.334 [debug] l:buf=215:<h1>transperency</h1>
<p>See: <a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.334 [debug] l:len=12

10:45:07.334 [debug] l:buf=15:<h1>transperency</h1>
<p>See: <a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.334 [debug] l:len=121

10:45:07.334 [debug] l:buf=5:<h1>transperency</h1>
<p>See: <a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a></li>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/the-reply-all-problem" rel="noopener noreferrer">the reply all problem</a></li>
</ul>


10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf empty

10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf=332:<h1>Next ReasonML meetup ideas</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/reason-dojo" rel="noopener noreferrer">reason-dojo</a></p>
<h2>What concepts do I want to teach?</h2>
<ul>
<li>Variant Types</li>
<li>Type Driven Developement</li>
<li>Etc...</li>
</ul>


10:45:07.334 [debug] l:len=3

10:45:07.334 [debug] l:buf=32:<h1>Next ReasonML meetup ideas</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/reason-dojo" rel="noopener noreferrer">reason-dojo</a></p>
<h2>What concepts do I want to teach?</h2>
<ul>
<li>Variant Types</li>
<li>Type Driven Developement</li>
<li>Etc...</li>
</ul>


10:45:07.334 [debug] l:len=33

10:45:07.334 [debug] l:buf=2:<h1>Next ReasonML meetup ideas</h1>
<p><a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/reason-dojo" rel="noopener noreferrer">reason-dojo</a></p>
<h2>What concepts do I want to teach?</h2>
<ul>
<li>Variant Types</li>
<li>Type Driven Developement</li>
<li>Etc...</li>
</ul>


10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf empty

10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf=202:<p><a href="http://simpledesignbook.com/" rel="noopener noreferrer">http://simpledesignbook.com/</a></p>
<p><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>


10:45:07.334 [debug] l:len=2

10:45:07.334 [debug] l:buf=02:<p><a href="http://simpledesignbook.com/" rel="noopener noreferrer">http://simpledesignbook.com/</a></p>
<p><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>


10:45:07.334 [debug] l:len=20

10:45:07.334 [debug] l:buf=2:<p><a href="http://simpledesignbook.com/" rel="noopener noreferrer">http://simpledesignbook.com/</a></p>
<p><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></p>


10:45:07.334 [debug] l:len=

10:45:07.334 [debug] l:buf empty

10:45:07.334 [debug] l:len=

10:45:07.335 [debug] l:buf=241:<h1>concurrent</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.335 [debug] l:len=2

10:45:07.335 [debug] l:buf=41:<h1>concurrent</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.335 [debug] l:len=24

10:45:07.335 [debug] l:buf=1:<h1>concurrent</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a></li>
</ul>


10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf empty

10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf=233:<h1>Tech Debt</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.335 [debug] l:len=2

10:45:07.335 [debug] l:buf=33:<h1>Tech Debt</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.335 [debug] l:len=23

10:45:07.335 [debug] l:buf=3:<h1>Tech Debt</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf empty

10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf=280:<h1>Complexity of Basecamp V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.335 [debug] l:len=2

10:45:07.335 [debug] l:buf=80:<h1>Complexity of Basecamp V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.335 [debug] l:len=28

10:45:07.335 [debug] l:buf=0:<h1>Complexity of Basecamp V</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf empty

10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf=364:<h1>Slack-Unthreaded-thread</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.335 [debug] l:len=3

10:45:07.335 [debug] l:buf=64:<h1>Slack-Unthreaded-thread</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.335 [debug] l:len=36

10:45:07.335 [debug] l:buf=4:<h1>Slack-Unthreaded-thread</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf empty

10:45:07.335 [debug] l:len=

10:45:07.335 [debug] l:buf=1513:<h1>Imagined V</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> said he thought:</p>
<blockquote>
<p>Why Jira works for imagined tasks, not discovered tasks.</p>
</blockquote>
<hr>
<h2><a href="http://localhost:5000/pasted-image-16.png" rel="noopener noreferrer">Pasted image 16</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1300575671580729346" rel="noopener noreferrer">https://twitter.com/rjs/status/1300575671580729346</a></p>
<p>Then linked to this Shape-up Chapter:  <a href="https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks" rel="noopener noreferrer">https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks</a></p>
<p>Imagined Tasks are tasks that you say, "I think we'll need to do this" before you've done any work. They are sometimes true, but never all inclusive. The Discovered tasks are tasks that you realize matter when you've stared working on the project.</p>
<p>How do you avoid Discovered tasks from blowing up your <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>? You start on something meaningful as soon as possible that you can get working end-to-end. This way you'll have something to show within a few days of the <a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Cycle</a>.</p>
<p>Links: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.335 [debug] l:len=1

10:45:07.336 [debug] l:buf=513:<h1>Imagined V</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> said he thought:</p>
<blockquote>
<p>Why Jira works for imagined tasks, not discovered tasks.</p>
</blockquote>
<hr>
<h2><a href="http://localhost:5000/pasted-image-16.png" rel="noopener noreferrer">Pasted image 16</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1300575671580729346" rel="noopener noreferrer">https://twitter.com/rjs/status/1300575671580729346</a></p>
<p>Then linked to this Shape-up Chapter:  <a href="https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks" rel="noopener noreferrer">https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks</a></p>
<p>Imagined Tasks are tasks that you say, "I think we'll need to do this" before you've done any work. They are sometimes true, but never all inclusive. The Discovered tasks are tasks that you realize matter when you've stared working on the project.</p>
<p>How do you avoid Discovered tasks from blowing up your <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>? You start on something meaningful as soon as possible that you can get working end-to-end. This way you'll have something to show within a few days of the <a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Cycle</a>.</p>
<p>Links: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.336 [debug] l:len=15

10:45:07.336 [debug] l:buf=13:<h1>Imagined V</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> said he thought:</p>
<blockquote>
<p>Why Jira works for imagined tasks, not discovered tasks.</p>
</blockquote>
<hr>
<h2><a href="http://localhost:5000/pasted-image-16.png" rel="noopener noreferrer">Pasted image 16</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1300575671580729346" rel="noopener noreferrer">https://twitter.com/rjs/status/1300575671580729346</a></p>
<p>Then linked to this Shape-up Chapter:  <a href="https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks" rel="noopener noreferrer">https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks</a></p>
<p>Imagined Tasks are tasks that you say, "I think we'll need to do this" before you've done any work. They are sometimes true, but never all inclusive. The Discovered tasks are tasks that you realize matter when you've stared working on the project.</p>
<p>How do you avoid Discovered tasks from blowing up your <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>? You start on something meaningful as soon as possible that you can get working end-to-end. This way you'll have something to show within a few days of the <a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Cycle</a>.</p>
<p>Links: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.336 [debug] l:len=151

10:45:07.336 [debug] l:buf=3:<h1>Imagined V</h1>
<p><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> said he thought:</p>
<blockquote>
<p>Why Jira works for imagined tasks, not discovered tasks.</p>
</blockquote>
<hr>
<h2><a href="http://localhost:5000/pasted-image-16.png" rel="noopener noreferrer">Pasted image 16</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>ref: <a href="https://twitter.com/rjs/status/1300575671580729346" rel="noopener noreferrer">https://twitter.com/rjs/status/1300575671580729346</a></p>
<p>Then linked to this Shape-up Chapter:  <a href="https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks" rel="noopener noreferrer">https://basecamp.com/shapeup/3.1-chapter-10#imagined-vs-discovered-tasks</a></p>
<p>Imagined Tasks are tasks that you say, "I think we'll need to do this" before you've done any work. They are sometimes true, but never all inclusive. The Discovered tasks are tasks that you realize matter when you've stared working on the project.</p>
<p>How do you avoid Discovered tasks from blowing up your <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>? You start on something meaningful as soon as possible that you can get working end-to-end. This way you'll have something to show within a few days of the <a href="http://localhost:5000/six-week-cycles" rel="noopener noreferrer">Cycle</a>.</p>
<p>Links: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.336 [debug] l:len=

10:45:07.336 [debug] l:buf empty

10:45:07.336 [debug] l:len=

10:45:07.336 [debug] l:buf=824:<h1>sticky</h1>
<p>When a product becomes entrenched in an organization. They can't stop using it. There's many reasons this can happen, some good patterns and some <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">dark patterns</a>.</p>
<p>Good:</p>
<ol>
<li>The app is actually useful and saves people time</li>
</ol>
<p>Bad:</p>
<ol>
<li>People become addicted to the product via <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> triggers</li>
<li>The platform is too hard to migrate off of, so they don't</li>
<li>The organization can't, or won't, pay more for a better system</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.336 [debug] l:len=8

10:45:07.336 [debug] l:buf=24:<h1>sticky</h1>
<p>When a product becomes entrenched in an organization. They can't stop using it. There's many reasons this can happen, some good patterns and some <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">dark patterns</a>.</p>
<p>Good:</p>
<ol>
<li>The app is actually useful and saves people time</li>
</ol>
<p>Bad:</p>
<ol>
<li>People become addicted to the product via <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> triggers</li>
<li>The platform is too hard to migrate off of, so they don't</li>
<li>The organization can't, or won't, pay more for a better system</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.336 [debug] l:len=82

10:45:07.336 [debug] l:buf=4:<h1>sticky</h1>
<p>When a product becomes entrenched in an organization. They can't stop using it. There's many reasons this can happen, some good patterns and some <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">dark patterns</a>.</p>
<p>Good:</p>
<ol>
<li>The app is actually useful and saves people time</li>
</ol>
<p>Bad:</p>
<ol>
<li>People become addicted to the product via <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> triggers</li>
<li>The platform is too hard to migrate off of, so they don't</li>
<li>The organization can't, or won't, pay more for a better system</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.336 [debug] l:len=

10:45:07.336 [debug] l:buf empty

10:45:07.336 [debug] l:len=

10:45:07.336 [debug] l:buf=226:<h1>Schaping</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.336 [debug] l:len=2

10:45:07.336 [debug] l:buf=26:<h1>Schaping</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.336 [debug] l:len=22

10:45:07.336 [debug] l:buf=6:<h1>Schaping</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.336 [debug] l:len=

10:45:07.336 [debug] l:buf empty

10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf=7789:<h1>Death By a Thousand Pings, The Hidden Side of Using Slack (Article)</h1>
<p>ref: <a href="https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a" rel="noopener noreferrer">https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a</a></p>
<p>Alicia of Nava makes some really strong, well worded arguments against Slack despite the fact that they use it. Much of which mirrors my own thoughts</p>
<blockquote>
<p>As someone who has intentionally cut nearly all social media use in recent months, I’ve been working on developing more awareness of social media’s effects on me. I noticed that my usage of Slack was having a similar effect to social media.</p>
<p>I found myself compulsively checking Slack even when I had no need to. And as a result, I was in a constant state of distraction, and not just during work</p>
</blockquote>
<hr>
<blockquote>
<p>I need a clear focused mind to do my job effectively. Yet, I felt I was losing control of my brain to the tool that’s supposed to help me.</p>
</blockquote>
<hr>
<blockquote>
<p>A seeming paradox that I’m reminded of is that our greatest strengths are also the source of our greatest weaknesses.</p>
<p>Applied to Slack, i<strong>ts greatest strength: amazing ease-of-use, is also its weakness</strong>: ==making it far too easy for everyone to default to using Slack for communicating, even for all the myriad things that don’t make sense to use Slack to communicate==.</p>
</blockquote>
<hr>
<blockquote>
<p>What seem like innocuous quick pings on Slack are often things that actually require deep thought and likely discussion, or require complex problem solving, or are requests for me to do a significant amount of work, and so on. <strong>Yet big or small, everything coming in through Slack shares the same compact shape, and ==worse, the same level of urgency.==</strong></p>
</blockquote>
<h2>Cannot prioritize Slack</h2>
<blockquote>
<p>The only tools I have at my disposable to try to deal with notification overload are…</p>
<ul>
<li>mark as unread</li>
<li>Slack reminder
both of which just delay the problem.
(I know many Slack add-ons exist to deal with this problem, but the value proposition and longevity of these add-ons is too iffy to ask the whole company to invest the necessary time and money into them. <strong>In comparison to email, there are many well-established built-in and external tools to help with prioritizing emails and attaining the elusive goal of inbox zero</strong>.)</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>Because Slack is so easy to use, the barrier to initiate a communication is greatly lowered. Just drop a thought into a channel, maybe add an emoji, and voila! You’re now free to bask in the dopamine hits of getting emoji reactions and instant replies. You feel immediately validated as a productive valuable team member. It feels great!</p>
<p>With <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>, it’s different. Before you hit Send, you have to think about
a) exactly who you want to communicate your message to
b) who else might also be interested in your message
c) summarizing your message so it’s clear why those people need to click on your message to read it
d) writing in an organized way and perhaps adding a clear call to action
e) (optional) figure out how to add an emoji and worry about it showing up weird like the dreaded “J”. Writing a good email is not that simple to do.</p>
<p>By using Slack, all the work you would otherwise put into writing such an email largely disappears. Cool, right? Not so fast.</p>
<p><strong>That work doesn’t just disappear</strong>. ==That cognitive work is now dispersed on to all the people who come across your message in Slack.==</p>
</blockquote>
<p>☝🏻This is a super solid point.</p>
<blockquote>
<p>Each person now needs to figure out:
a) is this message relevant to me?
b) if so, how?
c) do I need to take some action based on this message?
d) should I ask for clarification on its relevance or whether I need to take some action?
Oof. The work that would have gone into crafting an email can thus not only be passed on to the recipients in Slack, ==it is multiplied by the number of people in that channel.==</p>
</blockquote>
<p>This also feels related to <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a>, or in general the idea that slack messages are kind of "todos".</p>
<blockquote>
<p>By lowering the barrier to initiate communication, the hidden side effect is that Slack has the quiet capacity to exponentially increase communication overhead.</p>
<p>Resulting in much more <strong>voluminous, lower quality communication. Low quality communication has a multiplicative effect on communication overhead because it is imprecise and prone to being misunderstood.</strong></p>
<p>Thus it generates even more communication to clear up the misunderstandings, all of which contribute to more cognitive overhead ==borne by the recipients of the communication==. At worst, there is a miscommunication, and people end up acting on wrong information.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
</ul>
<blockquote>
<p>Using Slack has the effect of feeling productive, when it may actually be extremely counter-productive.</p>
</blockquote>
<p>This is my thought as well -&gt; <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a>.</p>
<blockquote>
<p>While I remain skeptical that Slack can replace email, and I don’t believe Slack should</p>
</blockquote>
<p>The sad thing is that Slack <em>will</em> and <em>does</em> replace e-mail because it makes the <em><strong>sender</strong></em> happy. <a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a>.</p>
<blockquote>
<p>Good communication takes intention, thoughtfulness, and work, and those things don’t come for free simply with easier-to-use software.</p>
</blockquote>
<p>I would even go so far as to say it actually makes it harder.</p>
<blockquote>
<p>...As we continue to barrel down the path of exponentially more online communication, and dealing with tech companies using every trick available to grab at our extremely limited time and attention...</p>
</blockquote>
<p>Yeah very true! Takes a lot of <a href="http://localhost:5000/digital-minimalism" rel="noopener noreferrer">Digital Minimalism</a>.</p>
<blockquote>
<p>...for those of you that design and build software that affect millions of people: we, as technologists, <strong>wield incredible power over how people live their lives</strong>.</p>
<p>This is a great and daunting responsibility, which we often overlook as we focus on our immediate goals — <strong>goals that often reduce down to how to make a small uptick in a graph somewhere</strong>. As engineers, ==we live by quantifiable results==, and by and large, we have good intentions to improve the software we create. While it’s true that we improve what we measure, ==**it’s also true that what we’re able to measure is an abstraction of something far less quantifiable.**==</p>
</blockquote>
<p>Love how she calls out that <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is probably just measuring, "are people using it?" (quantifiable) not "are people productive?" (not quantifiable).  This is often a problem with rewarding the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a>.</p>


10:45:07.337 [debug] l:len=7

10:45:07.337 [debug] l:buf=789:<h1>Death By a Thousand Pings, The Hidden Side of Using Slack (Article)</h1>
<p>ref: <a href="https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a" rel="noopener noreferrer">https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a</a></p>
<p>Alicia of Nava makes some really strong, well worded arguments against Slack despite the fact that they use it. Much of which mirrors my own thoughts</p>
<blockquote>
<p>As someone who has intentionally cut nearly all social media use in recent months, I’ve been working on developing more awareness of social media’s effects on me. I noticed that my usage of Slack was having a similar effect to social media.</p>
<p>I found myself compulsively checking Slack even when I had no need to. And as a result, I was in a constant state of distraction, and not just during work</p>
</blockquote>
<hr>
<blockquote>
<p>I need a clear focused mind to do my job effectively. Yet, I felt I was losing control of my brain to the tool that’s supposed to help me.</p>
</blockquote>
<hr>
<blockquote>
<p>A seeming paradox that I’m reminded of is that our greatest strengths are also the source of our greatest weaknesses.</p>
<p>Applied to Slack, i<strong>ts greatest strength: amazing ease-of-use, is also its weakness</strong>: ==making it far too easy for everyone to default to using Slack for communicating, even for all the myriad things that don’t make sense to use Slack to communicate==.</p>
</blockquote>
<hr>
<blockquote>
<p>What seem like innocuous quick pings on Slack are often things that actually require deep thought and likely discussion, or require complex problem solving, or are requests for me to do a significant amount of work, and so on. <strong>Yet big or small, everything coming in through Slack shares the same compact shape, and ==worse, the same level of urgency.==</strong></p>
</blockquote>
<h2>Cannot prioritize Slack</h2>
<blockquote>
<p>The only tools I have at my disposable to try to deal with notification overload are…</p>
<ul>
<li>mark as unread</li>
<li>Slack reminder
both of which just delay the problem.
(I know many Slack add-ons exist to deal with this problem, but the value proposition and longevity of these add-ons is too iffy to ask the whole company to invest the necessary time and money into them. <strong>In comparison to email, there are many well-established built-in and external tools to help with prioritizing emails and attaining the elusive goal of inbox zero</strong>.)</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>Because Slack is so easy to use, the barrier to initiate a communication is greatly lowered. Just drop a thought into a channel, maybe add an emoji, and voila! You’re now free to bask in the dopamine hits of getting emoji reactions and instant replies. You feel immediately validated as a productive valuable team member. It feels great!</p>
<p>With <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>, it’s different. Before you hit Send, you have to think about
a) exactly who you want to communicate your message to
b) who else might also be interested in your message
c) summarizing your message so it’s clear why those people need to click on your message to read it
d) writing in an organized way and perhaps adding a clear call to action
e) (optional) figure out how to add an emoji and worry about it showing up weird like the dreaded “J”. Writing a good email is not that simple to do.</p>
<p>By using Slack, all the work you would otherwise put into writing such an email largely disappears. Cool, right? Not so fast.</p>
<p><strong>That work doesn’t just disappear</strong>. ==That cognitive work is now dispersed on to all the people who come across your message in Slack.==</p>
</blockquote>
<p>☝🏻This is a super solid point.</p>
<blockquote>
<p>Each person now needs to figure out:
a) is this message relevant to me?
b) if so, how?
c) do I need to take some action based on this message?
d) should I ask for clarification on its relevance or whether I need to take some action?
Oof. The work that would have gone into crafting an email can thus not only be passed on to the recipients in Slack, ==it is multiplied by the number of people in that channel.==</p>
</blockquote>
<p>This also feels related to <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a>, or in general the idea that slack messages are kind of "todos".</p>
<blockquote>
<p>By lowering the barrier to initiate communication, the hidden side effect is that Slack has the quiet capacity to exponentially increase communication overhead.</p>
<p>Resulting in much more <strong>voluminous, lower quality communication. Low quality communication has a multiplicative effect on communication overhead because it is imprecise and prone to being misunderstood.</strong></p>
<p>Thus it generates even more communication to clear up the misunderstandings, all of which contribute to more cognitive overhead ==borne by the recipients of the communication==. At worst, there is a miscommunication, and people end up acting on wrong information.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
</ul>
<blockquote>
<p>Using Slack has the effect of feeling productive, when it may actually be extremely counter-productive.</p>
</blockquote>
<p>This is my thought as well -&gt; <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a>.</p>
<blockquote>
<p>While I remain skeptical that Slack can replace email, and I don’t believe Slack should</p>
</blockquote>
<p>The sad thing is that Slack <em>will</em> and <em>does</em> replace e-mail because it makes the <em><strong>sender</strong></em> happy. <a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a>.</p>
<blockquote>
<p>Good communication takes intention, thoughtfulness, and work, and those things don’t come for free simply with easier-to-use software.</p>
</blockquote>
<p>I would even go so far as to say it actually makes it harder.</p>
<blockquote>
<p>...As we continue to barrel down the path of exponentially more online communication, and dealing with tech companies using every trick available to grab at our extremely limited time and attention...</p>
</blockquote>
<p>Yeah very true! Takes a lot of <a href="http://localhost:5000/digital-minimalism" rel="noopener noreferrer">Digital Minimalism</a>.</p>
<blockquote>
<p>...for those of you that design and build software that affect millions of people: we, as technologists, <strong>wield incredible power over how people live their lives</strong>.</p>
<p>This is a great and daunting responsibility, which we often overlook as we focus on our immediate goals — <strong>goals that often reduce down to how to make a small uptick in a graph somewhere</strong>. As engineers, ==we live by quantifiable results==, and by and large, we have good intentions to improve the software we create. While it’s true that we improve what we measure, ==**it’s also true that what we’re able to measure is an abstraction of something far less quantifiable.**==</p>
</blockquote>
<p>Love how she calls out that <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is probably just measuring, "are people using it?" (quantifiable) not "are people productive?" (not quantifiable).  This is often a problem with rewarding the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a>.</p>


10:45:07.337 [debug] l:len=77

10:45:07.337 [debug] l:buf=89:<h1>Death By a Thousand Pings, The Hidden Side of Using Slack (Article)</h1>
<p>ref: <a href="https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a" rel="noopener noreferrer">https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a</a></p>
<p>Alicia of Nava makes some really strong, well worded arguments against Slack despite the fact that they use it. Much of which mirrors my own thoughts</p>
<blockquote>
<p>As someone who has intentionally cut nearly all social media use in recent months, I’ve been working on developing more awareness of social media’s effects on me. I noticed that my usage of Slack was having a similar effect to social media.</p>
<p>I found myself compulsively checking Slack even when I had no need to. And as a result, I was in a constant state of distraction, and not just during work</p>
</blockquote>
<hr>
<blockquote>
<p>I need a clear focused mind to do my job effectively. Yet, I felt I was losing control of my brain to the tool that’s supposed to help me.</p>
</blockquote>
<hr>
<blockquote>
<p>A seeming paradox that I’m reminded of is that our greatest strengths are also the source of our greatest weaknesses.</p>
<p>Applied to Slack, i<strong>ts greatest strength: amazing ease-of-use, is also its weakness</strong>: ==making it far too easy for everyone to default to using Slack for communicating, even for all the myriad things that don’t make sense to use Slack to communicate==.</p>
</blockquote>
<hr>
<blockquote>
<p>What seem like innocuous quick pings on Slack are often things that actually require deep thought and likely discussion, or require complex problem solving, or are requests for me to do a significant amount of work, and so on. <strong>Yet big or small, everything coming in through Slack shares the same compact shape, and ==worse, the same level of urgency.==</strong></p>
</blockquote>
<h2>Cannot prioritize Slack</h2>
<blockquote>
<p>The only tools I have at my disposable to try to deal with notification overload are…</p>
<ul>
<li>mark as unread</li>
<li>Slack reminder
both of which just delay the problem.
(I know many Slack add-ons exist to deal with this problem, but the value proposition and longevity of these add-ons is too iffy to ask the whole company to invest the necessary time and money into them. <strong>In comparison to email, there are many well-established built-in and external tools to help with prioritizing emails and attaining the elusive goal of inbox zero</strong>.)</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>Because Slack is so easy to use, the barrier to initiate a communication is greatly lowered. Just drop a thought into a channel, maybe add an emoji, and voila! You’re now free to bask in the dopamine hits of getting emoji reactions and instant replies. You feel immediately validated as a productive valuable team member. It feels great!</p>
<p>With <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>, it’s different. Before you hit Send, you have to think about
a) exactly who you want to communicate your message to
b) who else might also be interested in your message
c) summarizing your message so it’s clear why those people need to click on your message to read it
d) writing in an organized way and perhaps adding a clear call to action
e) (optional) figure out how to add an emoji and worry about it showing up weird like the dreaded “J”. Writing a good email is not that simple to do.</p>
<p>By using Slack, all the work you would otherwise put into writing such an email largely disappears. Cool, right? Not so fast.</p>
<p><strong>That work doesn’t just disappear</strong>. ==That cognitive work is now dispersed on to all the people who come across your message in Slack.==</p>
</blockquote>
<p>☝🏻This is a super solid point.</p>
<blockquote>
<p>Each person now needs to figure out:
a) is this message relevant to me?
b) if so, how?
c) do I need to take some action based on this message?
d) should I ask for clarification on its relevance or whether I need to take some action?
Oof. The work that would have gone into crafting an email can thus not only be passed on to the recipients in Slack, ==it is multiplied by the number of people in that channel.==</p>
</blockquote>
<p>This also feels related to <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a>, or in general the idea that slack messages are kind of "todos".</p>
<blockquote>
<p>By lowering the barrier to initiate communication, the hidden side effect is that Slack has the quiet capacity to exponentially increase communication overhead.</p>
<p>Resulting in much more <strong>voluminous, lower quality communication. Low quality communication has a multiplicative effect on communication overhead because it is imprecise and prone to being misunderstood.</strong></p>
<p>Thus it generates even more communication to clear up the misunderstandings, all of which contribute to more cognitive overhead ==borne by the recipients of the communication==. At worst, there is a miscommunication, and people end up acting on wrong information.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
</ul>
<blockquote>
<p>Using Slack has the effect of feeling productive, when it may actually be extremely counter-productive.</p>
</blockquote>
<p>This is my thought as well -&gt; <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a>.</p>
<blockquote>
<p>While I remain skeptical that Slack can replace email, and I don’t believe Slack should</p>
</blockquote>
<p>The sad thing is that Slack <em>will</em> and <em>does</em> replace e-mail because it makes the <em><strong>sender</strong></em> happy. <a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a>.</p>
<blockquote>
<p>Good communication takes intention, thoughtfulness, and work, and those things don’t come for free simply with easier-to-use software.</p>
</blockquote>
<p>I would even go so far as to say it actually makes it harder.</p>
<blockquote>
<p>...As we continue to barrel down the path of exponentially more online communication, and dealing with tech companies using every trick available to grab at our extremely limited time and attention...</p>
</blockquote>
<p>Yeah very true! Takes a lot of <a href="http://localhost:5000/digital-minimalism" rel="noopener noreferrer">Digital Minimalism</a>.</p>
<blockquote>
<p>...for those of you that design and build software that affect millions of people: we, as technologists, <strong>wield incredible power over how people live their lives</strong>.</p>
<p>This is a great and daunting responsibility, which we often overlook as we focus on our immediate goals — <strong>goals that often reduce down to how to make a small uptick in a graph somewhere</strong>. As engineers, ==we live by quantifiable results==, and by and large, we have good intentions to improve the software we create. While it’s true that we improve what we measure, ==**it’s also true that what we’re able to measure is an abstraction of something far less quantifiable.**==</p>
</blockquote>
<p>Love how she calls out that <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is probably just measuring, "are people using it?" (quantifiable) not "are people productive?" (not quantifiable).  This is often a problem with rewarding the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a>.</p>


10:45:07.337 [debug] l:len=778

10:45:07.337 [debug] l:buf=9:<h1>Death By a Thousand Pings, The Hidden Side of Using Slack (Article)</h1>
<p>ref: <a href="https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a" rel="noopener noreferrer">https://medium.com/counter-intuition/the-hidden-side-of-using-slack-2443d9b66f8a</a></p>
<p>Alicia of Nava makes some really strong, well worded arguments against Slack despite the fact that they use it. Much of which mirrors my own thoughts</p>
<blockquote>
<p>As someone who has intentionally cut nearly all social media use in recent months, I’ve been working on developing more awareness of social media’s effects on me. I noticed that my usage of Slack was having a similar effect to social media.</p>
<p>I found myself compulsively checking Slack even when I had no need to. And as a result, I was in a constant state of distraction, and not just during work</p>
</blockquote>
<hr>
<blockquote>
<p>I need a clear focused mind to do my job effectively. Yet, I felt I was losing control of my brain to the tool that’s supposed to help me.</p>
</blockquote>
<hr>
<blockquote>
<p>A seeming paradox that I’m reminded of is that our greatest strengths are also the source of our greatest weaknesses.</p>
<p>Applied to Slack, i<strong>ts greatest strength: amazing ease-of-use, is also its weakness</strong>: ==making it far too easy for everyone to default to using Slack for communicating, even for all the myriad things that don’t make sense to use Slack to communicate==.</p>
</blockquote>
<hr>
<blockquote>
<p>What seem like innocuous quick pings on Slack are often things that actually require deep thought and likely discussion, or require complex problem solving, or are requests for me to do a significant amount of work, and so on. <strong>Yet big or small, everything coming in through Slack shares the same compact shape, and ==worse, the same level of urgency.==</strong></p>
</blockquote>
<h2>Cannot prioritize Slack</h2>
<blockquote>
<p>The only tools I have at my disposable to try to deal with notification overload are…</p>
<ul>
<li>mark as unread</li>
<li>Slack reminder
both of which just delay the problem.
(I know many Slack add-ons exist to deal with this problem, but the value proposition and longevity of these add-ons is too iffy to ask the whole company to invest the necessary time and money into them. <strong>In comparison to email, there are many well-established built-in and external tools to help with prioritizing emails and attaining the elusive goal of inbox zero</strong>.)</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>Because Slack is so easy to use, the barrier to initiate a communication is greatly lowered. Just drop a thought into a channel, maybe add an emoji, and voila! You’re now free to bask in the dopamine hits of getting emoji reactions and instant replies. You feel immediately validated as a productive valuable team member. It feels great!</p>
<p>With <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a>, it’s different. Before you hit Send, you have to think about
a) exactly who you want to communicate your message to
b) who else might also be interested in your message
c) summarizing your message so it’s clear why those people need to click on your message to read it
d) writing in an organized way and perhaps adding a clear call to action
e) (optional) figure out how to add an emoji and worry about it showing up weird like the dreaded “J”. Writing a good email is not that simple to do.</p>
<p>By using Slack, all the work you would otherwise put into writing such an email largely disappears. Cool, right? Not so fast.</p>
<p><strong>That work doesn’t just disappear</strong>. ==That cognitive work is now dispersed on to all the people who come across your message in Slack.==</p>
</blockquote>
<p>☝🏻This is a super solid point.</p>
<blockquote>
<p>Each person now needs to figure out:
a) is this message relevant to me?
b) if so, how?
c) do I need to take some action based on this message?
d) should I ask for clarification on its relevance or whether I need to take some action?
Oof. The work that would have gone into crafting an email can thus not only be passed on to the recipients in Slack, ==it is multiplied by the number of people in that channel.==</p>
</blockquote>
<p>This also feels related to <a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a>, or in general the idea that slack messages are kind of "todos".</p>
<blockquote>
<p>By lowering the barrier to initiate communication, the hidden side effect is that Slack has the quiet capacity to exponentially increase communication overhead.</p>
<p>Resulting in much more <strong>voluminous, lower quality communication. Low quality communication has a multiplicative effect on communication overhead because it is imprecise and prone to being misunderstood.</strong></p>
<p>Thus it generates even more communication to clear up the misunderstandings, all of which contribute to more cognitive overhead ==borne by the recipients of the communication==. At worst, there is a miscommunication, and people end up acting on wrong information.</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
</ul>
<blockquote>
<p>Using Slack has the effect of feeling productive, when it may actually be extremely counter-productive.</p>
</blockquote>
<p>This is my thought as well -&gt; <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a>.</p>
<blockquote>
<p>While I remain skeptical that Slack can replace email, and I don’t believe Slack should</p>
</blockquote>
<p>The sad thing is that Slack <em>will</em> and <em>does</em> replace e-mail because it makes the <em><strong>sender</strong></em> happy. <a href="http://localhost:5000/slack-is-also-optimized-for-the-writer" rel="noopener noreferrer">Slack is also optimized for the writer</a>.</p>
<blockquote>
<p>Good communication takes intention, thoughtfulness, and work, and those things don’t come for free simply with easier-to-use software.</p>
</blockquote>
<p>I would even go so far as to say it actually makes it harder.</p>
<blockquote>
<p>...As we continue to barrel down the path of exponentially more online communication, and dealing with tech companies using every trick available to grab at our extremely limited time and attention...</p>
</blockquote>
<p>Yeah very true! Takes a lot of <a href="http://localhost:5000/digital-minimalism" rel="noopener noreferrer">Digital Minimalism</a>.</p>
<blockquote>
<p>...for those of you that design and build software that affect millions of people: we, as technologists, <strong>wield incredible power over how people live their lives</strong>.</p>
<p>This is a great and daunting responsibility, which we often overlook as we focus on our immediate goals — <strong>goals that often reduce down to how to make a small uptick in a graph somewhere</strong>. As engineers, ==we live by quantifiable results==, and by and large, we have good intentions to improve the software we create. While it’s true that we improve what we measure, ==**it’s also true that what we’re able to measure is an abstraction of something far less quantifiable.**==</p>
</blockquote>
<p>Love how she calls out that <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> is probably just measuring, "are people using it?" (quantifiable) not "are people productive?" (not quantifiable).  This is often a problem with rewarding the <a href="http://localhost:5000/wrong-metrics" rel="noopener noreferrer">wrong metrics</a>.</p>


10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf empty

10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf=133:<h1>Godot is the new GameMaker</h1>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.337 [debug] l:len=1

10:45:07.337 [debug] l:buf=33:<h1>Godot is the new GameMaker</h1>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.337 [debug] l:len=13

10:45:07.337 [debug] l:buf=3:<h1>Godot is the new GameMaker</h1>
<p><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></p>


10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf empty

10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf=884:<h1>Why Remote</h1>
<ul>
<li>More parent friendly, especially mom friendly</li>
<li>expands our hiring pool</li>
<li>more diverse team</li>
<li>people are more focused, only interrupted when they need to be by coworkers</li>
<li>everything is better documented and people are forced to become better writers</li>
<li>No more people getting celebrated for working after hours, only the actual output matters</li>
<li>it's going to happen anyway, as soon as you put people in different floors or different buildings you are remote. The benefit of going all in is that you learn to do it well.</li>
</ul>
<ul>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></li>
</ul>


10:45:07.337 [debug] l:len=8

10:45:07.337 [debug] l:buf=84:<h1>Why Remote</h1>
<ul>
<li>More parent friendly, especially mom friendly</li>
<li>expands our hiring pool</li>
<li>more diverse team</li>
<li>people are more focused, only interrupted when they need to be by coworkers</li>
<li>everything is better documented and people are forced to become better writers</li>
<li>No more people getting celebrated for working after hours, only the actual output matters</li>
<li>it's going to happen anyway, as soon as you put people in different floors or different buildings you are remote. The benefit of going all in is that you learn to do it well.</li>
</ul>
<ul>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></li>
</ul>


10:45:07.337 [debug] l:len=88

10:45:07.337 [debug] l:buf=4:<h1>Why Remote</h1>
<ul>
<li>More parent friendly, especially mom friendly</li>
<li>expands our hiring pool</li>
<li>more diverse team</li>
<li>people are more focused, only interrupted when they need to be by coworkers</li>
<li>everything is better documented and people are forced to become better writers</li>
<li>No more people getting celebrated for working after hours, only the actual output matters</li>
<li>it's going to happen anyway, as soon as you put people in different floors or different buildings you are remote. The benefit of going all in is that you learn to do it well.</li>
</ul>
<ul>
<li><a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a></li>
</ul>


10:45:07.337 [debug] l:len=

10:45:07.337 [debug] l:buf empty

10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf=446:<h1>Prefer Writing over Speaking</h1>
<p><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></li>
</ul>


10:45:07.338 [debug] l:len=4

10:45:07.338 [debug] l:buf=46:<h1>Prefer Writing over Speaking</h1>
<p><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></li>
</ul>


10:45:07.338 [debug] l:len=44

10:45:07.338 [debug] l:buf=6:<h1>Prefer Writing over Speaking</h1>
<p><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></li>
</ul>


10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf empty

10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf=797:<h1>Digital Garden</h1>
<p>Digital Gardens are a lot like a <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>:</p>
<p>This is a great twitter thread on examples: <a href="https://threadreaderapp.com/thread/1250532315459194880.html" rel="noopener noreferrer">https://threadreaderapp.com/thread/1250532315459194880.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=7

10:45:07.338 [debug] l:buf=97:<h1>Digital Garden</h1>
<p>Digital Gardens are a lot like a <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>:</p>
<p>This is a great twitter thread on examples: <a href="https://threadreaderapp.com/thread/1250532315459194880.html" rel="noopener noreferrer">https://threadreaderapp.com/thread/1250532315459194880.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=79

10:45:07.338 [debug] l:buf=7:<h1>Digital Garden</h1>
<p>Digital Gardens are a lot like a <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>:</p>
<p>This is a great twitter thread on examples: <a href="https://threadreaderapp.com/thread/1250532315459194880.html" rel="noopener noreferrer">https://threadreaderapp.com/thread/1250532315459194880.html</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf empty

10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf=292:<h1>Journaling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=2

10:45:07.338 [debug] l:buf=92:<h1>Journaling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=29

10:45:07.338 [debug] l:buf=2:<h1>Journaling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf empty

10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf=74:<h1>pride</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.338 [debug] l:len=7

10:45:07.338 [debug] l:buf=4:<h1>pride</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.338 [debug] l:len=

10:45:07.338 [debug] l:buf empty

10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf=308:<h1>Pasted image 6</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.339 [debug] l:len=3

10:45:07.339 [debug] l:buf=08:<h1>Pasted image 6</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.339 [debug] l:len=30

10:45:07.339 [debug] l:buf=8:<h1>Pasted image 6</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf empty

10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf=88:<h1>Accountability</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.339 [debug] l:len=8

10:45:07.339 [debug] l:buf=8:<h1>Accountability</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf empty

10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf=161:<h1>May 3</h1>
<h1>May 3</h1>
<h2>Questions</h2>
<ul>
<li></li>
</ul>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.339 [debug] l:len=1

10:45:07.339 [debug] l:buf=61:<h1>May 3</h1>
<h1>May 3</h1>
<h2>Questions</h2>
<ul>
<li></li>
</ul>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.339 [debug] l:len=16

10:45:07.339 [debug] l:buf=1:<h1>May 3</h1>
<h1>May 3</h1>
<h2>Questions</h2>
<ul>
<li></li>
</ul>
<p><a href="http://localhost:5000/one-on-one" rel="noopener noreferrer">one-on-one</a></p>


10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf empty

10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf=400:<h1>Slack-VS-Basecamp-DataStructure</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.339 [debug] l:len=4

10:45:07.339 [debug] l:buf=00:<h1>Slack-VS-Basecamp-DataStructure</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.339 [debug] l:len=40

10:45:07.339 [debug] l:buf=0:<h1>Slack-VS-Basecamp-DataStructure</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-newsfeeds,-basecamp-is-a-tree" rel="noopener noreferrer">Slack is Newsfeeds, Basecamp is a tree</a></li>
</ul>


10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf empty

10:45:07.339 [debug] l:len=

10:45:07.339 [debug] l:buf=242:<h1>Obsidian--quick-switcher</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.339 [debug] l:len=2

10:45:07.339 [debug] l:buf=42:<h1>Obsidian--quick-switcher</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.339 [debug] l:len=24

10:45:07.340 [debug] l:buf=2:<h1>Obsidian--quick-switcher</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf empty

10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf=305:<h1>Pasted image 20200922163442</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.340 [debug] l:len=3

10:45:07.340 [debug] l:buf=05:<h1>Pasted image 20200922163442</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.340 [debug] l:len=30

10:45:07.340 [debug] l:buf=5:<h1>Pasted image 20200922163442</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf empty

10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf=128:<h1>2020-10-20</h1>
<ul>
<li>Wrote about <a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.340 [debug] l:len=1

10:45:07.340 [debug] l:buf=28:<h1>2020-10-20</h1>
<ul>
<li>Wrote about <a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.340 [debug] l:len=12

10:45:07.340 [debug] l:buf=8:<h1>2020-10-20</h1>
<ul>
<li>Wrote about <a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf empty

10:45:07.340 [debug] l:len=

10:45:07.340 [debug] l:buf=1592:<h1>2020-09-12</h1>
<ul>
<li>$1000 cash for Ernest money</li>
<li>If they end up breaching the contract this is what you get from them.</li>
<li>Not great, but all they have</li>
<li>They will probably want the dishwasher replaced, maybe a credit for how much we'd pay for one.</li>
<li>Settlement is when you sign the documents</li>
<li>Closing when EVERYTHING is done, everyone's got their money, it's on the county records. (usually 24h later after settlement).</li>
<li>They want to move in ASAP after settlement.
<ul>
<li>Settlement Deadline <strong>Oct 29th 2020</strong>
<ul>
<li>They don't want to pay for another month's rent</li>
</ul>
</li>
<li>~7 weeks</li>
</ul>
</li>
<li><strong>Oct 9th</strong> is their finical appraisal line
<ul>
<li>They are using Utah housing loan, which is a bit more of a risk.</li>
<li>They loose $1,000 and we loose a month in a half</li>
</ul>
</li>
<li>Their Recommendation: $3,000 earnest money and maybe move the deadline up (could help us pay for a month or two of rent)</li>
<li>~$1,500 for policy</li>
<li>Get HOA documents.</li>
<li>"Due Diligence": time for the buyers to <strong>do any tests they want to do</strong> to make sure it's good, the tub drains, electricity, etc...
<ul>
<li>They have to pay for the tests</li>
<li>If they find anything, they can cancel the contract and they get their earnest money back.</li>
</ul>
</li>
<li>They could do an appraisal and find that the home isn't worth as much as we are selling it for</li>
<li>$500 Home Warranty (for things like dishwashers and stuff, but not ours)</li>
</ul>
<p>#Hawaii</p>


10:45:07.341 [debug] l:len=1

10:45:07.341 [debug] l:buf=592:<h1>2020-09-12</h1>
<ul>
<li>$1000 cash for Ernest money</li>
<li>If they end up breaching the contract this is what you get from them.</li>
<li>Not great, but all they have</li>
<li>They will probably want the dishwasher replaced, maybe a credit for how much we'd pay for one.</li>
<li>Settlement is when you sign the documents</li>
<li>Closing when EVERYTHING is done, everyone's got their money, it's on the county records. (usually 24h later after settlement).</li>
<li>They want to move in ASAP after settlement.
<ul>
<li>Settlement Deadline <strong>Oct 29th 2020</strong>
<ul>
<li>They don't want to pay for another month's rent</li>
</ul>
</li>
<li>~7 weeks</li>
</ul>
</li>
<li><strong>Oct 9th</strong> is their finical appraisal line
<ul>
<li>They are using Utah housing loan, which is a bit more of a risk.</li>
<li>They loose $1,000 and we loose a month in a half</li>
</ul>
</li>
<li>Their Recommendation: $3,000 earnest money and maybe move the deadline up (could help us pay for a month or two of rent)</li>
<li>~$1,500 for policy</li>
<li>Get HOA documents.</li>
<li>"Due Diligence": time for the buyers to <strong>do any tests they want to do</strong> to make sure it's good, the tub drains, electricity, etc...
<ul>
<li>They have to pay for the tests</li>
<li>If they find anything, they can cancel the contract and they get their earnest money back.</li>
</ul>
</li>
<li>They could do an appraisal and find that the home isn't worth as much as we are selling it for</li>
<li>$500 Home Warranty (for things like dishwashers and stuff, but not ours)</li>
</ul>
<p>#Hawaii</p>


10:45:07.341 [debug] l:len=15

10:45:07.341 [debug] l:buf=92:<h1>2020-09-12</h1>
<ul>
<li>$1000 cash for Ernest money</li>
<li>If they end up breaching the contract this is what you get from them.</li>
<li>Not great, but all they have</li>
<li>They will probably want the dishwasher replaced, maybe a credit for how much we'd pay for one.</li>
<li>Settlement is when you sign the documents</li>
<li>Closing when EVERYTHING is done, everyone's got their money, it's on the county records. (usually 24h later after settlement).</li>
<li>They want to move in ASAP after settlement.
<ul>
<li>Settlement Deadline <strong>Oct 29th 2020</strong>
<ul>
<li>They don't want to pay for another month's rent</li>
</ul>
</li>
<li>~7 weeks</li>
</ul>
</li>
<li><strong>Oct 9th</strong> is their finical appraisal line
<ul>
<li>They are using Utah housing loan, which is a bit more of a risk.</li>
<li>They loose $1,000 and we loose a month in a half</li>
</ul>
</li>
<li>Their Recommendation: $3,000 earnest money and maybe move the deadline up (could help us pay for a month or two of rent)</li>
<li>~$1,500 for policy</li>
<li>Get HOA documents.</li>
<li>"Due Diligence": time for the buyers to <strong>do any tests they want to do</strong> to make sure it's good, the tub drains, electricity, etc...
<ul>
<li>They have to pay for the tests</li>
<li>If they find anything, they can cancel the contract and they get their earnest money back.</li>
</ul>
</li>
<li>They could do an appraisal and find that the home isn't worth as much as we are selling it for</li>
<li>$500 Home Warranty (for things like dishwashers and stuff, but not ours)</li>
</ul>
<p>#Hawaii</p>


10:45:07.341 [debug] l:len=159

10:45:07.341 [debug] l:buf=2:<h1>2020-09-12</h1>
<ul>
<li>$1000 cash for Ernest money</li>
<li>If they end up breaching the contract this is what you get from them.</li>
<li>Not great, but all they have</li>
<li>They will probably want the dishwasher replaced, maybe a credit for how much we'd pay for one.</li>
<li>Settlement is when you sign the documents</li>
<li>Closing when EVERYTHING is done, everyone's got their money, it's on the county records. (usually 24h later after settlement).</li>
<li>They want to move in ASAP after settlement.
<ul>
<li>Settlement Deadline <strong>Oct 29th 2020</strong>
<ul>
<li>They don't want to pay for another month's rent</li>
</ul>
</li>
<li>~7 weeks</li>
</ul>
</li>
<li><strong>Oct 9th</strong> is their finical appraisal line
<ul>
<li>They are using Utah housing loan, which is a bit more of a risk.</li>
<li>They loose $1,000 and we loose a month in a half</li>
</ul>
</li>
<li>Their Recommendation: $3,000 earnest money and maybe move the deadline up (could help us pay for a month or two of rent)</li>
<li>~$1,500 for policy</li>
<li>Get HOA documents.</li>
<li>"Due Diligence": time for the buyers to <strong>do any tests they want to do</strong> to make sure it's good, the tub drains, electricity, etc...
<ul>
<li>They have to pay for the tests</li>
<li>If they find anything, they can cancel the contract and they get their earnest money back.</li>
</ul>
</li>
<li>They could do an appraisal and find that the home isn't worth as much as we are selling it for</li>
<li>$500 Home Warranty (for things like dishwashers and stuff, but not ours)</li>
</ul>
<p>#Hawaii</p>


10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf empty

10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf=1956:<h1>asynchronous communication</h1>
<p>A type of communication where the time you respond doesn't matter. This allows you to have a flexibility in schedule you wouldn't otherwise have.</p>
<p>Opposite (usually) to <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>.</p>
<p>Keywords: <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.341 [debug] l:len=1

10:45:07.341 [debug] l:buf=956:<h1>asynchronous communication</h1>
<p>A type of communication where the time you respond doesn't matter. This allows you to have a flexibility in schedule you wouldn't otherwise have.</p>
<p>Opposite (usually) to <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>.</p>
<p>Keywords: <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.341 [debug] l:len=19

10:45:07.341 [debug] l:buf=56:<h1>asynchronous communication</h1>
<p>A type of communication where the time you respond doesn't matter. This allows you to have a flexibility in schedule you wouldn't otherwise have.</p>
<p>Opposite (usually) to <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>.</p>
<p>Keywords: <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.341 [debug] l:len=195

10:45:07.341 [debug] l:buf=6:<h1>asynchronous communication</h1>
<p>A type of communication where the time you respond doesn't matter. This allows you to have a flexibility in schedule you wouldn't otherwise have.</p>
<p>Opposite (usually) to <a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a>.</p>
<p>Keywords: <a href="http://localhost:5000/asynchronous" rel="noopener noreferrer">asynchronous</a> <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">Remote work</a> <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a> <a href="http://localhost:5000/long-form" rel="noopener noreferrer">Long-form</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/doist-on-asynchronus-communication" rel="noopener noreferrer">Doist on Asynchronus Communication</a></li>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
<li><a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/email" rel="noopener noreferrer">email</a></li>
</ul>


10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf empty

10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf=86:<h1>customer-reserach</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.341 [debug] l:len=8

10:45:07.341 [debug] l:buf=6:<h1>customer-reserach</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf empty

10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf=668:<h1>Meetings Known Downside</h1>
<blockquote>
<p>The foundation for <a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a> is reserved capacity.</p>
<p>I couldn't pursue this unexpected, incredibly insightful conversation that just happened if I had <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> all day.</p>
<p>But this one conversation might change a core feature of BC4. The <strong>known downside</strong> is the cost of reserved time.</p>
</blockquote>
<p><a href="https://twitter.com/rjs/status/1296573223828508673" rel="noopener noreferrer">https://twitter.com/rjs/status/1296573223828508673</a></p>


10:45:07.341 [debug] l:len=6

10:45:07.341 [debug] l:buf=68:<h1>Meetings Known Downside</h1>
<blockquote>
<p>The foundation for <a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a> is reserved capacity.</p>
<p>I couldn't pursue this unexpected, incredibly insightful conversation that just happened if I had <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> all day.</p>
<p>But this one conversation might change a core feature of BC4. The <strong>known downside</strong> is the cost of reserved time.</p>
</blockquote>
<p><a href="https://twitter.com/rjs/status/1296573223828508673" rel="noopener noreferrer">https://twitter.com/rjs/status/1296573223828508673</a></p>


10:45:07.341 [debug] l:len=66

10:45:07.341 [debug] l:buf=8:<h1>Meetings Known Downside</h1>
<blockquote>
<p>The foundation for <a href="http://localhost:5000/convexity" rel="noopener noreferrer">convexity</a> is reserved capacity.</p>
<p>I couldn't pursue this unexpected, incredibly insightful conversation that just happened if I had <a href="http://localhost:5000/meetings" rel="noopener noreferrer">Meetings</a> all day.</p>
<p>But this one conversation might change a core feature of BC4. The <strong>known downside</strong> is the cost of reserved time.</p>
</blockquote>
<p><a href="https://twitter.com/rjs/status/1296573223828508673" rel="noopener noreferrer">https://twitter.com/rjs/status/1296573223828508673</a></p>


10:45:07.341 [debug] l:len=

10:45:07.341 [debug] l:buf empty

10:45:07.341 [debug] l:len=

10:45:07.342 [debug] l:buf=288:<h1>components</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.342 [debug] l:len=2

10:45:07.342 [debug] l:buf=88:<h1>components</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.342 [debug] l:len=28

10:45:07.342 [debug] l:buf=8:<h1>components</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf empty

10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf=242:<h1>sharpen the saw</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.342 [debug] l:len=2

10:45:07.342 [debug] l:buf=42:<h1>sharpen the saw</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.342 [debug] l:len=24

10:45:07.342 [debug] l:buf=2:<h1>sharpen the saw</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf empty

10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf=236:<h1>Speare--drag-to-insert</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.342 [debug] l:len=2

10:45:07.342 [debug] l:buf=36:<h1>Speare--drag-to-insert</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.342 [debug] l:len=23

10:45:07.342 [debug] l:buf=6:<h1>Speare--drag-to-insert</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf empty

10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf=234:<h1>pairing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
</ul>


10:45:07.342 [debug] l:len=2

10:45:07.342 [debug] l:buf=34:<h1>pairing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
</ul>


10:45:07.342 [debug] l:len=23

10:45:07.342 [debug] l:buf=4:<h1>pairing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
</ul>


10:45:07.342 [debug] l:len=

10:45:07.342 [debug] l:buf empty

10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf=471:<h1>Everything's the Same Design</h1>
<p>The idea that, "everything is just a chat" or "everything is just a DB block" etc... these lead to really flexible systems but these types of products just <a href="http://localhost:5000/take-a-stand" rel="noopener noreferrer">take a stand</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.343 [debug] l:len=4

10:45:07.343 [debug] l:buf=71:<h1>Everything's the Same Design</h1>
<p>The idea that, "everything is just a chat" or "everything is just a DB block" etc... these lead to really flexible systems but these types of products just <a href="http://localhost:5000/take-a-stand" rel="noopener noreferrer">take a stand</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.343 [debug] l:len=47

10:45:07.343 [debug] l:buf=1:<h1>Everything's the Same Design</h1>
<p>The idea that, "everything is just a chat" or "everything is just a DB block" etc... these lead to really flexible systems but these types of products just <a href="http://localhost:5000/take-a-stand" rel="noopener noreferrer">take a stand</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf empty

10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf=235:<h1>planning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.343 [debug] l:len=2

10:45:07.343 [debug] l:buf=35:<h1>planning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.343 [debug] l:len=23

10:45:07.343 [debug] l:buf=5:<h1>planning</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf empty

10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf=698:<h1>Gitlab's Hanbook</h1>
<p><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a>'s handbook first approach: <a href="https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/" rel="noopener noreferrer">https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.343 [debug] l:len=6

10:45:07.343 [debug] l:buf=98:<h1>Gitlab's Hanbook</h1>
<p><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a>'s handbook first approach: <a href="https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/" rel="noopener noreferrer">https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.343 [debug] l:len=69

10:45:07.343 [debug] l:buf=8:<h1>Gitlab's Hanbook</h1>
<p><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a>'s handbook first approach: <a href="https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/" rel="noopener noreferrer">https://about.gitlab.com/company/culture/all-remote/handbook-first-documentation/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf empty

10:45:07.343 [debug] l:len=

10:45:07.343 [debug] l:buf=1845:<h1>Newsfeed</h1>
<ul>
<li>Prioritizes new data as better</li>
<li>Provides lots of <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> because of how much novelty it provides</li>
</ul>
<p>As seen in: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a>, <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> also uses it but it's less of a primary focus.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.343 [debug] l:len=1

10:45:07.343 [debug] l:buf=845:<h1>Newsfeed</h1>
<ul>
<li>Prioritizes new data as better</li>
<li>Provides lots of <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> because of how much novelty it provides</li>
</ul>
<p>As seen in: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a>, <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> also uses it but it's less of a primary focus.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.344 [debug] l:len=18

10:45:07.344 [debug] l:buf=45:<h1>Newsfeed</h1>
<ul>
<li>Prioritizes new data as better</li>
<li>Provides lots of <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> because of how much novelty it provides</li>
</ul>
<p>As seen in: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a>, <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> also uses it but it's less of a primary focus.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.344 [debug] l:len=184

10:45:07.344 [debug] l:buf=5:<h1>Newsfeed</h1>
<ul>
<li>Prioritizes new data as better</li>
<li>Provides lots of <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> because of how much novelty it provides</li>
</ul>
<p>As seen in: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/twitter" rel="noopener noreferrer">Twitter</a>, <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>.</p>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> also uses it but it's less of a primary focus.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/journal-vs-zettelkasten" rel="noopener noreferrer">Journal VS Zettelkasten</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">force the user to read everything</a></li>
</ul>


10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf empty

10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf=236:<h1>Habits MOC - Colliding Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.344 [debug] l:len=2

10:45:07.344 [debug] l:buf=36:<h1>Habits MOC - Colliding Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.344 [debug] l:len=23

10:45:07.344 [debug] l:buf=6:<h1>Habits MOC - Colliding Phase</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf empty

10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf=312:<h1>Wisdom and knowledge</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.344 [debug] l:len=3

10:45:07.344 [debug] l:buf=12:<h1>Wisdom and knowledge</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.344 [debug] l:len=31

10:45:07.344 [debug] l:buf=2:<h1>Wisdom and knowledge</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
</ul>


10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf empty

10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf=258:<h1>Factory Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.344 [debug] l:len=2

10:45:07.344 [debug] l:buf=58:<h1>Factory Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.344 [debug] l:len=25

10:45:07.344 [debug] l:buf=8:<h1>Factory Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf empty

10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf=797:<h1>Productivity is a feeling</h1>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that</p>
<blockquote>
<p>Productivity is more of a feeling. If you feel like you're been interupted and not really gotten into things you'll say you don't feel <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productive</a>. But if you've had lots of time to focus you'll probably feel very productive.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Maker's Schedule V.S. Managers Schedule -- By Paul Gram</a></li>
</ul>


10:45:07.344 [debug] l:len=7

10:45:07.344 [debug] l:buf=97:<h1>Productivity is a feeling</h1>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that</p>
<blockquote>
<p>Productivity is more of a feeling. If you feel like you're been interupted and not really gotten into things you'll say you don't feel <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productive</a>. But if you've had lots of time to focus you'll probably feel very productive.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Maker's Schedule V.S. Managers Schedule -- By Paul Gram</a></li>
</ul>


10:45:07.344 [debug] l:len=79

10:45:07.344 [debug] l:buf=7:<h1>Productivity is a feeling</h1>
<p><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a>'s <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that</p>
<blockquote>
<p>Productivity is more of a feeling. If you feel like you're been interupted and not really gotten into things you'll say you don't feel <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productive</a>. But if you've had lots of time to focus you'll probably feel very productive.</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/maker's-schedule-v.s.-managers-schedule----by-paul-gram" rel="noopener noreferrer">Maker's Schedule V.S. Managers Schedule -- By Paul Gram</a></li>
</ul>


10:45:07.344 [debug] l:len=

10:45:07.344 [debug] l:buf empty

10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf=924:<h1>January 27–February 2. 1 Nephi 16–22: “I Will Prepare the Way before You”</h1>
<h3>What is bothering you Gage? Why you struggling to read your scriptures so much?</h3>
<p>I have no idea. Feels like I just kind of don't want to? I feel like I don't have the time? Sounds horrible, but to be more precise I feel like I'm just too stressed. Like I'm living in the 1st and 4th quadrant too much. Kids kind of make that happen I feel sometimes because they go from "Calm..." to "PANIC! I NEED WATER AND I NEED TO GO POTTY AND DARVIL PICKED THE SPPPOOON I WANTEEEEEED!"</p>
<p>Tags:
scriptures,</p>
<p><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></p>


10:45:07.345 [debug] l:len=9

10:45:07.345 [debug] l:buf=24:<h1>January 27–February 2. 1 Nephi 16–22: “I Will Prepare the Way before You”</h1>
<h3>What is bothering you Gage? Why you struggling to read your scriptures so much?</h3>
<p>I have no idea. Feels like I just kind of don't want to? I feel like I don't have the time? Sounds horrible, but to be more precise I feel like I'm just too stressed. Like I'm living in the 1st and 4th quadrant too much. Kids kind of make that happen I feel sometimes because they go from "Calm..." to "PANIC! I NEED WATER AND I NEED TO GO POTTY AND DARVIL PICKED THE SPPPOOON I WANTEEEEEED!"</p>
<p>Tags:
scriptures,</p>
<p><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></p>


10:45:07.345 [debug] l:len=92

10:45:07.345 [debug] l:buf=4:<h1>January 27–February 2. 1 Nephi 16–22: “I Will Prepare the Way before You”</h1>
<h3>What is bothering you Gage? Why you struggling to read your scriptures so much?</h3>
<p>I have no idea. Feels like I just kind of don't want to? I feel like I don't have the time? Sounds horrible, but to be more precise I feel like I'm just too stressed. Like I'm living in the 1st and 4th quadrant too much. Kids kind of make that happen I feel sometimes because they go from "Calm..." to "PANIC! I NEED WATER AND I NEED TO GO POTTY AND DARVIL PICKED THE SPPPOOON I WANTEEEEEED!"</p>
<p>Tags:
scriptures,</p>
<p><a href="http://localhost:5000/journaling" rel="noopener noreferrer">Journaling</a>, <a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's History</a>, <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></p>


10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf empty

10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf=837:<h1>Category Theory for the working Hacker 🐷</h1>
<blockquote>
<p>A category where a morphism is a relation between objects: the relation of being less than or equal. Let’s check if it indeed is a category. Do we have identity morphisms? Every object is less than or equal to itself: check! Do we have composition? If a &lt;= b and b &lt;= c then a &lt;= c: check! Is composition associative? Check! A set with a relation like this is called a&nbsp;preorder, so a preorder is indeed a category.</p>
</blockquote>
<p>Function is a morphism or called an ➡
There is a 🐈 egory  that contains all sets called Set</p>
<p>Void is a set with nothing in it, no values</p>
<p>There's one with only one unit represented as ()</p>
<p>A preorder is a category where there is at most one morphism going from any object a to any object b</p>


10:45:07.345 [debug] l:len=8

10:45:07.345 [debug] l:buf=37:<h1>Category Theory for the working Hacker 🐷</h1>
<blockquote>
<p>A category where a morphism is a relation between objects: the relation of being less than or equal. Let’s check if it indeed is a category. Do we have identity morphisms? Every object is less than or equal to itself: check! Do we have composition? If a &lt;= b and b &lt;= c then a &lt;= c: check! Is composition associative? Check! A set with a relation like this is called a&nbsp;preorder, so a preorder is indeed a category.</p>
</blockquote>
<p>Function is a morphism or called an ➡
There is a 🐈 egory  that contains all sets called Set</p>
<p>Void is a set with nothing in it, no values</p>
<p>There's one with only one unit represented as ()</p>
<p>A preorder is a category where there is at most one morphism going from any object a to any object b</p>


10:45:07.345 [debug] l:len=83

10:45:07.345 [debug] l:buf=7:<h1>Category Theory for the working Hacker 🐷</h1>
<blockquote>
<p>A category where a morphism is a relation between objects: the relation of being less than or equal. Let’s check if it indeed is a category. Do we have identity morphisms? Every object is less than or equal to itself: check! Do we have composition? If a &lt;= b and b &lt;= c then a &lt;= c: check! Is composition associative? Check! A set with a relation like this is called a&nbsp;preorder, so a preorder is indeed a category.</p>
</blockquote>
<p>Function is a morphism or called an ➡
There is a 🐈 egory  that contains all sets called Set</p>
<p>Void is a set with nothing in it, no values</p>
<p>There's one with only one unit represented as ()</p>
<p>A preorder is a category where there is at most one morphism going from any object a to any object b</p>


10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf empty

10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf=389:<h1>DHH</h1>
<p>Creator of Ruby on Rails and Co-founder of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> with <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.345 [debug] l:len=3

10:45:07.345 [debug] l:buf=89:<h1>DHH</h1>
<p>Creator of Ruby on Rails and Co-founder of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> with <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.345 [debug] l:len=38

10:45:07.345 [debug] l:buf=9:<h1>DHH</h1>
<p>Creator of Ruby on Rails and Co-founder of <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> with <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></li>
</ul>


10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf empty

10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf=80:<h1>Scalable design systems with Tailwind CSS</h1>
<h2>What's the problem?</h2>


10:45:07.345 [debug] l:len=8

10:45:07.345 [debug] l:buf=0:<h1>Scalable design systems with Tailwind CSS</h1>
<h2>What's the problem?</h2>


10:45:07.345 [debug] l:len=

10:45:07.345 [debug] l:buf empty

10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf=1157:<h1>sprint</h1>
<p>a thing in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> where you work on a mini project. No longer than one month and most commonly two weeks. The main point of these Sprints is to avoid projects from taking years and to make <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a> easier.</p>
<p>The downside is they often turn into <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> where you just have a project that never ends and has no clear goal. Small improvements are made but it's hard to see much progress. You, end up wandering more than anything. People loose <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and generally just get lazy.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.346 [debug] l:len=1

10:45:07.346 [debug] l:buf=157:<h1>sprint</h1>
<p>a thing in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> where you work on a mini project. No longer than one month and most commonly two weeks. The main point of these Sprints is to avoid projects from taking years and to make <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a> easier.</p>
<p>The downside is they often turn into <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> where you just have a project that never ends and has no clear goal. Small improvements are made but it's hard to see much progress. You, end up wandering more than anything. People loose <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and generally just get lazy.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.346 [debug] l:len=11

10:45:07.346 [debug] l:buf=57:<h1>sprint</h1>
<p>a thing in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> where you work on a mini project. No longer than one month and most commonly two weeks. The main point of these Sprints is to avoid projects from taking years and to make <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a> easier.</p>
<p>The downside is they often turn into <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> where you just have a project that never ends and has no clear goal. Small improvements are made but it's hard to see much progress. You, end up wandering more than anything. People loose <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and generally just get lazy.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.346 [debug] l:len=115

10:45:07.346 [debug] l:buf=7:<h1>sprint</h1>
<p>a thing in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> where you work on a mini project. No longer than one month and most commonly two weeks. The main point of these Sprints is to avoid projects from taking years and to make <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a> easier.</p>
<p>The downside is they often turn into <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a> where you just have a project that never ends and has no clear goal. Small improvements are made but it's hard to see much progress. You, end up wandering more than anything. People loose <a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a> and generally just get lazy.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf empty

10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf=722:<h1>o11y</h1>
<p>An acronym for "Observability".</p>
<blockquote>
<p>“In control theory, observability is a measure of how well <strong>internal states of a system can be inferred by knowledge of its external outputs.</strong> The observability and controllability of a system are mathematical duals.” - Wikipedia (<a href="https://en.wikipedia.org/wiki/Observability" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Observability</a>)</p>
</blockquote>
<p><a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> told me about this and it's podcast by <a href="http://localhost:5000/honeycomb.io-intro-to-observability" rel="noopener noreferrer">Honeycomb.io intro to observability</a></p>


10:45:07.346 [debug] l:len=7

10:45:07.346 [debug] l:buf=22:<h1>o11y</h1>
<p>An acronym for "Observability".</p>
<blockquote>
<p>“In control theory, observability is a measure of how well <strong>internal states of a system can be inferred by knowledge of its external outputs.</strong> The observability and controllability of a system are mathematical duals.” - Wikipedia (<a href="https://en.wikipedia.org/wiki/Observability" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Observability</a>)</p>
</blockquote>
<p><a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> told me about this and it's podcast by <a href="http://localhost:5000/honeycomb.io-intro-to-observability" rel="noopener noreferrer">Honeycomb.io intro to observability</a></p>


10:45:07.346 [debug] l:len=72

10:45:07.346 [debug] l:buf=2:<h1>o11y</h1>
<p>An acronym for "Observability".</p>
<blockquote>
<p>“In control theory, observability is a measure of how well <strong>internal states of a system can be inferred by knowledge of its external outputs.</strong> The observability and controllability of a system are mathematical duals.” - Wikipedia (<a href="https://en.wikipedia.org/wiki/Observability" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Observability</a>)</p>
</blockquote>
<p><a href="http://localhost:5000/murphy" rel="noopener noreferrer">Murphy</a> told me about this and it's podcast by <a href="http://localhost:5000/honeycomb.io-intro-to-observability" rel="noopener noreferrer">Honeycomb.io intro to observability</a></p>


10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf empty

10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf=271:<h1>Basecamp's focus mode</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.346 [debug] l:len=2

10:45:07.346 [debug] l:buf=71:<h1>Basecamp's focus mode</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.346 [debug] l:len=27

10:45:07.346 [debug] l:buf=1:<h1>Basecamp's focus mode</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
</ul>


10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf empty

10:45:07.346 [debug] l:len=

10:45:07.346 [debug] l:buf=251:<h1>Essentialism Visual Guide</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.346 [debug] l:len=2

10:45:07.346 [debug] l:buf=51:<h1>Essentialism Visual Guide</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.346 [debug] l:len=25

10:45:07.346 [debug] l:buf=1:<h1>Essentialism Visual Guide</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a></li>
</ul>


10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf empty

10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf=2030:<h1>Project management is about communication</h1>
<p>When you often think about <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a> we often don't think about <a href="http://localhost:5000/communication-tools" rel="noopener noreferrer">communication tools</a> such as <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>. However, as a though experiment ask yourself the following questions:</p>
<ul>
<li>has anyone ever asked you to do something over Slack?</li>
<li>Has anyone ever followed up on a ticket in Slack?</li>
<li>Have you ever got an pull request in a reasonable amount of time without pinging them on Slack first?</li>
<li>Have you ever talked on a ticket AND talked with some in slack about the same ticket when they didn't respond fast enough?</li>
<li>Have you ever had a meeting where you talked over a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban board</a> such as a planning meeting or <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a>?</li>
<li>Have you ever held <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a> because a project wasn't on track?</li>
</ul>
<p>If any of the above are true it's foolhardy to think that project management and communication can be separated. This is one of the reasons I find <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> so compelling. It combines the two together because in a real sense they where never different.</p>
<h2>Example</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-14.png" rel="noopener noreferrer">Pasted image 14</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>👆 this shows an example of a Slackbot acting as a to-do.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.347 [debug] l:len=2

10:45:07.347 [debug] l:buf=030:<h1>Project management is about communication</h1>
<p>When you often think about <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a> we often don't think about <a href="http://localhost:5000/communication-tools" rel="noopener noreferrer">communication tools</a> such as <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>. However, as a though experiment ask yourself the following questions:</p>
<ul>
<li>has anyone ever asked you to do something over Slack?</li>
<li>Has anyone ever followed up on a ticket in Slack?</li>
<li>Have you ever got an pull request in a reasonable amount of time without pinging them on Slack first?</li>
<li>Have you ever talked on a ticket AND talked with some in slack about the same ticket when they didn't respond fast enough?</li>
<li>Have you ever had a meeting where you talked over a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban board</a> such as a planning meeting or <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a>?</li>
<li>Have you ever held <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a> because a project wasn't on track?</li>
</ul>
<p>If any of the above are true it's foolhardy to think that project management and communication can be separated. This is one of the reasons I find <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> so compelling. It combines the two together because in a real sense they where never different.</p>
<h2>Example</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-14.png" rel="noopener noreferrer">Pasted image 14</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>👆 this shows an example of a Slackbot acting as a to-do.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.347 [debug] l:len=20

10:45:07.347 [debug] l:buf=30:<h1>Project management is about communication</h1>
<p>When you often think about <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a> we often don't think about <a href="http://localhost:5000/communication-tools" rel="noopener noreferrer">communication tools</a> such as <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>. However, as a though experiment ask yourself the following questions:</p>
<ul>
<li>has anyone ever asked you to do something over Slack?</li>
<li>Has anyone ever followed up on a ticket in Slack?</li>
<li>Have you ever got an pull request in a reasonable amount of time without pinging them on Slack first?</li>
<li>Have you ever talked on a ticket AND talked with some in slack about the same ticket when they didn't respond fast enough?</li>
<li>Have you ever had a meeting where you talked over a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban board</a> such as a planning meeting or <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a>?</li>
<li>Have you ever held <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a> because a project wasn't on track?</li>
</ul>
<p>If any of the above are true it's foolhardy to think that project management and communication can be separated. This is one of the reasons I find <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> so compelling. It combines the two together because in a real sense they where never different.</p>
<h2>Example</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-14.png" rel="noopener noreferrer">Pasted image 14</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>👆 this shows an example of a Slackbot acting as a to-do.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.347 [debug] l:len=203

10:45:07.347 [debug] l:buf=0:<h1>Project management is about communication</h1>
<p>When you often think about <a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a> we often don't think about <a href="http://localhost:5000/communication-tools" rel="noopener noreferrer">communication tools</a> such as <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>. However, as a though experiment ask yourself the following questions:</p>
<ul>
<li>has anyone ever asked you to do something over Slack?</li>
<li>Has anyone ever followed up on a ticket in Slack?</li>
<li>Have you ever got an pull request in a reasonable amount of time without pinging them on Slack first?</li>
<li>Have you ever talked on a ticket AND talked with some in slack about the same ticket when they didn't respond fast enough?</li>
<li>Have you ever had a meeting where you talked over a <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban board</a> such as a planning meeting or <a href="http://localhost:5000/standup" rel="noopener noreferrer">Standup</a>?</li>
<li>Have you ever held <a href="http://localhost:5000/meeting" rel="noopener noreferrer">meeting</a> because a project wasn't on track?</li>
</ul>
<p>If any of the above are true it's foolhardy to think that project management and communication can be separated. This is one of the reasons I find <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> so compelling. It combines the two together because in a real sense they where never different.</p>
<h2>Example</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-14.png" rel="noopener noreferrer">Pasted image 14</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>👆 this shows an example of a Slackbot acting as a to-do.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf empty

10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf=900:<h1>Slack's channels live forever</h1>
<p>Slack's channels aren't easy to archive, and if you do archive them they are hard to find again. This means they never go away and slowly lead to a huge amount of <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">Slack channel bloat</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.347 [debug] l:len=9

10:45:07.347 [debug] l:buf=00:<h1>Slack's channels live forever</h1>
<p>Slack's channels aren't easy to archive, and if you do archive them they are hard to find again. This means they never go away and slowly lead to a huge amount of <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">Slack channel bloat</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.347 [debug] l:len=90

10:45:07.347 [debug] l:buf=0:<h1>Slack's channels live forever</h1>
<p>Slack's channels aren't easy to archive, and if you do archive them they are hard to find again. This means they never go away and slowly lead to a huge amount of <a href="http://localhost:5000/slack-channel-bloat" rel="noopener noreferrer">Slack channel bloat</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-availability-v.s.-discoverability" rel="noopener noreferrer">Information Availability V.S. Discoverability</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf empty

10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf=443:<h1>Slack is a notification hub</h1>
<p>It seems the main power of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> is it's <a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">additive notifications</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.347 [debug] l:len=4

10:45:07.347 [debug] l:buf=43:<h1>Slack is a notification hub</h1>
<p>It seems the main power of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> is it's <a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">additive notifications</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.347 [debug] l:len=44

10:45:07.347 [debug] l:buf=3:<h1>Slack is a notification hub</h1>
<p>It seems the main power of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> is it's <a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">additive notifications</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.347 [debug] l:len=

10:45:07.347 [debug] l:buf empty

10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf=418:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.348 [debug] l:len=4

10:45:07.348 [debug] l:buf=18:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.348 [debug] l:len=41

10:45:07.348 [debug] l:buf=8:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
</ul>


10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf empty

10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf=305:<h1>Pasted image 20201020084234</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.348 [debug] l:len=3

10:45:07.348 [debug] l:buf=05:<h1>Pasted image 20201020084234</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.348 [debug] l:len=30

10:45:07.348 [debug] l:buf=5:<h1>Pasted image 20201020084234</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
</ul>


10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf empty

10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf=229:<h1>Twist's Design</h1>
<ul>
<li>The badge (knowing there's something) is important but there's no need to stress people about how many messages there are (Oh there's 5, oh no there's 20, 50!?!? Now I'm really behind)</li>
</ul>


10:45:07.348 [debug] l:len=2

10:45:07.348 [debug] l:buf=29:<h1>Twist's Design</h1>
<ul>
<li>The badge (knowing there's something) is important but there's no need to stress people about how many messages there are (Oh there's 5, oh no there's 20, 50!?!? Now I'm really behind)</li>
</ul>


10:45:07.348 [debug] l:len=22

10:45:07.348 [debug] l:buf=9:<h1>Twist's Design</h1>
<ul>
<li>The badge (knowing there's something) is important but there's no need to stress people about how many messages there are (Oh there's 5, oh no there's 20, 50!?!? Now I'm really behind)</li>
</ul>


10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf empty

10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf=85:<h1>engineering</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.348 [debug] l:len=8

10:45:07.348 [debug] l:buf=5:<h1>engineering</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf empty

10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf=294:<h1>Put First Things First</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.348 [debug] l:len=2

10:45:07.348 [debug] l:buf=94:<h1>Put First Things First</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.348 [debug] l:len=29

10:45:07.348 [debug] l:buf=4:<h1>Put First Things First</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.348 [debug] l:len=

10:45:07.348 [debug] l:buf empty

10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf=1406:<h1>Messenger <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> Schema</h1>
<p>Populating the database</p>
<pre><code>{
  set {
     _:location &lt;type&gt; "location" .
      _:location &lt;name&gt; "Ken Garf" .
      _:chatRoom &lt;type&gt; "chatRoom" .
      _:chatRoom &lt;phoneNumber&gt; "+12083571222".
      _:location &lt;comunicates_via&gt; _:chatRoom .
      _:conversation &lt;type&gt; "conversation" .
      _:message &lt;type&gt; "message" .
      _:message &lt;body&gt; "Hello, how are you" .
      _:message_2 &lt;type&gt; "message".
      _:message_2 &lt;body&gt; "great" .
      _:conversation &lt;has_item&gt; _:message .
      _:conversation &lt;has_item&gt; _:message_2 .
  }
}
</code></pre>
<p>Find all the conversations/items for a location</p>
<pre><code>{
  loc(func: eq(type, "location")) {
    name
    comunicates_via {
      type
      phoneNumber
      has_conversation {
        type
        has_item(orderasc: body) {
          body
          type
          
        }
      }
    }
  }
}
</code></pre>
<ul>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/graph-of-notes" rel="noopener noreferrer">Graph of Notes</a></li>
</ul>


10:45:07.349 [debug] l:len=1

10:45:07.349 [debug] l:buf=406:<h1>Messenger <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> Schema</h1>
<p>Populating the database</p>
<pre><code>{
  set {
     _:location &lt;type&gt; "location" .
      _:location &lt;name&gt; "Ken Garf" .
      _:chatRoom &lt;type&gt; "chatRoom" .
      _:chatRoom &lt;phoneNumber&gt; "+12083571222".
      _:location &lt;comunicates_via&gt; _:chatRoom .
      _:conversation &lt;type&gt; "conversation" .
      _:message &lt;type&gt; "message" .
      _:message &lt;body&gt; "Hello, how are you" .
      _:message_2 &lt;type&gt; "message".
      _:message_2 &lt;body&gt; "great" .
      _:conversation &lt;has_item&gt; _:message .
      _:conversation &lt;has_item&gt; _:message_2 .
  }
}
</code></pre>
<p>Find all the conversations/items for a location</p>
<pre><code>{
  loc(func: eq(type, "location")) {
    name
    comunicates_via {
      type
      phoneNumber
      has_conversation {
        type
        has_item(orderasc: body) {
          body
          type
          
        }
      }
    }
  }
}
</code></pre>
<ul>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/graph-of-notes" rel="noopener noreferrer">Graph of Notes</a></li>
</ul>


10:45:07.349 [debug] l:len=14

10:45:07.349 [debug] l:buf=06:<h1>Messenger <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> Schema</h1>
<p>Populating the database</p>
<pre><code>{
  set {
     _:location &lt;type&gt; "location" .
      _:location &lt;name&gt; "Ken Garf" .
      _:chatRoom &lt;type&gt; "chatRoom" .
      _:chatRoom &lt;phoneNumber&gt; "+12083571222".
      _:location &lt;comunicates_via&gt; _:chatRoom .
      _:conversation &lt;type&gt; "conversation" .
      _:message &lt;type&gt; "message" .
      _:message &lt;body&gt; "Hello, how are you" .
      _:message_2 &lt;type&gt; "message".
      _:message_2 &lt;body&gt; "great" .
      _:conversation &lt;has_item&gt; _:message .
      _:conversation &lt;has_item&gt; _:message_2 .
  }
}
</code></pre>
<p>Find all the conversations/items for a location</p>
<pre><code>{
  loc(func: eq(type, "location")) {
    name
    comunicates_via {
      type
      phoneNumber
      has_conversation {
        type
        has_item(orderasc: body) {
          body
          type
          
        }
      }
    }
  }
}
</code></pre>
<ul>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/graph-of-notes" rel="noopener noreferrer">Graph of Notes</a></li>
</ul>


10:45:07.349 [debug] l:len=140

10:45:07.349 [debug] l:buf=6:<h1>Messenger <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> Schema</h1>
<p>Populating the database</p>
<pre><code>{
  set {
     _:location &lt;type&gt; "location" .
      _:location &lt;name&gt; "Ken Garf" .
      _:chatRoom &lt;type&gt; "chatRoom" .
      _:chatRoom &lt;phoneNumber&gt; "+12083571222".
      _:location &lt;comunicates_via&gt; _:chatRoom .
      _:conversation &lt;type&gt; "conversation" .
      _:message &lt;type&gt; "message" .
      _:message &lt;body&gt; "Hello, how are you" .
      _:message_2 &lt;type&gt; "message".
      _:message_2 &lt;body&gt; "great" .
      _:conversation &lt;has_item&gt; _:message .
      _:conversation &lt;has_item&gt; _:message_2 .
  }
}
</code></pre>
<p>Find all the conversations/items for a location</p>
<pre><code>{
  loc(func: eq(type, "location")) {
    name
    comunicates_via {
      type
      phoneNumber
      has_conversation {
        type
        has_item(orderasc: body) {
          body
          type
          
        }
      }
    }
  }
}
</code></pre>
<ul>
<li><a href="http://localhost:5000/how-to-run-dgraph" rel="noopener noreferrer">How to run Dgraph</a></li>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/graph-of-notes" rel="noopener noreferrer">Graph of Notes</a></li>
</ul>


10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf empty

10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf=1470:<h1>Would you rather use Google Docs</h1>
<p>When talking about <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a> <a href="https://www.youtube.com/watch?v=IJGt5BUTK0I" rel="noopener noreferrer">a lady realized</a> that she started to get <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>ed and reverted to using a Google doc instead of using the tool she committed to.</p>
<p>I think this happens because She got overwhelmed and when it comes to Project Management, <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a>. Google docs was simple and didn't get in her way. She understood all the parts of it and therefore it was comfortable. I feel this way about <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well. When I used it it focused me. All the ADD of configuring went away because my brain knew there wasn't any to be had.</p>
<p>Not only that configuring is a two edge sword because once you've configured a system you've essentially programmed it. It's hard to un-program it and it's unlikely you'll do a good job on your first try. I trust people that have thought about problems a lot more than I do than the idea that I had a few minutes into using a tool. Even if I've thought about a problem for months they've thought about them for years.</p>
<p>When there's only one thing to do... you do it.</p>


10:45:07.349 [debug] l:len=1

10:45:07.349 [debug] l:buf=470:<h1>Would you rather use Google Docs</h1>
<p>When talking about <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a> <a href="https://www.youtube.com/watch?v=IJGt5BUTK0I" rel="noopener noreferrer">a lady realized</a> that she started to get <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>ed and reverted to using a Google doc instead of using the tool she committed to.</p>
<p>I think this happens because She got overwhelmed and when it comes to Project Management, <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a>. Google docs was simple and didn't get in her way. She understood all the parts of it and therefore it was comfortable. I feel this way about <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well. When I used it it focused me. All the ADD of configuring went away because my brain knew there wasn't any to be had.</p>
<p>Not only that configuring is a two edge sword because once you've configured a system you've essentially programmed it. It's hard to un-program it and it's unlikely you'll do a good job on your first try. I trust people that have thought about problems a lot more than I do than the idea that I had a few minutes into using a tool. Even if I've thought about a problem for months they've thought about them for years.</p>
<p>When there's only one thing to do... you do it.</p>


10:45:07.349 [debug] l:len=14

10:45:07.349 [debug] l:buf=70:<h1>Would you rather use Google Docs</h1>
<p>When talking about <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a> <a href="https://www.youtube.com/watch?v=IJGt5BUTK0I" rel="noopener noreferrer">a lady realized</a> that she started to get <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>ed and reverted to using a Google doc instead of using the tool she committed to.</p>
<p>I think this happens because She got overwhelmed and when it comes to Project Management, <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a>. Google docs was simple and didn't get in her way. She understood all the parts of it and therefore it was comfortable. I feel this way about <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well. When I used it it focused me. All the ADD of configuring went away because my brain knew there wasn't any to be had.</p>
<p>Not only that configuring is a two edge sword because once you've configured a system you've essentially programmed it. It's hard to un-program it and it's unlikely you'll do a good job on your first try. I trust people that have thought about problems a lot more than I do than the idea that I had a few minutes into using a tool. Even if I've thought about a problem for months they've thought about them for years.</p>
<p>When there's only one thing to do... you do it.</p>


10:45:07.349 [debug] l:len=147

10:45:07.349 [debug] l:buf=0:<h1>Would you rather use Google Docs</h1>
<p>When talking about <a href="http://localhost:5000/clickup" rel="noopener noreferrer">ClickUp</a> <a href="https://www.youtube.com/watch?v=IJGt5BUTK0I" rel="noopener noreferrer">a lady realized</a> that she started to get <a href="http://localhost:5000/stress" rel="noopener noreferrer">Stress</a>ed and reverted to using a Google doc instead of using the tool she committed to.</p>
<p>I think this happens because She got overwhelmed and when it comes to Project Management, <a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a>. Google docs was simple and didn't get in her way. She understood all the parts of it and therefore it was comfortable. I feel this way about <a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a> as well. When I used it it focused me. All the ADD of configuring went away because my brain knew there wasn't any to be had.</p>
<p>Not only that configuring is a two edge sword because once you've configured a system you've essentially programmed it. It's hard to un-program it and it's unlikely you'll do a good job on your first try. I trust people that have thought about problems a lot more than I do than the idea that I had a few minutes into using a tool. Even if I've thought about a problem for months they've thought about them for years.</p>
<p>When there's only one thing to do... you do it.</p>


10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf empty

10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf=257:<h1>Pasted image 20201012150328</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.349 [debug] l:len=2

10:45:07.349 [debug] l:buf=57:<h1>Pasted image 20201012150328</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.349 [debug] l:len=25

10:45:07.349 [debug] l:buf=7:<h1>Pasted image 20201012150328</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
</ul>


10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf empty

10:45:07.349 [debug] l:len=

10:45:07.349 [debug] l:buf=931:<h1>Deep Work</h1>
<p>A book by Cal Newport</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.349 [debug] l:len=9

10:45:07.349 [debug] l:buf=31:<h1>Deep Work</h1>
<p>A book by Cal Newport</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.350 [debug] l:len=93

10:45:07.350 [debug] l:buf=1:<h1>Deep Work</h1>
<p>A book by Cal Newport</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/passive-notification" rel="noopener noreferrer">passive notification</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
</ul>


10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf empty

10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf=90:<p>Clerk meeting.</p>
<p>Her takes initiative
LDS.org has good information
Handbook 2</p>


10:45:07.350 [debug] l:len=9

10:45:07.350 [debug] l:buf=0:<p>Clerk meeting.</p>
<p>Her takes initiative
LDS.org has good information
Handbook 2</p>


10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf empty

10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf=1129:<h1>JAM stack stuff with Tony</h1>
<ul>
<li>What are the different parts of the architecture, do we need to pay attention to?
<ul>
<li>Do you need templates?</li>
<li>Do you need CMS?</li>
</ul>
</li>
<li>Static Site Generators
<ul>
<li>Jekyl</li>
<li>Hugo</li>
<li>Spike</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li>Github Repo
<ol>
<li>Build sever (CI, netlifly, codeship...)</li>
<li>Hosting (netlifly, s3, github pages...)</li>
<li>CMS? (dato, pageleaf, netlifly-cms....)</li>
</ol>
</li>
<li>API's
<ul>
<li>Phoenix, node....</li>
</ul>
</li>
</ul>
<h1>Where does the data live?</h1>
<ul>
<li>Pageleaf
<ul>
<li>Store it in Github (.md or in .json)</li>
<li>Netlifly picks up build</li>
<li>Netlifly deploys</li>
</ul>
</li>
<li>Dato
<ul>
<li>Store it for you</li>
<li>Pulll in hitting their API</li>
<li>Create <code>.md</code> files in the build server (CI)</li>
</ul>
</li>
<li>Custom
<ul>
<li>Postgress &amp; Node, API (Dato)</li>
<li>:( create your own UI modify the data. (maybe use Admin UI generator)</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://localhost:5000/jam-stack" rel="noopener noreferrer">JAM Stack</a></li>
</ul>


10:45:07.350 [debug] l:len=1

10:45:07.350 [debug] l:buf=129:<h1>JAM stack stuff with Tony</h1>
<ul>
<li>What are the different parts of the architecture, do we need to pay attention to?
<ul>
<li>Do you need templates?</li>
<li>Do you need CMS?</li>
</ul>
</li>
<li>Static Site Generators
<ul>
<li>Jekyl</li>
<li>Hugo</li>
<li>Spike</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li>Github Repo
<ol>
<li>Build sever (CI, netlifly, codeship...)</li>
<li>Hosting (netlifly, s3, github pages...)</li>
<li>CMS? (dato, pageleaf, netlifly-cms....)</li>
</ol>
</li>
<li>API's
<ul>
<li>Phoenix, node....</li>
</ul>
</li>
</ul>
<h1>Where does the data live?</h1>
<ul>
<li>Pageleaf
<ul>
<li>Store it in Github (.md or in .json)</li>
<li>Netlifly picks up build</li>
<li>Netlifly deploys</li>
</ul>
</li>
<li>Dato
<ul>
<li>Store it for you</li>
<li>Pulll in hitting their API</li>
<li>Create <code>.md</code> files in the build server (CI)</li>
</ul>
</li>
<li>Custom
<ul>
<li>Postgress &amp; Node, API (Dato)</li>
<li>:( create your own UI modify the data. (maybe use Admin UI generator)</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://localhost:5000/jam-stack" rel="noopener noreferrer">JAM Stack</a></li>
</ul>


10:45:07.350 [debug] l:len=11

10:45:07.350 [debug] l:buf=29:<h1>JAM stack stuff with Tony</h1>
<ul>
<li>What are the different parts of the architecture, do we need to pay attention to?
<ul>
<li>Do you need templates?</li>
<li>Do you need CMS?</li>
</ul>
</li>
<li>Static Site Generators
<ul>
<li>Jekyl</li>
<li>Hugo</li>
<li>Spike</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li>Github Repo
<ol>
<li>Build sever (CI, netlifly, codeship...)</li>
<li>Hosting (netlifly, s3, github pages...)</li>
<li>CMS? (dato, pageleaf, netlifly-cms....)</li>
</ol>
</li>
<li>API's
<ul>
<li>Phoenix, node....</li>
</ul>
</li>
</ul>
<h1>Where does the data live?</h1>
<ul>
<li>Pageleaf
<ul>
<li>Store it in Github (.md or in .json)</li>
<li>Netlifly picks up build</li>
<li>Netlifly deploys</li>
</ul>
</li>
<li>Dato
<ul>
<li>Store it for you</li>
<li>Pulll in hitting their API</li>
<li>Create <code>.md</code> files in the build server (CI)</li>
</ul>
</li>
<li>Custom
<ul>
<li>Postgress &amp; Node, API (Dato)</li>
<li>:( create your own UI modify the data. (maybe use Admin UI generator)</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://localhost:5000/jam-stack" rel="noopener noreferrer">JAM Stack</a></li>
</ul>


10:45:07.350 [debug] l:len=112

10:45:07.350 [debug] l:buf=9:<h1>JAM stack stuff with Tony</h1>
<ul>
<li>What are the different parts of the architecture, do we need to pay attention to?
<ul>
<li>Do you need templates?</li>
<li>Do you need CMS?</li>
</ul>
</li>
<li>Static Site Generators
<ul>
<li>Jekyl</li>
<li>Hugo</li>
<li>Spike</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li>Github Repo
<ol>
<li>Build sever (CI, netlifly, codeship...)</li>
<li>Hosting (netlifly, s3, github pages...)</li>
<li>CMS? (dato, pageleaf, netlifly-cms....)</li>
</ol>
</li>
<li>API's
<ul>
<li>Phoenix, node....</li>
</ul>
</li>
</ul>
<h1>Where does the data live?</h1>
<ul>
<li>Pageleaf
<ul>
<li>Store it in Github (.md or in .json)</li>
<li>Netlifly picks up build</li>
<li>Netlifly deploys</li>
</ul>
</li>
<li>Dato
<ul>
<li>Store it for you</li>
<li>Pulll in hitting their API</li>
<li>Create <code>.md</code> files in the build server (CI)</li>
</ul>
</li>
<li>Custom
<ul>
<li>Postgress &amp; Node, API (Dato)</li>
<li>:( create your own UI modify the data. (maybe use Admin UI generator)</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://localhost:5000/jam-stack" rel="noopener noreferrer">JAM Stack</a></li>
</ul>


10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf empty

10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf=315:<p><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> is a form of dishonesty</p>
<p>It's telling yourself or others that you will do something then doing something else</p>
<ul>
<li><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></li>
</ul>


10:45:07.350 [debug] l:len=3

10:45:07.350 [debug] l:buf=15:<p><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> is a form of dishonesty</p>
<p>It's telling yourself or others that you will do something then doing something else</p>
<ul>
<li><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></li>
</ul>


10:45:07.350 [debug] l:len=31

10:45:07.350 [debug] l:buf=5:<p><a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> is a form of dishonesty</p>
<p>It's telling yourself or others that you will do something then doing something else</p>
<ul>
<li><a href="http://localhost:5000/honesty" rel="noopener noreferrer">Honesty</a></li>
</ul>


10:45:07.350 [debug] l:len=

10:45:07.350 [debug] l:buf empty

10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf=831:<p>Slack is about... slacking</p>
<p>When I was a kid I had to put away my toys. Putting away toys was so boring :sleeping: that I felt that I would die. So I decided to try mixing playing with it. I would put the toy I wanted to put away onto a toy car and vrrrrroooom it over to the toybox then dump it in, and Repeat! Oddly, my parents were quite sceptical of this method, and for probably good reason. It was not difficult to go from play putting away toys to just... playing. Often when my parents left me to my own devices nothing would get done even after hours.</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's history</a> #story</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.351 [debug] l:len=8

10:45:07.351 [debug] l:buf=31:<p>Slack is about... slacking</p>
<p>When I was a kid I had to put away my toys. Putting away toys was so boring :sleeping: that I felt that I would die. So I decided to try mixing playing with it. I would put the toy I wanted to put away onto a toy car and vrrrrroooom it over to the toybox then dump it in, and Repeat! Oddly, my parents were quite sceptical of this method, and for probably good reason. It was not difficult to go from play putting away toys to just... playing. Often when my parents left me to my own devices nothing would get done even after hours.</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's history</a> #story</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.351 [debug] l:len=83

10:45:07.351 [debug] l:buf=1:<p>Slack is about... slacking</p>
<p>When I was a kid I had to put away my toys. Putting away toys was so boring :sleeping: that I felt that I would die. So I decided to try mixing playing with it. I would put the toy I wanted to put away onto a toy car and vrrrrroooom it over to the toybox then dump it in, and Repeat! Oddly, my parents were quite sceptical of this method, and for probably good reason. It was not difficult to go from play putting away toys to just... playing. Often when my parents left me to my own devices nothing would get done even after hours.</p>
<p><a href="http://localhost:5000/gage's-history" rel="noopener noreferrer">Gage's history</a> #story</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf empty

10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf=264:<h1>gaming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.351 [debug] l:len=2

10:45:07.351 [debug] l:buf=64:<h1>gaming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.351 [debug] l:len=26

10:45:07.351 [debug] l:buf=4:<h1>gaming</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf empty

10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf=229:<h1>Supply Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.351 [debug] l:len=2

10:45:07.351 [debug] l:buf=29:<h1>Supply Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.351 [debug] l:len=22

10:45:07.351 [debug] l:buf=9:<h1>Supply Side</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.351 [debug] l:len=

10:45:07.351 [debug] l:buf empty

10:45:07.352 [debug] l:len=

10:45:07.352 [debug] l:buf=2297:<h1>Blog-- TinaCMS, Implementing Shape Up</h1>
<p>ref: <a href="https://ncphi.dev/blog/implementing-shape-up" rel="noopener noreferrer">https://ncphi.dev/blog/implementing-shape-up</a></p>
<p>An endless <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">sprint</a>.</p>
<blockquote>
<p>without a formal objective the team might be trying to <strong><a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">make progress in a dozen directions</a></strong>, almost ensuring that no progress was being made in any direction.</p>
<p>The system we created made <strong>distraction a natural tendency</strong>, and fighting against that tendency was an exhausting exercise.</p>
<p>The problem with this lack of structure was our productivity was <strong>decided mostly by luck</strong>.</p>
</blockquote>
<p>They also talked about how there's no formal process to bring up new ideas:</p>
<blockquote>
<p><strong>There was no formal way to <a href="http://localhost:5000/pitches" rel="noopener noreferrer">bring up new ideas</a></strong>: When multiple projects of various length are being run at once, each with <a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a>, then there is no good time to bring up new ideas.</p>
</blockquote>
<p>They talk about how without a <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things took far longer than expected. Nobody really made sure each piece was worth working on:</p>
<blockquote>
<p><strong>Work expands to fill the time allotted for it</strong>: Projects didn't have deadlines. They were done when they were done. Some projects dragged on for weeks longer then we expected. Some projects were cut short. There was never a conversation about how much a project was really worth</p>
</blockquote>
<h2>Visualizing the change:</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20.png" rel="noopener noreferrer">Pasted image 20</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
</ul>


10:45:07.352 [debug] l:len=2

10:45:07.352 [debug] l:buf=297:<h1>Blog-- TinaCMS, Implementing Shape Up</h1>
<p>ref: <a href="https://ncphi.dev/blog/implementing-shape-up" rel="noopener noreferrer">https://ncphi.dev/blog/implementing-shape-up</a></p>
<p>An endless <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">sprint</a>.</p>
<blockquote>
<p>without a formal objective the team might be trying to <strong><a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">make progress in a dozen directions</a></strong>, almost ensuring that no progress was being made in any direction.</p>
<p>The system we created made <strong>distraction a natural tendency</strong>, and fighting against that tendency was an exhausting exercise.</p>
<p>The problem with this lack of structure was our productivity was <strong>decided mostly by luck</strong>.</p>
</blockquote>
<p>They also talked about how there's no formal process to bring up new ideas:</p>
<blockquote>
<p><strong>There was no formal way to <a href="http://localhost:5000/pitches" rel="noopener noreferrer">bring up new ideas</a></strong>: When multiple projects of various length are being run at once, each with <a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a>, then there is no good time to bring up new ideas.</p>
</blockquote>
<p>They talk about how without a <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things took far longer than expected. Nobody really made sure each piece was worth working on:</p>
<blockquote>
<p><strong>Work expands to fill the time allotted for it</strong>: Projects didn't have deadlines. They were done when they were done. Some projects dragged on for weeks longer then we expected. Some projects were cut short. There was never a conversation about how much a project was really worth</p>
</blockquote>
<h2>Visualizing the change:</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20.png" rel="noopener noreferrer">Pasted image 20</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
</ul>


10:45:07.352 [debug] l:len=22

10:45:07.352 [debug] l:buf=97:<h1>Blog-- TinaCMS, Implementing Shape Up</h1>
<p>ref: <a href="https://ncphi.dev/blog/implementing-shape-up" rel="noopener noreferrer">https://ncphi.dev/blog/implementing-shape-up</a></p>
<p>An endless <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">sprint</a>.</p>
<blockquote>
<p>without a formal objective the team might be trying to <strong><a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">make progress in a dozen directions</a></strong>, almost ensuring that no progress was being made in any direction.</p>
<p>The system we created made <strong>distraction a natural tendency</strong>, and fighting against that tendency was an exhausting exercise.</p>
<p>The problem with this lack of structure was our productivity was <strong>decided mostly by luck</strong>.</p>
</blockquote>
<p>They also talked about how there's no formal process to bring up new ideas:</p>
<blockquote>
<p><strong>There was no formal way to <a href="http://localhost:5000/pitches" rel="noopener noreferrer">bring up new ideas</a></strong>: When multiple projects of various length are being run at once, each with <a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a>, then there is no good time to bring up new ideas.</p>
</blockquote>
<p>They talk about how without a <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things took far longer than expected. Nobody really made sure each piece was worth working on:</p>
<blockquote>
<p><strong>Work expands to fill the time allotted for it</strong>: Projects didn't have deadlines. They were done when they were done. Some projects dragged on for weeks longer then we expected. Some projects were cut short. There was never a conversation about how much a project was really worth</p>
</blockquote>
<h2>Visualizing the change:</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20.png" rel="noopener noreferrer">Pasted image 20</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
</ul>


10:45:07.352 [debug] l:len=229

10:45:07.352 [debug] l:buf=7:<h1>Blog-- TinaCMS, Implementing Shape Up</h1>
<p>ref: <a href="https://ncphi.dev/blog/implementing-shape-up" rel="noopener noreferrer">https://ncphi.dev/blog/implementing-shape-up</a></p>
<p>An endless <a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">sprint</a>.</p>
<blockquote>
<p>without a formal objective the team might be trying to <strong><a href="http://localhost:5000/essentialism,-focusing-energy" rel="noopener noreferrer">make progress in a dozen directions</a></strong>, almost ensuring that no progress was being made in any direction.</p>
<p>The system we created made <strong>distraction a natural tendency</strong>, and fighting against that tendency was an exhausting exercise.</p>
<p>The problem with this lack of structure was our productivity was <strong>decided mostly by luck</strong>.</p>
</blockquote>
<p>They also talked about how there's no formal process to bring up new ideas:</p>
<blockquote>
<p><strong>There was no formal way to <a href="http://localhost:5000/pitches" rel="noopener noreferrer">bring up new ideas</a></strong>: When multiple projects of various length are being run at once, each with <a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a>, then there is no good time to bring up new ideas.</p>
</blockquote>
<p>They talk about how without a <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things took far longer than expected. Nobody really made sure each piece was worth working on:</p>
<blockquote>
<p><strong>Work expands to fill the time allotted for it</strong>: Projects didn't have deadlines. They were done when they were done. Some projects dragged on for weeks longer then we expected. Some projects were cut short. There was never a conversation about how much a project was really worth</p>
</blockquote>
<h2>Visualizing the change:</h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20.png" rel="noopener noreferrer">Pasted image 20</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/sprints" rel="noopener noreferrer">Sprints</a></li>
</ul>


10:45:07.352 [debug] l:len=

10:45:07.352 [debug] l:buf empty

10:45:07.352 [debug] l:len=

10:45:07.352 [debug] l:buf=3171:<h1>Asynchronous communication, The cure to notification overload (Youtube)</h1>
<h2>My Summary</h2>
<ul>
<li>One of the major benefits is mental health
<ul>
<li>(this was also mentioned in <a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a>)</li>
</ul>
</li>
<li>Low Context culture</li>
<li>"What if nobody was awake?"</li>
<li>Async requires good tools</li>
<li>Go back and forth 3 times means you should hold a meeting</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=8TDMz5Kz1AE" rel="noopener noreferrer">https://www.youtube.com/watch?v=8TDMz5Kz1AE</a></p>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092456.png" rel="noopener noreferrer">Pasted image 20201020092456</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092443.png" rel="noopener noreferrer">Pasted image 20201020092443</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>The biggest problem is GitLab not working <a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">handbook first</a>. We have an amazing handbook that allows us to collaborate, onboard new people, and think collectively.<br>
However, it is counterintuitive to communicate changes to the handbook. The default of people, when they wish to communicate a change, is to send a Slack message, send an email, give a presentation, or tell people in a meeting —&nbsp;anything&nbsp;but make a change in the handbook.<br>
It's slower for them. It's quicker to use any other form. If they make a change in the handbook, they first have to find the relevant part of the handbook, they sometimes have to adjust the handbook to make sure their change will fit in, they have to go through a technical process and a review or two, and they have to wait a bit before it's deployed.<br>
It's slower than any other option. However, it allows people that commit a change after that to build upon a change. When they take that extra time, it's building a foundation for the next thing. <br>
I think of it as brick laying. Every piece of information is a brick. At GitLab, there is a well-structured house, and everyone adds to that one house. Because we're pretty particular on how we build it, it has a strong foundation and we can build it very high. <br>
In every other company, they send the brick into the hands of people. Everyone is receiving bricks daily that they have to add to the house they're building internally. They forget things and things are unclear. A lot of context has to be created because there is no context around where to place the bricks.<br>
So, you can end up with a thousand houses that look quite different, that are all hanging a bit, and each time you add a brick to the top one pops out at the bottom. —&nbsp;GitLab co-founder and CEO Sid Sijbrandij</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.352 [debug] l:len=3

10:45:07.352 [debug] l:buf=171:<h1>Asynchronous communication, The cure to notification overload (Youtube)</h1>
<h2>My Summary</h2>
<ul>
<li>One of the major benefits is mental health
<ul>
<li>(this was also mentioned in <a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a>)</li>
</ul>
</li>
<li>Low Context culture</li>
<li>"What if nobody was awake?"</li>
<li>Async requires good tools</li>
<li>Go back and forth 3 times means you should hold a meeting</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=8TDMz5Kz1AE" rel="noopener noreferrer">https://www.youtube.com/watch?v=8TDMz5Kz1AE</a></p>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092456.png" rel="noopener noreferrer">Pasted image 20201020092456</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092443.png" rel="noopener noreferrer">Pasted image 20201020092443</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>The biggest problem is GitLab not working <a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">handbook first</a>. We have an amazing handbook that allows us to collaborate, onboard new people, and think collectively.<br>
However, it is counterintuitive to communicate changes to the handbook. The default of people, when they wish to communicate a change, is to send a Slack message, send an email, give a presentation, or tell people in a meeting —&nbsp;anything&nbsp;but make a change in the handbook.<br>
It's slower for them. It's quicker to use any other form. If they make a change in the handbook, they first have to find the relevant part of the handbook, they sometimes have to adjust the handbook to make sure their change will fit in, they have to go through a technical process and a review or two, and they have to wait a bit before it's deployed.<br>
It's slower than any other option. However, it allows people that commit a change after that to build upon a change. When they take that extra time, it's building a foundation for the next thing. <br>
I think of it as brick laying. Every piece of information is a brick. At GitLab, there is a well-structured house, and everyone adds to that one house. Because we're pretty particular on how we build it, it has a strong foundation and we can build it very high. <br>
In every other company, they send the brick into the hands of people. Everyone is receiving bricks daily that they have to add to the house they're building internally. They forget things and things are unclear. A lot of context has to be created because there is no context around where to place the bricks.<br>
So, you can end up with a thousand houses that look quite different, that are all hanging a bit, and each time you add a brick to the top one pops out at the bottom. —&nbsp;GitLab co-founder and CEO Sid Sijbrandij</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.352 [debug] l:len=31

10:45:07.352 [debug] l:buf=71:<h1>Asynchronous communication, The cure to notification overload (Youtube)</h1>
<h2>My Summary</h2>
<ul>
<li>One of the major benefits is mental health
<ul>
<li>(this was also mentioned in <a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a>)</li>
</ul>
</li>
<li>Low Context culture</li>
<li>"What if nobody was awake?"</li>
<li>Async requires good tools</li>
<li>Go back and forth 3 times means you should hold a meeting</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=8TDMz5Kz1AE" rel="noopener noreferrer">https://www.youtube.com/watch?v=8TDMz5Kz1AE</a></p>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092456.png" rel="noopener noreferrer">Pasted image 20201020092456</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092443.png" rel="noopener noreferrer">Pasted image 20201020092443</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>The biggest problem is GitLab not working <a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">handbook first</a>. We have an amazing handbook that allows us to collaborate, onboard new people, and think collectively.<br>
However, it is counterintuitive to communicate changes to the handbook. The default of people, when they wish to communicate a change, is to send a Slack message, send an email, give a presentation, or tell people in a meeting —&nbsp;anything&nbsp;but make a change in the handbook.<br>
It's slower for them. It's quicker to use any other form. If they make a change in the handbook, they first have to find the relevant part of the handbook, they sometimes have to adjust the handbook to make sure their change will fit in, they have to go through a technical process and a review or two, and they have to wait a bit before it's deployed.<br>
It's slower than any other option. However, it allows people that commit a change after that to build upon a change. When they take that extra time, it's building a foundation for the next thing. <br>
I think of it as brick laying. Every piece of information is a brick. At GitLab, there is a well-structured house, and everyone adds to that one house. Because we're pretty particular on how we build it, it has a strong foundation and we can build it very high. <br>
In every other company, they send the brick into the hands of people. Everyone is receiving bricks daily that they have to add to the house they're building internally. They forget things and things are unclear. A lot of context has to be created because there is no context around where to place the bricks.<br>
So, you can end up with a thousand houses that look quite different, that are all hanging a bit, and each time you add a brick to the top one pops out at the bottom. —&nbsp;GitLab co-founder and CEO Sid Sijbrandij</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.352 [debug] l:len=317

10:45:07.352 [debug] l:buf=1:<h1>Asynchronous communication, The cure to notification overload (Youtube)</h1>
<h2>My Summary</h2>
<ul>
<li>One of the major benefits is mental health
<ul>
<li>(this was also mentioned in <a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a>)</li>
</ul>
</li>
<li>Low Context culture</li>
<li>"What if nobody was awake?"</li>
<li>Async requires good tools</li>
<li>Go back and forth 3 times means you should hold a meeting</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=8TDMz5Kz1AE" rel="noopener noreferrer">https://www.youtube.com/watch?v=8TDMz5Kz1AE</a></p>
<p>#handwritten-notes</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092456.png" rel="noopener noreferrer">Pasted image 20201020092456</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201020092443.png" rel="noopener noreferrer">Pasted image 20201020092443</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<blockquote>
<p>The biggest problem is GitLab not working <a href="http://localhost:5000/gitlab's-hanbook" rel="noopener noreferrer">handbook first</a>. We have an amazing handbook that allows us to collaborate, onboard new people, and think collectively.<br>
However, it is counterintuitive to communicate changes to the handbook. The default of people, when they wish to communicate a change, is to send a Slack message, send an email, give a presentation, or tell people in a meeting —&nbsp;anything&nbsp;but make a change in the handbook.<br>
It's slower for them. It's quicker to use any other form. If they make a change in the handbook, they first have to find the relevant part of the handbook, they sometimes have to adjust the handbook to make sure their change will fit in, they have to go through a technical process and a review or two, and they have to wait a bit before it's deployed.<br>
It's slower than any other option. However, it allows people that commit a change after that to build upon a change. When they take that extra time, it's building a foundation for the next thing. <br>
I think of it as brick laying. Every piece of information is a brick. At GitLab, there is a well-structured house, and everyone adds to that one house. Because we're pretty particular on how we build it, it has a strong foundation and we can build it very high. <br>
In every other company, they send the brick into the hands of people. Everyone is receiving bricks daily that they have to add to the house they're building internally. They forget things and things are unclear. A lot of context has to be created because there is no context around where to place the bricks.<br>
So, you can end up with a thousand houses that look quite different, that are all hanging a bit, and each time you add a brick to the top one pops out at the bottom. —&nbsp;GitLab co-founder and CEO Sid Sijbrandij</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a></li>
</ul>


10:45:07.352 [debug] l:len=

10:45:07.352 [debug] l:buf empty

10:45:07.352 [debug] l:len=

10:45:07.352 [debug] l:buf=1985:<h1>Dopamine</h1>
<p>A seeking-and-reward neurochemical (the one that is most closely linked to <strong>focus</strong> and <strong>motivation</strong>).</p>
<p>A hormone that can cause addition.</p>
<p>Often linked with seeing something novel. Exploited by <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, and anything with a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> or <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s.</p>
<p><a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a> are often a huge source of it, but also just technology in general.</p>
<p>Sources: <a href="https://www.webmd.com/mental-health/what-is-dopamine" rel="noopener noreferrer">https://www.webmd.com/mental-health/what-is-dopamine</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
</ul>


10:45:07.352 [debug] l:len=1

10:45:07.353 [debug] l:buf=985:<h1>Dopamine</h1>
<p>A seeking-and-reward neurochemical (the one that is most closely linked to <strong>focus</strong> and <strong>motivation</strong>).</p>
<p>A hormone that can cause addition.</p>
<p>Often linked with seeing something novel. Exploited by <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, and anything with a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> or <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s.</p>
<p><a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a> are often a huge source of it, but also just technology in general.</p>
<p>Sources: <a href="https://www.webmd.com/mental-health/what-is-dopamine" rel="noopener noreferrer">https://www.webmd.com/mental-health/what-is-dopamine</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
</ul>


10:45:07.353 [debug] l:len=19

10:45:07.353 [debug] l:buf=85:<h1>Dopamine</h1>
<p>A seeking-and-reward neurochemical (the one that is most closely linked to <strong>focus</strong> and <strong>motivation</strong>).</p>
<p>A hormone that can cause addition.</p>
<p>Often linked with seeing something novel. Exploited by <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, and anything with a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> or <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s.</p>
<p><a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a> are often a huge source of it, but also just technology in general.</p>
<p>Sources: <a href="https://www.webmd.com/mental-health/what-is-dopamine" rel="noopener noreferrer">https://www.webmd.com/mental-health/what-is-dopamine</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
</ul>


10:45:07.353 [debug] l:len=198

10:45:07.353 [debug] l:buf=5:<h1>Dopamine</h1>
<p>A seeking-and-reward neurochemical (the one that is most closely linked to <strong>focus</strong> and <strong>motivation</strong>).</p>
<p>A hormone that can cause addition.</p>
<p>Often linked with seeing something novel. Exploited by <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>, and anything with a <a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a> or <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s.</p>
<p><a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a> are often a huge source of it, but also just technology in general.</p>
<p>Sources: <a href="https://www.webmd.com/mental-health/what-is-dopamine" rel="noopener noreferrer">https://www.webmd.com/mental-health/what-is-dopamine</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/dopamine,-smartphones-&amp;-you-a-battle-for-your-time" rel="noopener noreferrer">Dopamine, Smartphones &amp; You A battle for your time</a></li>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
</ul>


10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf empty

10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf=3547:<h1>Slack</h1>
<p>A well designed tool for remotely tapping people on the shoulders.</p>
<p>An "<a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>" <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a> tool that often leads to <a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a>.</p>
<p>Tends to be very <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> heavy.</p>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.353 [debug] l:len=3

10:45:07.353 [debug] l:buf=547:<h1>Slack</h1>
<p>A well designed tool for remotely tapping people on the shoulders.</p>
<p>An "<a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>" <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a> tool that often leads to <a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a>.</p>
<p>Tends to be very <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> heavy.</p>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.353 [debug] l:len=35

10:45:07.353 [debug] l:buf=47:<h1>Slack</h1>
<p>A well designed tool for remotely tapping people on the shoulders.</p>
<p>An "<a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>" <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a> tool that often leads to <a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a>.</p>
<p>Tends to be very <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> heavy.</p>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.353 [debug] l:len=354

10:45:07.353 [debug] l:buf=7:<h1>Slack</h1>
<p>A well designed tool for remotely tapping people on the shoulders.</p>
<p>An "<a href="http://localhost:5000/async-ish" rel="noopener noreferrer">Async-ish</a>" <a href="http://localhost:5000/communication" rel="noopener noreferrer">communication</a> tool that often leads to <a href="http://localhost:5000/poor-communication" rel="noopener noreferrer">Poor communication</a>.</p>
<p>Tends to be very <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a> heavy.</p>
<p>see:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dgraph---ripping-off-the-slack-bandaid" rel="noopener noreferrer">Dgraph - Ripping off the slack bandaid</a></li>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/effective-async-communication" rel="noopener noreferrer">Effective Async Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/midterm-memory" rel="noopener noreferrer">Midterm memory</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
<li><a href="http://localhost:5000/power-of-a-title" rel="noopener noreferrer">Power of a Title</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
<li><a href="http://localhost:5000/setting-boundaries-in-software-is-a-two-way-street" rel="noopener noreferrer">Setting boundaries in software is a two way street</a></li>
<li><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
<li><a href="http://localhost:5000/announcements" rel="noopener noreferrer">announcements</a></li>
<li><a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy and fun are not productive</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/the-hidden-costs-of-group-chat-slack" rel="noopener noreferrer">the hidden costs of Group chat (slack)</a></li>
</ul>


10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf empty

10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf=84:<h1>Board game Idea</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.353 [debug] l:len=8

10:45:07.353 [debug] l:buf=4:<h1>Board game Idea</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf empty

10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf=317:<h1>Selling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.353 [debug] l:len=3

10:45:07.353 [debug] l:buf=17:<h1>Selling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.353 [debug] l:len=31

10:45:07.353 [debug] l:buf=7:<h1>Selling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.353 [debug] l:len=

10:45:07.353 [debug] l:buf empty

10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf=370:<h1>Basecamp's an all-in-one solution</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.354 [debug] l:len=3

10:45:07.354 [debug] l:buf=70:<h1>Basecamp's an all-in-one solution</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.354 [debug] l:len=37

10:45:07.354 [debug] l:buf=0:<h1>Basecamp's an all-in-one solution</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf empty

10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf=569:<h1>Interweaving conversations in Slack</h1>
<hr>
<h2><a href="http://localhost:5000/conversation-overrun.png" rel="noopener noreferrer">Conversation-Overrun</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.354 [debug] l:len=5

10:45:07.354 [debug] l:buf=69:<h1>Interweaving conversations in Slack</h1>
<hr>
<h2><a href="http://localhost:5000/conversation-overrun.png" rel="noopener noreferrer">Conversation-Overrun</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.354 [debug] l:len=56

10:45:07.354 [debug] l:buf=9:<h1>Interweaving conversations in Slack</h1>
<hr>
<h2><a href="http://localhost:5000/conversation-overrun.png" rel="noopener noreferrer">Conversation-Overrun</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf empty

10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf=1054:<h1>3 rewards we seek</h1>
<p>There are 3 <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> driven rewards we seek:</p>
<ol>
<li><strong>Tribe</strong>: We want to be accepted, important, included and attractive to our peers.</li>
<li><strong>Hunt</strong>: We like to search for new things that will bring us pleasure. This helped us find food and keep us alive in the past but leads us to <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> now.</li>
<li><strong>Self</strong>: We like to control, dominate and complete challenges. We like "slaying" items in our inbox.</li>
</ol>
<p>These are usually used by <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer"> Dark UX Patterns</a> to keep us <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addicted</a>.</p>
<p>ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/%5D" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/]</a></p>


10:45:07.354 [debug] l:len=1

10:45:07.354 [debug] l:buf=054:<h1>3 rewards we seek</h1>
<p>There are 3 <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> driven rewards we seek:</p>
<ol>
<li><strong>Tribe</strong>: We want to be accepted, important, included and attractive to our peers.</li>
<li><strong>Hunt</strong>: We like to search for new things that will bring us pleasure. This helped us find food and keep us alive in the past but leads us to <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> now.</li>
<li><strong>Self</strong>: We like to control, dominate and complete challenges. We like "slaying" items in our inbox.</li>
</ol>
<p>These are usually used by <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer"> Dark UX Patterns</a> to keep us <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addicted</a>.</p>
<p>ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/%5D" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/]</a></p>


10:45:07.354 [debug] l:len=10

10:45:07.354 [debug] l:buf=54:<h1>3 rewards we seek</h1>
<p>There are 3 <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> driven rewards we seek:</p>
<ol>
<li><strong>Tribe</strong>: We want to be accepted, important, included and attractive to our peers.</li>
<li><strong>Hunt</strong>: We like to search for new things that will bring us pleasure. This helped us find food and keep us alive in the past but leads us to <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> now.</li>
<li><strong>Self</strong>: We like to control, dominate and complete challenges. We like "slaying" items in our inbox.</li>
</ol>
<p>These are usually used by <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer"> Dark UX Patterns</a> to keep us <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addicted</a>.</p>
<p>ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/%5D" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/]</a></p>


10:45:07.354 [debug] l:len=105

10:45:07.354 [debug] l:buf=4:<h1>3 rewards we seek</h1>
<p>There are 3 <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a> driven rewards we seek:</p>
<ol>
<li><strong>Tribe</strong>: We want to be accepted, important, included and attractive to our peers.</li>
<li><strong>Hunt</strong>: We like to search for new things that will bring us pleasure. This helped us find food and keep us alive in the past but leads us to <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> now.</li>
<li><strong>Self</strong>: We like to control, dominate and complete challenges. We like "slaying" items in our inbox.</li>
</ol>
<p>These are usually used by <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer"> Dark UX Patterns</a> to keep us <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addicted</a>.</p>
<p>ref: <a href="https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/%5D" rel="noopener noreferrer">https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/]</a></p>


10:45:07.354 [debug] l:len=

10:45:07.354 [debug] l:buf empty

10:45:07.355 [debug] l:len=

10:45:07.355 [debug] l:buf=1128:<h1>Youtube--Share what You know, While You Learn To build an Audience</h1>
<p><a href="https://www.youtube.com/watch?v=84Mf-CdRin4" rel="noopener noreferrer">https://www.youtube.com/watch?v=84Mf-CdRin4</a></p>
<ul>
<li>Teach what you <del>know</del> just learned.</li>
<li>Out teach the competition
<ul>
<li>They are</li>
</ul>
</li>
<li>Wealth is your ability to convert knowledge and experience</li>
<li><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></li>
<li><a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> because there's <a href="http://localhost:5000/nothing-new-under-the-sun" rel="noopener noreferrer">nothing new under the sun</a>.</li>
</ul>
<p>Every one piece of content you consume, share 2x that.</p>
<p>How do I adapt this content for a an under served audience.</p>
<h2><a href="http://localhost:5000/confidence" rel="noopener noreferrer">confidence</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-22.png" rel="noopener noreferrer">Pasted image 22</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.355 [debug] l:len=1

10:45:07.355 [debug] l:buf=128:<h1>Youtube--Share what You know, While You Learn To build an Audience</h1>
<p><a href="https://www.youtube.com/watch?v=84Mf-CdRin4" rel="noopener noreferrer">https://www.youtube.com/watch?v=84Mf-CdRin4</a></p>
<ul>
<li>Teach what you <del>know</del> just learned.</li>
<li>Out teach the competition
<ul>
<li>They are</li>
</ul>
</li>
<li>Wealth is your ability to convert knowledge and experience</li>
<li><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></li>
<li><a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> because there's <a href="http://localhost:5000/nothing-new-under-the-sun" rel="noopener noreferrer">nothing new under the sun</a>.</li>
</ul>
<p>Every one piece of content you consume, share 2x that.</p>
<p>How do I adapt this content for a an under served audience.</p>
<h2><a href="http://localhost:5000/confidence" rel="noopener noreferrer">confidence</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-22.png" rel="noopener noreferrer">Pasted image 22</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.355 [debug] l:len=11

10:45:07.355 [debug] l:buf=28:<h1>Youtube--Share what You know, While You Learn To build an Audience</h1>
<p><a href="https://www.youtube.com/watch?v=84Mf-CdRin4" rel="noopener noreferrer">https://www.youtube.com/watch?v=84Mf-CdRin4</a></p>
<ul>
<li>Teach what you <del>know</del> just learned.</li>
<li>Out teach the competition
<ul>
<li>They are</li>
</ul>
</li>
<li>Wealth is your ability to convert knowledge and experience</li>
<li><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></li>
<li><a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> because there's <a href="http://localhost:5000/nothing-new-under-the-sun" rel="noopener noreferrer">nothing new under the sun</a>.</li>
</ul>
<p>Every one piece of content you consume, share 2x that.</p>
<p>How do I adapt this content for a an under served audience.</p>
<h2><a href="http://localhost:5000/confidence" rel="noopener noreferrer">confidence</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-22.png" rel="noopener noreferrer">Pasted image 22</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.355 [debug] l:len=112

10:45:07.355 [debug] l:buf=8:<h1>Youtube--Share what You know, While You Learn To build an Audience</h1>
<p><a href="https://www.youtube.com/watch?v=84Mf-CdRin4" rel="noopener noreferrer">https://www.youtube.com/watch?v=84Mf-CdRin4</a></p>
<ul>
<li>Teach what you <del>know</del> just learned.</li>
<li>Out teach the competition
<ul>
<li>They are</li>
</ul>
</li>
<li>Wealth is your ability to convert knowledge and experience</li>
<li><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></li>
<li><a href="http://localhost:5000/synthesize" rel="noopener noreferrer">synthesize</a> because there's <a href="http://localhost:5000/nothing-new-under-the-sun" rel="noopener noreferrer">nothing new under the sun</a>.</li>
</ul>
<p>Every one piece of content you consume, share 2x that.</p>
<p>How do I adapt this content for a an under served audience.</p>
<h2><a href="http://localhost:5000/confidence" rel="noopener noreferrer">confidence</a></h2>
<hr>
<h2><a href="http://localhost:5000/pasted-image-22.png" rel="noopener noreferrer">Pasted image 22</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.355 [debug] l:len=

10:45:07.355 [debug] l:buf empty

10:45:07.355 [debug] l:len=

10:45:07.355 [debug] l:buf=58:<h1>The Importance of Personality Diversity in Teams</h1>


10:45:07.355 [debug] l:len=5

10:45:07.355 [debug] l:buf=8:<h1>The Importance of Personality Diversity in Teams</h1>


10:45:07.355 [debug] l:len=

10:45:07.355 [debug] l:buf empty

10:45:07.356 [debug] l:len=

10:45:07.356 [debug] l:buf=5248:<h1>Shape Up (book notes)</h1>
<blockquote>
<p>Some companies use two-week cycles (aka “sprints”). We learned that two weeks is too short to get anything meaningful done. Worse than that, two-week cycles are extremely costly due to the planning overhead. The amount of work you get out of two weeks isn’t worth the collective hours around the table to “sprint plan” or the opportunity cost of breaking everyone’s momentum to re-group.</p>
</blockquote>
<p>Two week cool down</p>
<blockquote>
<p>Therefore, after each six-week cycle, we schedule two weeks for&nbsp;cool-down. This is a period with no scheduled work where we can breathe, meet as needed, and consider what to do next.</p>
<p><strong>During cool-down, programmers and designers on project teams are free to work on whatever they want.</strong> After working hard to ship their six-week projects, they enjoy having time that’s under their control. They use it to fix bugs, explore new ideas, or try out new technical possibilities.</p>
</blockquote>
<p>1 designer and 1-2 developers</p>
<blockquote>
<p>Our project teams consist of either one designer and two programmers or one designer and one programmer. They’re joined by a QA person who does integration testing later in the cycle.</p>
</blockquote>
<h2>How to handle bugs</h2>
<p>That said, nobody likes bugs. We still want ways to deal with them. Three strategies have worked for us.</p>
<p>Use cool-down. Ask any programmer if there are things they wish they could go back and fix and they’ll have a list to show you. The&nbsp;cool-down&nbsp;period between cycles gives them time to do exactly that. Six weeks is not long to wait for the majority of bugs, and two weeks every six weeks actually adds up to a lot of time for fixing them.</p>
<p>Bring it to the betting table. If a bug is too big to fix during cool-down, it can compete for resources at the betting table. Suppose a back-end process is slowing the app down and a programmer wants to change it from a synchronous step to an asynchronous job. The programmer can make the case for fixing it and shape the solution in a pitch. Then instead of interrupting other work, the people at the betting table can make a deliberate decision. Time should always be used strategically. There’s a huge difference between delaying other work to fix a bug versus deciding up front that the bug is worth the time to fix.</p>
<p>Schedule a bug smash. Once a year—usually around the holidays—we’ll dedicate a whole cycle to fixing bugs. We call it a “bug smash.” The holidays are a good time for this because it’s hard to get a normal project done when people are traveling or taking time off. The team can self-organize to pick off the most important bugs and solve long-standing issues in the front-end or back-end.</p>
<hr>
<h1>bigger projects</h1>
<p>What about projects that just can’t be done in one cycle? In that case we still only bet six weeks at a time. Suppose we envision a feature that takes two cycles to ship. We reduce our risk dramatically by shaping a specific six week target, with something fully built and working at the end of that six weeks. If that goes as expected, we’ll feel good about betting the next six weeks the way we envisioned in our heads. But if it doesn’t, we could define a very different project. Or we could put the multi-cycle thing on pause and do something urgent that came up. The important thing is that we always shape what the end looks like for that cycle and that we keep our options open to change course.</p>
<h2>Is this the right time?&nbsp;</h2>
<p>The kind of project we want to do next can depend on which projects we’ve done recently. Maybe it’s been too long since we’ve made a splash of news with a new feature. Or perhaps we’ve been building too many new features and feel overdue to fix some long-standing customer requests. Or if the teams spent the last couple cycles in the same area of the app, their morale may dip if we plan yet another project doing the same kind of work.
Those are all reasons that we might pass on a project even though it’s perfectly well shaped and valuable. The project’s great; it’s just not the right time.</p>
<h2>Projects not tasks:</h2>
<p>Splitting the project into tasks up front is like putting the pitch through a paper shredder. Everybody just gets disconnected pieces. We want the project to stay “whole” through the entire process so we never lose sight of the bigger picture.</p>
<h2>when to stop</h2>
<p>Instead of comparing up against the ideal, compare down to&nbsp;baseline—the current reality for customers. How do customers solve this problem today, without this feature? What’s the frustrating workaround that this feature eliminates? How much longer should customers put up with something that doesn’t work or wait for a solution because we aren’t sure if design A might be better than design B</p>
<h2>Keywords:</h2>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
</ul>


10:45:07.356 [debug] l:len=5

10:45:07.356 [debug] l:buf=248:<h1>Shape Up (book notes)</h1>
<blockquote>
<p>Some companies use two-week cycles (aka “sprints”). We learned that two weeks is too short to get anything meaningful done. Worse than that, two-week cycles are extremely costly due to the planning overhead. The amount of work you get out of two weeks isn’t worth the collective hours around the table to “sprint plan” or the opportunity cost of breaking everyone’s momentum to re-group.</p>
</blockquote>
<p>Two week cool down</p>
<blockquote>
<p>Therefore, after each six-week cycle, we schedule two weeks for&nbsp;cool-down. This is a period with no scheduled work where we can breathe, meet as needed, and consider what to do next.</p>
<p><strong>During cool-down, programmers and designers on project teams are free to work on whatever they want.</strong> After working hard to ship their six-week projects, they enjoy having time that’s under their control. They use it to fix bugs, explore new ideas, or try out new technical possibilities.</p>
</blockquote>
<p>1 designer and 1-2 developers</p>
<blockquote>
<p>Our project teams consist of either one designer and two programmers or one designer and one programmer. They’re joined by a QA person who does integration testing later in the cycle.</p>
</blockquote>
<h2>How to handle bugs</h2>
<p>That said, nobody likes bugs. We still want ways to deal with them. Three strategies have worked for us.</p>
<p>Use cool-down. Ask any programmer if there are things they wish they could go back and fix and they’ll have a list to show you. The&nbsp;cool-down&nbsp;period between cycles gives them time to do exactly that. Six weeks is not long to wait for the majority of bugs, and two weeks every six weeks actually adds up to a lot of time for fixing them.</p>
<p>Bring it to the betting table. If a bug is too big to fix during cool-down, it can compete for resources at the betting table. Suppose a back-end process is slowing the app down and a programmer wants to change it from a synchronous step to an asynchronous job. The programmer can make the case for fixing it and shape the solution in a pitch. Then instead of interrupting other work, the people at the betting table can make a deliberate decision. Time should always be used strategically. There’s a huge difference between delaying other work to fix a bug versus deciding up front that the bug is worth the time to fix.</p>
<p>Schedule a bug smash. Once a year—usually around the holidays—we’ll dedicate a whole cycle to fixing bugs. We call it a “bug smash.” The holidays are a good time for this because it’s hard to get a normal project done when people are traveling or taking time off. The team can self-organize to pick off the most important bugs and solve long-standing issues in the front-end or back-end.</p>
<hr>
<h1>bigger projects</h1>
<p>What about projects that just can’t be done in one cycle? In that case we still only bet six weeks at a time. Suppose we envision a feature that takes two cycles to ship. We reduce our risk dramatically by shaping a specific six week target, with something fully built and working at the end of that six weeks. If that goes as expected, we’ll feel good about betting the next six weeks the way we envisioned in our heads. But if it doesn’t, we could define a very different project. Or we could put the multi-cycle thing on pause and do something urgent that came up. The important thing is that we always shape what the end looks like for that cycle and that we keep our options open to change course.</p>
<h2>Is this the right time?&nbsp;</h2>
<p>The kind of project we want to do next can depend on which projects we’ve done recently. Maybe it’s been too long since we’ve made a splash of news with a new feature. Or perhaps we’ve been building too many new features and feel overdue to fix some long-standing customer requests. Or if the teams spent the last couple cycles in the same area of the app, their morale may dip if we plan yet another project doing the same kind of work.
Those are all reasons that we might pass on a project even though it’s perfectly well shaped and valuable. The project’s great; it’s just not the right time.</p>
<h2>Projects not tasks:</h2>
<p>Splitting the project into tasks up front is like putting the pitch through a paper shredder. Everybody just gets disconnected pieces. We want the project to stay “whole” through the entire process so we never lose sight of the bigger picture.</p>
<h2>when to stop</h2>
<p>Instead of comparing up against the ideal, compare down to&nbsp;baseline—the current reality for customers. How do customers solve this problem today, without this feature? What’s the frustrating workaround that this feature eliminates? How much longer should customers put up with something that doesn’t work or wait for a solution because we aren’t sure if design A might be better than design B</p>
<h2>Keywords:</h2>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
</ul>


10:45:07.356 [debug] l:len=52

10:45:07.356 [debug] l:buf=48:<h1>Shape Up (book notes)</h1>
<blockquote>
<p>Some companies use two-week cycles (aka “sprints”). We learned that two weeks is too short to get anything meaningful done. Worse than that, two-week cycles are extremely costly due to the planning overhead. The amount of work you get out of two weeks isn’t worth the collective hours around the table to “sprint plan” or the opportunity cost of breaking everyone’s momentum to re-group.</p>
</blockquote>
<p>Two week cool down</p>
<blockquote>
<p>Therefore, after each six-week cycle, we schedule two weeks for&nbsp;cool-down. This is a period with no scheduled work where we can breathe, meet as needed, and consider what to do next.</p>
<p><strong>During cool-down, programmers and designers on project teams are free to work on whatever they want.</strong> After working hard to ship their six-week projects, they enjoy having time that’s under their control. They use it to fix bugs, explore new ideas, or try out new technical possibilities.</p>
</blockquote>
<p>1 designer and 1-2 developers</p>
<blockquote>
<p>Our project teams consist of either one designer and two programmers or one designer and one programmer. They’re joined by a QA person who does integration testing later in the cycle.</p>
</blockquote>
<h2>How to handle bugs</h2>
<p>That said, nobody likes bugs. We still want ways to deal with them. Three strategies have worked for us.</p>
<p>Use cool-down. Ask any programmer if there are things they wish they could go back and fix and they’ll have a list to show you. The&nbsp;cool-down&nbsp;period between cycles gives them time to do exactly that. Six weeks is not long to wait for the majority of bugs, and two weeks every six weeks actually adds up to a lot of time for fixing them.</p>
<p>Bring it to the betting table. If a bug is too big to fix during cool-down, it can compete for resources at the betting table. Suppose a back-end process is slowing the app down and a programmer wants to change it from a synchronous step to an asynchronous job. The programmer can make the case for fixing it and shape the solution in a pitch. Then instead of interrupting other work, the people at the betting table can make a deliberate decision. Time should always be used strategically. There’s a huge difference between delaying other work to fix a bug versus deciding up front that the bug is worth the time to fix.</p>
<p>Schedule a bug smash. Once a year—usually around the holidays—we’ll dedicate a whole cycle to fixing bugs. We call it a “bug smash.” The holidays are a good time for this because it’s hard to get a normal project done when people are traveling or taking time off. The team can self-organize to pick off the most important bugs and solve long-standing issues in the front-end or back-end.</p>
<hr>
<h1>bigger projects</h1>
<p>What about projects that just can’t be done in one cycle? In that case we still only bet six weeks at a time. Suppose we envision a feature that takes two cycles to ship. We reduce our risk dramatically by shaping a specific six week target, with something fully built and working at the end of that six weeks. If that goes as expected, we’ll feel good about betting the next six weeks the way we envisioned in our heads. But if it doesn’t, we could define a very different project. Or we could put the multi-cycle thing on pause and do something urgent that came up. The important thing is that we always shape what the end looks like for that cycle and that we keep our options open to change course.</p>
<h2>Is this the right time?&nbsp;</h2>
<p>The kind of project we want to do next can depend on which projects we’ve done recently. Maybe it’s been too long since we’ve made a splash of news with a new feature. Or perhaps we’ve been building too many new features and feel overdue to fix some long-standing customer requests. Or if the teams spent the last couple cycles in the same area of the app, their morale may dip if we plan yet another project doing the same kind of work.
Those are all reasons that we might pass on a project even though it’s perfectly well shaped and valuable. The project’s great; it’s just not the right time.</p>
<h2>Projects not tasks:</h2>
<p>Splitting the project into tasks up front is like putting the pitch through a paper shredder. Everybody just gets disconnected pieces. We want the project to stay “whole” through the entire process so we never lose sight of the bigger picture.</p>
<h2>when to stop</h2>
<p>Instead of comparing up against the ideal, compare down to&nbsp;baseline—the current reality for customers. How do customers solve this problem today, without this feature? What’s the frustrating workaround that this feature eliminates? How much longer should customers put up with something that doesn’t work or wait for a solution because we aren’t sure if design A might be better than design B</p>
<h2>Keywords:</h2>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
</ul>


10:45:07.356 [debug] l:len=524

10:45:07.356 [debug] l:buf=8:<h1>Shape Up (book notes)</h1>
<blockquote>
<p>Some companies use two-week cycles (aka “sprints”). We learned that two weeks is too short to get anything meaningful done. Worse than that, two-week cycles are extremely costly due to the planning overhead. The amount of work you get out of two weeks isn’t worth the collective hours around the table to “sprint plan” or the opportunity cost of breaking everyone’s momentum to re-group.</p>
</blockquote>
<p>Two week cool down</p>
<blockquote>
<p>Therefore, after each six-week cycle, we schedule two weeks for&nbsp;cool-down. This is a period with no scheduled work where we can breathe, meet as needed, and consider what to do next.</p>
<p><strong>During cool-down, programmers and designers on project teams are free to work on whatever they want.</strong> After working hard to ship their six-week projects, they enjoy having time that’s under their control. They use it to fix bugs, explore new ideas, or try out new technical possibilities.</p>
</blockquote>
<p>1 designer and 1-2 developers</p>
<blockquote>
<p>Our project teams consist of either one designer and two programmers or one designer and one programmer. They’re joined by a QA person who does integration testing later in the cycle.</p>
</blockquote>
<h2>How to handle bugs</h2>
<p>That said, nobody likes bugs. We still want ways to deal with them. Three strategies have worked for us.</p>
<p>Use cool-down. Ask any programmer if there are things they wish they could go back and fix and they’ll have a list to show you. The&nbsp;cool-down&nbsp;period between cycles gives them time to do exactly that. Six weeks is not long to wait for the majority of bugs, and two weeks every six weeks actually adds up to a lot of time for fixing them.</p>
<p>Bring it to the betting table. If a bug is too big to fix during cool-down, it can compete for resources at the betting table. Suppose a back-end process is slowing the app down and a programmer wants to change it from a synchronous step to an asynchronous job. The programmer can make the case for fixing it and shape the solution in a pitch. Then instead of interrupting other work, the people at the betting table can make a deliberate decision. Time should always be used strategically. There’s a huge difference between delaying other work to fix a bug versus deciding up front that the bug is worth the time to fix.</p>
<p>Schedule a bug smash. Once a year—usually around the holidays—we’ll dedicate a whole cycle to fixing bugs. We call it a “bug smash.” The holidays are a good time for this because it’s hard to get a normal project done when people are traveling or taking time off. The team can self-organize to pick off the most important bugs and solve long-standing issues in the front-end or back-end.</p>
<hr>
<h1>bigger projects</h1>
<p>What about projects that just can’t be done in one cycle? In that case we still only bet six weeks at a time. Suppose we envision a feature that takes two cycles to ship. We reduce our risk dramatically by shaping a specific six week target, with something fully built and working at the end of that six weeks. If that goes as expected, we’ll feel good about betting the next six weeks the way we envisioned in our heads. But if it doesn’t, we could define a very different project. Or we could put the multi-cycle thing on pause and do something urgent that came up. The important thing is that we always shape what the end looks like for that cycle and that we keep our options open to change course.</p>
<h2>Is this the right time?&nbsp;</h2>
<p>The kind of project we want to do next can depend on which projects we’ve done recently. Maybe it’s been too long since we’ve made a splash of news with a new feature. Or perhaps we’ve been building too many new features and feel overdue to fix some long-standing customer requests. Or if the teams spent the last couple cycles in the same area of the app, their morale may dip if we plan yet another project doing the same kind of work.
Those are all reasons that we might pass on a project even though it’s perfectly well shaped and valuable. The project’s great; it’s just not the right time.</p>
<h2>Projects not tasks:</h2>
<p>Splitting the project into tasks up front is like putting the pitch through a paper shredder. Everybody just gets disconnected pieces. We want the project to stay “whole” through the entire process so we never lose sight of the bigger picture.</p>
<h2>when to stop</h2>
<p>Instead of comparing up against the ideal, compare down to&nbsp;baseline—the current reality for customers. How do customers solve this problem today, without this feature? What’s the frustrating workaround that this feature eliminates? How much longer should customers put up with something that doesn’t work or wait for a solution because we aren’t sure if design A might be better than design B</p>
<h2>Keywords:</h2>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/bugs" rel="noopener noreferrer">Bugs</a></li>
</ul>


10:45:07.356 [debug] l:len=

10:45:07.356 [debug] l:buf empty

10:45:07.356 [debug] l:len=

10:45:07.356 [debug] l:buf=2148:<h1>Kanban</h1>
<ul>
<li>Either a <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li>Or <a href="http://localhost:5000/toyota%E2%80%99s-lean-manufacturing-kanban" rel="noopener noreferrer">Toyota’s Lean Manufacturing Kanban</a></li>
<li>Often <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily.md" rel="noopener noreferrer">Kanban cards have to be defined heavily</a> ⤴</h2>
<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.356 [debug] l:len=2

10:45:07.356 [debug] l:buf=148:<h1>Kanban</h1>
<ul>
<li>Either a <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li>Or <a href="http://localhost:5000/toyota%E2%80%99s-lean-manufacturing-kanban" rel="noopener noreferrer">Toyota’s Lean Manufacturing Kanban</a></li>
<li>Often <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily.md" rel="noopener noreferrer">Kanban cards have to be defined heavily</a> ⤴</h2>
<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.356 [debug] l:len=21

10:45:07.356 [debug] l:buf=48:<h1>Kanban</h1>
<ul>
<li>Either a <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li>Or <a href="http://localhost:5000/toyota%E2%80%99s-lean-manufacturing-kanban" rel="noopener noreferrer">Toyota’s Lean Manufacturing Kanban</a></li>
<li>Often <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily.md" rel="noopener noreferrer">Kanban cards have to be defined heavily</a> ⤴</h2>
<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.356 [debug] l:len=214

10:45:07.356 [debug] l:buf=8:<h1>Kanban</h1>
<ul>
<li>Either a <a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
<li>Or <a href="http://localhost:5000/toyota%E2%80%99s-lean-manufacturing-kanban" rel="noopener noreferrer">Toyota’s Lean Manufacturing Kanban</a></li>
<li>Often <a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
</ul>
<hr>
<h2><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily.md" rel="noopener noreferrer">Kanban cards have to be defined heavily</a> ⤴</h2>
<h1>Kanban cards have to be defined heavily</h1>
<p>With kanban cards you have to constantly the scope defined for somebody new to pick it up. Each card has to live on its own. There's no high-level thing to tie them together. It's works really well for bugs they tend to be isolated. However they are terrible for projects</p>
<p>Keywords: <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a>, <a href="http://localhost:5000/scope" rel="noopener noreferrer">Scope</a>, <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a>, <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/kanban-cards-have-to-be-defined-heavily" rel="noopener noreferrer">Kanban cards have to be defined heavily</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/onroadmap.com" rel="noopener noreferrer">onroadmap.com</a></li>
<li><a href="http://localhost:5000/pipeline-efficiency" rel="noopener noreferrer">pipeline efficiency</a></li>
</ul>


10:45:07.356 [debug] l:len=

10:45:07.356 [debug] l:buf empty

10:45:07.356 [debug] l:len=

10:45:07.356 [debug] l:buf=300:<h1>The Codex – an Atlas of Relations</h1>
<p>This is a kind of graph editor that was referenced in the <a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a>
<a href="http://zfdg.de/sb004_008" rel="noopener noreferrer">http://zfdg.de/sb004_008</a></p>


10:45:07.356 [debug] l:len=3

10:45:07.356 [debug] l:buf=00:<h1>The Codex – an Atlas of Relations</h1>
<p>This is a kind of graph editor that was referenced in the <a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a>
<a href="http://zfdg.de/sb004_008" rel="noopener noreferrer">http://zfdg.de/sb004_008</a></p>


10:45:07.356 [debug] l:len=30

10:45:07.357 [debug] l:buf=0:<h1>The Codex – an Atlas of Relations</h1>
<p>This is a kind of graph editor that was referenced in the <a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a>
<a href="http://zfdg.de/sb004_008" rel="noopener noreferrer">http://zfdg.de/sb004_008</a></p>


10:45:07.357 [debug] l:len=

10:45:07.357 [debug] l:buf empty

10:45:07.357 [debug] l:len=

10:45:07.357 [debug] l:buf=3047:<h1>How Elms language design effects the way you program (for the better?)</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> <a href="http://localhost:5000/blogpost" rel="noopener noreferrer">blogpost</a></p>
<h2>Language design effects you</h2>
<p>The language you speak effects you. It's perhaps hard to believe, after you're just using different words right? I can say "Hello!" in English and I can say "hola!" that makes no difference right?</p>
<p>In this case I think not but languages are not 1-to-1, there's words that exist in Spanish that don't exist in English (and vice-versa),  one language can make an idea or feeling easier to express while another harder. The effect might be that you express yourself less one way than in another. English doesn't have a way to say "I love you" to another guy and not make it sound weird, however if there was a word for brotherly love, then this may not have been weird at all.  Programming languages are the same way.</p>
<h1>JavaScript effects how you program</h1>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is a replacement for JavaScript so in many ways it makes sense to look at it first. JavaScript historically as many of you know was coined as a "Language for Designers and New people" it was what you would use if you just wanted to add a little bit of functionality here and there. Form validation for instance or other small tasks. The idea is you would make a Java servlet if you where going to do anything serious. Naturally a lot has changed sense then. With ES6 and beyond it's evolved into a much more serious language.</p>
<p>How does JavaScript affect the way you think?</p>
<h2>There's Objects, then there's Arrays, maybe some numbers and booleans.</h2>
<p>In JavaScript there's not great ways to create new data structures. While it may have been <em>kind of</em> object oriented, it's very uncommon for people to create new data structures a lot. Why is this? Well the problem is Objects and Arrays are the only ones that have a literal syntax, meaning they are the only ones you can just type <code>[]</code> and <code>{}</code> and create them on the fly. They are easy to visualize because of this. The dynamic typing of JavaScript also makes it hard to know what functions you can run on new data-structures, it also makes it hard to introspect and view what's going on inside them. Overall this means, we use them for everything.</p>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> makes it relatively easy to make new data-structures, the <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> makes it was to know what a function takes and what it returns. As such we have NonEmtyList, RemoteData, Html, etc...</p>
<h1>React JSX</h1>
<h1>Elm HTML syntax</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> function syntax</h1>
<h1>Option types</h1>


10:45:07.357 [debug] l:len=3

10:45:07.357 [debug] l:buf=047:<h1>How Elms language design effects the way you program (for the better?)</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> <a href="http://localhost:5000/blogpost" rel="noopener noreferrer">blogpost</a></p>
<h2>Language design effects you</h2>
<p>The language you speak effects you. It's perhaps hard to believe, after you're just using different words right? I can say "Hello!" in English and I can say "hola!" that makes no difference right?</p>
<p>In this case I think not but languages are not 1-to-1, there's words that exist in Spanish that don't exist in English (and vice-versa),  one language can make an idea or feeling easier to express while another harder. The effect might be that you express yourself less one way than in another. English doesn't have a way to say "I love you" to another guy and not make it sound weird, however if there was a word for brotherly love, then this may not have been weird at all.  Programming languages are the same way.</p>
<h1>JavaScript effects how you program</h1>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is a replacement for JavaScript so in many ways it makes sense to look at it first. JavaScript historically as many of you know was coined as a "Language for Designers and New people" it was what you would use if you just wanted to add a little bit of functionality here and there. Form validation for instance or other small tasks. The idea is you would make a Java servlet if you where going to do anything serious. Naturally a lot has changed sense then. With ES6 and beyond it's evolved into a much more serious language.</p>
<p>How does JavaScript affect the way you think?</p>
<h2>There's Objects, then there's Arrays, maybe some numbers and booleans.</h2>
<p>In JavaScript there's not great ways to create new data structures. While it may have been <em>kind of</em> object oriented, it's very uncommon for people to create new data structures a lot. Why is this? Well the problem is Objects and Arrays are the only ones that have a literal syntax, meaning they are the only ones you can just type <code>[]</code> and <code>{}</code> and create them on the fly. They are easy to visualize because of this. The dynamic typing of JavaScript also makes it hard to know what functions you can run on new data-structures, it also makes it hard to introspect and view what's going on inside them. Overall this means, we use them for everything.</p>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> makes it relatively easy to make new data-structures, the <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> makes it was to know what a function takes and what it returns. As such we have NonEmtyList, RemoteData, Html, etc...</p>
<h1>React JSX</h1>
<h1>Elm HTML syntax</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> function syntax</h1>
<h1>Option types</h1>


10:45:07.357 [debug] l:len=30

10:45:07.357 [debug] l:buf=47:<h1>How Elms language design effects the way you program (for the better?)</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> <a href="http://localhost:5000/blogpost" rel="noopener noreferrer">blogpost</a></p>
<h2>Language design effects you</h2>
<p>The language you speak effects you. It's perhaps hard to believe, after you're just using different words right? I can say "Hello!" in English and I can say "hola!" that makes no difference right?</p>
<p>In this case I think not but languages are not 1-to-1, there's words that exist in Spanish that don't exist in English (and vice-versa),  one language can make an idea or feeling easier to express while another harder. The effect might be that you express yourself less one way than in another. English doesn't have a way to say "I love you" to another guy and not make it sound weird, however if there was a word for brotherly love, then this may not have been weird at all.  Programming languages are the same way.</p>
<h1>JavaScript effects how you program</h1>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is a replacement for JavaScript so in many ways it makes sense to look at it first. JavaScript historically as many of you know was coined as a "Language for Designers and New people" it was what you would use if you just wanted to add a little bit of functionality here and there. Form validation for instance or other small tasks. The idea is you would make a Java servlet if you where going to do anything serious. Naturally a lot has changed sense then. With ES6 and beyond it's evolved into a much more serious language.</p>
<p>How does JavaScript affect the way you think?</p>
<h2>There's Objects, then there's Arrays, maybe some numbers and booleans.</h2>
<p>In JavaScript there's not great ways to create new data structures. While it may have been <em>kind of</em> object oriented, it's very uncommon for people to create new data structures a lot. Why is this? Well the problem is Objects and Arrays are the only ones that have a literal syntax, meaning they are the only ones you can just type <code>[]</code> and <code>{}</code> and create them on the fly. They are easy to visualize because of this. The dynamic typing of JavaScript also makes it hard to know what functions you can run on new data-structures, it also makes it hard to introspect and view what's going on inside them. Overall this means, we use them for everything.</p>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> makes it relatively easy to make new data-structures, the <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> makes it was to know what a function takes and what it returns. As such we have NonEmtyList, RemoteData, Html, etc...</p>
<h1>React JSX</h1>
<h1>Elm HTML syntax</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> function syntax</h1>
<h1>Option types</h1>


10:45:07.357 [debug] l:len=304

10:45:07.357 [debug] l:buf=7:<h1>How Elms language design effects the way you program (for the better?)</h1>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a> <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> <a href="http://localhost:5000/blogpost" rel="noopener noreferrer">blogpost</a></p>
<h2>Language design effects you</h2>
<p>The language you speak effects you. It's perhaps hard to believe, after you're just using different words right? I can say "Hello!" in English and I can say "hola!" that makes no difference right?</p>
<p>In this case I think not but languages are not 1-to-1, there's words that exist in Spanish that don't exist in English (and vice-versa),  one language can make an idea or feeling easier to express while another harder. The effect might be that you express yourself less one way than in another. English doesn't have a way to say "I love you" to another guy and not make it sound weird, however if there was a word for brotherly love, then this may not have been weird at all.  Programming languages are the same way.</p>
<h1>JavaScript effects how you program</h1>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> is a replacement for JavaScript so in many ways it makes sense to look at it first. JavaScript historically as many of you know was coined as a "Language for Designers and New people" it was what you would use if you just wanted to add a little bit of functionality here and there. Form validation for instance or other small tasks. The idea is you would make a Java servlet if you where going to do anything serious. Naturally a lot has changed sense then. With ES6 and beyond it's evolved into a much more serious language.</p>
<p>How does JavaScript affect the way you think?</p>
<h2>There's Objects, then there's Arrays, maybe some numbers and booleans.</h2>
<p>In JavaScript there's not great ways to create new data structures. While it may have been <em>kind of</em> object oriented, it's very uncommon for people to create new data structures a lot. Why is this? Well the problem is Objects and Arrays are the only ones that have a literal syntax, meaning they are the only ones you can just type <code>[]</code> and <code>{}</code> and create them on the fly. They are easy to visualize because of this. The dynamic typing of JavaScript also makes it hard to know what functions you can run on new data-structures, it also makes it hard to introspect and view what's going on inside them. Overall this means, we use them for everything.</p>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> makes it relatively easy to make new data-structures, the <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> makes it was to know what a function takes and what it returns. As such we have NonEmtyList, RemoteData, Html, etc...</p>
<h1>React JSX</h1>
<h1>Elm HTML syntax</h1>
<h1><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> function syntax</h1>
<h1>Option types</h1>


10:45:07.357 [debug] l:len=

10:45:07.357 [debug] l:buf empty

10:45:07.357 [debug] l:len=

10:45:07.357 [debug] l:buf=246:<h1>boyfriend-meme-HEY</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>


10:45:07.357 [debug] l:len=2

10:45:07.357 [debug] l:buf=46:<h1>boyfriend-meme-HEY</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>


10:45:07.357 [debug] l:len=24

10:45:07.357 [debug] l:buf=6:<h1>boyfriend-meme-HEY</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>


10:45:07.357 [debug] l:len=

10:45:07.357 [debug] l:buf empty

10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf=3687:<h1>Building a Second Brain -- Sketchnotes</h1>
<p><a href="https://maggieappleton.com/basb" rel="noopener noreferrer">https://maggieappleton.com/basb</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163419.png" rel="noopener noreferrer">Pasted image 20200922163419</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163424.png" rel="noopener noreferrer">Pasted image 20200922163424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163430.png" rel="noopener noreferrer">Pasted image 20200922163430</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163434.png" rel="noopener noreferrer">Pasted image 20200922163434</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163442.png" rel="noopener noreferrer">Pasted image 20200922163442</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163448.png" rel="noopener noreferrer">Pasted image 20200922163448</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163455.png" rel="noopener noreferrer">Pasted image 20200922163455</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163504.png" rel="noopener noreferrer">Pasted image 20200922163504</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163510.png" rel="noopener noreferrer">Pasted image 20200922163510</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163518.png" rel="noopener noreferrer">Pasted image 20200922163518</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163522.png" rel="noopener noreferrer">Pasted image 20200922163522</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163529.png" rel="noopener noreferrer">Pasted image 20200922163529</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163537.png" rel="noopener noreferrer">Pasted image 20200922163537</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163547.png" rel="noopener noreferrer">Pasted image 20200922163547</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163552.png" rel="noopener noreferrer">Pasted image 20200922163552</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163558.png" rel="noopener noreferrer">Pasted image 20200922163558</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>THERE'S MORE!</h1>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.358 [debug] l:len=3

10:45:07.358 [debug] l:buf=687:<h1>Building a Second Brain -- Sketchnotes</h1>
<p><a href="https://maggieappleton.com/basb" rel="noopener noreferrer">https://maggieappleton.com/basb</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163419.png" rel="noopener noreferrer">Pasted image 20200922163419</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163424.png" rel="noopener noreferrer">Pasted image 20200922163424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163430.png" rel="noopener noreferrer">Pasted image 20200922163430</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163434.png" rel="noopener noreferrer">Pasted image 20200922163434</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163442.png" rel="noopener noreferrer">Pasted image 20200922163442</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163448.png" rel="noopener noreferrer">Pasted image 20200922163448</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163455.png" rel="noopener noreferrer">Pasted image 20200922163455</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163504.png" rel="noopener noreferrer">Pasted image 20200922163504</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163510.png" rel="noopener noreferrer">Pasted image 20200922163510</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163518.png" rel="noopener noreferrer">Pasted image 20200922163518</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163522.png" rel="noopener noreferrer">Pasted image 20200922163522</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163529.png" rel="noopener noreferrer">Pasted image 20200922163529</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163537.png" rel="noopener noreferrer">Pasted image 20200922163537</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163547.png" rel="noopener noreferrer">Pasted image 20200922163547</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163552.png" rel="noopener noreferrer">Pasted image 20200922163552</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163558.png" rel="noopener noreferrer">Pasted image 20200922163558</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>THERE'S MORE!</h1>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.358 [debug] l:len=36

10:45:07.358 [debug] l:buf=87:<h1>Building a Second Brain -- Sketchnotes</h1>
<p><a href="https://maggieappleton.com/basb" rel="noopener noreferrer">https://maggieappleton.com/basb</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163419.png" rel="noopener noreferrer">Pasted image 20200922163419</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163424.png" rel="noopener noreferrer">Pasted image 20200922163424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163430.png" rel="noopener noreferrer">Pasted image 20200922163430</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163434.png" rel="noopener noreferrer">Pasted image 20200922163434</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163442.png" rel="noopener noreferrer">Pasted image 20200922163442</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163448.png" rel="noopener noreferrer">Pasted image 20200922163448</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163455.png" rel="noopener noreferrer">Pasted image 20200922163455</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163504.png" rel="noopener noreferrer">Pasted image 20200922163504</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163510.png" rel="noopener noreferrer">Pasted image 20200922163510</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163518.png" rel="noopener noreferrer">Pasted image 20200922163518</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163522.png" rel="noopener noreferrer">Pasted image 20200922163522</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163529.png" rel="noopener noreferrer">Pasted image 20200922163529</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163537.png" rel="noopener noreferrer">Pasted image 20200922163537</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163547.png" rel="noopener noreferrer">Pasted image 20200922163547</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163552.png" rel="noopener noreferrer">Pasted image 20200922163552</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163558.png" rel="noopener noreferrer">Pasted image 20200922163558</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>THERE'S MORE!</h1>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.358 [debug] l:len=368

10:45:07.358 [debug] l:buf=7:<h1>Building a Second Brain -- Sketchnotes</h1>
<p><a href="https://maggieappleton.com/basb" rel="noopener noreferrer">https://maggieappleton.com/basb</a></p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163419.png" rel="noopener noreferrer">Pasted image 20200922163419</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163424.png" rel="noopener noreferrer">Pasted image 20200922163424</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163430.png" rel="noopener noreferrer">Pasted image 20200922163430</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163434.png" rel="noopener noreferrer">Pasted image 20200922163434</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163442.png" rel="noopener noreferrer">Pasted image 20200922163442</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163448.png" rel="noopener noreferrer">Pasted image 20200922163448</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163455.png" rel="noopener noreferrer">Pasted image 20200922163455</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163504.png" rel="noopener noreferrer">Pasted image 20200922163504</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163510.png" rel="noopener noreferrer">Pasted image 20200922163510</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163518.png" rel="noopener noreferrer">Pasted image 20200922163518</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163522.png" rel="noopener noreferrer">Pasted image 20200922163522</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163529.png" rel="noopener noreferrer">Pasted image 20200922163529</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163537.png" rel="noopener noreferrer">Pasted image 20200922163537</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163547.png" rel="noopener noreferrer">Pasted image 20200922163547</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163552.png" rel="noopener noreferrer">Pasted image 20200922163552</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200922163558.png" rel="noopener noreferrer">Pasted image 20200922163558</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h1>THERE'S MORE!</h1>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf empty

10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf=880:<h1>Task Faking</h1>
<p>A form of <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> where you do a task that's "preparing for" a task but is not actually making progress towards the actual task... like writing this note 😬.</p>
<p>Heard about this from <a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=8

10:45:07.358 [debug] l:buf=80:<h1>Task Faking</h1>
<p>A form of <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> where you do a task that's "preparing for" a task but is not actually making progress towards the actual task... like writing this note 😬.</p>
<p>Heard about this from <a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=88

10:45:07.358 [debug] l:buf=0:<h1>Task Faking</h1>
<p>A form of <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a> where you do a task that's "preparing for" a task but is not actually making progress towards the actual task... like writing this note 😬.</p>
<p>Heard about this from <a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf empty

10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf=408:<h1>toxic positivity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=4

10:45:07.358 [debug] l:buf=08:<h1>toxic positivity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=40

10:45:07.358 [debug] l:buf=8:<h1>toxic positivity</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.358 [debug] l:len=

10:45:07.358 [debug] l:buf empty

10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf=284:<h1>loose information on the treadmill</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.359 [debug] l:len=2

10:45:07.359 [debug] l:buf=84:<h1>loose information on the treadmill</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.359 [debug] l:len=28

10:45:07.359 [debug] l:buf=4:<h1>loose information on the treadmill</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
</ul>


10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf empty

10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf=73:<h1>WFPB</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.359 [debug] l:len=7

10:45:07.359 [debug] l:buf=3:<h1>WFPB</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf empty

10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf=84:<h1>Hackathons</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.359 [debug] l:len=8

10:45:07.359 [debug] l:buf=4:<h1>Hackathons</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf empty

10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf=100:<h1>Nested Fixed Scope and Variable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.359 [debug] l:len=1

10:45:07.359 [debug] l:buf=00:<h1>Nested Fixed Scope and Variable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.359 [debug] l:len=10

10:45:07.359 [debug] l:buf=0:<h1>Nested Fixed Scope and Variable</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf empty

10:45:07.359 [debug] l:len=

10:45:07.359 [debug] l:buf=2080:<h1>Slack is Social Media</h1>
<hr>
<h2>tags: [Notebooks/Essays]
title: Slack is Social Media
created: '2019-10-21T13:20:38.088Z'
modified: '2019-10-21T13:42:16.515Z'</h2>
<h1>Slack is Social Media</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite infatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorised that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been more fun, but it was also slower by a huge factor. Turns out putting a single toy away one-by-one slowly rather than grabbing handfulls as fast as I could (because I hated it) was a lot slower. I had a really hard time seeing this productivity gap.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back just in time to see me put a toy in the bucket, however the rest of the room looked exactly the same.</p>
<p>While this may seem to be only a childish feeling, kids are easiliy distracted and use fun as their fuel after all, I belive Adults aren't all that different. We <em>all</em> like to do things the fun way rather than the fast way, espessially when we <em><strong>don't realize</strong> it's any slower.</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.359 [debug] l:len=2

10:45:07.359 [debug] l:buf=080:<h1>Slack is Social Media</h1>
<hr>
<h2>tags: [Notebooks/Essays]
title: Slack is Social Media
created: '2019-10-21T13:20:38.088Z'
modified: '2019-10-21T13:42:16.515Z'</h2>
<h1>Slack is Social Media</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite infatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorised that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been more fun, but it was also slower by a huge factor. Turns out putting a single toy away one-by-one slowly rather than grabbing handfulls as fast as I could (because I hated it) was a lot slower. I had a really hard time seeing this productivity gap.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back just in time to see me put a toy in the bucket, however the rest of the room looked exactly the same.</p>
<p>While this may seem to be only a childish feeling, kids are easiliy distracted and use fun as their fuel after all, I belive Adults aren't all that different. We <em>all</em> like to do things the fun way rather than the fast way, espessially when we <em><strong>don't realize</strong> it's any slower.</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.359 [debug] l:len=20

10:45:07.359 [debug] l:buf=80:<h1>Slack is Social Media</h1>
<hr>
<h2>tags: [Notebooks/Essays]
title: Slack is Social Media
created: '2019-10-21T13:20:38.088Z'
modified: '2019-10-21T13:42:16.515Z'</h2>
<h1>Slack is Social Media</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite infatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorised that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been more fun, but it was also slower by a huge factor. Turns out putting a single toy away one-by-one slowly rather than grabbing handfulls as fast as I could (because I hated it) was a lot slower. I had a really hard time seeing this productivity gap.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back just in time to see me put a toy in the bucket, however the rest of the room looked exactly the same.</p>
<p>While this may seem to be only a childish feeling, kids are easiliy distracted and use fun as their fuel after all, I belive Adults aren't all that different. We <em>all</em> like to do things the fun way rather than the fast way, espessially when we <em><strong>don't realize</strong> it's any slower.</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.359 [debug] l:len=208

10:45:07.359 [debug] l:buf=0:<h1>Slack is Social Media</h1>
<hr>
<h2>tags: [Notebooks/Essays]
title: Slack is Social Media
created: '2019-10-21T13:20:38.088Z'
modified: '2019-10-21T13:42:16.515Z'</h2>
<h1>Slack is Social Media</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite infatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorised that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been more fun, but it was also slower by a huge factor. Turns out putting a single toy away one-by-one slowly rather than grabbing handfulls as fast as I could (because I hated it) was a lot slower. I had a really hard time seeing this productivity gap.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back just in time to see me put a toy in the bucket, however the rest of the room looked exactly the same.</p>
<p>While this may seem to be only a childish feeling, kids are easiliy distracted and use fun as their fuel after all, I belive Adults aren't all that different. We <em>all</em> like to do things the fun way rather than the fast way, espessially when we <em><strong>don't realize</strong> it's any slower.</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.360 [debug] l:len=

10:45:07.360 [debug] l:buf empty

10:45:07.360 [debug] l:len=

10:45:07.360 [debug] l:buf=1737:<h1>The Collector's Fallacy</h1>
<blockquote>
<p><strong>Umberto Eco</strong> in his book “How to Write a Thesis”:(1) “there’s a lot someone doesn’t know anything about precisely because she photocopied a text; she has given herself in to the illusion of having read the text already.”</p>
</blockquote>
<p>Examples of "photo copying":</p>
<ul>
<li>Quotes</li>
<li>Posting a link</li>
<li>Saving it to "Pocket"</li>
<li>Keeping books, even though we will never read them again</li>
<li>Etc...</li>
</ul>
<p><strong>The Collector's fallacy is that we think by simply collecting information that it's useful, and even worse that we've "learned" it.</strong></p>
<ul>
<li>To know about something isn't to know something</li>
<li>We need to merge information inside the references with our own knowledge it's not any better than the original source.</li>
<li>If we aren't changed by taking the notes, it's not doing it's job</li>
</ul>
<h2>How to avoid it</h2>
<p>We have to read and assimilate it's ideas into your own head.</p>
<blockquote>
<p>I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time.
–MK, of “Taking Note Now”</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<p>Ref: <a href="https://zettelkasten.de/posts/collectors-fallacy/" rel="noopener noreferrer">https://zettelkasten.de/posts/collectors-fallacy/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.360 [debug] l:len=1

10:45:07.360 [debug] l:buf=737:<h1>The Collector's Fallacy</h1>
<blockquote>
<p><strong>Umberto Eco</strong> in his book “How to Write a Thesis”:(1) “there’s a lot someone doesn’t know anything about precisely because she photocopied a text; she has given herself in to the illusion of having read the text already.”</p>
</blockquote>
<p>Examples of "photo copying":</p>
<ul>
<li>Quotes</li>
<li>Posting a link</li>
<li>Saving it to "Pocket"</li>
<li>Keeping books, even though we will never read them again</li>
<li>Etc...</li>
</ul>
<p><strong>The Collector's fallacy is that we think by simply collecting information that it's useful, and even worse that we've "learned" it.</strong></p>
<ul>
<li>To know about something isn't to know something</li>
<li>We need to merge information inside the references with our own knowledge it's not any better than the original source.</li>
<li>If we aren't changed by taking the notes, it's not doing it's job</li>
</ul>
<h2>How to avoid it</h2>
<p>We have to read and assimilate it's ideas into your own head.</p>
<blockquote>
<p>I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time.
–MK, of “Taking Note Now”</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<p>Ref: <a href="https://zettelkasten.de/posts/collectors-fallacy/" rel="noopener noreferrer">https://zettelkasten.de/posts/collectors-fallacy/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.360 [debug] l:len=17

10:45:07.360 [debug] l:buf=37:<h1>The Collector's Fallacy</h1>
<blockquote>
<p><strong>Umberto Eco</strong> in his book “How to Write a Thesis”:(1) “there’s a lot someone doesn’t know anything about precisely because she photocopied a text; she has given herself in to the illusion of having read the text already.”</p>
</blockquote>
<p>Examples of "photo copying":</p>
<ul>
<li>Quotes</li>
<li>Posting a link</li>
<li>Saving it to "Pocket"</li>
<li>Keeping books, even though we will never read them again</li>
<li>Etc...</li>
</ul>
<p><strong>The Collector's fallacy is that we think by simply collecting information that it's useful, and even worse that we've "learned" it.</strong></p>
<ul>
<li>To know about something isn't to know something</li>
<li>We need to merge information inside the references with our own knowledge it's not any better than the original source.</li>
<li>If we aren't changed by taking the notes, it's not doing it's job</li>
</ul>
<h2>How to avoid it</h2>
<p>We have to read and assimilate it's ideas into your own head.</p>
<blockquote>
<p>I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time.
–MK, of “Taking Note Now”</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<p>Ref: <a href="https://zettelkasten.de/posts/collectors-fallacy/" rel="noopener noreferrer">https://zettelkasten.de/posts/collectors-fallacy/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.360 [debug] l:len=173

10:45:07.360 [debug] l:buf=7:<h1>The Collector's Fallacy</h1>
<blockquote>
<p><strong>Umberto Eco</strong> in his book “How to Write a Thesis”:(1) “there’s a lot someone doesn’t know anything about precisely because she photocopied a text; she has given herself in to the illusion of having read the text already.”</p>
</blockquote>
<p>Examples of "photo copying":</p>
<ul>
<li>Quotes</li>
<li>Posting a link</li>
<li>Saving it to "Pocket"</li>
<li>Keeping books, even though we will never read them again</li>
<li>Etc...</li>
</ul>
<p><strong>The Collector's fallacy is that we think by simply collecting information that it's useful, and even worse that we've "learned" it.</strong></p>
<ul>
<li>To know about something isn't to know something</li>
<li>We need to merge information inside the references with our own knowledge it's not any better than the original source.</li>
<li>If we aren't changed by taking the notes, it's not doing it's job</li>
</ul>
<h2>How to avoid it</h2>
<p>We have to read and assimilate it's ideas into your own head.</p>
<blockquote>
<p>I rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time.
–MK, of “Taking Note Now”</p>
</blockquote>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
</ul>
<p>Ref: <a href="https://zettelkasten.de/posts/collectors-fallacy/" rel="noopener noreferrer">https://zettelkasten.de/posts/collectors-fallacy/</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.360 [debug] l:len=

10:45:07.360 [debug] l:buf empty

10:45:07.360 [debug] l:len=

10:45:07.360 [debug] l:buf=379:<h1>Email's transparency problem</h1>
<p>A person can never see information in your inbox, it's private unless you send them the information directly. This makes discovering a history of the information very hard.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.360 [debug] l:len=3

10:45:07.360 [debug] l:buf=79:<h1>Email's transparency problem</h1>
<p>A person can never see information in your inbox, it's private unless you send them the information directly. This makes discovering a history of the information very hard.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.360 [debug] l:len=37

10:45:07.360 [debug] l:buf=9:<h1>Email's transparency problem</h1>
<p>A person can never see information in your inbox, it's private unless you send them the information directly. This makes discovering a history of the information very hard.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.360 [debug] l:len=

10:45:07.360 [debug] l:buf empty

10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf=286:<h1>tree</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.361 [debug] l:len=2

10:45:07.361 [debug] l:buf=86:<h1>tree</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.361 [debug] l:len=28

10:45:07.361 [debug] l:buf=6:<h1>tree</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf empty

10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf=288:<h1>Github</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.361 [debug] l:len=2

10:45:07.361 [debug] l:buf=88:<h1>Github</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.361 [debug] l:len=28

10:45:07.361 [debug] l:buf=8:<h1>Github</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf empty

10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf=803:<h1>the Syndrome strategy</h1>
<p>The idea based on Syndrome, the evil character from the Incredibles.</p>
<p>The idea is he's <em><strong>creating problems just so he can turn around and solve them</strong></em>. We see this in lots of industries such as <a href="http://localhost:5000/the-health-industry" rel="noopener noreferrer">the Health Industry</a> and such.</p>
<p>Defiantly a <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.361 [debug] l:len=8

10:45:07.361 [debug] l:buf=03:<h1>the Syndrome strategy</h1>
<p>The idea based on Syndrome, the evil character from the Incredibles.</p>
<p>The idea is he's <em><strong>creating problems just so he can turn around and solve them</strong></em>. We see this in lots of industries such as <a href="http://localhost:5000/the-health-industry" rel="noopener noreferrer">the Health Industry</a> and such.</p>
<p>Defiantly a <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.361 [debug] l:len=80

10:45:07.361 [debug] l:buf=3:<h1>the Syndrome strategy</h1>
<p>The idea based on Syndrome, the evil character from the Incredibles.</p>
<p>The idea is he's <em><strong>creating problems just so he can turn around and solve them</strong></em>. We see this in lots of industries such as <a href="http://localhost:5000/the-health-industry" rel="noopener noreferrer">the Health Industry</a> and such.</p>
<p>Defiantly a <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.361 [debug] l:len=

10:45:07.361 [debug] l:buf empty

10:45:07.362 [debug] l:len=

10:45:07.362 [debug] l:buf=3155:<p>You're Insufficiently Persuasive - Sandi Metz</p>
<ul>
<li>I should read how to win friends and influence people
<ul>
<li>It's really about how to pretend people are interesting and eventually you might find them so, but in a very kind way</li>
</ul>
</li>
</ul>
<h2>Drive</h2>
<ul>
<li>
<p>If you try to pay them more to work better</p>
<ul>
<li>Works awesome if it's very mechanical</li>
<li>As soon as it's creative at all it makes you worse</li>
<li>You just need to pay people enough to get it off the table</li>
</ul>
</li>
<li>
<p>What drives us:</p>
<ul>
<li>Autonomy: we want to control our own lives</li>
<li>Mastery: get better at things</li>
<li>Purpose: we want to have meaning, work for something bigger than ourselves</li>
</ul>
</li>
</ul>
<p>👆explain Open Source software</p>
<h2>What if you're really not <em>right</em>?</h2>
<ul>
<li>We desire the same <em>ends</em> but have chosen different <em>means</em> (the way we do it)
<ul>
<li>You are not good at collaboration 🤷‍♂️</li>
<li>Teams innovate faster, and have better results, etc...</li>
</ul>
</li>
</ul>
<h2>Project Aristotle</h2>
<ul>
<li>Looking at each individual will not predict high performing teams from low performing ones</li>
<li>Emotional Intelligence of <em>Groups</em></li>
</ul>
<h3>KEY FACTOR: How you treat one-another (Psychological Safety)</h3>
<ol>
<li>Speak roughly in the same proportion (EVERYONE GETS A SAY)
<ul>
<li>If only one person dominated, or a few, the average IQ declined</li>
</ul>
</li>
<li>Average social Sensitivity
<ul>
<li>non-verbal queues</li>
</ul>
</li>
</ol>
<ul>
<li>
<p>Safe for "Interpersonal Risk taking"</p>
<ul>
<li>Sense of Confidence that they won't embarrass you for speaking up</li>
<li>Trust &amp; Respect to allow people to be themselves</li>
</ul>
</li>
<li>
<p>Words about the past are usually about blame... you should probably avoid them.</p>
</li>
<li>
<p>Words about the future about corrective action, it's about what's next</p>
</li>
<li>
<p>You should have strong opinions but they should be weekly held</p>
</li>
<li>
<p>You should have an identity, but keep it small. Don't bind yourself with the straight jacket of your past</p>
</li>
</ul>
<p>What is it that prevents us from sincerely making them like us? From winning them over?</p>
<h1>You are good enough</h1>
<p>"YOU'RE PURPLE" -&gt; no strong reaction, you're not secretly afraid that you're purple
"You are not your code, you're not your past, you're not your parents, and you're not responsible for everything"</p>
<ul>
<li>When you pop the "Why can't we come to an agreement?" stack right to the bottom you come to is FEAR 😰</li>
</ul>
<p>Change the future</p>
<p>we are hardwired to collaborate</p>
<ul>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
<li><a href="http://localhost:5000/humility" rel="noopener noreferrer">Humility</a></li>
<li><a href="http://localhost:5000/sandi-metz-quotes" rel="noopener noreferrer">Sandi Metz quotes</a></li>
<li><a href="http://localhost:5000/tech-confrence-talks" rel="noopener noreferrer">Tech Confrence Talks</a></li>
</ul>


10:45:07.362 [debug] l:len=3

10:45:07.362 [debug] l:buf=155:<p>You're Insufficiently Persuasive - Sandi Metz</p>
<ul>
<li>I should read how to win friends and influence people
<ul>
<li>It's really about how to pretend people are interesting and eventually you might find them so, but in a very kind way</li>
</ul>
</li>
</ul>
<h2>Drive</h2>
<ul>
<li>
<p>If you try to pay them more to work better</p>
<ul>
<li>Works awesome if it's very mechanical</li>
<li>As soon as it's creative at all it makes you worse</li>
<li>You just need to pay people enough to get it off the table</li>
</ul>
</li>
<li>
<p>What drives us:</p>
<ul>
<li>Autonomy: we want to control our own lives</li>
<li>Mastery: get better at things</li>
<li>Purpose: we want to have meaning, work for something bigger than ourselves</li>
</ul>
</li>
</ul>
<p>👆explain Open Source software</p>
<h2>What if you're really not <em>right</em>?</h2>
<ul>
<li>We desire the same <em>ends</em> but have chosen different <em>means</em> (the way we do it)
<ul>
<li>You are not good at collaboration 🤷‍♂️</li>
<li>Teams innovate faster, and have better results, etc...</li>
</ul>
</li>
</ul>
<h2>Project Aristotle</h2>
<ul>
<li>Looking at each individual will not predict high performing teams from low performing ones</li>
<li>Emotional Intelligence of <em>Groups</em></li>
</ul>
<h3>KEY FACTOR: How you treat one-another (Psychological Safety)</h3>
<ol>
<li>Speak roughly in the same proportion (EVERYONE GETS A SAY)
<ul>
<li>If only one person dominated, or a few, the average IQ declined</li>
</ul>
</li>
<li>Average social Sensitivity
<ul>
<li>non-verbal queues</li>
</ul>
</li>
</ol>
<ul>
<li>
<p>Safe for "Interpersonal Risk taking"</p>
<ul>
<li>Sense of Confidence that they won't embarrass you for speaking up</li>
<li>Trust &amp; Respect to allow people to be themselves</li>
</ul>
</li>
<li>
<p>Words about the past are usually about blame... you should probably avoid them.</p>
</li>
<li>
<p>Words about the future about corrective action, it's about what's next</p>
</li>
<li>
<p>You should have strong opinions but they should be weekly held</p>
</li>
<li>
<p>You should have an identity, but keep it small. Don't bind yourself with the straight jacket of your past</p>
</li>
</ul>
<p>What is it that prevents us from sincerely making them like us? From winning them over?</p>
<h1>You are good enough</h1>
<p>"YOU'RE PURPLE" -&gt; no strong reaction, you're not secretly afraid that you're purple
"You are not your code, you're not your past, you're not your parents, and you're not responsible for everything"</p>
<ul>
<li>When you pop the "Why can't we come to an agreement?" stack right to the bottom you come to is FEAR 😰</li>
</ul>
<p>Change the future</p>
<p>we are hardwired to collaborate</p>
<ul>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
<li><a href="http://localhost:5000/humility" rel="noopener noreferrer">Humility</a></li>
<li><a href="http://localhost:5000/sandi-metz-quotes" rel="noopener noreferrer">Sandi Metz quotes</a></li>
<li><a href="http://localhost:5000/tech-confrence-talks" rel="noopener noreferrer">Tech Confrence Talks</a></li>
</ul>


10:45:07.362 [debug] l:len=31

10:45:07.362 [debug] l:buf=55:<p>You're Insufficiently Persuasive - Sandi Metz</p>
<ul>
<li>I should read how to win friends and influence people
<ul>
<li>It's really about how to pretend people are interesting and eventually you might find them so, but in a very kind way</li>
</ul>
</li>
</ul>
<h2>Drive</h2>
<ul>
<li>
<p>If you try to pay them more to work better</p>
<ul>
<li>Works awesome if it's very mechanical</li>
<li>As soon as it's creative at all it makes you worse</li>
<li>You just need to pay people enough to get it off the table</li>
</ul>
</li>
<li>
<p>What drives us:</p>
<ul>
<li>Autonomy: we want to control our own lives</li>
<li>Mastery: get better at things</li>
<li>Purpose: we want to have meaning, work for something bigger than ourselves</li>
</ul>
</li>
</ul>
<p>👆explain Open Source software</p>
<h2>What if you're really not <em>right</em>?</h2>
<ul>
<li>We desire the same <em>ends</em> but have chosen different <em>means</em> (the way we do it)
<ul>
<li>You are not good at collaboration 🤷‍♂️</li>
<li>Teams innovate faster, and have better results, etc...</li>
</ul>
</li>
</ul>
<h2>Project Aristotle</h2>
<ul>
<li>Looking at each individual will not predict high performing teams from low performing ones</li>
<li>Emotional Intelligence of <em>Groups</em></li>
</ul>
<h3>KEY FACTOR: How you treat one-another (Psychological Safety)</h3>
<ol>
<li>Speak roughly in the same proportion (EVERYONE GETS A SAY)
<ul>
<li>If only one person dominated, or a few, the average IQ declined</li>
</ul>
</li>
<li>Average social Sensitivity
<ul>
<li>non-verbal queues</li>
</ul>
</li>
</ol>
<ul>
<li>
<p>Safe for "Interpersonal Risk taking"</p>
<ul>
<li>Sense of Confidence that they won't embarrass you for speaking up</li>
<li>Trust &amp; Respect to allow people to be themselves</li>
</ul>
</li>
<li>
<p>Words about the past are usually about blame... you should probably avoid them.</p>
</li>
<li>
<p>Words about the future about corrective action, it's about what's next</p>
</li>
<li>
<p>You should have strong opinions but they should be weekly held</p>
</li>
<li>
<p>You should have an identity, but keep it small. Don't bind yourself with the straight jacket of your past</p>
</li>
</ul>
<p>What is it that prevents us from sincerely making them like us? From winning them over?</p>
<h1>You are good enough</h1>
<p>"YOU'RE PURPLE" -&gt; no strong reaction, you're not secretly afraid that you're purple
"You are not your code, you're not your past, you're not your parents, and you're not responsible for everything"</p>
<ul>
<li>When you pop the "Why can't we come to an agreement?" stack right to the bottom you come to is FEAR 😰</li>
</ul>
<p>Change the future</p>
<p>we are hardwired to collaborate</p>
<ul>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
<li><a href="http://localhost:5000/humility" rel="noopener noreferrer">Humility</a></li>
<li><a href="http://localhost:5000/sandi-metz-quotes" rel="noopener noreferrer">Sandi Metz quotes</a></li>
<li><a href="http://localhost:5000/tech-confrence-talks" rel="noopener noreferrer">Tech Confrence Talks</a></li>
</ul>


10:45:07.362 [debug] l:len=315

10:45:07.362 [debug] l:buf=5:<p>You're Insufficiently Persuasive - Sandi Metz</p>
<ul>
<li>I should read how to win friends and influence people
<ul>
<li>It's really about how to pretend people are interesting and eventually you might find them so, but in a very kind way</li>
</ul>
</li>
</ul>
<h2>Drive</h2>
<ul>
<li>
<p>If you try to pay them more to work better</p>
<ul>
<li>Works awesome if it's very mechanical</li>
<li>As soon as it's creative at all it makes you worse</li>
<li>You just need to pay people enough to get it off the table</li>
</ul>
</li>
<li>
<p>What drives us:</p>
<ul>
<li>Autonomy: we want to control our own lives</li>
<li>Mastery: get better at things</li>
<li>Purpose: we want to have meaning, work for something bigger than ourselves</li>
</ul>
</li>
</ul>
<p>👆explain Open Source software</p>
<h2>What if you're really not <em>right</em>?</h2>
<ul>
<li>We desire the same <em>ends</em> but have chosen different <em>means</em> (the way we do it)
<ul>
<li>You are not good at collaboration 🤷‍♂️</li>
<li>Teams innovate faster, and have better results, etc...</li>
</ul>
</li>
</ul>
<h2>Project Aristotle</h2>
<ul>
<li>Looking at each individual will not predict high performing teams from low performing ones</li>
<li>Emotional Intelligence of <em>Groups</em></li>
</ul>
<h3>KEY FACTOR: How you treat one-another (Psychological Safety)</h3>
<ol>
<li>Speak roughly in the same proportion (EVERYONE GETS A SAY)
<ul>
<li>If only one person dominated, or a few, the average IQ declined</li>
</ul>
</li>
<li>Average social Sensitivity
<ul>
<li>non-verbal queues</li>
</ul>
</li>
</ol>
<ul>
<li>
<p>Safe for "Interpersonal Risk taking"</p>
<ul>
<li>Sense of Confidence that they won't embarrass you for speaking up</li>
<li>Trust &amp; Respect to allow people to be themselves</li>
</ul>
</li>
<li>
<p>Words about the past are usually about blame... you should probably avoid them.</p>
</li>
<li>
<p>Words about the future about corrective action, it's about what's next</p>
</li>
<li>
<p>You should have strong opinions but they should be weekly held</p>
</li>
<li>
<p>You should have an identity, but keep it small. Don't bind yourself with the straight jacket of your past</p>
</li>
</ul>
<p>What is it that prevents us from sincerely making them like us? From winning them over?</p>
<h1>You are good enough</h1>
<p>"YOU'RE PURPLE" -&gt; no strong reaction, you're not secretly afraid that you're purple
"You are not your code, you're not your past, you're not your parents, and you're not responsible for everything"</p>
<ul>
<li>When you pop the "Why can't we come to an agreement?" stack right to the bottom you come to is FEAR 😰</li>
</ul>
<p>Change the future</p>
<p>we are hardwired to collaborate</p>
<ul>
<li><a href="http://localhost:5000/convincing-coworkers" rel="noopener noreferrer">Convincing Coworkers</a></li>
<li><a href="http://localhost:5000/humility" rel="noopener noreferrer">Humility</a></li>
<li><a href="http://localhost:5000/sandi-metz-quotes" rel="noopener noreferrer">Sandi Metz quotes</a></li>
<li><a href="http://localhost:5000/tech-confrence-talks" rel="noopener noreferrer">Tech Confrence Talks</a></li>
</ul>


10:45:07.362 [debug] l:len=

10:45:07.362 [debug] l:buf empty

10:45:07.362 [debug] l:len=

10:45:07.362 [debug] l:buf=84:<h1>Pasted image 19</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.362 [debug] l:len=8

10:45:07.362 [debug] l:buf=4:<h1>Pasted image 19</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.362 [debug] l:len=

10:45:07.362 [debug] l:buf empty

10:45:07.362 [debug] l:len=

10:45:07.362 [debug] l:buf=727:<h1>TDD</h1>
<p>Stands for "Test driven development"</p>
<p>Can be nice for things like parsers but is often used as the only tests that people will write.</p>
<p>Related to:</p>
<ul>
<li><a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></li>
<li><a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a></li>
<li><a href="http://localhost:5000/unit-tests-suck" rel="noopener noreferrer">Unit tests suck</a></li>
<li><a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a></li>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.362 [debug] l:len=7

10:45:07.362 [debug] l:buf=27:<h1>TDD</h1>
<p>Stands for "Test driven development"</p>
<p>Can be nice for things like parsers but is often used as the only tests that people will write.</p>
<p>Related to:</p>
<ul>
<li><a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></li>
<li><a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a></li>
<li><a href="http://localhost:5000/unit-tests-suck" rel="noopener noreferrer">Unit tests suck</a></li>
<li><a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a></li>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.362 [debug] l:len=72

10:45:07.362 [debug] l:buf=7:<h1>TDD</h1>
<p>Stands for "Test driven development"</p>
<p>Can be nice for things like parsers but is often used as the only tests that people will write.</p>
<p>Related to:</p>
<ul>
<li><a href="http://localhost:5000/integration-tests" rel="noopener noreferrer">Integration Tests</a></li>
<li><a href="http://localhost:5000/end-to-end-tests" rel="noopener noreferrer">End-to-end Tests</a></li>
<li><a href="http://localhost:5000/unit-tests-suck" rel="noopener noreferrer">Unit tests suck</a></li>
<li><a href="http://localhost:5000/cypress" rel="noopener noreferrer">Cypress</a></li>
<li><a href="http://localhost:5000/testing-out-emails-with-cypress" rel="noopener noreferrer">Testing out Emails with Cypress</a></li>
</ul>


10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf empty

10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf=469:<h1>early adopters</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.363 [debug] l:len=4

10:45:07.363 [debug] l:buf=69:<h1>early adopters</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.363 [debug] l:len=46

10:45:07.363 [debug] l:buf=9:<h1>early adopters</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/crossing-the-chasm-by-geoffrey-moore" rel="noopener noreferrer">Crossing the Chasm by Geoffrey Moore</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf empty

10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf=844:<h1>Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<p>Really great way to understand: <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.363 [debug] l:len=8

10:45:07.363 [debug] l:buf=44:<h1>Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<p>Really great way to understand: <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.363 [debug] l:len=84

10:45:07.363 [debug] l:buf=4:<h1>Medium--Zettelkasten — How One German Scholar Was So Freakishly Productive</h1>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" rel="noopener noreferrer">https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125</a></p>
<p>Really great way to understand: <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf empty

10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf=86:<h1>Customer feedback</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.363 [debug] l:len=8

10:45:07.363 [debug] l:buf=6:<h1>Customer feedback</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf empty

10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf=439:<h1>Cases were ReasonML <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> would have saved us</h1>
<ul>
<li>Mobile app broke due to adding conversations this is because we were trying to access a polymorphic field that doesn't <em>necicarily</em> have to be there.</li>
<li>On Demogorgon we where trying looking through a list to find a Location in it. However this Location was archived</li>
</ul>


10:45:07.363 [debug] l:len=4

10:45:07.363 [debug] l:buf=39:<h1>Cases were ReasonML <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> would have saved us</h1>
<ul>
<li>Mobile app broke due to adding conversations this is because we were trying to access a polymorphic field that doesn't <em>necicarily</em> have to be there.</li>
<li>On Demogorgon we where trying looking through a list to find a Location in it. However this Location was archived</li>
</ul>


10:45:07.363 [debug] l:len=43

10:45:07.363 [debug] l:buf=9:<h1>Cases were ReasonML <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> would have saved us</h1>
<ul>
<li>Mobile app broke due to adding conversations this is because we were trying to access a polymorphic field that doesn't <em>necicarily</em> have to be there.</li>
<li>On Demogorgon we where trying looking through a list to find a Location in it. However this Location was archived</li>
</ul>


10:45:07.363 [debug] l:len=

10:45:07.363 [debug] l:buf empty

10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf=250:<h1>Fat Tailed Risk, Fin Tailed Risk</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.364 [debug] l:len=2

10:45:07.364 [debug] l:buf=50:<h1>Fat Tailed Risk, Fin Tailed Risk</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.364 [debug] l:len=25

10:45:07.364 [debug] l:buf=0:<h1>Fat Tailed Risk, Fin Tailed Risk</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf empty

10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf=72:<h1>eee</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.364 [debug] l:len=7

10:45:07.364 [debug] l:buf=2:<h1>eee</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf empty

10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf=303:<h1>communication tools</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.364 [debug] l:len=3

10:45:07.364 [debug] l:buf=03:<h1>communication tools</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.364 [debug] l:len=30

10:45:07.364 [debug] l:buf=3:<h1>communication tools</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf empty

10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf=216:<h1>Thoughts create feelings create actions</h1>
<p>Think this is a thought I got from a Life Coach podcast.</p>
<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a></p>


10:45:07.364 [debug] l:len=2

10:45:07.364 [debug] l:buf=16:<h1>Thoughts create feelings create actions</h1>
<p>Think this is a thought I got from a Life Coach podcast.</p>
<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a></p>


10:45:07.364 [debug] l:len=21

10:45:07.364 [debug] l:buf=6:<h1>Thoughts create feelings create actions</h1>
<p>Think this is a thought I got from a Life Coach podcast.</p>
<p><a href="http://localhost:5000/lateral-thinking" rel="noopener noreferrer">Lateral thinking</a></p>


10:45:07.364 [debug] l:len=

10:45:07.364 [debug] l:buf empty

10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf=327:<h1>scope creep</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.365 [debug] l:len=3

10:45:07.365 [debug] l:buf=27:<h1>scope creep</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.365 [debug] l:len=32

10:45:07.365 [debug] l:buf=7:<h1>scope creep</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf empty

10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf=245:<h1>Slack emulates the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.365 [debug] l:len=2

10:45:07.365 [debug] l:buf=45:<h1>Slack emulates the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.365 [debug] l:len=24

10:45:07.365 [debug] l:buf=5:<h1>Slack emulates the office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf empty

10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf=593:<h1>Competing Against Luck</h1>
<p>Book: <a href="https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/" rel="noopener noreferrer">https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/</a></p>
<p>related to <a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a>, <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.365 [debug] l:len=5

10:45:07.365 [debug] l:buf=93:<h1>Competing Against Luck</h1>
<p>Book: <a href="https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/" rel="noopener noreferrer">https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/</a></p>
<p>related to <a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a>, <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.365 [debug] l:len=59

10:45:07.365 [debug] l:buf=3:<h1>Competing Against Luck</h1>
<p>Book: <a href="https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/" rel="noopener noreferrer">https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612/</a></p>
<p>related to <a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a>, <a href="http://localhost:5000/books" rel="noopener noreferrer">Books</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/job-to-be-done" rel="noopener noreferrer">Job to Be done</a></li>
</ul>


10:45:07.365 [debug] l:len=

10:45:07.365 [debug] l:buf empty

10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf=2906:<h1>Basecamp's design</h1>
<p>Although many people complain about stuff:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/basecamp-beige-old-fassioned-but-friendly" rel="noopener noreferrer">Basecamp beige old fassioned but friendly</a></li>
<li><a href="http://localhost:5000/basecamp-isn't-as-fluid-as-native-apps" rel="noopener noreferrer">Basecamp isn't as fluid as native apps</a></li>
<li><a href="http://localhost:5000/basecamp-is-slow" rel="noopener noreferrer">Basecamp is slow</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>
<p>These people are missing the point. If you've used Basecamp before many great design ideas are in there. They may not prioritize polish in every area but that's what happens when you have 50 people split between two projects or more.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a></li>
<li><a href="http://localhost:5000/basecamp's-one-page-design" rel="noopener noreferrer">Basecamp's one page design</a></li>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
<li><a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/basecamp's-mobile-app-is-always-fully-featured" rel="noopener noreferrer">Basecamp's mobile app is always fully featured</a></li>
</ul>
<p>Many of it's design and idea's are the opposite of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>.</p>
<ul>
<li>Very similar to <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.366 [debug] l:len=2

10:45:07.366 [debug] l:buf=906:<h1>Basecamp's design</h1>
<p>Although many people complain about stuff:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/basecamp-beige-old-fassioned-but-friendly" rel="noopener noreferrer">Basecamp beige old fassioned but friendly</a></li>
<li><a href="http://localhost:5000/basecamp-isn't-as-fluid-as-native-apps" rel="noopener noreferrer">Basecamp isn't as fluid as native apps</a></li>
<li><a href="http://localhost:5000/basecamp-is-slow" rel="noopener noreferrer">Basecamp is slow</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>
<p>These people are missing the point. If you've used Basecamp before many great design ideas are in there. They may not prioritize polish in every area but that's what happens when you have 50 people split between two projects or more.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a></li>
<li><a href="http://localhost:5000/basecamp's-one-page-design" rel="noopener noreferrer">Basecamp's one page design</a></li>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
<li><a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/basecamp's-mobile-app-is-always-fully-featured" rel="noopener noreferrer">Basecamp's mobile app is always fully featured</a></li>
</ul>
<p>Many of it's design and idea's are the opposite of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>.</p>
<ul>
<li>Very similar to <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.366 [debug] l:len=29

10:45:07.366 [debug] l:buf=06:<h1>Basecamp's design</h1>
<p>Although many people complain about stuff:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/basecamp-beige-old-fassioned-but-friendly" rel="noopener noreferrer">Basecamp beige old fassioned but friendly</a></li>
<li><a href="http://localhost:5000/basecamp-isn't-as-fluid-as-native-apps" rel="noopener noreferrer">Basecamp isn't as fluid as native apps</a></li>
<li><a href="http://localhost:5000/basecamp-is-slow" rel="noopener noreferrer">Basecamp is slow</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>
<p>These people are missing the point. If you've used Basecamp before many great design ideas are in there. They may not prioritize polish in every area but that's what happens when you have 50 people split between two projects or more.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a></li>
<li><a href="http://localhost:5000/basecamp's-one-page-design" rel="noopener noreferrer">Basecamp's one page design</a></li>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
<li><a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/basecamp's-mobile-app-is-always-fully-featured" rel="noopener noreferrer">Basecamp's mobile app is always fully featured</a></li>
</ul>
<p>Many of it's design and idea's are the opposite of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>.</p>
<ul>
<li>Very similar to <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.366 [debug] l:len=290

10:45:07.366 [debug] l:buf=6:<h1>Basecamp's design</h1>
<p>Although many people complain about stuff:</p>
<ul>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/basecamp-beige-old-fassioned-but-friendly" rel="noopener noreferrer">Basecamp beige old fassioned but friendly</a></li>
<li><a href="http://localhost:5000/basecamp-isn't-as-fluid-as-native-apps" rel="noopener noreferrer">Basecamp isn't as fluid as native apps</a></li>
<li><a href="http://localhost:5000/basecamp-is-slow" rel="noopener noreferrer">Basecamp is slow</a></li>
<li><a href="http://localhost:5000/basecamp's-chat-sucks...-on-purpose" rel="noopener noreferrer">Basecamp's chat sucks... on purpose</a></li>
</ul>
<p>These people are missing the point. If you've used Basecamp before many great design ideas are in there. They may not prioritize polish in every area but that's what happens when you have 50 people split between two projects or more.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a></li>
<li><a href="http://localhost:5000/basecamp's-one-page-design" rel="noopener noreferrer">Basecamp's one page design</a></li>
<li><a href="http://localhost:5000/basecamp's-notifications" rel="noopener noreferrer">Basecamp's notifications</a></li>
<li><a href="http://localhost:5000/basecamp-discourages-communication-fragmentation" rel="noopener noreferrer">Basecamp discourages communication fragmentation</a></li>
<li><a href="http://localhost:5000/values-of-a-good-project-managment-tool" rel="noopener noreferrer">Values of a good Project Managment Tool</a></li>
<li><a href="http://localhost:5000/basecamp's-mobile-app-is-always-fully-featured" rel="noopener noreferrer">Basecamp's mobile app is always fully featured</a></li>
</ul>
<p>Many of it's design and idea's are the opposite of <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>.</p>
<ul>
<li>Very similar to <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-replace-meetings-with-the-message-board" rel="noopener noreferrer">Basecamp replace meetings with the message board</a></li>
<li><a href="http://localhost:5000/people-complaing-about-basecamp's-editor-are-missing-the-point" rel="noopener noreferrer">People complaing about Basecamp's Editor are missing the point</a></li>
<li><a href="http://localhost:5000/dividing-things-that-are-different" rel="noopener noreferrer">dividing things that are different</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf empty

10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf=402:<h1>fake gurus</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.366 [debug] l:len=4

10:45:07.366 [debug] l:buf=02:<h1>fake gurus</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.366 [debug] l:len=40

10:45:07.366 [debug] l:buf=2:<h1>fake gurus</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube--the-toxic-world-of-self-help--hustle-culture-toxic-positivity-addiction-and-fake-gurus" rel="noopener noreferrer">Youtube- The Toxic World of Self Help- Hustle Culture Toxic Positivity Addiction and Fake Gurus</a></li>
</ul>


10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf empty

10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf=1592:<h1>Kanban methodology</h1>
<ul>
<li>one of the <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a>s</li>
<li><a href="https://en.wikipedia.org/wiki/Signboard" rel="noopener noreferrer">signboard</a> or billboard</li>
<li>Manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks</li>
<li>Work is pulled as capacity permits, rather than work being pushed into the process when requested.</li>
<li>A visual process management system which aids decision-making about what, when, and how much to produce
<ul>
<li>NOTE: doesn't help you know if you're <a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>
</li>
<li>David Anderson's 2010 book, Kanban, describes an evolution of the approach from a 2004 project at Microsoft</li>
<li>The <a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a> for development steps provide development teams immediate feedback on common workflow issues</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.366 [debug] l:len=1

10:45:07.366 [debug] l:buf=592:<h1>Kanban methodology</h1>
<ul>
<li>one of the <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a>s</li>
<li><a href="https://en.wikipedia.org/wiki/Signboard" rel="noopener noreferrer">signboard</a> or billboard</li>
<li>Manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks</li>
<li>Work is pulled as capacity permits, rather than work being pushed into the process when requested.</li>
<li>A visual process management system which aids decision-making about what, when, and how much to produce
<ul>
<li>NOTE: doesn't help you know if you're <a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>
</li>
<li>David Anderson's 2010 book, Kanban, describes an evolution of the approach from a 2004 project at Microsoft</li>
<li>The <a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a> for development steps provide development teams immediate feedback on common workflow issues</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.366 [debug] l:len=15

10:45:07.366 [debug] l:buf=92:<h1>Kanban methodology</h1>
<ul>
<li>one of the <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a>s</li>
<li><a href="https://en.wikipedia.org/wiki/Signboard" rel="noopener noreferrer">signboard</a> or billboard</li>
<li>Manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks</li>
<li>Work is pulled as capacity permits, rather than work being pushed into the process when requested.</li>
<li>A visual process management system which aids decision-making about what, when, and how much to produce
<ul>
<li>NOTE: doesn't help you know if you're <a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>
</li>
<li>David Anderson's 2010 book, Kanban, describes an evolution of the approach from a 2004 project at Microsoft</li>
<li>The <a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a> for development steps provide development teams immediate feedback on common workflow issues</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.366 [debug] l:len=159

10:45:07.366 [debug] l:buf=2:<h1>Kanban methodology</h1>
<ul>
<li>one of the <a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a>s</li>
<li><a href="https://en.wikipedia.org/wiki/Signboard" rel="noopener noreferrer">signboard</a> or billboard</li>
<li>Manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks</li>
<li>Work is pulled as capacity permits, rather than work being pushed into the process when requested.</li>
<li>A visual process management system which aids decision-making about what, when, and how much to produce
<ul>
<li>NOTE: doesn't help you know if you're <a href="http://localhost:5000/building-the-right-thing" rel="noopener noreferrer">building the right thing</a></li>
</ul>
</li>
<li>David Anderson's 2010 book, Kanban, describes an evolution of the approach from a 2004 project at Microsoft</li>
<li>The <a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a> for development steps provide development teams immediate feedback on common workflow issues</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/basecamp-projects" rel="noopener noreferrer">Basecamp Projects</a></li>
<li><a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></li>
<li><a href="http://localhost:5000/overlapping-timelines" rel="noopener noreferrer">overlapping timelines</a></li>
</ul>


10:45:07.366 [debug] l:len=

10:45:07.366 [debug] l:buf empty

10:45:07.367 [debug] l:len=

10:45:07.367 [debug] l:buf=2240:<h1>Why Elm is a technical advantage</h1>
<p>Choosing what language you use is often seen by programmers as a personal one made by their team. However it affects everyone I'm the whole company every single day.</p>
<p>What programming language you choose to build an app in is analogous to what material you choose to make a building out of. It determines how it wears over time, how expensive it is to do renovations, and even how it feels to be in. I'll talk about each in turn.</p>
<h2>How it wears over time</h2>
<p>You can build a beautiful house out of popsicle sticks and Elmer's glue. It's all well and good till someone does something unexpected like leans against a wall or jumps on the stairs. Perhaps you could even fix the issues given enough popsicle sticks and time. However wouldn't it be nice if the materials you used didn't break so much and weren't so tedious to put together.</p>
<p>Code has different properties than physical materials but it does break and rot. Breaking would equate to runtime exceptions (as opposed to wrong behavior which is analogous to bad design). Rotting is analogous to getting harder to understand or being deprecated over time. How long does your codebase take before you start to regret it? How does the language encourage error prevention and recovery?</p>
<p>These things matter to your end users because they are the ones who have to work in the building you built. If your app requires a page refresh frequently to get it to work they probably won't stay around. I mean if you kept falling through the floor and having to climb the stairs to get back to where you where would you want to work in there either? Bottom line is that runtime exceptions are always a bad user experience.</p>
<h2>Renovations</h2>
<h2>The Experience</h2>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
</ul>


10:45:07.367 [debug] l:len=2

10:45:07.367 [debug] l:buf=240:<h1>Why Elm is a technical advantage</h1>
<p>Choosing what language you use is often seen by programmers as a personal one made by their team. However it affects everyone I'm the whole company every single day.</p>
<p>What programming language you choose to build an app in is analogous to what material you choose to make a building out of. It determines how it wears over time, how expensive it is to do renovations, and even how it feels to be in. I'll talk about each in turn.</p>
<h2>How it wears over time</h2>
<p>You can build a beautiful house out of popsicle sticks and Elmer's glue. It's all well and good till someone does something unexpected like leans against a wall or jumps on the stairs. Perhaps you could even fix the issues given enough popsicle sticks and time. However wouldn't it be nice if the materials you used didn't break so much and weren't so tedious to put together.</p>
<p>Code has different properties than physical materials but it does break and rot. Breaking would equate to runtime exceptions (as opposed to wrong behavior which is analogous to bad design). Rotting is analogous to getting harder to understand or being deprecated over time. How long does your codebase take before you start to regret it? How does the language encourage error prevention and recovery?</p>
<p>These things matter to your end users because they are the ones who have to work in the building you built. If your app requires a page refresh frequently to get it to work they probably won't stay around. I mean if you kept falling through the floor and having to climb the stairs to get back to where you where would you want to work in there either? Bottom line is that runtime exceptions are always a bad user experience.</p>
<h2>Renovations</h2>
<h2>The Experience</h2>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
</ul>


10:45:07.367 [debug] l:len=22

10:45:07.367 [debug] l:buf=40:<h1>Why Elm is a technical advantage</h1>
<p>Choosing what language you use is often seen by programmers as a personal one made by their team. However it affects everyone I'm the whole company every single day.</p>
<p>What programming language you choose to build an app in is analogous to what material you choose to make a building out of. It determines how it wears over time, how expensive it is to do renovations, and even how it feels to be in. I'll talk about each in turn.</p>
<h2>How it wears over time</h2>
<p>You can build a beautiful house out of popsicle sticks and Elmer's glue. It's all well and good till someone does something unexpected like leans against a wall or jumps on the stairs. Perhaps you could even fix the issues given enough popsicle sticks and time. However wouldn't it be nice if the materials you used didn't break so much and weren't so tedious to put together.</p>
<p>Code has different properties than physical materials but it does break and rot. Breaking would equate to runtime exceptions (as opposed to wrong behavior which is analogous to bad design). Rotting is analogous to getting harder to understand or being deprecated over time. How long does your codebase take before you start to regret it? How does the language encourage error prevention and recovery?</p>
<p>These things matter to your end users because they are the ones who have to work in the building you built. If your app requires a page refresh frequently to get it to work they probably won't stay around. I mean if you kept falling through the floor and having to climb the stairs to get back to where you where would you want to work in there either? Bottom line is that runtime exceptions are always a bad user experience.</p>
<h2>Renovations</h2>
<h2>The Experience</h2>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
</ul>


10:45:07.367 [debug] l:len=224

10:45:07.367 [debug] l:buf=0:<h1>Why Elm is a technical advantage</h1>
<p>Choosing what language you use is often seen by programmers as a personal one made by their team. However it affects everyone I'm the whole company every single day.</p>
<p>What programming language you choose to build an app in is analogous to what material you choose to make a building out of. It determines how it wears over time, how expensive it is to do renovations, and even how it feels to be in. I'll talk about each in turn.</p>
<h2>How it wears over time</h2>
<p>You can build a beautiful house out of popsicle sticks and Elmer's glue. It's all well and good till someone does something unexpected like leans against a wall or jumps on the stairs. Perhaps you could even fix the issues given enough popsicle sticks and time. However wouldn't it be nice if the materials you used didn't break so much and weren't so tedious to put together.</p>
<p>Code has different properties than physical materials but it does break and rot. Breaking would equate to runtime exceptions (as opposed to wrong behavior which is analogous to bad design). Rotting is analogous to getting harder to understand or being deprecated over time. How long does your codebase take before you start to regret it? How does the language encourage error prevention and recovery?</p>
<p>These things matter to your end users because they are the ones who have to work in the building you built. If your app requires a page refresh frequently to get it to work they probably won't stay around. I mean if you kept falling through the floor and having to climb the stairs to get back to where you where would you want to work in there either? Bottom line is that runtime exceptions are always a bad user experience.</p>
<h2>Renovations</h2>
<h2>The Experience</h2>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
</ul>


10:45:07.367 [debug] l:len=

10:45:07.367 [debug] l:buf empty

10:45:07.367 [debug] l:len=

10:45:07.367 [debug] l:buf=1335:<h1>Slapdash meeting</h1>
<p>A meeting with a lot of people in it, ill preparation, that's too short for real discussions, much of it is discovery and catching people up and worst of all a decision has to be made in the end.</p>
<p>This contrasts with the 2 person shaping meeting where you are roughing out an idea with a person that shares the same context. Then a later <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a> meeting with 2-4 people where they poke holes in your ideas where you present the idea from a blank whiteboard (no document yet, just <a href="http://localhost:5000/bread-boarding" rel="noopener noreferrer">bread boarding</a>). After that, the idea is ready for a more formal written document that embodies all the prep to then be <a href="http://localhost:5000/betting" rel="noopener noreferrer">bet upon</a>.</p>
<p>These meetings are far more efficient and far more empowering. People talk a lot about being in a flow state.</p>
<p>Sometimes these meetings can be replaced by a message board post.</p>
<p>Ref:  <a href="https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea" rel="noopener noreferrer">https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea</a></p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape up</a></li>
</ul>


10:45:07.367 [debug] l:len=1

10:45:07.367 [debug] l:buf=335:<h1>Slapdash meeting</h1>
<p>A meeting with a lot of people in it, ill preparation, that's too short for real discussions, much of it is discovery and catching people up and worst of all a decision has to be made in the end.</p>
<p>This contrasts with the 2 person shaping meeting where you are roughing out an idea with a person that shares the same context. Then a later <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a> meeting with 2-4 people where they poke holes in your ideas where you present the idea from a blank whiteboard (no document yet, just <a href="http://localhost:5000/bread-boarding" rel="noopener noreferrer">bread boarding</a>). After that, the idea is ready for a more formal written document that embodies all the prep to then be <a href="http://localhost:5000/betting" rel="noopener noreferrer">bet upon</a>.</p>
<p>These meetings are far more efficient and far more empowering. People talk a lot about being in a flow state.</p>
<p>Sometimes these meetings can be replaced by a message board post.</p>
<p>Ref:  <a href="https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea" rel="noopener noreferrer">https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea</a></p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape up</a></li>
</ul>


10:45:07.367 [debug] l:len=13

10:45:07.367 [debug] l:buf=35:<h1>Slapdash meeting</h1>
<p>A meeting with a lot of people in it, ill preparation, that's too short for real discussions, much of it is discovery and catching people up and worst of all a decision has to be made in the end.</p>
<p>This contrasts with the 2 person shaping meeting where you are roughing out an idea with a person that shares the same context. Then a later <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a> meeting with 2-4 people where they poke holes in your ideas where you present the idea from a blank whiteboard (no document yet, just <a href="http://localhost:5000/bread-boarding" rel="noopener noreferrer">bread boarding</a>). After that, the idea is ready for a more formal written document that embodies all the prep to then be <a href="http://localhost:5000/betting" rel="noopener noreferrer">bet upon</a>.</p>
<p>These meetings are far more efficient and far more empowering. People talk a lot about being in a flow state.</p>
<p>Sometimes these meetings can be replaced by a message board post.</p>
<p>Ref:  <a href="https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea" rel="noopener noreferrer">https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea</a></p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape up</a></li>
</ul>


10:45:07.367 [debug] l:len=133

10:45:07.367 [debug] l:buf=5:<h1>Slapdash meeting</h1>
<p>A meeting with a lot of people in it, ill preparation, that's too short for real discussions, much of it is discovery and catching people up and worst of all a decision has to be made in the end.</p>
<p>This contrasts with the 2 person shaping meeting where you are roughing out an idea with a person that shares the same context. Then a later <a href="http://localhost:5000/de-risking" rel="noopener noreferrer">de-risking</a> meeting with 2-4 people where they poke holes in your ideas where you present the idea from a blank whiteboard (no document yet, just <a href="http://localhost:5000/bread-boarding" rel="noopener noreferrer">bread boarding</a>). After that, the idea is ready for a more formal written document that embodies all the prep to then be <a href="http://localhost:5000/betting" rel="noopener noreferrer">bet upon</a>.</p>
<p>These meetings are far more efficient and far more empowering. People talk a lot about being in a flow state.</p>
<p>Sometimes these meetings can be replaced by a message board post.</p>
<p>Ref:  <a href="https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea" rel="noopener noreferrer">https://pca.st/episode/583855ce-5cf9-4a9b-a515-9caad0bd1bea</a></p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape up</a></li>
</ul>


10:45:07.367 [debug] l:len=

10:45:07.367 [debug] l:buf empty

10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf=80:<h1>Roundabouts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.368 [debug] l:len=8

10:45:07.368 [debug] l:buf=0:<h1>Roundabouts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf empty

10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf=164:<p>Watch "Middle School Kid Ruins the News" on YouTube</p>
<p><a href="https://youtu.be/Ek4-xXgx8XI" rel="noopener noreferrer">https://youtu.be/Ek4-xXgx8XI</a></p>


10:45:07.368 [debug] l:len=1

10:45:07.368 [debug] l:buf=64:<p>Watch "Middle School Kid Ruins the News" on YouTube</p>
<p><a href="https://youtu.be/Ek4-xXgx8XI" rel="noopener noreferrer">https://youtu.be/Ek4-xXgx8XI</a></p>


10:45:07.368 [debug] l:len=16

10:45:07.368 [debug] l:buf=4:<p>Watch "Middle School Kid Ruins the News" on YouTube</p>
<p><a href="https://youtu.be/Ek4-xXgx8XI" rel="noopener noreferrer">https://youtu.be/Ek4-xXgx8XI</a></p>


10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf empty

10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf=90:<p>Grocery</p>
<ul>
<li>4 cups of cashews</li>
<li>salt</li>
<li>4, 5 avacados</li>
</ul>


10:45:07.368 [debug] l:len=9

10:45:07.368 [debug] l:buf=0:<p>Grocery</p>
<ul>
<li>4 cups of cashews</li>
<li>salt</li>
<li>4, 5 avacados</li>
</ul>


10:45:07.368 [debug] l:len=

10:45:07.368 [debug] l:buf empty

10:45:07.378 [debug] l:len=

10:45:07.378 [debug] l:buf=110142:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></ (truncated)

10:45:07.378 [debug] l:len=1

10:45:07.378 [debug] l:buf=10142:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></l (truncated)

10:45:07.378 [debug] l:len=11

10:45:07.378 [debug] l:buf=0142:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li (truncated)

10:45:07.378 [debug] l:len=110

10:45:07.378 [debug] l:buf=142:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li> (truncated)

10:45:07.378 [debug] l:len=1101

10:45:07.378 [debug] l:buf=42:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
 (truncated)

10:45:07.378 [debug] l:len=11014

10:45:07.378 [debug] l:buf=2:<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
< (truncated)

10:45:07.378 [debug] len=110142

10:45:07.378 [debug] buf=<h1>Slipbox</h1>
<ul>
<li>[ This is really easy in ReasonML. So long as the compiler errors make sense.</li>
</ul>
<ol>
<li>Compilation times! Love to see the browser refresh sooooo fast. This is a huge thing to talk about and we should all be very proud of this.</li>
<li>Bundle size reduction. Having to take a day or two to trim down bundle size is work nobody wants to do, what if by using this language you would just naturally get small bundles? This could be huge. JavaScript really doesn't  do well with this and never really will. Nor will TypeScript.</li>
<li>No Imports! This takes a bit to get used to, and <em>can</em> lead to some confusion initially, but with some good tooling this could be a huge strength.</li>
<li>Less bugs in production!</li>
<li>Expressing things via types like <code>Author(id) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense. 3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this. 4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript. 5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-_can_-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.- 6.-less-bugs-in-production! 7.-expressing-things-via-types-like-</code>authorid-)</li>
</ol>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/09032017-law-of-consecration-today" rel="noopener noreferrer">09032017 Law of consecration today</a></li>
<li><a href="http://localhost:5000/10-things-i-hate-about-oop-notes" rel="noopener noreferrer">10 things I hate about oop notes</a></li>
<li><a href="http://localhost:5000/1142am-we-left-from-idaho-it-said-we-wou" rel="noopener noreferrer">1142am we left from Idaho it said we wou</a></li>
<li><a href="http://localhost:5000/2-types-of-randomness,-risk-and-uncertainty" rel="noopener noreferrer">2 types of randomness, risk and uncertainty</a></li>
<li><a href="http://localhost:5000/2020-08-26-19-56-04" rel="noopener noreferrer">2020-08-26-19-56-04</a></li>
<li><a href="http://localhost:5000/2020-08-26-22-06-27" rel="noopener noreferrer">2020-08-26-22-06-27</a></li>
<li><a href="http://localhost:5000/2020-08-27" rel="noopener noreferrer">2020-08-27</a></li>
<li><a href="http://localhost:5000/2020-08-28" rel="noopener noreferrer">2020-08-28</a></li>
<li><a href="http://localhost:5000/2020-09-01" rel="noopener noreferrer">2020-09-01</a></li>
<li><a href="http://localhost:5000/2020-09-02" rel="noopener noreferrer">2020-09-02</a></li>
<li><a href="http://localhost:5000/2020-09-09" rel="noopener noreferrer">2020-09-09</a></li>
<li><a href="http://localhost:5000/2020-09-12" rel="noopener noreferrer">2020-09-12</a></li>
<li><a href="http://localhost:5000/2020-09-19-13-57-41" rel="noopener noreferrer">2020-09-19-13-57-41</a></li>
<li><a href="http://localhost:5000/2020-09-25" rel="noopener noreferrer">2020-09-25</a></li>
<li><a href="http://localhost:5000/2020-09-30" rel="noopener noreferrer">2020-09-30</a></li>
<li><a href="http://localhost:5000/2020-10-02" rel="noopener noreferrer">2020-10-02</a></li>
<li><a href="http://localhost:5000/2020-10-12" rel="noopener noreferrer">2020-10-12</a></li>
<li><a href="http://localhost:5000/2020-10-14" rel="noopener noreferrer">2020-10-14</a></li>
<li><a href="http://localhost:5000/2020-10-20" rel="noopener noreferrer">2020-10-20</a></li>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li><a href="http://localhost:5000/99-bottles-notes-and-quotes" rel="noopener noreferrer">99 bottles notes and quotes</a></li>
<li><a href="http://localhost:5000/a-rant-against-maximization" rel="noopener noreferrer">A Rant Against Maximization</a></li>
<li><a href="http://localhost:5000/a-tour-of-alt-js-languages" rel="noopener noreferrer">A Tour of Alt-JS languages</a></li>
<li><a href="http://localhost:5000/a-personal-zettelkasten-static-site-generator" rel="noopener noreferrer">A personal Zettelkasten static site generator</a></li>
<li><a href="http://localhost:5000/a.s.s-acronyms-seriously-suck---elon-muskraw" rel="noopener noreferrer">A.S.S (Acronyms Seriously Suck - Elon MuskRaw)</a></li>
<li><a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a></li>
<li><a href="http://localhost:5000/abstraction-is-creating-a-new-level-in-which-one-can-be-absolutely-precise" rel="noopener noreferrer">Abstraction is creating a new level in which one can be absolutely precise</a></li>
<li><a href="http://localhost:5000/abstraction" rel="noopener noreferrer">Abstraction</a></li>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/accountability" rel="noopener noreferrer">Accountability</a></li>
<li><a href="http://localhost:5000/achieving-reusability" rel="noopener noreferrer">Achieving Reusability</a></li>
<li><a href="http://localhost:5000/adversity" rel="noopener noreferrer">Adversity</a></li>
<li><a href="http://localhost:5000/agile-manifesto" rel="noopener noreferrer">Agile Manifesto</a></li>
<li><a href="http://localhost:5000/agile-stories" rel="noopener noreferrer">Agile Stories</a></li>
<li><a href="http://localhost:5000/agile-deathmarch" rel="noopener noreferrer">Agile deathmarch</a></li>
<li><a href="http://localhost:5000/agile-is-about-productivity,-basecamp-is-about-effectiveness" rel="noopener noreferrer">Agile is about productivity, Basecamp is about effectiveness</a></li>
<li><a href="http://localhost:5000/agile-process-framework" rel="noopener noreferrer">Agile process framework</a></li>
<li><a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a></li>
<li><a href="http://localhost:5000/albert-einstein-is-quoted-as-saying," rel="noopener noreferrer">Albert Einstein is quoted as saying,</a></li>
<li><a href="http://localhost:5000/alexa,-make-a-vui-voice-ui" rel="noopener noreferrer">Alexa, make a VUI (voice ui)</a></li>
<li><a href="http://localhost:5000/amazing-video-on-christopher-alexander's-work" rel="noopener noreferrer">Amazing video on Christopher Alexander's work</a></li>
<li><a href="http://localhost:5000/and-just-as-steve-loved-ideas,-and-loved" rel="noopener noreferrer">And just as Steve loved ideas, and loved</a></li>
<li><a href="http://localhost:5000/android-fundimentials" rel="noopener noreferrer">Android fundimentials</a></li>
<li><a href="http://localhost:5000/android-learning-notes" rel="noopener noreferrer">Android learning notes</a></li>
<li><a href="http://localhost:5000/android" rel="noopener noreferrer">Android</a></li>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/answering-paul's-argument-against-basecamp" rel="noopener noreferrer">Answering Paul's Argument against Basecamp</a></li>
<li><a href="http://localhost:5000/answering-questions" rel="noopener noreferrer">Answering Questions</a></li>
<li><a href="http://localhost:5000/article---why-i-hate-slack-and-you-should-too" rel="noopener noreferrer">Article --Why I Hate Slack and You Should Too</a></li>
<li><a href="http://localhost:5000/article,-slack-backlash-is-inevitable" rel="noopener noreferrer">Article, Slack Backlash is inevitable</a></li>
<li><a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">Article-- how p2 changed automatic</a></li>
<li>< (truncated)

10:45:07.378 [debug] l:len=

10:45:07.378 [debug] l:buf empty

10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf=285:<h1>Slack themes</h1>
<p>light blue:
<code>#FCFFFE,#F0F0F0,#3F8991,#FFFFFF,#FFFFFF,#3D7794,#1592EB,#35C8F2,#FCFFFE,#3D7794</code></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.379 [debug] l:len=2

10:45:07.379 [debug] l:buf=85:<h1>Slack themes</h1>
<p>light blue:
<code>#FCFFFE,#F0F0F0,#3F8991,#FFFFFF,#FFFFFF,#3D7794,#1592EB,#35C8F2,#FCFFFE,#3D7794</code></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.379 [debug] l:len=28

10:45:07.379 [debug] l:buf=5:<h1>Slack themes</h1>
<p>light blue:
<code>#FCFFFE,#F0F0F0,#3F8991,#FFFFFF,#FFFFFF,#3D7794,#1592EB,#35C8F2,#FCFFFE,#3D7794</code></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf empty

10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf=735:<h1>intentional thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.379 [debug] l:len=7

10:45:07.379 [debug] l:buf=35:<h1>intentional thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.379 [debug] l:len=73

10:45:07.379 [debug] l:buf=5:<h1>intentional thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>


10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf empty

10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf=282:<h1>The Social Dilemia</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.379 [debug] l:len=2

10:45:07.379 [debug] l:buf=82:<h1>The Social Dilemia</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.379 [debug] l:len=28

10:45:07.379 [debug] l:buf=2:<h1>The Social Dilemia</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/i'm-taking-a-break-from-youtube" rel="noopener noreferrer">I'm taking a break from YouTube</a></li>
</ul>


10:45:07.379 [debug] l:len=

10:45:07.379 [debug] l:buf empty

10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf=511:<h1>Write once, read many times</h1>
<p>One of writing's main strong suits is that once you write something down once it can be read for years to come. <a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.380 [debug] l:len=5

10:45:07.380 [debug] l:buf=11:<h1>Write once, read many times</h1>
<p>One of writing's main strong suits is that once you write something down once it can be read for years to come. <a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.380 [debug] l:len=51

10:45:07.380 [debug] l:buf=1:<h1>Write once, read many times</h1>
<p>One of writing's main strong suits is that once you write something down once it can be read for years to come. <a href="http://localhost:5000/even-though-writing-is-slower,-it's-faster-to-read." rel="noopener noreferrer">Even though writing is slower, it's faster to read.</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf empty

10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf=439:<h1>Growth hacking</h1>
<p>The idea of creating in-<a href="http://localhost:5000/humane-tech" rel="noopener noreferrer">Humane Tech</a> that will <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
</ul>


10:45:07.380 [debug] l:len=4

10:45:07.380 [debug] l:buf=39:<h1>Growth hacking</h1>
<p>The idea of creating in-<a href="http://localhost:5000/humane-tech" rel="noopener noreferrer">Humane Tech</a> that will <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
</ul>


10:45:07.380 [debug] l:len=43

10:45:07.380 [debug] l:buf=9:<h1>Growth hacking</h1>
<p>The idea of creating in-<a href="http://localhost:5000/humane-tech" rel="noopener noreferrer">Humane Tech</a> that will <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
</ul>


10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf empty

10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf=2284:<h1>Why ReasonML Evangelism isn't working</h1>
<h2>The 7 Habbits of Highly <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> people</h2>
<ul>
<li>Individual:
<ol>
<li><strong>Sharpen the saw</strong>. Don’t work yourself to death. Strive for a sustainable lifestyle that affords you time to recuperate, recharge and be effective in the long-term.</li>
<li><strong>Be proactive</strong>. You have a natural need to wield influence on the world around you so don’t spend your time just reacting to external events and circumstances. Take charge and assume responsibility for your life.</li>
<li><strong>Begin with an end in mind</strong>. Don’t spend your life working aimlessly, tackling whatever job is at hand. Have a vision for the future and align your actions accordingly to make it into a reality.</li>
<li><strong>Put first things first</strong>. To prioritize your work, focus on what’s important, meaning the things that bring you closer to your vision of the future. Don’t get distracted by urgent but unimportant tasks.</li>
</ol>
</li>
<li>Group:
5.  <strong>Think win-win</strong>. When negotiating with other, don’t try to get the biggest slice of the cake, but rather find a division that is acceptable to all parties. You will still get your fair share, and build strong positive relationships in the process.
6.  <strong>Seek first to understand, then to be understood</strong>. When someone presents us with a problem, we often jump right to giving a solution. This is a mistake. We should first take time to really listen to the other person and only then make recommendations.
7. <strong>Synergize</strong>. Adopt the guiding principle that in a group, the contributions of many will far exceed those of any individual. This will help you achieve goals you could never have reached on your own.</li>
</ul>
<p>Read more at: <a href="https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp" rel="noopener noreferrer">https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp</a></p>
<h2>The bad ways we talk to people:</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.380 [debug] l:len=2

10:45:07.380 [debug] l:buf=284:<h1>Why ReasonML Evangelism isn't working</h1>
<h2>The 7 Habbits of Highly <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> people</h2>
<ul>
<li>Individual:
<ol>
<li><strong>Sharpen the saw</strong>. Don’t work yourself to death. Strive for a sustainable lifestyle that affords you time to recuperate, recharge and be effective in the long-term.</li>
<li><strong>Be proactive</strong>. You have a natural need to wield influence on the world around you so don’t spend your time just reacting to external events and circumstances. Take charge and assume responsibility for your life.</li>
<li><strong>Begin with an end in mind</strong>. Don’t spend your life working aimlessly, tackling whatever job is at hand. Have a vision for the future and align your actions accordingly to make it into a reality.</li>
<li><strong>Put first things first</strong>. To prioritize your work, focus on what’s important, meaning the things that bring you closer to your vision of the future. Don’t get distracted by urgent but unimportant tasks.</li>
</ol>
</li>
<li>Group:
5.  <strong>Think win-win</strong>. When negotiating with other, don’t try to get the biggest slice of the cake, but rather find a division that is acceptable to all parties. You will still get your fair share, and build strong positive relationships in the process.
6.  <strong>Seek first to understand, then to be understood</strong>. When someone presents us with a problem, we often jump right to giving a solution. This is a mistake. We should first take time to really listen to the other person and only then make recommendations.
7. <strong>Synergize</strong>. Adopt the guiding principle that in a group, the contributions of many will far exceed those of any individual. This will help you achieve goals you could never have reached on your own.</li>
</ul>
<p>Read more at: <a href="https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp" rel="noopener noreferrer">https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp</a></p>
<h2>The bad ways we talk to people:</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.380 [debug] l:len=22

10:45:07.380 [debug] l:buf=84:<h1>Why ReasonML Evangelism isn't working</h1>
<h2>The 7 Habbits of Highly <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> people</h2>
<ul>
<li>Individual:
<ol>
<li><strong>Sharpen the saw</strong>. Don’t work yourself to death. Strive for a sustainable lifestyle that affords you time to recuperate, recharge and be effective in the long-term.</li>
<li><strong>Be proactive</strong>. You have a natural need to wield influence on the world around you so don’t spend your time just reacting to external events and circumstances. Take charge and assume responsibility for your life.</li>
<li><strong>Begin with an end in mind</strong>. Don’t spend your life working aimlessly, tackling whatever job is at hand. Have a vision for the future and align your actions accordingly to make it into a reality.</li>
<li><strong>Put first things first</strong>. To prioritize your work, focus on what’s important, meaning the things that bring you closer to your vision of the future. Don’t get distracted by urgent but unimportant tasks.</li>
</ol>
</li>
<li>Group:
5.  <strong>Think win-win</strong>. When negotiating with other, don’t try to get the biggest slice of the cake, but rather find a division that is acceptable to all parties. You will still get your fair share, and build strong positive relationships in the process.
6.  <strong>Seek first to understand, then to be understood</strong>. When someone presents us with a problem, we often jump right to giving a solution. This is a mistake. We should first take time to really listen to the other person and only then make recommendations.
7. <strong>Synergize</strong>. Adopt the guiding principle that in a group, the contributions of many will far exceed those of any individual. This will help you achieve goals you could never have reached on your own.</li>
</ul>
<p>Read more at: <a href="https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp" rel="noopener noreferrer">https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp</a></p>
<h2>The bad ways we talk to people:</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.380 [debug] l:len=228

10:45:07.380 [debug] l:buf=4:<h1>Why ReasonML Evangelism isn't working</h1>
<h2>The 7 Habbits of Highly <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a> people</h2>
<ul>
<li>Individual:
<ol>
<li><strong>Sharpen the saw</strong>. Don’t work yourself to death. Strive for a sustainable lifestyle that affords you time to recuperate, recharge and be effective in the long-term.</li>
<li><strong>Be proactive</strong>. You have a natural need to wield influence on the world around you so don’t spend your time just reacting to external events and circumstances. Take charge and assume responsibility for your life.</li>
<li><strong>Begin with an end in mind</strong>. Don’t spend your life working aimlessly, tackling whatever job is at hand. Have a vision for the future and align your actions accordingly to make it into a reality.</li>
<li><strong>Put first things first</strong>. To prioritize your work, focus on what’s important, meaning the things that bring you closer to your vision of the future. Don’t get distracted by urgent but unimportant tasks.</li>
</ol>
</li>
<li>Group:
5.  <strong>Think win-win</strong>. When negotiating with other, don’t try to get the biggest slice of the cake, but rather find a division that is acceptable to all parties. You will still get your fair share, and build strong positive relationships in the process.
6.  <strong>Seek first to understand, then to be understood</strong>. When someone presents us with a problem, we often jump right to giving a solution. This is a mistake. We should first take time to really listen to the other person and only then make recommendations.
7. <strong>Synergize</strong>. Adopt the guiding principle that in a group, the contributions of many will far exceed those of any individual. This will help you achieve goals you could never have reached on your own.</li>
</ul>
<p>Read more at: <a href="https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp" rel="noopener noreferrer">https://www.blinkist.com/magazine/posts/read-seven-habits-highly-effective-people-3-minutes?utm_source=cpp</a></p>
<h2>The bad ways we talk to people:</h2>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.380 [debug] l:len=

10:45:07.380 [debug] l:buf empty

10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf=886:<p>Basecamp's notifications are spammy by default, I think to and become <a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a>, however they give some great power to easily make them far less.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-work-can-wait-feature" rel="noopener noreferrer">Basecamp's work can wait feature</a></li>
<li><a href="http://localhost:5000/basecamp's-focus-mode" rel="noopener noreferrer">Basecamp's focus mode</a></li>
<li><a href="http://localhost:5000/basecamp's-unfollowing-a-project" rel="noopener noreferrer">Basecamp's unfollowing a project</a></li>
</ul>
<p>Some are put in the user's hands such as:</p>
<ul>
<li>Customizing who get's notified</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.381 [debug] l:len=8

10:45:07.381 [debug] l:buf=86:<p>Basecamp's notifications are spammy by default, I think to and become <a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a>, however they give some great power to easily make them far less.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-work-can-wait-feature" rel="noopener noreferrer">Basecamp's work can wait feature</a></li>
<li><a href="http://localhost:5000/basecamp's-focus-mode" rel="noopener noreferrer">Basecamp's focus mode</a></li>
<li><a href="http://localhost:5000/basecamp's-unfollowing-a-project" rel="noopener noreferrer">Basecamp's unfollowing a project</a></li>
</ul>
<p>Some are put in the user's hands such as:</p>
<ul>
<li>Customizing who get's notified</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.381 [debug] l:len=88

10:45:07.381 [debug] l:buf=6:<p>Basecamp's notifications are spammy by default, I think to and become <a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a>, however they give some great power to easily make them far less.</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-work-can-wait-feature" rel="noopener noreferrer">Basecamp's work can wait feature</a></li>
<li><a href="http://localhost:5000/basecamp's-focus-mode" rel="noopener noreferrer">Basecamp's focus mode</a></li>
<li><a href="http://localhost:5000/basecamp's-unfollowing-a-project" rel="noopener noreferrer">Basecamp's unfollowing a project</a></li>
</ul>
<p>Some are put in the user's hands such as:</p>
<ul>
<li>Customizing who get's notified</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf empty

10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf=2432:<h1>The mystery in your inbox (Slack's notification V</h1>
<p>In the article <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"What's that mystery in your inbox costing you?"</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> show's how <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken notification system is a problem</a>.</p>
<p>One of the more interesting parts is that in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>'s system it gives you zero context on what you're getting into before you click on a channel.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-27.png" rel="noopener noreferrer">Pasted image 27</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>On the other hand Basecamp's is full of useful context that doesn't require <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">diving into the actual thing to know if it's going to be useful</a> or it's going to be <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a> or even <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">completely off topic</a>.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-28.png" rel="noopener noreferrer">Pasted image 28</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>This stops the constant rabbit holing and lowers the amount of <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">variable rewards</a> that <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addict us</a>.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a></li>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.381 [debug] l:len=2

10:45:07.381 [debug] l:buf=432:<h1>The mystery in your inbox (Slack's notification V</h1>
<p>In the article <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"What's that mystery in your inbox costing you?"</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> show's how <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken notification system is a problem</a>.</p>
<p>One of the more interesting parts is that in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>'s system it gives you zero context on what you're getting into before you click on a channel.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-27.png" rel="noopener noreferrer">Pasted image 27</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>On the other hand Basecamp's is full of useful context that doesn't require <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">diving into the actual thing to know if it's going to be useful</a> or it's going to be <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a> or even <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">completely off topic</a>.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-28.png" rel="noopener noreferrer">Pasted image 28</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>This stops the constant rabbit holing and lowers the amount of <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">variable rewards</a> that <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addict us</a>.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a></li>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.381 [debug] l:len=24

10:45:07.381 [debug] l:buf=32:<h1>The mystery in your inbox (Slack's notification V</h1>
<p>In the article <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"What's that mystery in your inbox costing you?"</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> show's how <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken notification system is a problem</a>.</p>
<p>One of the more interesting parts is that in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>'s system it gives you zero context on what you're getting into before you click on a channel.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-27.png" rel="noopener noreferrer">Pasted image 27</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>On the other hand Basecamp's is full of useful context that doesn't require <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">diving into the actual thing to know if it's going to be useful</a> or it's going to be <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a> or even <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">completely off topic</a>.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-28.png" rel="noopener noreferrer">Pasted image 28</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>This stops the constant rabbit holing and lowers the amount of <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">variable rewards</a> that <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addict us</a>.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a></li>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.381 [debug] l:len=243

10:45:07.381 [debug] l:buf=2:<h1>The mystery in your inbox (Slack's notification V</h1>
<p>In the article <a href="https://m.signalvnoise.com/whats-that-mystery-in-your-inbox-costing-you/" rel="noopener noreferrer">"What's that mystery in your inbox costing you?"</a> <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> show's how <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken notification system is a problem</a>.</p>
<p>One of the more interesting parts is that in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>'s system it gives you zero context on what you're getting into before you click on a channel.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-27.png" rel="noopener noreferrer">Pasted image 27</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>On the other hand Basecamp's is full of useful context that doesn't require <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">diving into the actual thing to know if it's going to be useful</a> or it's going to be <a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">fun</a> or even <a href="http://localhost:5000/on-topic-v.s.-off-topic" rel="noopener noreferrer">completely off topic</a>.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-28.png" rel="noopener noreferrer">Pasted image 28</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>This stops the constant rabbit holing and lowers the amount of <a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">variable rewards</a> that <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addict us</a>.</p>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/topic-fragmentation" rel="noopener noreferrer">topic fragmentation</a></li>
<li><a href="http://localhost:5000/topic-based" rel="noopener noreferrer">topic based</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack-is-social-media" rel="noopener noreferrer">Slack is Social Media</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf empty

10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf=227:<h1>Gant Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.381 [debug] l:len=2

10:45:07.381 [debug] l:buf=27:<h1>Gant Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.381 [debug] l:len=22

10:45:07.381 [debug] l:buf=7:<h1>Gant Charts</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.381 [debug] l:len=

10:45:07.381 [debug] l:buf empty

10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf=458:<h1>emoji reactions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.382 [debug] l:len=4

10:45:07.382 [debug] l:buf=58:<h1>emoji reactions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.382 [debug] l:len=45

10:45:07.382 [debug] l:buf=8:<h1>emoji reactions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf empty

10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf=1321:<h1>Fisher Price Design</h1>
<p>In the blog post: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a> they talk about "Fisher Price Design". They also mention that they try to avoid 3 column layouts, notification dots, etc... as much as possible to respect the user's <a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a>. To give them peace of mind.</p>
<p>I love the idea of <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> and showing how when you have a simple thing as 3 columns you are essentially saying, "You have to look at 3 thing right now" there's no focus. And I know what you're thinking, "We'll just let them collapse the sidebar" but this is just <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>. You aren't solving the real problem! If I have to constantly close the sidebar just to get focus you've failed as a designer.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a></li>
</ul>


10:45:07.382 [debug] l:len=1

10:45:07.382 [debug] l:buf=321:<h1>Fisher Price Design</h1>
<p>In the blog post: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a> they talk about "Fisher Price Design". They also mention that they try to avoid 3 column layouts, notification dots, etc... as much as possible to respect the user's <a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a>. To give them peace of mind.</p>
<p>I love the idea of <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> and showing how when you have a simple thing as 3 columns you are essentially saying, "You have to look at 3 thing right now" there's no focus. And I know what you're thinking, "We'll just let them collapse the sidebar" but this is just <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>. You aren't solving the real problem! If I have to constantly close the sidebar just to get focus you've failed as a designer.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a></li>
</ul>


10:45:07.382 [debug] l:len=13

10:45:07.382 [debug] l:buf=21:<h1>Fisher Price Design</h1>
<p>In the blog post: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a> they talk about "Fisher Price Design". They also mention that they try to avoid 3 column layouts, notification dots, etc... as much as possible to respect the user's <a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a>. To give them peace of mind.</p>
<p>I love the idea of <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> and showing how when you have a simple thing as 3 columns you are essentially saying, "You have to look at 3 thing right now" there's no focus. And I know what you're thinking, "We'll just let them collapse the sidebar" but this is just <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>. You aren't solving the real problem! If I have to constantly close the sidebar just to get focus you've failed as a designer.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a></li>
</ul>


10:45:07.382 [debug] l:len=132

10:45:07.382 [debug] l:buf=1:<h1>Fisher Price Design</h1>
<p>In the blog post: <a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a> they talk about "Fisher Price Design". They also mention that they try to avoid 3 column layouts, notification dots, etc... as much as possible to respect the user's <a href="http://localhost:5000/attention" rel="noopener noreferrer">attention</a>. To give them peace of mind.</p>
<p>I love the idea of <a href="http://localhost:5000/simplicity" rel="noopener noreferrer">Simplicity</a> and showing how when you have a simple thing as 3 columns you are essentially saying, "You have to look at 3 thing right now" there's no focus. And I know what you're thinking, "We'll just let them collapse the sidebar" but this is just <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>. You aren't solving the real problem! If I have to constantly close the sidebar just to get focus you've failed as a designer.</p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a></li>
</ul>


10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf empty

10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf=113:<h1>Slack has no public, yet secluded space</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.382 [debug] l:len=1

10:45:07.382 [debug] l:buf=13:<h1>Slack has no public, yet secluded space</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.382 [debug] l:len=11

10:45:07.382 [debug] l:buf=3:<h1>Slack has no public, yet secluded space</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf empty

10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf=441:<h1>Automatic (company making Wordpress)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.382 [debug] l:len=4

10:45:07.382 [debug] l:buf=41:<h1>Automatic (company making Wordpress)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.382 [debug] l:len=44

10:45:07.382 [debug] l:buf=1:<h1>Automatic (company making Wordpress)</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.382 [debug] l:len=

10:45:07.382 [debug] l:buf empty

10:45:07.383 [debug] l:len=

10:45:07.383 [debug] l:buf=564:<h1>WIP limits</h1>
<ul>
<li>The idea that you shouldn't always have everyone working at 100% compacity, you should have time to relax make sure you're making time for <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activities and relaxation. Also encourages <a href="http://localhost:5000/pairing" rel="noopener noreferrer">pairing</a>.</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.383 [debug] l:len=5

10:45:07.383 [debug] l:buf=64:<h1>WIP limits</h1>
<ul>
<li>The idea that you shouldn't always have everyone working at 100% compacity, you should have time to relax make sure you're making time for <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activities and relaxation. Also encourages <a href="http://localhost:5000/pairing" rel="noopener noreferrer">pairing</a>.</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.383 [debug] l:len=56

10:45:07.383 [debug] l:buf=4:<h1>WIP limits</h1>
<ul>
<li>The idea that you shouldn't always have everyone working at 100% compacity, you should have time to relax make sure you're making time for <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activities and relaxation. Also encourages <a href="http://localhost:5000/pairing" rel="noopener noreferrer">pairing</a>.</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-methodology" rel="noopener noreferrer">Kanban methodology</a></li>
</ul>


10:45:07.383 [debug] l:len=

10:45:07.383 [debug] l:buf empty

10:45:07.383 [debug] l:len=

10:45:07.383 [debug] l:buf=973:<h1>Elm</h1>
<blockquote>
<p>Forrest Gump’s most memorable quote was&nbsp;“Life is like a JavaScript application: you never know what you’re gonna get”. Well I’m pretty sure it was about JS anyway; it’s been a while since I’ve seen that film.</p>
</blockquote>
<p>-<a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.383 [debug] l:len=9

10:45:07.383 [debug] l:buf=73:<h1>Elm</h1>
<blockquote>
<p>Forrest Gump’s most memorable quote was&nbsp;“Life is like a JavaScript application: you never know what you’re gonna get”. Well I’m pretty sure it was about JS anyway; it’s been a while since I’ve seen that film.</p>
</blockquote>
<p>-<a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.383 [debug] l:len=97

10:45:07.383 [debug] l:buf=3:<h1>Elm</h1>
<blockquote>
<p>Forrest Gump’s most memorable quote was&nbsp;“Life is like a JavaScript application: you never know what you’re gonna get”. Well I’m pretty sure it was about JS anyway; it’s been a while since I’ve seen that film.</p>
</blockquote>
<p>-<a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/elm-argument" rel="noopener noreferrer">Elm argument</a></li>
<li><a href="http://localhost:5000/elm-in-production-stories" rel="noopener noreferrer">Elm in Production Stories</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.383 [debug] l:len=

10:45:07.383 [debug] l:buf empty

10:45:07.383 [debug] l:len=

10:45:07.383 [debug] l:buf=384:<h1>chat</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
</ul>


10:45:07.383 [debug] l:len=3

10:45:07.383 [debug] l:buf=84:<h1>chat</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
</ul>


10:45:07.383 [debug] l:len=38

10:45:07.383 [debug] l:buf=4:<h1>chat</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a></li>
</ul>


10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf empty

10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf=265:<h1>Pasted image 20200922152141</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.384 [debug] l:len=2

10:45:07.384 [debug] l:buf=65:<h1>Pasted image 20200922152141</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.384 [debug] l:len=26

10:45:07.384 [debug] l:buf=5:<h1>Pasted image 20200922152141</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf empty

10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf=79:<h1>Todo Lists</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.384 [debug] l:len=7

10:45:07.384 [debug] l:buf=9:<h1>Todo Lists</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf empty

10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf=218:<h1>Heterarchy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.384 [debug] l:len=2

10:45:07.384 [debug] l:buf=18:<h1>Heterarchy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.384 [debug] l:len=21

10:45:07.384 [debug] l:buf=8:<h1>Heterarchy</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/moc" rel="noopener noreferrer">MOC</a></li>
</ul>


10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf empty

10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf=1092:<h1>The negativity people on you do new things and opportunity costs</h1>
<p>People tend to get very negative when you trying to do new things telling you all the reasons that it's going to be worse. there is probably many reasons for this but one of the reasons is probably because they don't think about the opportunity cost of sticking with what they're currently doing. They assume that the only risk is in trying something new. in reality there's a risk and not trying anything new namely you'll miss out on opportunities that you never tried.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/opportunity-costs" rel="noopener noreferrer">opportunity costs</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.384 [debug] l:len=1

10:45:07.384 [debug] l:buf=092:<h1>The negativity people on you do new things and opportunity costs</h1>
<p>People tend to get very negative when you trying to do new things telling you all the reasons that it's going to be worse. there is probably many reasons for this but one of the reasons is probably because they don't think about the opportunity cost of sticking with what they're currently doing. They assume that the only risk is in trying something new. in reality there's a risk and not trying anything new namely you'll miss out on opportunities that you never tried.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/opportunity-costs" rel="noopener noreferrer">opportunity costs</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.384 [debug] l:len=10

10:45:07.384 [debug] l:buf=92:<h1>The negativity people on you do new things and opportunity costs</h1>
<p>People tend to get very negative when you trying to do new things telling you all the reasons that it's going to be worse. there is probably many reasons for this but one of the reasons is probably because they don't think about the opportunity cost of sticking with what they're currently doing. They assume that the only risk is in trying something new. in reality there's a risk and not trying anything new namely you'll miss out on opportunities that you never tried.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/opportunity-costs" rel="noopener noreferrer">opportunity costs</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.384 [debug] l:len=109

10:45:07.384 [debug] l:buf=2:<h1>The negativity people on you do new things and opportunity costs</h1>
<p>People tend to get very negative when you trying to do new things telling you all the reasons that it's going to be worse. there is probably many reasons for this but one of the reasons is probably because they don't think about the opportunity cost of sticking with what they're currently doing. They assume that the only risk is in trying something new. in reality there's a risk and not trying anything new namely you'll miss out on opportunities that you never tried.</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
<li><a href="http://localhost:5000/opportunity-costs" rel="noopener noreferrer">opportunity costs</a></li>
<li><a href="http://localhost:5000/business-success" rel="noopener noreferrer">Business success</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.384 [debug] l:len=

10:45:07.384 [debug] l:buf empty

10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf=631:<h1>Zoom</h1>
<p>The best way to <a href="http://localhost:5000/emulate-the-office" rel="noopener noreferrer">emulate the office</a> there is.</p>
<p>Wins against other video tools due to it's reliability.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.385 [debug] l:len=6

10:45:07.385 [debug] l:buf=31:<h1>Zoom</h1>
<p>The best way to <a href="http://localhost:5000/emulate-the-office" rel="noopener noreferrer">emulate the office</a> there is.</p>
<p>Wins against other video tools due to it's reliability.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.385 [debug] l:len=63

10:45:07.385 [debug] l:buf=1:<h1>Zoom</h1>
<p>The best way to <a href="http://localhost:5000/emulate-the-office" rel="noopener noreferrer">emulate the office</a> there is.</p>
<p>Wins against other video tools due to it's reliability.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf empty

10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf=166:<h1>Maybe Meat based diets are loosing weight because of no-GMO, or less toxins</h1>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.385 [debug] l:len=1

10:45:07.385 [debug] l:buf=66:<h1>Maybe Meat based diets are loosing weight because of no-GMO, or less toxins</h1>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.385 [debug] l:len=16

10:45:07.385 [debug] l:buf=6:<h1>Maybe Meat based diets are loosing weight because of no-GMO, or less toxins</h1>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf empty

10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf=1238:<h1>Velocity talk notes:</h1>
<p>How do we get better at our jobs?</p>
<ul>
<li>help lift the team by sacrificing your own <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productivity</a></li>
<li>automate the stuff that you want to happen more often, so you can think more things</li>
<li>transfer knowledge better</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/automation" rel="noopener noreferrer">Automation</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></li>
<li><a href="http://localhost:5000/bus-count" rel="noopener noreferrer">Bus count</a></li>
<li><a href="http://localhost:5000/knowlege-transfer" rel="noopener noreferrer">Knowlege transfer</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.385 [debug] l:len=1

10:45:07.385 [debug] l:buf=238:<h1>Velocity talk notes:</h1>
<p>How do we get better at our jobs?</p>
<ul>
<li>help lift the team by sacrificing your own <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productivity</a></li>
<li>automate the stuff that you want to happen more often, so you can think more things</li>
<li>transfer knowledge better</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/automation" rel="noopener noreferrer">Automation</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></li>
<li><a href="http://localhost:5000/bus-count" rel="noopener noreferrer">Bus count</a></li>
<li><a href="http://localhost:5000/knowlege-transfer" rel="noopener noreferrer">Knowlege transfer</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.385 [debug] l:len=12

10:45:07.385 [debug] l:buf=38:<h1>Velocity talk notes:</h1>
<p>How do we get better at our jobs?</p>
<ul>
<li>help lift the team by sacrificing your own <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productivity</a></li>
<li>automate the stuff that you want to happen more often, so you can think more things</li>
<li>transfer knowledge better</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/automation" rel="noopener noreferrer">Automation</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></li>
<li><a href="http://localhost:5000/bus-count" rel="noopener noreferrer">Bus count</a></li>
<li><a href="http://localhost:5000/knowlege-transfer" rel="noopener noreferrer">Knowlege transfer</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.385 [debug] l:len=123

10:45:07.385 [debug] l:buf=8:<h1>Velocity talk notes:</h1>
<p>How do we get better at our jobs?</p>
<ul>
<li>help lift the team by sacrificing your own <a href="http://localhost:5000/productivity" rel="noopener noreferrer">productivity</a></li>
<li>automate the stuff that you want to happen more often, so you can think more things</li>
<li>transfer knowledge better</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/automation" rel="noopener noreferrer">Automation</a></li>
<li><a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></li>
<li><a href="http://localhost:5000/teaching" rel="noopener noreferrer">teaching</a></li>
<li><a href="http://localhost:5000/context" rel="noopener noreferrer">Context</a></li>
<li><a href="http://localhost:5000/mentoring" rel="noopener noreferrer">Mentoring</a></li>
<li><a href="http://localhost:5000/knowledge-worker" rel="noopener noreferrer">knowledge worker</a></li>
<li><a href="http://localhost:5000/bus-count" rel="noopener noreferrer">Bus count</a></li>
<li><a href="http://localhost:5000/knowlege-transfer" rel="noopener noreferrer">Knowlege transfer</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
</ul>


10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf empty

10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf=96:<h1>Pasted image 20200923062534</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.385 [debug] l:len=9

10:45:07.385 [debug] l:buf=6:<h1>Pasted image 20200923062534</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.385 [debug] l:len=

10:45:07.385 [debug] l:buf empty

10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf=365:<p>Our brains
don't cope well with low-probability events. The scenario we can predict is the happy path, so that's what we estimate. Reality is almost never so predictable.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.386 [debug] l:len=3

10:45:07.386 [debug] l:buf=65:<p>Our brains
don't cope well with low-probability events. The scenario we can predict is the happy path, so that's what we estimate. Reality is almost never so predictable.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.386 [debug] l:len=36

10:45:07.386 [debug] l:buf=5:<p>Our brains
don't cope well with low-probability events. The scenario we can predict is the happy path, so that's what we estimate. Reality is almost never so predictable.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
</ul>


10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf empty

10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf=823:<h1>Slack features to slow down information loss</h1>
<p>Slack in 2016 didn't have these two features:</p>
<ol>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a></li>
</ol>
<p>They are released for two reasons. To slow down <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a> AND use <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.386 [debug] l:len=8

10:45:07.386 [debug] l:buf=23:<h1>Slack features to slow down information loss</h1>
<p>Slack in 2016 didn't have these two features:</p>
<ol>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a></li>
</ol>
<p>They are released for two reasons. To slow down <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a> AND use <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.386 [debug] l:len=82

10:45:07.386 [debug] l:buf=3:<h1>Slack features to slow down information loss</h1>
<p>Slack in 2016 didn't have these two features:</p>
<ol>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/emoji-reactions" rel="noopener noreferrer">emoji reactions</a></li>
</ol>
<p>They are released for two reasons. To slow down <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a> AND use <a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>


10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf empty

10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf=82:<p>Phone's IMEI: 863487024883709 02</p>
<p>unlock code: 577-372-890-864-847-4</p>


10:45:07.386 [debug] l:len=8

10:45:07.386 [debug] l:buf=2:<p>Phone's IMEI: 863487024883709 02</p>
<p>unlock code: 577-372-890-864-847-4</p>


10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf empty

10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf=529:<h1>Evergreen Notes</h1>
<p>Based on <a href="http://localhost:5000/evergreen-notes---andys" rel="noopener noreferrer">Evergreen Notes - Andys</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.386 [debug] l:len=5

10:45:07.386 [debug] l:buf=29:<h1>Evergreen Notes</h1>
<p>Based on <a href="http://localhost:5000/evergreen-notes---andys" rel="noopener noreferrer">Evergreen Notes - Andys</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.386 [debug] l:len=52

10:45:07.386 [debug] l:buf=9:<h1>Evergreen Notes</h1>
<p>Based on <a href="http://localhost:5000/evergreen-notes---andys" rel="noopener noreferrer">Evergreen Notes - Andys</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/andy's-working-notes" rel="noopener noreferrer">Andy's Working Notes</a></li>
<li><a href="http://localhost:5000/joel-chan--zettelkasten-and-evergreen-notes-for-generative-thought" rel="noopener noreferrer">Joel Chan- Zettelkasten and Evergreen Notes for Generative Thought</a></li>
</ul>


10:45:07.386 [debug] l:len=

10:45:07.386 [debug] l:buf empty

10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf=264:<h1>calm</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>


10:45:07.387 [debug] l:len=2

10:45:07.387 [debug] l:buf=64:<h1>calm</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>


10:45:07.387 [debug] l:len=26

10:45:07.387 [debug] l:buf=4:<h1>calm</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-single-page-design" rel="noopener noreferrer">Basecamp's single page design</a></li>
</ul>


10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf empty

10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf=134:<h1>legos</h1>
<p>Often connected to: <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.387 [debug] l:len=1

10:45:07.387 [debug] l:buf=34:<h1>legos</h1>
<p>Often connected to: <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.387 [debug] l:len=13

10:45:07.387 [debug] l:buf=4:<h1>legos</h1>
<p>Often connected to: <a href="http://localhost:5000/functional-css" rel="noopener noreferrer">Functional CSS</a></p>


10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf empty

10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf=855:<p>I was hoping that I could make a Obsidian to Static Site generator.</p>
<ul>
<li> Find all the things in <code>[[</code>'s</li>
<li> Gather all files recursively</li>
<li> Fuzzy Searching for Filenames that were in <code>[[</code>'s and convert them to <a href="http://localhost:5000/" rel="noopener noreferrer"></a> links</li>
<li> Probably run through existing SSG</li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/projects" rel="noopener noreferrer">Projects</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.387 [debug] l:len=8

10:45:07.387 [debug] l:buf=55:<p>I was hoping that I could make a Obsidian to Static Site generator.</p>
<ul>
<li> Find all the things in <code>[[</code>'s</li>
<li> Gather all files recursively</li>
<li> Fuzzy Searching for Filenames that were in <code>[[</code>'s and convert them to <a href="http://localhost:5000/" rel="noopener noreferrer"></a> links</li>
<li> Probably run through existing SSG</li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/projects" rel="noopener noreferrer">Projects</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.387 [debug] l:len=85

10:45:07.387 [debug] l:buf=5:<p>I was hoping that I could make a Obsidian to Static Site generator.</p>
<ul>
<li> Find all the things in <code>[[</code>'s</li>
<li> Gather all files recursively</li>
<li> Fuzzy Searching for Filenames that were in <code>[[</code>'s and convert them to <a href="http://localhost:5000/" rel="noopener noreferrer"></a> links</li>
<li> Probably run through existing SSG</li>
</ul>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
<li><a href="http://localhost:5000/digital-garden" rel="noopener noreferrer">Digital Garden</a></li>
<li><a href="http://localhost:5000/projects" rel="noopener noreferrer">Projects</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a></li>
</ul>


10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf empty

10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf=72:<h1>css</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.387 [debug] l:len=7

10:45:07.387 [debug] l:buf=2:<h1>css</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf empty

10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf=253:<h1>Google Docs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.387 [debug] l:len=2

10:45:07.387 [debug] l:buf=53:<h1>Google Docs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.387 [debug] l:len=25

10:45:07.387 [debug] l:buf=3:<h1>Google Docs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
</ul>


10:45:07.387 [debug] l:len=

10:45:07.387 [debug] l:buf empty

10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf=240:<h1>Destributed Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.388 [debug] l:len=2

10:45:07.388 [debug] l:buf=40:<h1>Destributed Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.388 [debug] l:len=24

10:45:07.388 [debug] l:buf=0:<h1>Destributed Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf empty

10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf=75:<h1>chruch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.388 [debug] l:len=7

10:45:07.388 [debug] l:buf=5:<h1>chruch</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf empty

10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf=381:<h1>Funcitonal Css</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
<li><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></li>
</ul>


10:45:07.388 [debug] l:len=3

10:45:07.388 [debug] l:buf=81:<h1>Funcitonal Css</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
<li><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></li>
</ul>


10:45:07.388 [debug] l:len=38

10:45:07.388 [debug] l:buf=1:<h1>Funcitonal Css</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
<li><a href="http://localhost:5000/tachyons" rel="noopener noreferrer">Tachyons</a></li>
</ul>


10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf empty

10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf=316:<h1>Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.388 [debug] l:len=3

10:45:07.388 [debug] l:buf=16:<h1>Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.388 [debug] l:len=31

10:45:07.388 [debug] l:buf=6:<h1>Elixir</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.388 [debug] l:len=

10:45:07.388 [debug] l:buf empty

10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf=3476:<h1>Alexa, make a VUI (voice ui)</h1>
<h1>Design</h1>
<h2>Ways to prototype</h2>
<ol>
<li>Role-play</li>
<li>Scripts</li>
<li>SaySpring -&gt; free but request an invite</li>
<li>HighFidelity</li>
</ol>
<h2>Design principles</h2>
<ul>
<li>Keep it short</li>
<li>Voice is a great input but less nice for output (alexa talking to you)</li>
<li>have a low amount of things you can do</li>
<li><strong>Cognitive load</strong> People can't remember things for very long, keep them very short.
<ul>
<li>Banking app knowing and doing math with the credit card account and how much is left.</li>
</ul>
</li>
</ul>
<h3>Utterances: What people actually say</h3>
<h3>Intent: What you're actually trying to say</h3>
<h3>Principles of conversation</h3>
<ul>
<li>
<p>Sound Natural</p>
<ul>
<li>Talking out loud helps a lot</li>
</ul>
</li>
<li>
<p>Keep it short</p>
</li>
<li>
<p>Watch for <strong>cognitive load</strong></p>
</li>
<li>
<p>think about Affordances</p>
</li>
<li>
<p>Take turns</p>
<ul>
<li>Don't ask a question then keep talking!</li>
</ul>
</li>
<li>
<p>Use confirmation phrases</p>
<ul>
<li>Explicit
<ul>
<li>Good for things that are high risk or likely to go wrong like names</li>
<li>500$ are you sure you want to do this?</li>
</ul>
</li>
<li>Implicit Feedback
*</li>
</ul>
</li>
<li>
<p>Give people credit</p>
<ul>
<li>Don't force people to say things one way</li>
<li>Prime them but don't tell them what to say</li>
</ul>
</li>
<li>
<p>Vary your responses</p>
<ul>
<li>Great, alright, sweet.</li>
</ul>
</li>
<li>
<p>Engage beginners and experts</p>
<ul>
<li>Don't tell them tons of stuff after they've heard it a lot</li>
</ul>
</li>
<li>
<p>Conversation Repair</p>
<ul>
<li>No input
<ul>
<li>Say it again</li>
<li><strong>better</strong> give more helpful re-prompts.
*</li>
</ul>
</li>
<li>Bad to undersand</li>
<li>Expect variations</li>
<li>prepared to step in and help anytime
<ul>
<li>Make it contextual</li>
</ul>
</li>
<li>Fail Gracefull
<ul>
<li>"Let's talk again later, here's how to get back"</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Use SSML</p>
<ul>
<li>Change the way you say, whispered, pronounce it in very particular ways</li>
<li>&lt;audio ..../&gt; to have 3rd party audio</li>
<li>Change the say you pronounce it</li>
<li>etc...</li>
</ul>
</li>
<li>
<p><em>more on the website</em></p>
</li>
<li>
<p>Wake word -&gt; "Alexa"</p>
</li>
<li>
<p>Pizza Plannet -&gt; app name</p>
</li>
<li>
<p>Intents: Order me a pizza -&gt; OrderPizzaIntent</p>
<ul>
<li>I need my pizza</li>
<li>I need a pizza</li>
<li>I be got pizza</li>
<li>My regular</li>
</ul>
</li>
<li>
<p>Slot (alexa) / Entitiy (google)</p>
<ul>
<li>{size} -&gt; list of stuff that are in that category
<ul>
<li>Large/Big -&gt; large</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Responses</p>
</li>
</ul>
<p>Types of skills</p>
<ul>
<li>Flash Briefing
<ul>
<li>rss feed of information</li>
</ul>
</li>
<li>Custom
<ul>
<li>What we're making</li>
</ul>
</li>
<li>Video
<ul>
<li>Like for TV</li>
</ul>
</li>
</ul>
<p>AWS Lambda ARN</p>
<ul>
<li>Lambda functions are the way to go usually</li>
</ul>
<pre><code>const Alexa = require('alexa-sdk');

const handlers = {
	'LaunchRequest': function() {
		this.emit(":ask", "Hello my friends at Open WEst!", "no really, hello");
   }
}

	


</code></pre>
<h1>Ideas</h1>
<ol>
<li>Reserving a room</li>
<li>Check/Log expenses</li>
<li>Sending a coworker a message.</li>
</ol>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.389 [debug] l:len=3

10:45:07.389 [debug] l:buf=476:<h1>Alexa, make a VUI (voice ui)</h1>
<h1>Design</h1>
<h2>Ways to prototype</h2>
<ol>
<li>Role-play</li>
<li>Scripts</li>
<li>SaySpring -&gt; free but request an invite</li>
<li>HighFidelity</li>
</ol>
<h2>Design principles</h2>
<ul>
<li>Keep it short</li>
<li>Voice is a great input but less nice for output (alexa talking to you)</li>
<li>have a low amount of things you can do</li>
<li><strong>Cognitive load</strong> People can't remember things for very long, keep them very short.
<ul>
<li>Banking app knowing and doing math with the credit card account and how much is left.</li>
</ul>
</li>
</ul>
<h3>Utterances: What people actually say</h3>
<h3>Intent: What you're actually trying to say</h3>
<h3>Principles of conversation</h3>
<ul>
<li>
<p>Sound Natural</p>
<ul>
<li>Talking out loud helps a lot</li>
</ul>
</li>
<li>
<p>Keep it short</p>
</li>
<li>
<p>Watch for <strong>cognitive load</strong></p>
</li>
<li>
<p>think about Affordances</p>
</li>
<li>
<p>Take turns</p>
<ul>
<li>Don't ask a question then keep talking!</li>
</ul>
</li>
<li>
<p>Use confirmation phrases</p>
<ul>
<li>Explicit
<ul>
<li>Good for things that are high risk or likely to go wrong like names</li>
<li>500$ are you sure you want to do this?</li>
</ul>
</li>
<li>Implicit Feedback
*</li>
</ul>
</li>
<li>
<p>Give people credit</p>
<ul>
<li>Don't force people to say things one way</li>
<li>Prime them but don't tell them what to say</li>
</ul>
</li>
<li>
<p>Vary your responses</p>
<ul>
<li>Great, alright, sweet.</li>
</ul>
</li>
<li>
<p>Engage beginners and experts</p>
<ul>
<li>Don't tell them tons of stuff after they've heard it a lot</li>
</ul>
</li>
<li>
<p>Conversation Repair</p>
<ul>
<li>No input
<ul>
<li>Say it again</li>
<li><strong>better</strong> give more helpful re-prompts.
*</li>
</ul>
</li>
<li>Bad to undersand</li>
<li>Expect variations</li>
<li>prepared to step in and help anytime
<ul>
<li>Make it contextual</li>
</ul>
</li>
<li>Fail Gracefull
<ul>
<li>"Let's talk again later, here's how to get back"</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Use SSML</p>
<ul>
<li>Change the way you say, whispered, pronounce it in very particular ways</li>
<li>&lt;audio ..../&gt; to have 3rd party audio</li>
<li>Change the say you pronounce it</li>
<li>etc...</li>
</ul>
</li>
<li>
<p><em>more on the website</em></p>
</li>
<li>
<p>Wake word -&gt; "Alexa"</p>
</li>
<li>
<p>Pizza Plannet -&gt; app name</p>
</li>
<li>
<p>Intents: Order me a pizza -&gt; OrderPizzaIntent</p>
<ul>
<li>I need my pizza</li>
<li>I need a pizza</li>
<li>I be got pizza</li>
<li>My regular</li>
</ul>
</li>
<li>
<p>Slot (alexa) / Entitiy (google)</p>
<ul>
<li>{size} -&gt; list of stuff that are in that category
<ul>
<li>Large/Big -&gt; large</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Responses</p>
</li>
</ul>
<p>Types of skills</p>
<ul>
<li>Flash Briefing
<ul>
<li>rss feed of information</li>
</ul>
</li>
<li>Custom
<ul>
<li>What we're making</li>
</ul>
</li>
<li>Video
<ul>
<li>Like for TV</li>
</ul>
</li>
</ul>
<p>AWS Lambda ARN</p>
<ul>
<li>Lambda functions are the way to go usually</li>
</ul>
<pre><code>const Alexa = require('alexa-sdk');

const handlers = {
	'LaunchRequest': function() {
		this.emit(":ask", "Hello my friends at Open WEst!", "no really, hello");
   }
}

	


</code></pre>
<h1>Ideas</h1>
<ol>
<li>Reserving a room</li>
<li>Check/Log expenses</li>
<li>Sending a coworker a message.</li>
</ol>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.389 [debug] l:len=34

10:45:07.389 [debug] l:buf=76:<h1>Alexa, make a VUI (voice ui)</h1>
<h1>Design</h1>
<h2>Ways to prototype</h2>
<ol>
<li>Role-play</li>
<li>Scripts</li>
<li>SaySpring -&gt; free but request an invite</li>
<li>HighFidelity</li>
</ol>
<h2>Design principles</h2>
<ul>
<li>Keep it short</li>
<li>Voice is a great input but less nice for output (alexa talking to you)</li>
<li>have a low amount of things you can do</li>
<li><strong>Cognitive load</strong> People can't remember things for very long, keep them very short.
<ul>
<li>Banking app knowing and doing math with the credit card account and how much is left.</li>
</ul>
</li>
</ul>
<h3>Utterances: What people actually say</h3>
<h3>Intent: What you're actually trying to say</h3>
<h3>Principles of conversation</h3>
<ul>
<li>
<p>Sound Natural</p>
<ul>
<li>Talking out loud helps a lot</li>
</ul>
</li>
<li>
<p>Keep it short</p>
</li>
<li>
<p>Watch for <strong>cognitive load</strong></p>
</li>
<li>
<p>think about Affordances</p>
</li>
<li>
<p>Take turns</p>
<ul>
<li>Don't ask a question then keep talking!</li>
</ul>
</li>
<li>
<p>Use confirmation phrases</p>
<ul>
<li>Explicit
<ul>
<li>Good for things that are high risk or likely to go wrong like names</li>
<li>500$ are you sure you want to do this?</li>
</ul>
</li>
<li>Implicit Feedback
*</li>
</ul>
</li>
<li>
<p>Give people credit</p>
<ul>
<li>Don't force people to say things one way</li>
<li>Prime them but don't tell them what to say</li>
</ul>
</li>
<li>
<p>Vary your responses</p>
<ul>
<li>Great, alright, sweet.</li>
</ul>
</li>
<li>
<p>Engage beginners and experts</p>
<ul>
<li>Don't tell them tons of stuff after they've heard it a lot</li>
</ul>
</li>
<li>
<p>Conversation Repair</p>
<ul>
<li>No input
<ul>
<li>Say it again</li>
<li><strong>better</strong> give more helpful re-prompts.
*</li>
</ul>
</li>
<li>Bad to undersand</li>
<li>Expect variations</li>
<li>prepared to step in and help anytime
<ul>
<li>Make it contextual</li>
</ul>
</li>
<li>Fail Gracefull
<ul>
<li>"Let's talk again later, here's how to get back"</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Use SSML</p>
<ul>
<li>Change the way you say, whispered, pronounce it in very particular ways</li>
<li>&lt;audio ..../&gt; to have 3rd party audio</li>
<li>Change the say you pronounce it</li>
<li>etc...</li>
</ul>
</li>
<li>
<p><em>more on the website</em></p>
</li>
<li>
<p>Wake word -&gt; "Alexa"</p>
</li>
<li>
<p>Pizza Plannet -&gt; app name</p>
</li>
<li>
<p>Intents: Order me a pizza -&gt; OrderPizzaIntent</p>
<ul>
<li>I need my pizza</li>
<li>I need a pizza</li>
<li>I be got pizza</li>
<li>My regular</li>
</ul>
</li>
<li>
<p>Slot (alexa) / Entitiy (google)</p>
<ul>
<li>{size} -&gt; list of stuff that are in that category
<ul>
<li>Large/Big -&gt; large</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Responses</p>
</li>
</ul>
<p>Types of skills</p>
<ul>
<li>Flash Briefing
<ul>
<li>rss feed of information</li>
</ul>
</li>
<li>Custom
<ul>
<li>What we're making</li>
</ul>
</li>
<li>Video
<ul>
<li>Like for TV</li>
</ul>
</li>
</ul>
<p>AWS Lambda ARN</p>
<ul>
<li>Lambda functions are the way to go usually</li>
</ul>
<pre><code>const Alexa = require('alexa-sdk');

const handlers = {
	'LaunchRequest': function() {
		this.emit(":ask", "Hello my friends at Open WEst!", "no really, hello");
   }
}

	


</code></pre>
<h1>Ideas</h1>
<ol>
<li>Reserving a room</li>
<li>Check/Log expenses</li>
<li>Sending a coworker a message.</li>
</ol>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.389 [debug] l:len=347

10:45:07.389 [debug] l:buf=6:<h1>Alexa, make a VUI (voice ui)</h1>
<h1>Design</h1>
<h2>Ways to prototype</h2>
<ol>
<li>Role-play</li>
<li>Scripts</li>
<li>SaySpring -&gt; free but request an invite</li>
<li>HighFidelity</li>
</ol>
<h2>Design principles</h2>
<ul>
<li>Keep it short</li>
<li>Voice is a great input but less nice for output (alexa talking to you)</li>
<li>have a low amount of things you can do</li>
<li><strong>Cognitive load</strong> People can't remember things for very long, keep them very short.
<ul>
<li>Banking app knowing and doing math with the credit card account and how much is left.</li>
</ul>
</li>
</ul>
<h3>Utterances: What people actually say</h3>
<h3>Intent: What you're actually trying to say</h3>
<h3>Principles of conversation</h3>
<ul>
<li>
<p>Sound Natural</p>
<ul>
<li>Talking out loud helps a lot</li>
</ul>
</li>
<li>
<p>Keep it short</p>
</li>
<li>
<p>Watch for <strong>cognitive load</strong></p>
</li>
<li>
<p>think about Affordances</p>
</li>
<li>
<p>Take turns</p>
<ul>
<li>Don't ask a question then keep talking!</li>
</ul>
</li>
<li>
<p>Use confirmation phrases</p>
<ul>
<li>Explicit
<ul>
<li>Good for things that are high risk or likely to go wrong like names</li>
<li>500$ are you sure you want to do this?</li>
</ul>
</li>
<li>Implicit Feedback
*</li>
</ul>
</li>
<li>
<p>Give people credit</p>
<ul>
<li>Don't force people to say things one way</li>
<li>Prime them but don't tell them what to say</li>
</ul>
</li>
<li>
<p>Vary your responses</p>
<ul>
<li>Great, alright, sweet.</li>
</ul>
</li>
<li>
<p>Engage beginners and experts</p>
<ul>
<li>Don't tell them tons of stuff after they've heard it a lot</li>
</ul>
</li>
<li>
<p>Conversation Repair</p>
<ul>
<li>No input
<ul>
<li>Say it again</li>
<li><strong>better</strong> give more helpful re-prompts.
*</li>
</ul>
</li>
<li>Bad to undersand</li>
<li>Expect variations</li>
<li>prepared to step in and help anytime
<ul>
<li>Make it contextual</li>
</ul>
</li>
<li>Fail Gracefull
<ul>
<li>"Let's talk again later, here's how to get back"</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Use SSML</p>
<ul>
<li>Change the way you say, whispered, pronounce it in very particular ways</li>
<li>&lt;audio ..../&gt; to have 3rd party audio</li>
<li>Change the say you pronounce it</li>
<li>etc...</li>
</ul>
</li>
<li>
<p><em>more on the website</em></p>
</li>
<li>
<p>Wake word -&gt; "Alexa"</p>
</li>
<li>
<p>Pizza Plannet -&gt; app name</p>
</li>
<li>
<p>Intents: Order me a pizza -&gt; OrderPizzaIntent</p>
<ul>
<li>I need my pizza</li>
<li>I need a pizza</li>
<li>I be got pizza</li>
<li>My regular</li>
</ul>
</li>
<li>
<p>Slot (alexa) / Entitiy (google)</p>
<ul>
<li>{size} -&gt; list of stuff that are in that category
<ul>
<li>Large/Big -&gt; large</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Responses</p>
</li>
</ul>
<p>Types of skills</p>
<ul>
<li>Flash Briefing
<ul>
<li>rss feed of information</li>
</ul>
</li>
<li>Custom
<ul>
<li>What we're making</li>
</ul>
</li>
<li>Video
<ul>
<li>Like for TV</li>
</ul>
</li>
</ul>
<p>AWS Lambda ARN</p>
<ul>
<li>Lambda functions are the way to go usually</li>
</ul>
<pre><code>const Alexa = require('alexa-sdk');

const handlers = {
	'LaunchRequest': function() {
		this.emit(":ask", "Hello my friends at Open WEst!", "no really, hello");
   }
}

	


</code></pre>
<h1>Ideas</h1>
<ol>
<li>Reserving a room</li>
<li>Check/Log expenses</li>
<li>Sending a coworker a message.</li>
</ol>
<p><a href="http://localhost:5000/open-west" rel="noopener noreferrer">open-west</a></p>


10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf empty

10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf=265:<h1>Pasted image 20200922144739</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.389 [debug] l:len=2

10:45:07.389 [debug] l:buf=65:<h1>Pasted image 20200922144739</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.389 [debug] l:len=26

10:45:07.389 [debug] l:buf=5:<h1>Pasted image 20200922144739</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf empty

10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf=384:<h1>Factorio TODOs</h1>
<ul>
<li>No more coal, need to find a new source</li>
<li>Walls not making it to the oil hub</li>
<li>The main factory does way too much
<ul>
<li>Red Science</li>
<li>Green Science</li>
<li>Blue Science</li>
<li>Grey Science (military)</li>
<li>Collects and processes oil</li>
<li>Makes fuel</li>
</ul>
</li>
<li>Bitters are getting out of control.</li>
</ul>


10:45:07.389 [debug] l:len=3

10:45:07.389 [debug] l:buf=84:<h1>Factorio TODOs</h1>
<ul>
<li>No more coal, need to find a new source</li>
<li>Walls not making it to the oil hub</li>
<li>The main factory does way too much
<ul>
<li>Red Science</li>
<li>Green Science</li>
<li>Blue Science</li>
<li>Grey Science (military)</li>
<li>Collects and processes oil</li>
<li>Makes fuel</li>
</ul>
</li>
<li>Bitters are getting out of control.</li>
</ul>


10:45:07.389 [debug] l:len=38

10:45:07.389 [debug] l:buf=4:<h1>Factorio TODOs</h1>
<ul>
<li>No more coal, need to find a new source</li>
<li>Walls not making it to the oil hub</li>
<li>The main factory does way too much
<ul>
<li>Red Science</li>
<li>Green Science</li>
<li>Blue Science</li>
<li>Grey Science (military)</li>
<li>Collects and processes oil</li>
<li>Makes fuel</li>
</ul>
</li>
<li>Bitters are getting out of control.</li>
</ul>


10:45:07.389 [debug] l:len=

10:45:07.389 [debug] l:buf empty

10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf=244:<h1>garden</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.390 [debug] l:len=2

10:45:07.390 [debug] l:buf=44:<h1>garden</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.390 [debug] l:len=24

10:45:07.390 [debug] l:buf=4:<h1>garden</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/thought-processing" rel="noopener noreferrer">Thought Processing</a></li>
</ul>


10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf empty

10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf=319:<h1>Unschaped Work</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.390 [debug] l:len=3

10:45:07.390 [debug] l:buf=19:<h1>Unschaped Work</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.390 [debug] l:len=31

10:45:07.390 [debug] l:buf=9:<h1>Unschaped Work</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
</ul>


10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf empty

10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf=450:<p>Brutalist website <a href="http://localhost:5000/ideas" rel="noopener noreferrer">ideas</a></p>
<p><a href="http://www.bigsound.buzz/" rel="noopener noreferrer">http://www.bigsound.buzz/</a></p>
<ul>
<li>no click website</li>
<li>website using only one color (various shades of purple)</li>
<li>no mouse website</li>
<li>using marques for notifications</li>
<li>ugly pixelated gifs for code review statuses</li>
<li>a chartroom sidebar</li>
</ul>


10:45:07.390 [debug] l:len=4

10:45:07.390 [debug] l:buf=50:<p>Brutalist website <a href="http://localhost:5000/ideas" rel="noopener noreferrer">ideas</a></p>
<p><a href="http://www.bigsound.buzz/" rel="noopener noreferrer">http://www.bigsound.buzz/</a></p>
<ul>
<li>no click website</li>
<li>website using only one color (various shades of purple)</li>
<li>no mouse website</li>
<li>using marques for notifications</li>
<li>ugly pixelated gifs for code review statuses</li>
<li>a chartroom sidebar</li>
</ul>


10:45:07.390 [debug] l:len=45

10:45:07.390 [debug] l:buf=0:<p>Brutalist website <a href="http://localhost:5000/ideas" rel="noopener noreferrer">ideas</a></p>
<p><a href="http://www.bigsound.buzz/" rel="noopener noreferrer">http://www.bigsound.buzz/</a></p>
<ul>
<li>no click website</li>
<li>website using only one color (various shades of purple)</li>
<li>no mouse website</li>
<li>using marques for notifications</li>
<li>ugly pixelated gifs for code review statuses</li>
<li>a chartroom sidebar</li>
</ul>


10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf empty

10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf=633:<h1>anyone can throw in a ticket</h1>
<p>This is in an open <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> where anyone can throw in a ticket. Sure there's no guarantee that it'll get picked but eventually It'll rise to the top and will probably get prioritized. This means people are constantly <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">fighting over the programmers</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
</ul>


10:45:07.390 [debug] l:len=6

10:45:07.390 [debug] l:buf=33:<h1>anyone can throw in a ticket</h1>
<p>This is in an open <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> where anyone can throw in a ticket. Sure there's no guarantee that it'll get picked but eventually It'll rise to the top and will probably get prioritized. This means people are constantly <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">fighting over the programmers</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
</ul>


10:45:07.390 [debug] l:len=63

10:45:07.390 [debug] l:buf=3:<h1>anyone can throw in a ticket</h1>
<p>This is in an open <a href="http://localhost:5000/backlogs" rel="noopener noreferrer">backlog</a> where anyone can throw in a ticket. Sure there's no guarantee that it'll get picked but eventually It'll rise to the top and will probably get prioritized. This means people are constantly <a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">fighting over the programmers</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
</ul>


10:45:07.390 [debug] l:len=

10:45:07.390 [debug] l:buf empty

10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf=918:<h1>Slack is Newsfeeds, Basecamp is a tree</h1>
<p>You can see that while Slack is a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> Basecamp is a Tree. This is why many people <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>.</p>
<hr>
<h2><a href="http://localhost:5000/slack-vs-basecamp-datastructure.png" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.391 [debug] l:len=9

10:45:07.391 [debug] l:buf=18:<h1>Slack is Newsfeeds, Basecamp is a tree</h1>
<p>You can see that while Slack is a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> Basecamp is a Tree. This is why many people <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>.</p>
<hr>
<h2><a href="http://localhost:5000/slack-vs-basecamp-datastructure.png" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.391 [debug] l:len=91

10:45:07.391 [debug] l:buf=8:<h1>Slack is Newsfeeds, Basecamp is a tree</h1>
<p>You can see that while Slack is a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> Basecamp is a Tree. This is why many people <a href="http://localhost:5000/can-find-anything-in-basecamp-instantly" rel="noopener noreferrer">can find anything in Basecamp instantly</a>.</p>
<hr>
<h2><a href="http://localhost:5000/slack-vs-basecamp-datastructure.png" rel="noopener noreferrer">Slack-VS-Basecamp-DataStructure</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-like-a-town" rel="noopener noreferrer">Basecamp like a Town</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf empty

10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf=314:<h1>Lateral thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.391 [debug] l:len=3

10:45:07.391 [debug] l:buf=14:<h1>Lateral thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.391 [debug] l:len=31

10:45:07.391 [debug] l:buf=4:<h1>Lateral thinking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/lateral-thinking,-divergence,-and-the-third-door" rel="noopener noreferrer">Lateral thinking, divergence, and the third door</a></li>
</ul>


10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf empty

10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf=87:<h1>Digital Minimalism</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.391 [debug] l:len=8

10:45:07.391 [debug] l:buf=7:<h1>Digital Minimalism</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf empty

10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf=83:<h1>solve problems</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.391 [debug] l:len=8

10:45:07.391 [debug] l:buf=3:<h1>solve problems</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf empty

10:45:07.391 [debug] l:len=

10:45:07.391 [debug] l:buf=308:<h1>Pasted image 5</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.391 [debug] l:len=3

10:45:07.391 [debug] l:buf=08:<h1>Pasted image 5</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.391 [debug] l:len=30

10:45:07.391 [debug] l:buf=8:<h1>Pasted image 5</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
</ul>


10:45:07.391 [debug] l:len=

10:45:07.392 [debug] l:buf empty

10:45:07.392 [debug] l:len=

10:45:07.392 [debug] l:buf=2992:<h1>Graph Databases with <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></h1>
<h2>What is Dgraph?</h2>
<ul>
<li><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> is an open source, distributed, graph database... let's pick that apart
<ul>
<li>Graph
<ul>
<li>Nodes and Edges (Things and Relationships)</li>
<li>Each node can point to another node or a "value" such as a string, integer, etc...</li>
</ul>
</li>
<li>Database
<ul>
<li>Stores values long term</li>
<li>Has guarantees about integrity.</li>
</ul>
</li>
<li>Distributed
<ul>
<li>Automatically handles spreading the work of storing and querying across multiple servers</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>What's a Graph Database? Or Why don't I just use Postgres?</h2>
<p>Relational databases compute their joins at runtime using an index. Every time you have to do a join you have to lookup right before you do it. They also require you to be very explicit about your data model before you store it.</p>
<blockquote>
<p>Whenever you run the equivalent of a JOIN operation, the database just uses this list and has direct access to the connected nodes, eliminating the need for a expensive search / match computation.</p>
</blockquote>
<h2>What's so cool about Dgraph</h2>
<blockquote>
<p>It aims at being <strong>an every day driver</strong> of a database that's just easier to use, yet still fast.</p>
</blockquote>
<blockquote>
<p>It makes joins as simple as breathing, and <em>all</em> your data normalized. This means that there's almost no <code>nulls</code></p>
</blockquote>
<blockquote>
<p>Did I mention it's free and open source?</p>
</blockquote>
<h3>Other reasons:</h3>
<ul>
<li>Helps you understand GraphQL better</li>
<li>More natural way to express many complex ideas</li>
<li>Can be faster to do many joins</li>
<li>Query language is much more friendly than SQL for many things.</li>
<li>Most permissive of all data structures, you can model trees, linked-lists,  maps, or singletons easily.</li>
<li>There's no way to make a big table, everything must be broken up.</li>
</ul>
<h2>What's not so cool about Dgraph</h2>
<ol>
<li>It's kind of in <em>beta</em> status. It just nearly turned 1.0. Don't expect it to replace Postgres just yet.</li>
<li>As such there's not a Ruby or Elixir client that's 100% up to date (although it wouldn't be hard to write one)</li>
</ol>
<h2>Re-learning to model data</h2>
<p>What if you took all your tables and broke them up into little pieces till they where just a big pile of cells, they take those cells and draw lines between them to show their relationships with each other. This is what you do with Graph databases.</p>
<p>Things you don't need:</p>
<ol>
<li>Rows, Columns, Schema's</li>
<li>Join Tables, etc...</li>
</ol>
<h2>Query language 101</h2>
<h2>Demo</h2>
<ul>
<li>Show how it can solve problems we have, on big data.</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.392 [debug] l:len=2

10:45:07.392 [debug] l:buf=992:<h1>Graph Databases with <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></h1>
<h2>What is Dgraph?</h2>
<ul>
<li><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> is an open source, distributed, graph database... let's pick that apart
<ul>
<li>Graph
<ul>
<li>Nodes and Edges (Things and Relationships)</li>
<li>Each node can point to another node or a "value" such as a string, integer, etc...</li>
</ul>
</li>
<li>Database
<ul>
<li>Stores values long term</li>
<li>Has guarantees about integrity.</li>
</ul>
</li>
<li>Distributed
<ul>
<li>Automatically handles spreading the work of storing and querying across multiple servers</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>What's a Graph Database? Or Why don't I just use Postgres?</h2>
<p>Relational databases compute their joins at runtime using an index. Every time you have to do a join you have to lookup right before you do it. They also require you to be very explicit about your data model before you store it.</p>
<blockquote>
<p>Whenever you run the equivalent of a JOIN operation, the database just uses this list and has direct access to the connected nodes, eliminating the need for a expensive search / match computation.</p>
</blockquote>
<h2>What's so cool about Dgraph</h2>
<blockquote>
<p>It aims at being <strong>an every day driver</strong> of a database that's just easier to use, yet still fast.</p>
</blockquote>
<blockquote>
<p>It makes joins as simple as breathing, and <em>all</em> your data normalized. This means that there's almost no <code>nulls</code></p>
</blockquote>
<blockquote>
<p>Did I mention it's free and open source?</p>
</blockquote>
<h3>Other reasons:</h3>
<ul>
<li>Helps you understand GraphQL better</li>
<li>More natural way to express many complex ideas</li>
<li>Can be faster to do many joins</li>
<li>Query language is much more friendly than SQL for many things.</li>
<li>Most permissive of all data structures, you can model trees, linked-lists,  maps, or singletons easily.</li>
<li>There's no way to make a big table, everything must be broken up.</li>
</ul>
<h2>What's not so cool about Dgraph</h2>
<ol>
<li>It's kind of in <em>beta</em> status. It just nearly turned 1.0. Don't expect it to replace Postgres just yet.</li>
<li>As such there's not a Ruby or Elixir client that's 100% up to date (although it wouldn't be hard to write one)</li>
</ol>
<h2>Re-learning to model data</h2>
<p>What if you took all your tables and broke them up into little pieces till they where just a big pile of cells, they take those cells and draw lines between them to show their relationships with each other. This is what you do with Graph databases.</p>
<p>Things you don't need:</p>
<ol>
<li>Rows, Columns, Schema's</li>
<li>Join Tables, etc...</li>
</ol>
<h2>Query language 101</h2>
<h2>Demo</h2>
<ul>
<li>Show how it can solve problems we have, on big data.</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.392 [debug] l:len=29

10:45:07.392 [debug] l:buf=92:<h1>Graph Databases with <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></h1>
<h2>What is Dgraph?</h2>
<ul>
<li><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> is an open source, distributed, graph database... let's pick that apart
<ul>
<li>Graph
<ul>
<li>Nodes and Edges (Things and Relationships)</li>
<li>Each node can point to another node or a "value" such as a string, integer, etc...</li>
</ul>
</li>
<li>Database
<ul>
<li>Stores values long term</li>
<li>Has guarantees about integrity.</li>
</ul>
</li>
<li>Distributed
<ul>
<li>Automatically handles spreading the work of storing and querying across multiple servers</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>What's a Graph Database? Or Why don't I just use Postgres?</h2>
<p>Relational databases compute their joins at runtime using an index. Every time you have to do a join you have to lookup right before you do it. They also require you to be very explicit about your data model before you store it.</p>
<blockquote>
<p>Whenever you run the equivalent of a JOIN operation, the database just uses this list and has direct access to the connected nodes, eliminating the need for a expensive search / match computation.</p>
</blockquote>
<h2>What's so cool about Dgraph</h2>
<blockquote>
<p>It aims at being <strong>an every day driver</strong> of a database that's just easier to use, yet still fast.</p>
</blockquote>
<blockquote>
<p>It makes joins as simple as breathing, and <em>all</em> your data normalized. This means that there's almost no <code>nulls</code></p>
</blockquote>
<blockquote>
<p>Did I mention it's free and open source?</p>
</blockquote>
<h3>Other reasons:</h3>
<ul>
<li>Helps you understand GraphQL better</li>
<li>More natural way to express many complex ideas</li>
<li>Can be faster to do many joins</li>
<li>Query language is much more friendly than SQL for many things.</li>
<li>Most permissive of all data structures, you can model trees, linked-lists,  maps, or singletons easily.</li>
<li>There's no way to make a big table, everything must be broken up.</li>
</ul>
<h2>What's not so cool about Dgraph</h2>
<ol>
<li>It's kind of in <em>beta</em> status. It just nearly turned 1.0. Don't expect it to replace Postgres just yet.</li>
<li>As such there's not a Ruby or Elixir client that's 100% up to date (although it wouldn't be hard to write one)</li>
</ol>
<h2>Re-learning to model data</h2>
<p>What if you took all your tables and broke them up into little pieces till they where just a big pile of cells, they take those cells and draw lines between them to show their relationships with each other. This is what you do with Graph databases.</p>
<p>Things you don't need:</p>
<ol>
<li>Rows, Columns, Schema's</li>
<li>Join Tables, etc...</li>
</ol>
<h2>Query language 101</h2>
<h2>Demo</h2>
<ul>
<li>Show how it can solve problems we have, on big data.</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.392 [debug] l:len=299

10:45:07.392 [debug] l:buf=2:<h1>Graph Databases with <a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a></h1>
<h2>What is Dgraph?</h2>
<ul>
<li><a href="http://localhost:5000/dgraph" rel="noopener noreferrer">Dgraph</a> is an open source, distributed, graph database... let's pick that apart
<ul>
<li>Graph
<ul>
<li>Nodes and Edges (Things and Relationships)</li>
<li>Each node can point to another node or a "value" such as a string, integer, etc...</li>
</ul>
</li>
<li>Database
<ul>
<li>Stores values long term</li>
<li>Has guarantees about integrity.</li>
</ul>
</li>
<li>Distributed
<ul>
<li>Automatically handles spreading the work of storing and querying across multiple servers</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>What's a Graph Database? Or Why don't I just use Postgres?</h2>
<p>Relational databases compute their joins at runtime using an index. Every time you have to do a join you have to lookup right before you do it. They also require you to be very explicit about your data model before you store it.</p>
<blockquote>
<p>Whenever you run the equivalent of a JOIN operation, the database just uses this list and has direct access to the connected nodes, eliminating the need for a expensive search / match computation.</p>
</blockquote>
<h2>What's so cool about Dgraph</h2>
<blockquote>
<p>It aims at being <strong>an every day driver</strong> of a database that's just easier to use, yet still fast.</p>
</blockquote>
<blockquote>
<p>It makes joins as simple as breathing, and <em>all</em> your data normalized. This means that there's almost no <code>nulls</code></p>
</blockquote>
<blockquote>
<p>Did I mention it's free and open source?</p>
</blockquote>
<h3>Other reasons:</h3>
<ul>
<li>Helps you understand GraphQL better</li>
<li>More natural way to express many complex ideas</li>
<li>Can be faster to do many joins</li>
<li>Query language is much more friendly than SQL for many things.</li>
<li>Most permissive of all data structures, you can model trees, linked-lists,  maps, or singletons easily.</li>
<li>There's no way to make a big table, everything must be broken up.</li>
</ul>
<h2>What's not so cool about Dgraph</h2>
<ol>
<li>It's kind of in <em>beta</em> status. It just nearly turned 1.0. Don't expect it to replace Postgres just yet.</li>
<li>As such there's not a Ruby or Elixir client that's 100% up to date (although it wouldn't be hard to write one)</li>
</ol>
<h2>Re-learning to model data</h2>
<p>What if you took all your tables and broke them up into little pieces till they where just a big pile of cells, they take those cells and draw lines between them to show their relationships with each other. This is what you do with Graph databases.</p>
<p>Things you don't need:</p>
<ol>
<li>Rows, Columns, Schema's</li>
<li>Join Tables, etc...</li>
</ol>
<h2>Query language 101</h2>
<h2>Demo</h2>
<ul>
<li>Show how it can solve problems we have, on big data.</li>
</ul>
<p><a href="http://localhost:5000/talks" rel="noopener noreferrer">talks</a></p>


10:45:07.392 [debug] l:len=

10:45:07.392 [debug] l:buf empty

10:45:07.392 [debug] l:len=

10:45:07.392 [debug] l:buf=80:<h1>pornography</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.392 [debug] l:len=8

10:45:07.392 [debug] l:buf=0:<h1>pornography</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.392 [debug] l:len=

10:45:07.392 [debug] l:buf empty

10:45:07.392 [debug] l:len=

10:45:07.392 [debug] l:buf=1132:<h1>Humane Tech</h1>
<blockquote>
<p>Tech platforms make billions of dollars keeping us clicking, scrolling, and sharing. Just like a tree is worth more as lumber and a whale is worth more dead than alive—in the attention extraction economy a human is worth more when we are depressed, outraged, polarized, and addicted.<br>
This attention extraction economy is accelerating the mass degradation of our collective capacity to solve global threats, from pandemics to inequality to climate change. If we can’t make sense of the world while making ever more consequential choices, a growing ledger of harms will destroy the futures of our children, democracy and truth itself.</p>
<p>We need radically reimagined technology infrastructure and business models that actually align with humanity’s best interests.</p>
</blockquote>
<p><a href="https://www.humanetech.com/what-we-do#problem" rel="noopener noreferrer">https://www.humanetech.com/what-we-do#problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
</ul>


10:45:07.392 [debug] l:len=1

10:45:07.392 [debug] l:buf=132:<h1>Humane Tech</h1>
<blockquote>
<p>Tech platforms make billions of dollars keeping us clicking, scrolling, and sharing. Just like a tree is worth more as lumber and a whale is worth more dead than alive—in the attention extraction economy a human is worth more when we are depressed, outraged, polarized, and addicted.<br>
This attention extraction economy is accelerating the mass degradation of our collective capacity to solve global threats, from pandemics to inequality to climate change. If we can’t make sense of the world while making ever more consequential choices, a growing ledger of harms will destroy the futures of our children, democracy and truth itself.</p>
<p>We need radically reimagined technology infrastructure and business models that actually align with humanity’s best interests.</p>
</blockquote>
<p><a href="https://www.humanetech.com/what-we-do#problem" rel="noopener noreferrer">https://www.humanetech.com/what-we-do#problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
</ul>


10:45:07.392 [debug] l:len=11

10:45:07.392 [debug] l:buf=32:<h1>Humane Tech</h1>
<blockquote>
<p>Tech platforms make billions of dollars keeping us clicking, scrolling, and sharing. Just like a tree is worth more as lumber and a whale is worth more dead than alive—in the attention extraction economy a human is worth more when we are depressed, outraged, polarized, and addicted.<br>
This attention extraction economy is accelerating the mass degradation of our collective capacity to solve global threats, from pandemics to inequality to climate change. If we can’t make sense of the world while making ever more consequential choices, a growing ledger of harms will destroy the futures of our children, democracy and truth itself.</p>
<p>We need radically reimagined technology infrastructure and business models that actually align with humanity’s best interests.</p>
</blockquote>
<p><a href="https://www.humanetech.com/what-we-do#problem" rel="noopener noreferrer">https://www.humanetech.com/what-we-do#problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
</ul>


10:45:07.392 [debug] l:len=113

10:45:07.392 [debug] l:buf=2:<h1>Humane Tech</h1>
<blockquote>
<p>Tech platforms make billions of dollars keeping us clicking, scrolling, and sharing. Just like a tree is worth more as lumber and a whale is worth more dead than alive—in the attention extraction economy a human is worth more when we are depressed, outraged, polarized, and addicted.<br>
This attention extraction economy is accelerating the mass degradation of our collective capacity to solve global threats, from pandemics to inequality to climate change. If we can’t make sense of the world while making ever more consequential choices, a growing ledger of harms will destroy the futures of our children, democracy and truth itself.</p>
<p>We need radically reimagined technology infrastructure and business models that actually align with humanity’s best interests.</p>
</blockquote>
<p><a href="https://www.humanetech.com/what-we-do#problem" rel="noopener noreferrer">https://www.humanetech.com/what-we-do#problem</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/growth-hacking" rel="noopener noreferrer">Growth hacking</a></li>
</ul>


10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf empty

10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf=264:<h1>Plant based diet</h1>
<ul>
<li>The pleasure trap book</li>
<li>Grains are good</li>
</ul>
<p>Pcrm.org</p>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a>, <a href="http://localhost:5000/wfpb" rel="noopener noreferrer">WFPB</a></p>


10:45:07.393 [debug] l:len=2

10:45:07.393 [debug] l:buf=64:<h1>Plant based diet</h1>
<ul>
<li>The pleasure trap book</li>
<li>Grains are good</li>
</ul>
<p>Pcrm.org</p>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a>, <a href="http://localhost:5000/wfpb" rel="noopener noreferrer">WFPB</a></p>


10:45:07.393 [debug] l:len=26

10:45:07.393 [debug] l:buf=4:<h1>Plant based diet</h1>
<ul>
<li>The pleasure trap book</li>
<li>Grains are good</li>
</ul>
<p>Pcrm.org</p>
<p><a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a>, <a href="http://localhost:5000/wfpb" rel="noopener noreferrer">WFPB</a></p>


10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf empty

10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf=224:<h1>Priories</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.393 [debug] l:len=2

10:45:07.393 [debug] l:buf=24:<h1>Priories</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.393 [debug] l:len=22

10:45:07.393 [debug] l:buf=4:<h1>Priories</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf empty

10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf=100:<h1>This is really easy in ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.393 [debug] l:len=1

10:45:07.393 [debug] l:buf=00:<h1>This is really easy in ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.393 [debug] l:len=10

10:45:07.393 [debug] l:buf=0:<h1>This is really easy in ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf empty

10:45:07.393 [debug] l:len=

10:45:07.393 [debug] l:buf=2596:<h1>How the files are organized</h1>
<ul>
<li><strong>lib/</strong>
<ul>
<li><strong>mind_flayer/</strong>
<ul>
<li><strong>(context_name)/</strong>
<ul>
<li><strong>(context_function_name, eg: get_one.ex)</strong>
<ol>
<li>This file contains a single public method named <code>call</code>. This is <code>defdelegate</code>ed in the (context_name).ex file</li>
</ol>
<ul>
<li><strong>aggregate.ex</strong> (optional)</li>
</ul>
<ol>
<li>if the context requires saving itself to the database this provides the <a href="https://github.com/commanded/commanded/blob/master/guides/Aggregates.md" rel="noopener noreferrer">aggregate</a> for it.</li>
<li>This file contains...
<ol>
<li>execute(current_state, command) -&gt; new_event(s)<em>nil</em>{:error, "reason"}
<ol>
<li>this method will take in a command, and the current state and determine if it wants to emit one or many events or an error tuple such as <code>{:error, "reason"}</code>  to indicate that this is an invalid command OR it can return <code>nil</code> which indicates that it's a <code>noop</code> (a command that didn't do anything)</li>
</ol>
</li>
<li>apply(current_state, event_that_just_happened) -&gt; new state
<ol>
<li>this will take any events saved by <code>execute</code> and use them to update this current aggregate's state.</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><strong>commands/</strong>
<ul>
<li><strong>(command_name).ex</strong>
<ul>
<li>These are named in an <em>imperative</em> style as <code>archive_widget.ex</code>	 or <code>whitelist_organization.ex</code>. You <em>can</em> name these CRUD operations but it's better to name them as specific to what their doing as possible. For instance you can <em>create</em> a widget but did you really create the user. You didn't. you're not their mother.</li>
<li>These are structs, usually with no changeset. They are validated by the aggregate. It choses if it wants to execute the command.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>(context_name).ex</strong>
<ul>
<li>This has all the docs and <code>defdelegate</code>'s to other files</li>
</ul>
</li>
<li><strong>es/</strong>
<ul>
<li><strong>router.ex</strong>
<ul>
<li>this routes commands to different aggregates.</li>
</ul>
</li>
<li><strong>events/</strong> (widget_created.ex)
<ul>
<li>These are named in past tense, like an event in history (because they are). Such as <code>wdiget_archived.ex</code> or <code>org_whitelisted.ex</code>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.394 [debug] l:len=2

10:45:07.394 [debug] l:buf=596:<h1>How the files are organized</h1>
<ul>
<li><strong>lib/</strong>
<ul>
<li><strong>mind_flayer/</strong>
<ul>
<li><strong>(context_name)/</strong>
<ul>
<li><strong>(context_function_name, eg: get_one.ex)</strong>
<ol>
<li>This file contains a single public method named <code>call</code>. This is <code>defdelegate</code>ed in the (context_name).ex file</li>
</ol>
<ul>
<li><strong>aggregate.ex</strong> (optional)</li>
</ul>
<ol>
<li>if the context requires saving itself to the database this provides the <a href="https://github.com/commanded/commanded/blob/master/guides/Aggregates.md" rel="noopener noreferrer">aggregate</a> for it.</li>
<li>This file contains...
<ol>
<li>execute(current_state, command) -&gt; new_event(s)<em>nil</em>{:error, "reason"}
<ol>
<li>this method will take in a command, and the current state and determine if it wants to emit one or many events or an error tuple such as <code>{:error, "reason"}</code>  to indicate that this is an invalid command OR it can return <code>nil</code> which indicates that it's a <code>noop</code> (a command that didn't do anything)</li>
</ol>
</li>
<li>apply(current_state, event_that_just_happened) -&gt; new state
<ol>
<li>this will take any events saved by <code>execute</code> and use them to update this current aggregate's state.</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><strong>commands/</strong>
<ul>
<li><strong>(command_name).ex</strong>
<ul>
<li>These are named in an <em>imperative</em> style as <code>archive_widget.ex</code>	 or <code>whitelist_organization.ex</code>. You <em>can</em> name these CRUD operations but it's better to name them as specific to what their doing as possible. For instance you can <em>create</em> a widget but did you really create the user. You didn't. you're not their mother.</li>
<li>These are structs, usually with no changeset. They are validated by the aggregate. It choses if it wants to execute the command.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>(context_name).ex</strong>
<ul>
<li>This has all the docs and <code>defdelegate</code>'s to other files</li>
</ul>
</li>
<li><strong>es/</strong>
<ul>
<li><strong>router.ex</strong>
<ul>
<li>this routes commands to different aggregates.</li>
</ul>
</li>
<li><strong>events/</strong> (widget_created.ex)
<ul>
<li>These are named in past tense, like an event in history (because they are). Such as <code>wdiget_archived.ex</code> or <code>org_whitelisted.ex</code>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.394 [debug] l:len=25

10:45:07.394 [debug] l:buf=96:<h1>How the files are organized</h1>
<ul>
<li><strong>lib/</strong>
<ul>
<li><strong>mind_flayer/</strong>
<ul>
<li><strong>(context_name)/</strong>
<ul>
<li><strong>(context_function_name, eg: get_one.ex)</strong>
<ol>
<li>This file contains a single public method named <code>call</code>. This is <code>defdelegate</code>ed in the (context_name).ex file</li>
</ol>
<ul>
<li><strong>aggregate.ex</strong> (optional)</li>
</ul>
<ol>
<li>if the context requires saving itself to the database this provides the <a href="https://github.com/commanded/commanded/blob/master/guides/Aggregates.md" rel="noopener noreferrer">aggregate</a> for it.</li>
<li>This file contains...
<ol>
<li>execute(current_state, command) -&gt; new_event(s)<em>nil</em>{:error, "reason"}
<ol>
<li>this method will take in a command, and the current state and determine if it wants to emit one or many events or an error tuple such as <code>{:error, "reason"}</code>  to indicate that this is an invalid command OR it can return <code>nil</code> which indicates that it's a <code>noop</code> (a command that didn't do anything)</li>
</ol>
</li>
<li>apply(current_state, event_that_just_happened) -&gt; new state
<ol>
<li>this will take any events saved by <code>execute</code> and use them to update this current aggregate's state.</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><strong>commands/</strong>
<ul>
<li><strong>(command_name).ex</strong>
<ul>
<li>These are named in an <em>imperative</em> style as <code>archive_widget.ex</code>	 or <code>whitelist_organization.ex</code>. You <em>can</em> name these CRUD operations but it's better to name them as specific to what their doing as possible. For instance you can <em>create</em> a widget but did you really create the user. You didn't. you're not their mother.</li>
<li>These are structs, usually with no changeset. They are validated by the aggregate. It choses if it wants to execute the command.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>(context_name).ex</strong>
<ul>
<li>This has all the docs and <code>defdelegate</code>'s to other files</li>
</ul>
</li>
<li><strong>es/</strong>
<ul>
<li><strong>router.ex</strong>
<ul>
<li>this routes commands to different aggregates.</li>
</ul>
</li>
<li><strong>events/</strong> (widget_created.ex)
<ul>
<li>These are named in past tense, like an event in history (because they are). Such as <code>wdiget_archived.ex</code> or <code>org_whitelisted.ex</code>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.394 [debug] l:len=259

10:45:07.394 [debug] l:buf=6:<h1>How the files are organized</h1>
<ul>
<li><strong>lib/</strong>
<ul>
<li><strong>mind_flayer/</strong>
<ul>
<li><strong>(context_name)/</strong>
<ul>
<li><strong>(context_function_name, eg: get_one.ex)</strong>
<ol>
<li>This file contains a single public method named <code>call</code>. This is <code>defdelegate</code>ed in the (context_name).ex file</li>
</ol>
<ul>
<li><strong>aggregate.ex</strong> (optional)</li>
</ul>
<ol>
<li>if the context requires saving itself to the database this provides the <a href="https://github.com/commanded/commanded/blob/master/guides/Aggregates.md" rel="noopener noreferrer">aggregate</a> for it.</li>
<li>This file contains...
<ol>
<li>execute(current_state, command) -&gt; new_event(s)<em>nil</em>{:error, "reason"}
<ol>
<li>this method will take in a command, and the current state and determine if it wants to emit one or many events or an error tuple such as <code>{:error, "reason"}</code>  to indicate that this is an invalid command OR it can return <code>nil</code> which indicates that it's a <code>noop</code> (a command that didn't do anything)</li>
</ol>
</li>
<li>apply(current_state, event_that_just_happened) -&gt; new state
<ol>
<li>this will take any events saved by <code>execute</code> and use them to update this current aggregate's state.</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><strong>commands/</strong>
<ul>
<li><strong>(command_name).ex</strong>
<ul>
<li>These are named in an <em>imperative</em> style as <code>archive_widget.ex</code>	 or <code>whitelist_organization.ex</code>. You <em>can</em> name these CRUD operations but it's better to name them as specific to what their doing as possible. For instance you can <em>create</em> a widget but did you really create the user. You didn't. you're not their mother.</li>
<li>These are structs, usually with no changeset. They are validated by the aggregate. It choses if it wants to execute the command.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>(context_name).ex</strong>
<ul>
<li>This has all the docs and <code>defdelegate</code>'s to other files</li>
</ul>
</li>
<li><strong>es/</strong>
<ul>
<li><strong>router.ex</strong>
<ul>
<li>this routes commands to different aggregates.</li>
</ul>
</li>
<li><strong>events/</strong> (widget_created.ex)
<ul>
<li>These are named in past tense, like an event in history (because they are). Such as <code>wdiget_archived.ex</code> or <code>org_whitelisted.ex</code>.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf empty

10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf=98:<p>Wells Fargo Credit card cancellation</p>
<p>+18006424720</p>
<p>+18009888019b M-TH 7am-4pm</p>


10:45:07.394 [debug] l:len=9

10:45:07.394 [debug] l:buf=8:<p>Wells Fargo Credit card cancellation</p>
<p>+18006424720</p>
<p>+18009888019b M-TH 7am-4pm</p>


10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf empty

10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf=529:<h1>Article-- how p2 changed automatic</h1>
<p><a href="https://ma.tt/2009/05/how-p2-changed-automattic/" rel="noopener noreferrer">https://ma.tt/2009/05/how-p2-changed-automattic/</a></p>
<p>See: <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.394 [debug] l:len=5

10:45:07.394 [debug] l:buf=29:<h1>Article-- how p2 changed automatic</h1>
<p><a href="https://ma.tt/2009/05/how-p2-changed-automattic/" rel="noopener noreferrer">https://ma.tt/2009/05/how-p2-changed-automattic/</a></p>
<p>See: <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.394 [debug] l:len=52

10:45:07.394 [debug] l:buf=9:<h1>Article-- how p2 changed automatic</h1>
<p><a href="https://ma.tt/2009/05/how-p2-changed-automattic/" rel="noopener noreferrer">https://ma.tt/2009/05/how-p2-changed-automattic/</a></p>
<p>See: <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/most-remote-companies-end-up-building-a-aync-communicaiton-tool" rel="noopener noreferrer">Most Remote Companies end up building a Aync Communicaiton tool</a></li>
</ul>


10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf empty

10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf=285:<h1>Think Win-Win</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.394 [debug] l:len=2

10:45:07.394 [debug] l:buf=85:<h1>Think Win-Win</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.394 [debug] l:len=28

10:45:07.394 [debug] l:buf=5:<h1>Think Win-Win</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
</ul>


10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf empty

10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf=99:<h1>Basecamp's notification system</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.394 [debug] l:len=9

10:45:07.394 [debug] l:buf=9:<h1>Basecamp's notification system</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.394 [debug] l:len=

10:45:07.394 [debug] l:buf empty

10:45:07.395 [debug] l:len=

10:45:07.395 [debug] l:buf=4593:<h1>Slack's Design</h1>
<h1>Introduction</h1>
<p>One day when I read <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">"is group chat making you sweat?"</a> a really big light bulb went off in my head. I realized that Slack's design really was a huge problem, and people needed to know about it. I believe that Slack's design is not good for <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">remote work</a> in particular despite being constantly touted as a great solution for it.</p>
<h2>How Slack killed Email</h2>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a> caused it be filled with spam</li>
<li>Slack solved <a href="http://localhost:5000/email's-transparency-problem" rel="noopener noreferrer">Email's transparency problem</a>.</li>
<li>Slack also solved <a href="http://localhost:5000/email's-overly-formal-problem" rel="noopener noreferrer">Email's overly formal problem</a>.</li>
<li>Slack was even more <a href="http://localhost:5000/addictive" rel="noopener noreferrer">addictive</a></li>
</ul>
<h2>Flaws</h2>
<ol>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li>Slack is a form of <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and uses <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to encourage <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
<li>Slack is designed to keep you <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy</a> not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</li>
<li>Slack destroys <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>	by it's broken notification model and <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a>.</li>
<li>Slack makes it impossible to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because of it's <a href="http://localhost:5000/app-that-does-one-thing" rel="noopener noreferrer">app that does one thing</a> model as opposed to <a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a> model.</li>
</ol>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a>, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.395 [debug] l:len=4

10:45:07.395 [debug] l:buf=593:<h1>Slack's Design</h1>
<h1>Introduction</h1>
<p>One day when I read <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">"is group chat making you sweat?"</a> a really big light bulb went off in my head. I realized that Slack's design really was a huge problem, and people needed to know about it. I believe that Slack's design is not good for <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">remote work</a> in particular despite being constantly touted as a great solution for it.</p>
<h2>How Slack killed Email</h2>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a> caused it be filled with spam</li>
<li>Slack solved <a href="http://localhost:5000/email's-transparency-problem" rel="noopener noreferrer">Email's transparency problem</a>.</li>
<li>Slack also solved <a href="http://localhost:5000/email's-overly-formal-problem" rel="noopener noreferrer">Email's overly formal problem</a>.</li>
<li>Slack was even more <a href="http://localhost:5000/addictive" rel="noopener noreferrer">addictive</a></li>
</ul>
<h2>Flaws</h2>
<ol>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li>Slack is a form of <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and uses <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to encourage <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
<li>Slack is designed to keep you <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy</a> not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</li>
<li>Slack destroys <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>	by it's broken notification model and <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a>.</li>
<li>Slack makes it impossible to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because of it's <a href="http://localhost:5000/app-that-does-one-thing" rel="noopener noreferrer">app that does one thing</a> model as opposed to <a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a> model.</li>
</ol>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a>, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.395 [debug] l:len=45

10:45:07.395 [debug] l:buf=93:<h1>Slack's Design</h1>
<h1>Introduction</h1>
<p>One day when I read <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">"is group chat making you sweat?"</a> a really big light bulb went off in my head. I realized that Slack's design really was a huge problem, and people needed to know about it. I believe that Slack's design is not good for <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">remote work</a> in particular despite being constantly touted as a great solution for it.</p>
<h2>How Slack killed Email</h2>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a> caused it be filled with spam</li>
<li>Slack solved <a href="http://localhost:5000/email's-transparency-problem" rel="noopener noreferrer">Email's transparency problem</a>.</li>
<li>Slack also solved <a href="http://localhost:5000/email's-overly-formal-problem" rel="noopener noreferrer">Email's overly formal problem</a>.</li>
<li>Slack was even more <a href="http://localhost:5000/addictive" rel="noopener noreferrer">addictive</a></li>
</ul>
<h2>Flaws</h2>
<ol>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li>Slack is a form of <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and uses <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to encourage <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
<li>Slack is designed to keep you <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy</a> not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</li>
<li>Slack destroys <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>	by it's broken notification model and <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a>.</li>
<li>Slack makes it impossible to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because of it's <a href="http://localhost:5000/app-that-does-one-thing" rel="noopener noreferrer">app that does one thing</a> model as opposed to <a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a> model.</li>
</ol>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a>, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.395 [debug] l:len=459

10:45:07.395 [debug] l:buf=3:<h1>Slack's Design</h1>
<h1>Introduction</h1>
<p>One day when I read <a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">"is group chat making you sweat?"</a> a really big light bulb went off in my head. I realized that Slack's design really was a huge problem, and people needed to know about it. I believe that Slack's design is not good for <a href="http://localhost:5000/remote-work" rel="noopener noreferrer">remote work</a> in particular despite being constantly touted as a great solution for it.</p>
<h2>How Slack killed Email</h2>
<ul>
<li><a href="http://localhost:5000/email's-slow-decent" rel="noopener noreferrer">Email's slow decent</a> caused it be filled with spam</li>
<li>Slack solved <a href="http://localhost:5000/email's-transparency-problem" rel="noopener noreferrer">Email's transparency problem</a>.</li>
<li>Slack also solved <a href="http://localhost:5000/email's-overly-formal-problem" rel="noopener noreferrer">Email's overly formal problem</a>.</li>
<li>Slack was even more <a href="http://localhost:5000/addictive" rel="noopener noreferrer">addictive</a></li>
</ul>
<h2>Flaws</h2>
<ol>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li>Slack is a form of <a href="http://localhost:5000/social-media" rel="noopener noreferrer">Social Media</a> and uses <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>s to encourage <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a> to <a href="http://localhost:5000/drive-engagement" rel="noopener noreferrer">drive engagement</a>.</li>
<li>Slack is designed to keep you <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">busy</a> not <a href="http://localhost:5000/effective" rel="noopener noreferrer">effective</a>.</li>
<li>Slack destroys <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>	by it's broken notification model and <a href="http://localhost:5000/slack's-broken-hierarchy-of-priority" rel="noopener noreferrer">Slack's broken hierarchy of priority</a>.</li>
<li>Slack makes it impossible to <a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a> because of it's <a href="http://localhost:5000/app-that-does-one-thing" rel="noopener noreferrer">app that does one thing</a> model as opposed to <a href="http://localhost:5000/basecamp's-an-all-in-one-solution" rel="noopener noreferrer">Basecamp's an all-in-one solution</a> model.</li>
</ol>
<hr>
<p>Keywords: <a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a>, <a href="http://localhost:5000/group-chat" rel="noopener noreferrer">Group chat</a>, <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></li>
<li><a href="http://localhost:5000/slack-is-a-notification-hub" rel="noopener noreferrer">Slack is a notification hub</a></li>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/tribal-knowlege" rel="noopener noreferrer">Tribal Knowlege</a></li>
<li><a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a></li>
<li><a href="http://localhost:5000/shy-of-public-channels" rel="noopener noreferrer">shy of public channels</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
<li><a href="http://localhost:5000/why-slack-has-spammy-notifications" rel="noopener noreferrer">why slack has spammy notifications</a></li>
</ul>


10:45:07.395 [debug] l:len=

10:45:07.395 [debug] l:buf empty

10:45:07.395 [debug] l:len=

10:45:07.395 [debug] l:buf=369:<h1>Pasted image 20201020092456</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.395 [debug] l:len=3

10:45:07.395 [debug] l:buf=69:<h1>Pasted image 20201020092456</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.395 [debug] l:len=36

10:45:07.395 [debug] l:buf=9:<h1>Pasted image 20201020092456</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/asynchronous-communication,-the-cure-to-notification-overload-youtube" rel="noopener noreferrer">Asynchronous communication, The cure to notification overload (Youtube)</a></li>
</ul>


10:45:07.395 [debug] l:len=

10:45:07.395 [debug] l:buf empty

10:45:07.395 [debug] l:len=

10:45:07.395 [debug] l:buf=96:<h1>Pasted image 20200923060038</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.395 [debug] l:len=9

10:45:07.395 [debug] l:buf=6:<h1>Pasted image 20200923060038</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf empty

10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf=305:<h1>Pasted image 20200922163547</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.396 [debug] l:len=3

10:45:07.396 [debug] l:buf=05:<h1>Pasted image 20200922163547</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.396 [debug] l:len=30

10:45:07.396 [debug] l:buf=5:<h1>Pasted image 20200922163547</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf empty

10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf=77:<h1>Training</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.396 [debug] l:len=7

10:45:07.396 [debug] l:buf=7:<h1>Training</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf empty

10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf=297:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.396 [debug] l:len=2

10:45:07.396 [debug] l:buf=97:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.396 [debug] l:len=29

10:45:07.396 [debug] l:buf=7:<h1>Github Projects</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
</ul>


10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf empty

10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf=772:<h1>Todo lists controlled by everyone else</h1>
<blockquote>
<p>email was (and, despite your valiant efforts, still very much is) a barely-manageable firehose of to-do list items controlled by strangers</p>
</blockquote>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35</a></p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a></li>
</ul>


10:45:07.396 [debug] l:len=7

10:45:07.396 [debug] l:buf=72:<h1>Todo lists controlled by everyone else</h1>
<blockquote>
<p>email was (and, despite your valiant efforts, still very much is) a barely-manageable firehose of to-do list items controlled by strangers</p>
</blockquote>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35</a></p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a></li>
</ul>


10:45:07.396 [debug] l:len=77

10:45:07.396 [debug] l:buf=2:<h1>Todo lists controlled by everyone else</h1>
<blockquote>
<p>email was (and, despite your valiant efforts, still very much is) a barely-manageable firehose of to-do list items controlled by strangers</p>
</blockquote>
<p><a href="https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35" rel="noopener noreferrer">https://ux.useronboard.com/slack-i-m-breaking-up-with-you-54600ace03ea#.d0o969g35</a></p>
<ul>
<li><a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/slack-is-your-real-project-management-tool" rel="noopener noreferrer">Slack is your real project management tool</a></li>
</ul>


10:45:07.396 [debug] l:len=

10:45:07.396 [debug] l:buf empty

10:45:07.396 [debug] l:len=

10:45:07.397 [debug] l:buf=92:<h1>rewrites are risky</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.397 [debug] l:len=9

10:45:07.397 [debug] l:buf=2:<h1>rewrites are risky</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.397 [debug] l:len=

10:45:07.397 [debug] l:buf empty

10:45:07.397 [debug] l:len=

10:45:07.397 [debug] l:buf=688:<h1>A Rant Against Maximization</h1>
<p><a href="https://m.signalvnoise.com/a-rant-against-maximization/" rel="noopener noreferrer">https://m.signalvnoise.com/a-rant-against-maximization/</a></p>
<blockquote>
<p>Having fun, exploring ideas, creating, solving, building great things for you and your customers, being proud of your work, challenging yourself, learning, growing, building a self-sustaining company on your own schedule, adding something useful to the world, and working with great people — that’s what this is all about. Not maximization of a metric.</p>
</blockquote>
<p>By: <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>


10:45:07.397 [debug] l:len=6

10:45:07.397 [debug] l:buf=88:<h1>A Rant Against Maximization</h1>
<p><a href="https://m.signalvnoise.com/a-rant-against-maximization/" rel="noopener noreferrer">https://m.signalvnoise.com/a-rant-against-maximization/</a></p>
<blockquote>
<p>Having fun, exploring ideas, creating, solving, building great things for you and your customers, being proud of your work, challenging yourself, learning, growing, building a self-sustaining company on your own schedule, adding something useful to the world, and working with great people — that’s what this is all about. Not maximization of a metric.</p>
</blockquote>
<p>By: <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>


10:45:07.397 [debug] l:len=68

10:45:07.397 [debug] l:buf=8:<h1>A Rant Against Maximization</h1>
<p><a href="https://m.signalvnoise.com/a-rant-against-maximization/" rel="noopener noreferrer">https://m.signalvnoise.com/a-rant-against-maximization/</a></p>
<blockquote>
<p>Having fun, exploring ideas, creating, solving, building great things for you and your customers, being proud of your work, challenging yourself, learning, growing, building a self-sustaining company on your own schedule, adding something useful to the world, and working with great people — that’s what this is all about. Not maximization of a metric.</p>
</blockquote>
<p>By: <a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a></p>


10:45:07.397 [debug] l:len=

10:45:07.397 [debug] l:buf empty

10:45:07.397 [debug] l:len=

10:45:07.397 [debug] l:buf=2558:<h1>Article --Why I Hate Slack and You Should Too</h1>
<p><a href="https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/" rel="noopener noreferrer">https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/</a></p>
<ul>
<li>
<p>Slack merged phone calls, email, IRC all into one. Before he <em>could</em> ignore the stuff that could wait, now he can't.</p>
</li>
<li>
<p>It cannot be sanely ignored</p>
<ul>
<li>99% of the time it's unimportant, but what if it's <em>not</em>?? You have to check.</li>
</ul>
</li>
<li>
<p>It cannot be sanely organized</p>
<ul>
<li>The only way Slack bothers to offer to organize information is by channels which are at best, weak guidelines</li>
</ul>
</li>
<li>
<p>It’s proprietary and encourages lock-in</p>
<ul>
<li>Worse than <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> for this reason</li>
</ul>
</li>
<li>
<p>It encourages use for both business and personal applications</p>
<blockquote>
<p>That’s right: the same application and environment that makes a full-blown Dementor-style kiss with my attention span for work can now corner me in a back-alley when I just want to shoot the breeze with friends.</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>Slack honestly is trying to address this with threads, but the problem, which anyone who tried using a system like Wave or Zulip or something similar could tell you, is that the <strong>origami crane of organizing information neatly by topic</strong>🦢 runs basically head-on to the <strong>rabid bull of real-time chat</strong>👿 and then everything falls apart, so these don’t actually get used effectively in practice. Hell, whether a conversation uses a thread or not in Slack in the first place—and whether a threaded conversation stays that way in Slack (thanks, “Also send to #channel” checkbox! may the fleas of a thousand camels infest your armpits!)—seems sufficiently random that I’d be comfy using it as the main entropy source for a digital slot machine. ↩︎</p>
</blockquote>
<ul>
<li>Link: <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>
<h2>Responses to it</h2>
<ul>
<li><a href="https://news.ycombinator.com/item?id=14732459" rel="noopener noreferrer">https://news.ycombinator.com/item?id=14732459</a></li>
</ul>
<p><a href="http://localhost:5000/slack-is-only-better-than-what-you-already-know" rel="noopener noreferrer">Slack is only better than what you already know</a></p>


10:45:07.397 [debug] l:len=2

10:45:07.397 [debug] l:buf=558:<h1>Article --Why I Hate Slack and You Should Too</h1>
<p><a href="https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/" rel="noopener noreferrer">https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/</a></p>
<ul>
<li>
<p>Slack merged phone calls, email, IRC all into one. Before he <em>could</em> ignore the stuff that could wait, now he can't.</p>
</li>
<li>
<p>It cannot be sanely ignored</p>
<ul>
<li>99% of the time it's unimportant, but what if it's <em>not</em>?? You have to check.</li>
</ul>
</li>
<li>
<p>It cannot be sanely organized</p>
<ul>
<li>The only way Slack bothers to offer to organize information is by channels which are at best, weak guidelines</li>
</ul>
</li>
<li>
<p>It’s proprietary and encourages lock-in</p>
<ul>
<li>Worse than <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> for this reason</li>
</ul>
</li>
<li>
<p>It encourages use for both business and personal applications</p>
<blockquote>
<p>That’s right: the same application and environment that makes a full-blown Dementor-style kiss with my attention span for work can now corner me in a back-alley when I just want to shoot the breeze with friends.</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>Slack honestly is trying to address this with threads, but the problem, which anyone who tried using a system like Wave or Zulip or something similar could tell you, is that the <strong>origami crane of organizing information neatly by topic</strong>🦢 runs basically head-on to the <strong>rabid bull of real-time chat</strong>👿 and then everything falls apart, so these don’t actually get used effectively in practice. Hell, whether a conversation uses a thread or not in Slack in the first place—and whether a threaded conversation stays that way in Slack (thanks, “Also send to #channel” checkbox! may the fleas of a thousand camels infest your armpits!)—seems sufficiently random that I’d be comfy using it as the main entropy source for a digital slot machine. ↩︎</p>
</blockquote>
<ul>
<li>Link: <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>
<h2>Responses to it</h2>
<ul>
<li><a href="https://news.ycombinator.com/item?id=14732459" rel="noopener noreferrer">https://news.ycombinator.com/item?id=14732459</a></li>
</ul>
<p><a href="http://localhost:5000/slack-is-only-better-than-what-you-already-know" rel="noopener noreferrer">Slack is only better than what you already know</a></p>


10:45:07.397 [debug] l:len=25

10:45:07.397 [debug] l:buf=58:<h1>Article --Why I Hate Slack and You Should Too</h1>
<p><a href="https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/" rel="noopener noreferrer">https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/</a></p>
<ul>
<li>
<p>Slack merged phone calls, email, IRC all into one. Before he <em>could</em> ignore the stuff that could wait, now he can't.</p>
</li>
<li>
<p>It cannot be sanely ignored</p>
<ul>
<li>99% of the time it's unimportant, but what if it's <em>not</em>?? You have to check.</li>
</ul>
</li>
<li>
<p>It cannot be sanely organized</p>
<ul>
<li>The only way Slack bothers to offer to organize information is by channels which are at best, weak guidelines</li>
</ul>
</li>
<li>
<p>It’s proprietary and encourages lock-in</p>
<ul>
<li>Worse than <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> for this reason</li>
</ul>
</li>
<li>
<p>It encourages use for both business and personal applications</p>
<blockquote>
<p>That’s right: the same application and environment that makes a full-blown Dementor-style kiss with my attention span for work can now corner me in a back-alley when I just want to shoot the breeze with friends.</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>Slack honestly is trying to address this with threads, but the problem, which anyone who tried using a system like Wave or Zulip or something similar could tell you, is that the <strong>origami crane of organizing information neatly by topic</strong>🦢 runs basically head-on to the <strong>rabid bull of real-time chat</strong>👿 and then everything falls apart, so these don’t actually get used effectively in practice. Hell, whether a conversation uses a thread or not in Slack in the first place—and whether a threaded conversation stays that way in Slack (thanks, “Also send to #channel” checkbox! may the fleas of a thousand camels infest your armpits!)—seems sufficiently random that I’d be comfy using it as the main entropy source for a digital slot machine. ↩︎</p>
</blockquote>
<ul>
<li>Link: <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>
<h2>Responses to it</h2>
<ul>
<li><a href="https://news.ycombinator.com/item?id=14732459" rel="noopener noreferrer">https://news.ycombinator.com/item?id=14732459</a></li>
</ul>
<p><a href="http://localhost:5000/slack-is-only-better-than-what-you-already-know" rel="noopener noreferrer">Slack is only better than what you already know</a></p>


10:45:07.397 [debug] l:len=255

10:45:07.397 [debug] l:buf=8:<h1>Article --Why I Hate Slack and You Should Too</h1>
<p><a href="https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/" rel="noopener noreferrer">https://www.bitquabit.com/post/i-hate-slack-and-you-should-too/</a></p>
<ul>
<li>
<p>Slack merged phone calls, email, IRC all into one. Before he <em>could</em> ignore the stuff that could wait, now he can't.</p>
</li>
<li>
<p>It cannot be sanely ignored</p>
<ul>
<li>99% of the time it's unimportant, but what if it's <em>not</em>?? You have to check.</li>
</ul>
</li>
<li>
<p>It cannot be sanely organized</p>
<ul>
<li>The only way Slack bothers to offer to organize information is by channels which are at best, weak guidelines</li>
</ul>
</li>
<li>
<p>It’s proprietary and encourages lock-in</p>
<ul>
<li>Worse than <a href="http://localhost:5000/email" rel="noopener noreferrer">email</a> for this reason</li>
</ul>
</li>
<li>
<p>It encourages use for both business and personal applications</p>
<blockquote>
<p>That’s right: the same application and environment that makes a full-blown Dementor-style kiss with my attention span for work can now corner me in a back-alley when I just want to shoot the breeze with friends.</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>Slack honestly is trying to address this with threads, but the problem, which anyone who tried using a system like Wave or Zulip or something similar could tell you, is that the <strong>origami crane of organizing information neatly by topic</strong>🦢 runs basically head-on to the <strong>rabid bull of real-time chat</strong>👿 and then everything falls apart, so these don’t actually get used effectively in practice. Hell, whether a conversation uses a thread or not in Slack in the first place—and whether a threaded conversation stays that way in Slack (thanks, “Also send to #channel” checkbox! may the fleas of a thousand camels infest your armpits!)—seems sufficiently random that I’d be comfy using it as the main entropy source for a digital slot machine. ↩︎</p>
</blockquote>
<ul>
<li>Link: <a href="http://localhost:5000/there's-no-good-way-to-use-slack-threads" rel="noopener noreferrer">There's no good way to use Slack threads</a></li>
</ul>
<h2>Responses to it</h2>
<ul>
<li><a href="https://news.ycombinator.com/item?id=14732459" rel="noopener noreferrer">https://news.ycombinator.com/item?id=14732459</a></li>
</ul>
<p><a href="http://localhost:5000/slack-is-only-better-than-what-you-already-know" rel="noopener noreferrer">Slack is only better than what you already know</a></p>


10:45:07.397 [debug] l:len=

10:45:07.397 [debug] l:buf empty

10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf=402:<h1><a href="http://localhost:5000/board-game-idea" rel="noopener noreferrer">Board game Idea</a>: Guess my feelings game (parenting game)</h1>
<ul>
<li>One person is the parent, the other is the baby.</li>
<li>The baby (in early game) can't say any words, just cry or coo' (cards, like a card building game?)</li>
<li>The other person has to guess what they want. (kind of like pictonary?)</li>
</ul>


10:45:07.398 [debug] l:len=4

10:45:07.398 [debug] l:buf=02:<h1><a href="http://localhost:5000/board-game-idea" rel="noopener noreferrer">Board game Idea</a>: Guess my feelings game (parenting game)</h1>
<ul>
<li>One person is the parent, the other is the baby.</li>
<li>The baby (in early game) can't say any words, just cry or coo' (cards, like a card building game?)</li>
<li>The other person has to guess what they want. (kind of like pictonary?)</li>
</ul>


10:45:07.398 [debug] l:len=40

10:45:07.398 [debug] l:buf=2:<h1><a href="http://localhost:5000/board-game-idea" rel="noopener noreferrer">Board game Idea</a>: Guess my feelings game (parenting game)</h1>
<ul>
<li>One person is the parent, the other is the baby.</li>
<li>The baby (in early game) can't say any words, just cry or coo' (cards, like a card building game?)</li>
<li>The other person has to guess what they want. (kind of like pictonary?)</li>
</ul>


10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf empty

10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf=500:<h1>friction in design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.398 [debug] l:len=5

10:45:07.398 [debug] l:buf=00:<h1>friction in design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.398 [debug] l:len=50

10:45:07.398 [debug] l:buf=0:<h1>friction in design</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a></li>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
</ul>


10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf empty

10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf=265:<h1>Pasted image 20200922143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.398 [debug] l:len=2

10:45:07.398 [debug] l:buf=65:<h1>Pasted image 20200922143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.398 [debug] l:len=26

10:45:07.398 [debug] l:buf=5:<h1>Pasted image 20200922143823</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/chatting-with-glue" rel="noopener noreferrer">Chatting with Glue</a></li>
</ul>


10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf empty

10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf=1260:<h1>I'm taking a break from YouTube</h1>
<ul>
<li>His life changed when he got a smartphone</li>
<li>We shouldn't compare ourselves to yesterday because sometimes we're on fire one day and not the next, and that's ok</li>
<li>We go through times of creation and output and then times of reflection and input. That's also OK!</li>
<li>We are hard wired to like social approval</li>
<li>We are "wired" to only deal with communities of a few hundred close friends, but social media is overwhelming this capacity.</li>
<li>He also watched <a href="http://localhost:5000/the-social-dilemia" rel="noopener noreferrer">The Social Dilemia</a></li>
<li>Social Media turns our need to comparison and</li>
<li>When you try to keep on re-creating success you avoid <a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">trying weird stuff</a></li>
<li>Creative Violence
<ul>
<li>1000 minutes of content (without bonus stuff)</li>
<li>7 full length feature films</li>
<li>Not sure what he means by this...</li>
</ul>
</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/dopamine-detox" rel="noopener noreferrer">Dopamine Detox</a></li>
</ul>


10:45:07.398 [debug] l:len=1

10:45:07.398 [debug] l:buf=260:<h1>I'm taking a break from YouTube</h1>
<ul>
<li>His life changed when he got a smartphone</li>
<li>We shouldn't compare ourselves to yesterday because sometimes we're on fire one day and not the next, and that's ok</li>
<li>We go through times of creation and output and then times of reflection and input. That's also OK!</li>
<li>We are hard wired to like social approval</li>
<li>We are "wired" to only deal with communities of a few hundred close friends, but social media is overwhelming this capacity.</li>
<li>He also watched <a href="http://localhost:5000/the-social-dilemia" rel="noopener noreferrer">The Social Dilemia</a></li>
<li>Social Media turns our need to comparison and</li>
<li>When you try to keep on re-creating success you avoid <a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">trying weird stuff</a></li>
<li>Creative Violence
<ul>
<li>1000 minutes of content (without bonus stuff)</li>
<li>7 full length feature films</li>
<li>Not sure what he means by this...</li>
</ul>
</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/dopamine-detox" rel="noopener noreferrer">Dopamine Detox</a></li>
</ul>


10:45:07.398 [debug] l:len=12

10:45:07.398 [debug] l:buf=60:<h1>I'm taking a break from YouTube</h1>
<ul>
<li>His life changed when he got a smartphone</li>
<li>We shouldn't compare ourselves to yesterday because sometimes we're on fire one day and not the next, and that's ok</li>
<li>We go through times of creation and output and then times of reflection and input. That's also OK!</li>
<li>We are hard wired to like social approval</li>
<li>We are "wired" to only deal with communities of a few hundred close friends, but social media is overwhelming this capacity.</li>
<li>He also watched <a href="http://localhost:5000/the-social-dilemia" rel="noopener noreferrer">The Social Dilemia</a></li>
<li>Social Media turns our need to comparison and</li>
<li>When you try to keep on re-creating success you avoid <a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">trying weird stuff</a></li>
<li>Creative Violence
<ul>
<li>1000 minutes of content (without bonus stuff)</li>
<li>7 full length feature films</li>
<li>Not sure what he means by this...</li>
</ul>
</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/dopamine-detox" rel="noopener noreferrer">Dopamine Detox</a></li>
</ul>


10:45:07.398 [debug] l:len=126

10:45:07.398 [debug] l:buf=0:<h1>I'm taking a break from YouTube</h1>
<ul>
<li>His life changed when he got a smartphone</li>
<li>We shouldn't compare ourselves to yesterday because sometimes we're on fire one day and not the next, and that's ok</li>
<li>We go through times of creation and output and then times of reflection and input. That's also OK!</li>
<li>We are hard wired to like social approval</li>
<li>We are "wired" to only deal with communities of a few hundred close friends, but social media is overwhelming this capacity.</li>
<li>He also watched <a href="http://localhost:5000/the-social-dilemia" rel="noopener noreferrer">The Social Dilemia</a></li>
<li>Social Media turns our need to comparison and</li>
<li>When you try to keep on re-creating success you avoid <a href="http://localhost:5000/try-the-weird-stuff-first" rel="noopener noreferrer">trying weird stuff</a></li>
<li>Creative Violence
<ul>
<li>1000 minutes of content (without bonus stuff)</li>
<li>7 full length feature films</li>
<li>Not sure what he means by this...</li>
</ul>
</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></li>
<li><a href="http://localhost:5000/dopamine-detox" rel="noopener noreferrer">Dopamine Detox</a></li>
</ul>


10:45:07.398 [debug] l:len=

10:45:07.398 [debug] l:buf empty

10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf=290:<h1>Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.399 [debug] l:len=2

10:45:07.399 [debug] l:buf=90:<h1>Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.399 [debug] l:len=29

10:45:07.399 [debug] l:buf=0:<h1>Speaking</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
</ul>


10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf empty

10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf=88:<h1>bread boarding</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.399 [debug] l:len=8

10:45:07.399 [debug] l:buf=8:<h1>bread boarding</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf empty

10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf=106:<h1>Overcoming the destructive effects of</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.399 [debug] l:len=1

10:45:07.399 [debug] l:buf=06:<h1>Overcoming the destructive effects of</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.399 [debug] l:len=10

10:45:07.399 [debug] l:buf=6:<h1>Overcoming the destructive effects of</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf empty

10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf=106:<p>What blessings do we gain that women don't get from the priesthood?</p>
<p>Tags:
priesthood, women</p>


10:45:07.399 [debug] l:len=1

10:45:07.399 [debug] l:buf=06:<p>What blessings do we gain that women don't get from the priesthood?</p>
<p>Tags:
priesthood, women</p>


10:45:07.399 [debug] l:len=10

10:45:07.399 [debug] l:buf=6:<p>What blessings do we gain that women don't get from the priesthood?</p>
<p>Tags:
priesthood, women</p>


10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf empty

10:45:07.399 [debug] l:len=

10:45:07.399 [debug] l:buf=77:<h1>Now</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.399 [debug] l:len=7

10:45:07.399 [debug] l:buf=7:<h1>Now</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.399 [debug] l:len=

10:45:07.400 [debug] l:buf empty

10:45:07.400 [debug] l:len=

10:45:07.400 [debug] l:buf=389:<h1>Article, Slack Backlash is inevitable</h1>
<p><a href="https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable" rel="noopener noreferrer">https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.400 [debug] l:len=3

10:45:07.400 [debug] l:buf=89:<h1>Article, Slack Backlash is inevitable</h1>
<p><a href="https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable" rel="noopener noreferrer">https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.400 [debug] l:len=38

10:45:07.400 [debug] l:buf=9:<h1>Article, Slack Backlash is inevitable</h1>
<p><a href="https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable" rel="noopener noreferrer">https://bigtechnology.substack.com/p/why-a-slack-backlash-is-inevitable</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.400 [debug] l:len=

10:45:07.400 [debug] l:buf empty

10:45:07.400 [debug] l:len=

10:45:07.400 [debug] l:buf=1051:<h1>Most Remote Companies end up building a Aync Communicaiton tool</h1>
<ul>
<li><a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a> and <a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">it changed automatic</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> built... Twist</li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a> (they use Gitlab)</li>
<li><a href="http://localhost:5000/zappier" rel="noopener noreferrer">Zappier</a> uses an in house tool</li>
<li>Many other companies use other hacks</li>
</ul>
<p>Also see:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.400 [debug] l:len=1

10:45:07.400 [debug] l:buf=051:<h1>Most Remote Companies end up building a Aync Communicaiton tool</h1>
<ul>
<li><a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a> and <a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">it changed automatic</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> built... Twist</li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a> (they use Gitlab)</li>
<li><a href="http://localhost:5000/zappier" rel="noopener noreferrer">Zappier</a> uses an in house tool</li>
<li>Many other companies use other hacks</li>
</ul>
<p>Also see:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.400 [debug] l:len=10

10:45:07.400 [debug] l:buf=51:<h1>Most Remote Companies end up building a Aync Communicaiton tool</h1>
<ul>
<li><a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a> and <a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">it changed automatic</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> built... Twist</li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a> (they use Gitlab)</li>
<li><a href="http://localhost:5000/zappier" rel="noopener noreferrer">Zappier</a> uses an in house tool</li>
<li>Many other companies use other hacks</li>
</ul>
<p>Also see:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.401 [debug] l:len=105

10:45:07.401 [debug] l:buf=1:<h1>Most Remote Companies end up building a Aync Communicaiton tool</h1>
<ul>
<li><a href="http://localhost:5000/automatic-company-making-wordpress" rel="noopener noreferrer">Automatic (company making Wordpress)</a> built <a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a> and <a href="http://localhost:5000/article---how-p2-changed-automatic" rel="noopener noreferrer">it changed automatic</a></li>
<li><a href="http://localhost:5000/twist" rel="noopener noreferrer">Twist</a> built... Twist</li>
<li><a href="http://localhost:5000/gitlab" rel="noopener noreferrer">Gitlab</a> (they use Gitlab)</li>
<li><a href="http://localhost:5000/zappier" rel="noopener noreferrer">Zappier</a> uses an in house tool</li>
<li>Many other companies use other hacks</li>
</ul>
<p>Also see:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/p2" rel="noopener noreferrer">P2</a></li>
</ul>


10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf empty

10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf=269:<h1>utah-office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.401 [debug] l:len=2

10:45:07.401 [debug] l:buf=69:<h1>utah-office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.401 [debug] l:len=26

10:45:07.401 [debug] l:buf=9:<h1>utah-office</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/threads-instead-of-chatrooms" rel="noopener noreferrer">Threads instead of Chatrooms</a></li>
</ul>


10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf empty

10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf=224:<h1>2020-09-02</h1>
<ul>
<li>Feature config is a thing they store locally on the client but they get it from the server.
<ul>
<li>Github issue #14675</li>
</ul>
</li>
<li>DOCore (IOs) is where they store the URL?</li>
</ul>


10:45:07.401 [debug] l:len=2

10:45:07.401 [debug] l:buf=24:<h1>2020-09-02</h1>
<ul>
<li>Feature config is a thing they store locally on the client but they get it from the server.
<ul>
<li>Github issue #14675</li>
</ul>
</li>
<li>DOCore (IOs) is where they store the URL?</li>
</ul>


10:45:07.401 [debug] l:len=22

10:45:07.401 [debug] l:buf=4:<h1>2020-09-02</h1>
<ul>
<li>Feature config is a thing they store locally on the client but they get it from the server.
<ul>
<li>Github issue #14675</li>
</ul>
</li>
<li>DOCore (IOs) is where they store the URL?</li>
</ul>


10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf empty

10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf=286:<h1>Slack burnout -- transcription</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.401 [debug] l:len=2

10:45:07.401 [debug] l:buf=86:<h1>Slack burnout -- transcription</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.401 [debug] l:len=28

10:45:07.401 [debug] l:buf=6:<h1>Slack burnout -- transcription</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/how-slack-encourges-burnout" rel="noopener noreferrer">How Slack encourges burnout</a></li>
</ul>


10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf empty

10:45:07.401 [debug] l:len=

10:45:07.401 [debug] l:buf=388:<h1>Way of Aloha</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.402 [debug] l:len=3

10:45:07.402 [debug] l:buf=88:<h1>Way of Aloha</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.402 [debug] l:len=38

10:45:07.402 [debug] l:buf=8:<h1>Way of Aloha</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gifts-v.s.-wages" rel="noopener noreferrer">Gifts V.S. Wages</a></li>
<li><a href="http://localhost:5000/grace-is-things-we-don't-deserve" rel="noopener noreferrer">Grace is things we don't deserve</a></li>
</ul>


10:45:07.402 [debug] l:len=

10:45:07.402 [debug] l:buf empty

10:45:07.402 [debug] l:len=

10:45:07.402 [debug] l:buf=394:<h1>Zettelkasten Linking -- Create sparse trees</h1>
<p>One problem that I've ran into as I've implemented <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>	is over linking stuff. Remember that you can always use #hastags or just simply search for a keyword.</p>
<p>Over linking makes the link become a maze rather than a ideas building on each other.</p>


10:45:07.402 [debug] l:len=3

10:45:07.402 [debug] l:buf=94:<h1>Zettelkasten Linking -- Create sparse trees</h1>
<p>One problem that I've ran into as I've implemented <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>	is over linking stuff. Remember that you can always use #hastags or just simply search for a keyword.</p>
<p>Over linking makes the link become a maze rather than a ideas building on each other.</p>


10:45:07.402 [debug] l:len=39

10:45:07.402 [debug] l:buf=4:<h1>Zettelkasten Linking -- Create sparse trees</h1>
<p>One problem that I've ran into as I've implemented <a href="http://localhost:5000/zettelkasten" rel="noopener noreferrer">Zettelkasten</a>	is over linking stuff. Remember that you can always use #hastags or just simply search for a keyword.</p>
<p>Over linking makes the link become a maze rather than a ideas building on each other.</p>


10:45:07.402 [debug] l:len=

10:45:07.402 [debug] l:buf empty

10:45:07.402 [debug] l:len=

10:45:07.402 [debug] l:buf=283:<h1>React</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.402 [debug] l:len=2

10:45:07.402 [debug] l:buf=83:<h1>React</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.402 [debug] l:len=28

10:45:07.402 [debug] l:buf=3:<h1>React</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.402 [debug] l:len=

10:45:07.402 [debug] l:buf empty

10:45:07.403 [debug] l:len=

10:45:07.403 [debug] l:buf=5404:<h1>Elm in Production Stories</h1>
<h2><a href="https://m.youtube.com/watch?v=3FNKaGm3gk0" rel="noopener noreferrer">Richards talk</a></h2>
<h2><a href="http://sebastianporto.com/blog/posts/2017/from-react-to-elm/" rel="noopener noreferrer">React to Elm</a></h2>
<ul>
<li>Lots of code examples</li>
</ul>
<blockquote>
<p>It is all trade-off with immutability when doing JavaScript.</p>
</blockquote>
<blockquote>
<p>In Elm everything is immutable. There is no possibility of doing the incorrect thing, you can never mutate an existing thing, the language just doesn’t let you.</p>
</blockquote>
<h3>Easier to learn</h3>
<blockquote>
<p>I believe that JavaScript has grown quite complex, there are so many concepts to learn now, like prototypes, classes, this, coercions, promises, generators, async/await, ES6+ features, experimental features that people use everywhere. And the language just keeps growing.</p>
</blockquote>
<blockquote>
<p>Many of the things you learn are often at odds with other things in the language e.g. classes and this vs functional programming.</p>
</blockquote>
<blockquote>
<p>Elm in the other hand is a smaller and coherent language. I’m convinced that Elm is an easier language to learn than JS for a new programmer.</p>
</blockquote>
<h2><a href="https://www.pivotaltracker.com/blog/Elm-pivotal-tracker/" rel="noopener noreferrer">Pivotal Tracker</a></h2>
<blockquote>
<p>At first the new strange syntax and functional paradigm intimidated some developers, but <strong>most of us caught on in less than two days.</strong> Learning to think in “FP” can be challenging, but Elm helps ease into it.</p>
</blockquote>
<blockquote>
<p>Even better though, working with Elm was downright enjoyable. The tools make it so easy and frictionless to develop, and the compiler makes refactoring a cinch. We’ve refactored the entire file system in a day with no regressions, something that would’ve been nearly impossible in our other code bases.</p>
</blockquote>
<blockquote>
<p>... developers were literally bidding on the stories that involved Elm work during our morning stand-ups.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>our manager has mandated that all new code be written in Elm.</p>
</blockquote>
<h2><a href="http://futurice.com/blog/elm-in-the-real-world" rel="noopener noreferrer">Futurice</a></h2>
<blockquote>
<p>Choosing Elm for a customer project made my job nicer than ever and helped maintain project velocity during months of development.</p>
</blockquote>
<hr>
<blockquote>
<p>Despite being a whole new language to learn, I would argue the gains of the language design can far outweigh the "loss of time" while learning. JavaScript is, after all, a very very convoluted language with myriads of different libraries, frameworks, linters et cetera to try and make dealing with it less painful.</p>
</blockquote>
<blockquote>
<p>Based on my experiences, I wholeheartedly recommend Elm for all bigger frontend application projects from now on. There are parts that are more cumbersome than in JavaScript, for sure. But all things considered, I value the guarantees Elm provides far more than the ability to do things quick 'n' dirty.</p>
</blockquote>
<hr>
<blockquote>
<p>Go and learn Elm. Seriously. It is the simplest language I have ever tried, and the team has put a crazy lot of effort into making the developer experience as nice as possible.</p>
</blockquote>
<blockquote>
<p>The syntax may seem daunting at first, but don't fret. It's like getting a nice new sweater. A few days in, you'll be familiar with it and from then on it's like you've always known it. In our project, two out of three developers had never coded in Elm before. Both of them got up to speed and were productive in a couple of weeks. Even the sceptic told me that once he got over the initial shock, he found Elm a very nice language and a good fit for the project.</p>
</blockquote>
<h2>Move fast and don't break things</h2>
<blockquote>
<p><strong>Elm has allowed us to move much faster than we would have done with JavaScript</strong> by never letting us get stuck on frustrating bugs. Bugs also have the impact of making you fatigued, with Elm we can code for 14 hours and not be frustrated when we go to bed.</p>
</blockquote>
<hr>
<blockquote>
<p>This is a real issue in javascript where you always can hack something together, but <strong>in Elm it’s really hard to shoot yourself in the foot.</strong> You can probably do it but it’s very hard to write terrible code. React works really well if you are a pretty good programmer and you stay disciplined. As soon you get that one co-worker that starts binding to window or mutating state directly you’re in for a bad time.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm-format, combined with the fact that all Elm programs follow the same architecture, make it possible to understand a random Elm project much more easily than a random javascript project.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm really payed off and we could not be happier</p>
</blockquote>
<hr>
<blockquote>
<p>With Elm you cannot just hack stuff together, if it works it’s probably the right way. You get stuck until you learn the correct way but then its simple. A real downside to elm thou is that react-native feels way more painful now.</p>
</blockquote>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.403 [debug] l:len=5

10:45:07.403 [debug] l:buf=404:<h1>Elm in Production Stories</h1>
<h2><a href="https://m.youtube.com/watch?v=3FNKaGm3gk0" rel="noopener noreferrer">Richards talk</a></h2>
<h2><a href="http://sebastianporto.com/blog/posts/2017/from-react-to-elm/" rel="noopener noreferrer">React to Elm</a></h2>
<ul>
<li>Lots of code examples</li>
</ul>
<blockquote>
<p>It is all trade-off with immutability when doing JavaScript.</p>
</blockquote>
<blockquote>
<p>In Elm everything is immutable. There is no possibility of doing the incorrect thing, you can never mutate an existing thing, the language just doesn’t let you.</p>
</blockquote>
<h3>Easier to learn</h3>
<blockquote>
<p>I believe that JavaScript has grown quite complex, there are so many concepts to learn now, like prototypes, classes, this, coercions, promises, generators, async/await, ES6+ features, experimental features that people use everywhere. And the language just keeps growing.</p>
</blockquote>
<blockquote>
<p>Many of the things you learn are often at odds with other things in the language e.g. classes and this vs functional programming.</p>
</blockquote>
<blockquote>
<p>Elm in the other hand is a smaller and coherent language. I’m convinced that Elm is an easier language to learn than JS for a new programmer.</p>
</blockquote>
<h2><a href="https://www.pivotaltracker.com/blog/Elm-pivotal-tracker/" rel="noopener noreferrer">Pivotal Tracker</a></h2>
<blockquote>
<p>At first the new strange syntax and functional paradigm intimidated some developers, but <strong>most of us caught on in less than two days.</strong> Learning to think in “FP” can be challenging, but Elm helps ease into it.</p>
</blockquote>
<blockquote>
<p>Even better though, working with Elm was downright enjoyable. The tools make it so easy and frictionless to develop, and the compiler makes refactoring a cinch. We’ve refactored the entire file system in a day with no regressions, something that would’ve been nearly impossible in our other code bases.</p>
</blockquote>
<blockquote>
<p>... developers were literally bidding on the stories that involved Elm work during our morning stand-ups.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>our manager has mandated that all new code be written in Elm.</p>
</blockquote>
<h2><a href="http://futurice.com/blog/elm-in-the-real-world" rel="noopener noreferrer">Futurice</a></h2>
<blockquote>
<p>Choosing Elm for a customer project made my job nicer than ever and helped maintain project velocity during months of development.</p>
</blockquote>
<hr>
<blockquote>
<p>Despite being a whole new language to learn, I would argue the gains of the language design can far outweigh the "loss of time" while learning. JavaScript is, after all, a very very convoluted language with myriads of different libraries, frameworks, linters et cetera to try and make dealing with it less painful.</p>
</blockquote>
<blockquote>
<p>Based on my experiences, I wholeheartedly recommend Elm for all bigger frontend application projects from now on. There are parts that are more cumbersome than in JavaScript, for sure. But all things considered, I value the guarantees Elm provides far more than the ability to do things quick 'n' dirty.</p>
</blockquote>
<hr>
<blockquote>
<p>Go and learn Elm. Seriously. It is the simplest language I have ever tried, and the team has put a crazy lot of effort into making the developer experience as nice as possible.</p>
</blockquote>
<blockquote>
<p>The syntax may seem daunting at first, but don't fret. It's like getting a nice new sweater. A few days in, you'll be familiar with it and from then on it's like you've always known it. In our project, two out of three developers had never coded in Elm before. Both of them got up to speed and were productive in a couple of weeks. Even the sceptic told me that once he got over the initial shock, he found Elm a very nice language and a good fit for the project.</p>
</blockquote>
<h2>Move fast and don't break things</h2>
<blockquote>
<p><strong>Elm has allowed us to move much faster than we would have done with JavaScript</strong> by never letting us get stuck on frustrating bugs. Bugs also have the impact of making you fatigued, with Elm we can code for 14 hours and not be frustrated when we go to bed.</p>
</blockquote>
<hr>
<blockquote>
<p>This is a real issue in javascript where you always can hack something together, but <strong>in Elm it’s really hard to shoot yourself in the foot.</strong> You can probably do it but it’s very hard to write terrible code. React works really well if you are a pretty good programmer and you stay disciplined. As soon you get that one co-worker that starts binding to window or mutating state directly you’re in for a bad time.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm-format, combined with the fact that all Elm programs follow the same architecture, make it possible to understand a random Elm project much more easily than a random javascript project.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm really payed off and we could not be happier</p>
</blockquote>
<hr>
<blockquote>
<p>With Elm you cannot just hack stuff together, if it works it’s probably the right way. You get stuck until you learn the correct way but then its simple. A real downside to elm thou is that react-native feels way more painful now.</p>
</blockquote>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.403 [debug] l:len=54

10:45:07.403 [debug] l:buf=04:<h1>Elm in Production Stories</h1>
<h2><a href="https://m.youtube.com/watch?v=3FNKaGm3gk0" rel="noopener noreferrer">Richards talk</a></h2>
<h2><a href="http://sebastianporto.com/blog/posts/2017/from-react-to-elm/" rel="noopener noreferrer">React to Elm</a></h2>
<ul>
<li>Lots of code examples</li>
</ul>
<blockquote>
<p>It is all trade-off with immutability when doing JavaScript.</p>
</blockquote>
<blockquote>
<p>In Elm everything is immutable. There is no possibility of doing the incorrect thing, you can never mutate an existing thing, the language just doesn’t let you.</p>
</blockquote>
<h3>Easier to learn</h3>
<blockquote>
<p>I believe that JavaScript has grown quite complex, there are so many concepts to learn now, like prototypes, classes, this, coercions, promises, generators, async/await, ES6+ features, experimental features that people use everywhere. And the language just keeps growing.</p>
</blockquote>
<blockquote>
<p>Many of the things you learn are often at odds with other things in the language e.g. classes and this vs functional programming.</p>
</blockquote>
<blockquote>
<p>Elm in the other hand is a smaller and coherent language. I’m convinced that Elm is an easier language to learn than JS for a new programmer.</p>
</blockquote>
<h2><a href="https://www.pivotaltracker.com/blog/Elm-pivotal-tracker/" rel="noopener noreferrer">Pivotal Tracker</a></h2>
<blockquote>
<p>At first the new strange syntax and functional paradigm intimidated some developers, but <strong>most of us caught on in less than two days.</strong> Learning to think in “FP” can be challenging, but Elm helps ease into it.</p>
</blockquote>
<blockquote>
<p>Even better though, working with Elm was downright enjoyable. The tools make it so easy and frictionless to develop, and the compiler makes refactoring a cinch. We’ve refactored the entire file system in a day with no regressions, something that would’ve been nearly impossible in our other code bases.</p>
</blockquote>
<blockquote>
<p>... developers were literally bidding on the stories that involved Elm work during our morning stand-ups.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>our manager has mandated that all new code be written in Elm.</p>
</blockquote>
<h2><a href="http://futurice.com/blog/elm-in-the-real-world" rel="noopener noreferrer">Futurice</a></h2>
<blockquote>
<p>Choosing Elm for a customer project made my job nicer than ever and helped maintain project velocity during months of development.</p>
</blockquote>
<hr>
<blockquote>
<p>Despite being a whole new language to learn, I would argue the gains of the language design can far outweigh the "loss of time" while learning. JavaScript is, after all, a very very convoluted language with myriads of different libraries, frameworks, linters et cetera to try and make dealing with it less painful.</p>
</blockquote>
<blockquote>
<p>Based on my experiences, I wholeheartedly recommend Elm for all bigger frontend application projects from now on. There are parts that are more cumbersome than in JavaScript, for sure. But all things considered, I value the guarantees Elm provides far more than the ability to do things quick 'n' dirty.</p>
</blockquote>
<hr>
<blockquote>
<p>Go and learn Elm. Seriously. It is the simplest language I have ever tried, and the team has put a crazy lot of effort into making the developer experience as nice as possible.</p>
</blockquote>
<blockquote>
<p>The syntax may seem daunting at first, but don't fret. It's like getting a nice new sweater. A few days in, you'll be familiar with it and from then on it's like you've always known it. In our project, two out of three developers had never coded in Elm before. Both of them got up to speed and were productive in a couple of weeks. Even the sceptic told me that once he got over the initial shock, he found Elm a very nice language and a good fit for the project.</p>
</blockquote>
<h2>Move fast and don't break things</h2>
<blockquote>
<p><strong>Elm has allowed us to move much faster than we would have done with JavaScript</strong> by never letting us get stuck on frustrating bugs. Bugs also have the impact of making you fatigued, with Elm we can code for 14 hours and not be frustrated when we go to bed.</p>
</blockquote>
<hr>
<blockquote>
<p>This is a real issue in javascript where you always can hack something together, but <strong>in Elm it’s really hard to shoot yourself in the foot.</strong> You can probably do it but it’s very hard to write terrible code. React works really well if you are a pretty good programmer and you stay disciplined. As soon you get that one co-worker that starts binding to window or mutating state directly you’re in for a bad time.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm-format, combined with the fact that all Elm programs follow the same architecture, make it possible to understand a random Elm project much more easily than a random javascript project.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm really payed off and we could not be happier</p>
</blockquote>
<hr>
<blockquote>
<p>With Elm you cannot just hack stuff together, if it works it’s probably the right way. You get stuck until you learn the correct way but then its simple. A real downside to elm thou is that react-native feels way more painful now.</p>
</blockquote>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.403 [debug] l:len=540

10:45:07.403 [debug] l:buf=4:<h1>Elm in Production Stories</h1>
<h2><a href="https://m.youtube.com/watch?v=3FNKaGm3gk0" rel="noopener noreferrer">Richards talk</a></h2>
<h2><a href="http://sebastianporto.com/blog/posts/2017/from-react-to-elm/" rel="noopener noreferrer">React to Elm</a></h2>
<ul>
<li>Lots of code examples</li>
</ul>
<blockquote>
<p>It is all trade-off with immutability when doing JavaScript.</p>
</blockquote>
<blockquote>
<p>In Elm everything is immutable. There is no possibility of doing the incorrect thing, you can never mutate an existing thing, the language just doesn’t let you.</p>
</blockquote>
<h3>Easier to learn</h3>
<blockquote>
<p>I believe that JavaScript has grown quite complex, there are so many concepts to learn now, like prototypes, classes, this, coercions, promises, generators, async/await, ES6+ features, experimental features that people use everywhere. And the language just keeps growing.</p>
</blockquote>
<blockquote>
<p>Many of the things you learn are often at odds with other things in the language e.g. classes and this vs functional programming.</p>
</blockquote>
<blockquote>
<p>Elm in the other hand is a smaller and coherent language. I’m convinced that Elm is an easier language to learn than JS for a new programmer.</p>
</blockquote>
<h2><a href="https://www.pivotaltracker.com/blog/Elm-pivotal-tracker/" rel="noopener noreferrer">Pivotal Tracker</a></h2>
<blockquote>
<p>At first the new strange syntax and functional paradigm intimidated some developers, but <strong>most of us caught on in less than two days.</strong> Learning to think in “FP” can be challenging, but Elm helps ease into it.</p>
</blockquote>
<blockquote>
<p>Even better though, working with Elm was downright enjoyable. The tools make it so easy and frictionless to develop, and the compiler makes refactoring a cinch. We’ve refactored the entire file system in a day with no regressions, something that would’ve been nearly impossible in our other code bases.</p>
</blockquote>
<blockquote>
<p>... developers were literally bidding on the stories that involved Elm work during our morning stand-ups.</p>
</blockquote>
<p>...</p>
<blockquote>
<p>our manager has mandated that all new code be written in Elm.</p>
</blockquote>
<h2><a href="http://futurice.com/blog/elm-in-the-real-world" rel="noopener noreferrer">Futurice</a></h2>
<blockquote>
<p>Choosing Elm for a customer project made my job nicer than ever and helped maintain project velocity during months of development.</p>
</blockquote>
<hr>
<blockquote>
<p>Despite being a whole new language to learn, I would argue the gains of the language design can far outweigh the "loss of time" while learning. JavaScript is, after all, a very very convoluted language with myriads of different libraries, frameworks, linters et cetera to try and make dealing with it less painful.</p>
</blockquote>
<blockquote>
<p>Based on my experiences, I wholeheartedly recommend Elm for all bigger frontend application projects from now on. There are parts that are more cumbersome than in JavaScript, for sure. But all things considered, I value the guarantees Elm provides far more than the ability to do things quick 'n' dirty.</p>
</blockquote>
<hr>
<blockquote>
<p>Go and learn Elm. Seriously. It is the simplest language I have ever tried, and the team has put a crazy lot of effort into making the developer experience as nice as possible.</p>
</blockquote>
<blockquote>
<p>The syntax may seem daunting at first, but don't fret. It's like getting a nice new sweater. A few days in, you'll be familiar with it and from then on it's like you've always known it. In our project, two out of three developers had never coded in Elm before. Both of them got up to speed and were productive in a couple of weeks. Even the sceptic told me that once he got over the initial shock, he found Elm a very nice language and a good fit for the project.</p>
</blockquote>
<h2>Move fast and don't break things</h2>
<blockquote>
<p><strong>Elm has allowed us to move much faster than we would have done with JavaScript</strong> by never letting us get stuck on frustrating bugs. Bugs also have the impact of making you fatigued, with Elm we can code for 14 hours and not be frustrated when we go to bed.</p>
</blockquote>
<hr>
<blockquote>
<p>This is a real issue in javascript where you always can hack something together, but <strong>in Elm it’s really hard to shoot yourself in the foot.</strong> You can probably do it but it’s very hard to write terrible code. React works really well if you are a pretty good programmer and you stay disciplined. As soon you get that one co-worker that starts binding to window or mutating state directly you’re in for a bad time.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm-format, combined with the fact that all Elm programs follow the same architecture, make it possible to understand a random Elm project much more easily than a random javascript project.</p>
</blockquote>
<hr>
<blockquote>
<p>Elm really payed off and we could not be happier</p>
</blockquote>
<hr>
<blockquote>
<p>With Elm you cannot just hack stuff together, if it works it’s probably the right way. You get stuck until you learn the correct way but then its simple. A real downside to elm thou is that react-native feels way more painful now.</p>
</blockquote>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></p>


10:45:07.403 [debug] l:len=

10:45:07.403 [debug] l:buf empty

10:45:07.403 [debug] l:len=

10:45:07.403 [debug] l:buf=618:<h1>Tribal Knowlege</h1>
<p>This happens when people only get information from one another, never from writing much like how <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> makes the <a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a>.</p>
<p>This is usually the opposite of <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> because people need answers <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>.</p>


10:45:07.403 [debug] l:len=6

10:45:07.403 [debug] l:buf=18:<h1>Tribal Knowlege</h1>
<p>This happens when people only get information from one another, never from writing much like how <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> makes the <a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a>.</p>
<p>This is usually the opposite of <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> because people need answers <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>.</p>


10:45:07.403 [debug] l:len=61

10:45:07.403 [debug] l:buf=8:<h1>Tribal Knowlege</h1>
<p>This happens when people only get information from one another, never from writing much like how <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a> makes the <a href="http://localhost:5000/'easier-to-ask-then-find'-problem" rel="noopener noreferrer">'easier to ask then find' problem</a>.</p>
<p>This is usually the opposite of <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> because people need answers <a href="http://localhost:5000/asap" rel="noopener noreferrer">ASAP</a>.</p>


10:45:07.403 [debug] l:len=

10:45:07.403 [debug] l:buf empty

10:45:07.403 [debug] l:len=

10:45:07.404 [debug] l:buf=2350:<h1>Power of a Title</h1>
<p>Titles are an underappreciated thing. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>  have gotten rid of them to make the <a href="http://localhost:5000/price-of-entry" rel="noopener noreferrer">price of entry</a> cheaper.</p>
<p>The main power lies in it's ability to <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> and <a href="http://localhost:5000/curate" rel="noopener noreferrer">curate</a> content. A title is a small sentence at most while the post it represents is much longer. This gives power to the reader at a small price to the writer. This is ideal in most team situations because a post is read more times than it's written.</p>
<p>It also increases the ability to quickly find and reference something. If a piece is about, "<a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>" then it's likely going to end up in the title.</p>
<h2>Examples</h2>
<p>This is of <a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a> for the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.404 [debug] l:len=2

10:45:07.404 [debug] l:buf=350:<h1>Power of a Title</h1>
<p>Titles are an underappreciated thing. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>  have gotten rid of them to make the <a href="http://localhost:5000/price-of-entry" rel="noopener noreferrer">price of entry</a> cheaper.</p>
<p>The main power lies in it's ability to <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> and <a href="http://localhost:5000/curate" rel="noopener noreferrer">curate</a> content. A title is a small sentence at most while the post it represents is much longer. This gives power to the reader at a small price to the writer. This is ideal in most team situations because a post is read more times than it's written.</p>
<p>It also increases the ability to quickly find and reference something. If a piece is about, "<a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>" then it's likely going to end up in the title.</p>
<h2>Examples</h2>
<p>This is of <a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a> for the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.404 [debug] l:len=23

10:45:07.404 [debug] l:buf=50:<h1>Power of a Title</h1>
<p>Titles are an underappreciated thing. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>  have gotten rid of them to make the <a href="http://localhost:5000/price-of-entry" rel="noopener noreferrer">price of entry</a> cheaper.</p>
<p>The main power lies in it's ability to <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> and <a href="http://localhost:5000/curate" rel="noopener noreferrer">curate</a> content. A title is a small sentence at most while the post it represents is much longer. This gives power to the reader at a small price to the writer. This is ideal in most team situations because a post is read more times than it's written.</p>
<p>It also increases the ability to quickly find and reference something. If a piece is about, "<a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>" then it's likely going to end up in the title.</p>
<h2>Examples</h2>
<p>This is of <a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a> for the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.404 [debug] l:len=235

10:45:07.404 [debug] l:buf=0:<h1>Power of a Title</h1>
<p>Titles are an underappreciated thing. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> and <a href="http://localhost:5000/facebook" rel="noopener noreferrer">Facebook</a>  have gotten rid of them to make the <a href="http://localhost:5000/price-of-entry" rel="noopener noreferrer">price of entry</a> cheaper.</p>
<p>The main power lies in it's ability to <a href="http://localhost:5000/summarize" rel="noopener noreferrer">summarize</a> and <a href="http://localhost:5000/curate" rel="noopener noreferrer">curate</a> content. A title is a small sentence at most while the post it represents is much longer. This gives power to the reader at a small price to the writer. This is ideal in most team situations because a post is read more times than it's written.</p>
<p>It also increases the ability to quickly find and reference something. If a piece is about, "<a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a>" then it's likely going to end up in the title.</p>
<h2>Examples</h2>
<p>This is of <a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a> for the <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> forum.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201009143823.png" rel="noopener noreferrer">Pasted image 20201009143823</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p>Links</p>
<ul>
<li><a href="http://localhost:5000/slack-is-hostile-for-the-reader" rel="noopener noreferrer">Slack is hostile for the reader</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/discourse" rel="noopener noreferrer">Discourse</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
<li><a href="http://localhost:5000/slack's-design-of-it's-input-box-v.s.-basecamp" rel="noopener noreferrer">Slack's design of it's input box V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/slack's-poor-use-of-space" rel="noopener noreferrer">Slack's poor use of space</a></li>
<li><a href="http://localhost:5000/topic" rel="noopener noreferrer">topic</a></li>
</ul>


10:45:07.404 [debug] l:len=

10:45:07.404 [debug] l:buf empty

10:45:07.404 [debug] l:len=

10:45:07.404 [debug] l:buf=656:<h1>OCaml Workshop</h1>
<p>Guy who works on OCaml &amp; MirageOS</p>
<ul>
<li>OCaml is truly full stack
<ul>
<li>Reason</li>
<li>RISK5 - open source hardware</li>
</ul>
</li>
<li>MirageOS
<ul>
<li>Docker for Mac -&gt; written in a lot of OCaml 🤯</li>
</ul>
</li>
<li>You need an Ecosystem</li>
</ul>
<h3>Opam</h3>
<pre><code>opam init
</code></pre>
<pre><code>opam list -a
</code></pre>
<p><code>dune</code> is the most popular build system.</p>
<h1>OWL</h1>
<p>Functional Scientific Computing</p>
<p>Looks like Python, runs like C.</p>
<p>ocaml.xyz</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.404 [debug] l:len=6

10:45:07.404 [debug] l:buf=56:<h1>OCaml Workshop</h1>
<p>Guy who works on OCaml &amp; MirageOS</p>
<ul>
<li>OCaml is truly full stack
<ul>
<li>Reason</li>
<li>RISK5 - open source hardware</li>
</ul>
</li>
<li>MirageOS
<ul>
<li>Docker for Mac -&gt; written in a lot of OCaml 🤯</li>
</ul>
</li>
<li>You need an Ecosystem</li>
</ul>
<h3>Opam</h3>
<pre><code>opam init
</code></pre>
<pre><code>opam list -a
</code></pre>
<p><code>dune</code> is the most popular build system.</p>
<h1>OWL</h1>
<p>Functional Scientific Computing</p>
<p>Looks like Python, runs like C.</p>
<p>ocaml.xyz</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.404 [debug] l:len=65

10:45:07.404 [debug] l:buf=6:<h1>OCaml Workshop</h1>
<p>Guy who works on OCaml &amp; MirageOS</p>
<ul>
<li>OCaml is truly full stack
<ul>
<li>Reason</li>
<li>RISK5 - open source hardware</li>
</ul>
</li>
<li>MirageOS
<ul>
<li>Docker for Mac -&gt; written in a lot of OCaml 🤯</li>
</ul>
</li>
<li>You need an Ecosystem</li>
</ul>
<h3>Opam</h3>
<pre><code>opam init
</code></pre>
<pre><code>opam list -a
</code></pre>
<p><code>dune</code> is the most popular build system.</p>
<h1>OWL</h1>
<p>Functional Scientific Computing</p>
<p>Looks like Python, runs like C.</p>
<p>ocaml.xyz</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.404 [debug] l:len=

10:45:07.404 [debug] l:buf empty

10:45:07.404 [debug] l:len=

10:45:07.404 [debug] l:buf=974:<h1>Writing (or Coding) lots is not enough</h1>
<blockquote>
<p>This advice is roughly similar for becoming better at writing code. Volume is a prerequisite, but it’s also not sufficient. Critically examining those words - prose or code - after they’re written is part of the progress. You can write the same crap a million times.
~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
</blockquote>
<p>ref: <a href="https://twitter.com/dhh/status/1317804739480924161" rel="noopener noreferrer">https://twitter.com/dhh/status/1317804739480924161</a></p>
<ul>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.405 [debug] l:len=9

10:45:07.405 [debug] l:buf=74:<h1>Writing (or Coding) lots is not enough</h1>
<blockquote>
<p>This advice is roughly similar for becoming better at writing code. Volume is a prerequisite, but it’s also not sufficient. Critically examining those words - prose or code - after they’re written is part of the progress. You can write the same crap a million times.
~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
</blockquote>
<p>ref: <a href="https://twitter.com/dhh/status/1317804739480924161" rel="noopener noreferrer">https://twitter.com/dhh/status/1317804739480924161</a></p>
<ul>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.405 [debug] l:len=97

10:45:07.405 [debug] l:buf=4:<h1>Writing (or Coding) lots is not enough</h1>
<blockquote>
<p>This advice is roughly similar for becoming better at writing code. Volume is a prerequisite, but it’s also not sufficient. Critically examining those words - prose or code - after they’re written is part of the progress. You can write the same crap a million times.
~ <a href="http://localhost:5000/dhh" rel="noopener noreferrer">DHH</a></p>
</blockquote>
<p>ref: <a href="https://twitter.com/dhh/status/1317804739480924161" rel="noopener noreferrer">https://twitter.com/dhh/status/1317804739480924161</a></p>
<ul>
<li><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></li>
<li><a href="http://localhost:5000/writing" rel="noopener noreferrer">writing</a></li>
<li><a href="http://localhost:5000/be-proactive" rel="noopener noreferrer">Be Proactive</a></li>
<li><a href="http://localhost:5000/my-essays-moc" rel="noopener noreferrer">My Essays MOC</a></li>
</ul>


10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf empty

10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf=294:<h1>Calling Template</h1>
<p>Hello <strong>X</strong>, This is is Gage Peterson the temple coordinator. I saw that you signed up for a temple temple trip coming up . Are you available to Babysit? (or go?)</p>
<p><a href="http://localhost:5000/calling" rel="noopener noreferrer">calling</a></p>


10:45:07.405 [debug] l:len=2

10:45:07.405 [debug] l:buf=94:<h1>Calling Template</h1>
<p>Hello <strong>X</strong>, This is is Gage Peterson the temple coordinator. I saw that you signed up for a temple temple trip coming up . Are you available to Babysit? (or go?)</p>
<p><a href="http://localhost:5000/calling" rel="noopener noreferrer">calling</a></p>


10:45:07.405 [debug] l:len=29

10:45:07.405 [debug] l:buf=4:<h1>Calling Template</h1>
<p>Hello <strong>X</strong>, This is is Gage Peterson the temple coordinator. I saw that you signed up for a temple temple trip coming up . Are you available to Babysit? (or go?)</p>
<p><a href="http://localhost:5000/calling" rel="noopener noreferrer">calling</a></p>


10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf empty

10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf=129:<h1>propinate</h1>
<p>Helps appetite</p>
<p>#vegan
<a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.405 [debug] l:len=1

10:45:07.405 [debug] l:buf=29:<h1>propinate</h1>
<p>Helps appetite</p>
<p>#vegan
<a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.405 [debug] l:len=12

10:45:07.405 [debug] l:buf=9:<h1>propinate</h1>
<p>Helps appetite</p>
<p>#vegan
<a href="http://localhost:5000/vegan" rel="noopener noreferrer">Vegan</a></p>


10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf empty

10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf=504:<h1>Long-form</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>


10:45:07.405 [debug] l:len=5

10:45:07.405 [debug] l:buf=04:<h1>Long-form</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>


10:45:07.405 [debug] l:len=50

10:45:07.405 [debug] l:buf=4:<h1>Long-form</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/essay" rel="noopener noreferrer">essay</a></li>
</ul>


10:45:07.405 [debug] l:len=

10:45:07.405 [debug] l:buf empty

10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf=427:<h2>Lesson 27 - Sunday school</h2>
<ul>
<li>asdf</li>
</ul>
<h2>Priesthood</h2>
<p>We are a <strong>covenant people.</strong></p>
<h3>Becoming perfect</h3>
<p>Infinite atonement « good book 📑</p>
<ul>
<li>must be constantly improving</li>
<li>the atonement is to help our sins not stain us forever</li>
<li>commandments simplify our lives</li>
</ul>
<h1>a way to improve our lives?</h1>
<p>Tags:
d&amp;c, sunday-school</p>


10:45:07.406 [debug] l:len=4

10:45:07.406 [debug] l:buf=27:<h2>Lesson 27 - Sunday school</h2>
<ul>
<li>asdf</li>
</ul>
<h2>Priesthood</h2>
<p>We are a <strong>covenant people.</strong></p>
<h3>Becoming perfect</h3>
<p>Infinite atonement « good book 📑</p>
<ul>
<li>must be constantly improving</li>
<li>the atonement is to help our sins not stain us forever</li>
<li>commandments simplify our lives</li>
</ul>
<h1>a way to improve our lives?</h1>
<p>Tags:
d&amp;c, sunday-school</p>


10:45:07.406 [debug] l:len=42

10:45:07.406 [debug] l:buf=7:<h2>Lesson 27 - Sunday school</h2>
<ul>
<li>asdf</li>
</ul>
<h2>Priesthood</h2>
<p>We are a <strong>covenant people.</strong></p>
<h3>Becoming perfect</h3>
<p>Infinite atonement « good book 📑</p>
<ul>
<li>must be constantly improving</li>
<li>the atonement is to help our sins not stain us forever</li>
<li>commandments simplify our lives</li>
</ul>
<h1>a way to improve our lives?</h1>
<p>Tags:
d&amp;c, sunday-school</p>


10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf empty

10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf=688:<h1>Motivation</h1>
<ul>
<li>talks on motivations
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.406 [debug] l:len=6

10:45:07.406 [debug] l:buf=88:<h1>Motivation</h1>
<ul>
<li>talks on motivations
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.406 [debug] l:len=68

10:45:07.406 [debug] l:buf=8:<h1>Motivation</h1>
<ul>
<li>talks on motivations
<ul>
<li>[[Predictably Irrational - basic human motivations: Dan Ariely at TEDxMidwest]]</li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf empty

10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf=603:<h1>Microsoft teams</h1>
<p>Started out as more of a Slack clone, it's growing into a much more <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. See <a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.406 [debug] l:len=6

10:45:07.406 [debug] l:buf=03:<h1>Microsoft teams</h1>
<p>Started out as more of a Slack clone, it's growing into a much more <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. See <a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.406 [debug] l:len=60

10:45:07.406 [debug] l:buf=3:<h1>Microsoft teams</h1>
<p>Started out as more of a Slack clone, it's growing into a much more <a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a> tool. See <a href="http://localhost:5000/microsoft-team's-input-box" rel="noopener noreferrer">Microsoft Team's input box</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quill-chat" rel="noopener noreferrer">Quill Chat</a></li>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.406 [debug] l:len=

10:45:07.406 [debug] l:buf empty

10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf=96:<h1>Pasted image 20200923095224</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.407 [debug] l:len=9

10:45:07.407 [debug] l:buf=6:<h1>Pasted image 20200923095224</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf empty

10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf=85:<h1>Competition</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.407 [debug] l:len=8

10:45:07.407 [debug] l:buf=5:<h1>Competition</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf empty

10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf=81:<h1>Bashi Boards</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.407 [debug] l:len=8

10:45:07.407 [debug] l:buf=1:<h1>Bashi Boards</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.407 [debug] l:len=

10:45:07.407 [debug] l:buf empty

10:45:07.409 [debug] l:len=

10:45:07.409 [debug] l:buf=19681:<h1>Messy drawer of communication</h1>
<p>There's a lot of laundry in a 4 kid family so I often fold up the kids' clothes and put it next to their door while they're sleeping. (Our evenings are very exciting) I subscribe to the Marie Kondo method of folding which allows you to stack clothing vertically like this:</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/previews/full/IMG_20200418_070421408.jpg" alt="Zoom IMG_20200418_070421408.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg</a>)</p>
<p>Not even leaning against the stairs!&nbsp;4.76 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
then it's easy to pick up the stack and place it nicely in the drawer so that you can see every shirt you want and quickly pull it out without disturbing the others.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/previews/full/IMG_20200418_070443459.jpg" alt="Zoom IMG_20200418_070443459.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg</a>)</p>
<p>Nice and neat 👌&nbsp;3.05 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
However, as you might have guessed, children are not actually that good at keeping things nice and neat. quickly after putting the clothing into the drawer... things turn to chaos.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/previews/full/IMG_20200418_065602014.jpg" alt="Zoom IMG_20200418_065602014.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg</a>)</p>
<p>Oh no... 😱&nbsp;2.41 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/previews/full/IMG_20200505_073005992.jpg" alt="Zoom IMG_20200505_073005992.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg</a>)</p>
<p>Later&nbsp;4.24 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/previews/full/IMG_20200505_200416513.jpg" alt="Zoom IMG_20200505_200416513.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg</a>)</p>
<p>Most recent&nbsp;3.58 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
Generally, we try to keep the shirts on one side and the pants on the other&nbsp;<em>but</em>&nbsp;when the kids are in a&nbsp;<em><strong>hurry</strong></em>&nbsp;they quickly come unfolded and pile up on each other. Because things are on top of each other and there's no division between the different types of clothing you have to&nbsp;<em><strong>dig</strong></em>*&nbsp;in order to find the thing that you wish to wear*.</p>
<p>The other thing that happens is&nbsp;**as soon the drawer is messy&nbsp;**<em><strong>that becomes the status quo</strong></em>&nbsp;and whenever we give them clothing to put away they throw it in without any regard to our nice folding. 😫</p>
<p>You may say, "<em>well that's just how kids are! They don't care that much about things being neat and tidy"</em>, and to some degree that's true, but I would argue that it's actually just a design problem. Here is the top drawer of the kids clothing&nbsp;</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/previews/full/IMG_20200418_065619399.jpg" alt="Zoom IMG_20200418_065619399.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg</a>)</p>
<p>This is the natural state, without me fixing it up for the picture&nbsp;2.49 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/previews/full/IMG_20200430_072445982.jpg" alt="Zoom IMG_20200430_072445982.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg</a>)</p>
<p>Same drawer, weeks later&nbsp;3.39 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/84399d86-8f3e-11ea-82a9-a0369f740dfa/previews/full/IMG_20200505_200424407.jpg" alt="Zoom IMG_20200505_200424407.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/84399d86-8f3 (truncated)

10:45:07.410 [debug] l:len=1

10:45:07.410 [debug] l:buf=9681:<h1>Messy drawer of communication</h1>
<p>There's a lot of laundry in a 4 kid family so I often fold up the kids' clothes and put it next to their door while they're sleeping. (Our evenings are very exciting) I subscribe to the Marie Kondo method of folding which allows you to stack clothing vertically like this:</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/previews/full/IMG_20200418_070421408.jpg" alt="Zoom IMG_20200418_070421408.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg</a>)</p>
<p>Not even leaning against the stairs!&nbsp;4.76 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
then it's easy to pick up the stack and place it nicely in the drawer so that you can see every shirt you want and quickly pull it out without disturbing the others.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/previews/full/IMG_20200418_070443459.jpg" alt="Zoom IMG_20200418_070443459.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg</a>)</p>
<p>Nice and neat 👌&nbsp;3.05 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
However, as you might have guessed, children are not actually that good at keeping things nice and neat. quickly after putting the clothing into the drawer... things turn to chaos.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/previews/full/IMG_20200418_065602014.jpg" alt="Zoom IMG_20200418_065602014.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg</a>)</p>
<p>Oh no... 😱&nbsp;2.41 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/previews/full/IMG_20200505_073005992.jpg" alt="Zoom IMG_20200505_073005992.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg</a>)</p>
<p>Later&nbsp;4.24 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/previews/full/IMG_20200505_200416513.jpg" alt="Zoom IMG_20200505_200416513.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg</a>)</p>
<p>Most recent&nbsp;3.58 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
Generally, we try to keep the shirts on one side and the pants on the other&nbsp;<em>but</em>&nbsp;when the kids are in a&nbsp;<em><strong>hurry</strong></em>&nbsp;they quickly come unfolded and pile up on each other. Because things are on top of each other and there's no division between the different types of clothing you have to&nbsp;<em><strong>dig</strong></em>*&nbsp;in order to find the thing that you wish to wear*.</p>
<p>The other thing that happens is&nbsp;**as soon the drawer is messy&nbsp;**<em><strong>that becomes the status quo</strong></em>&nbsp;and whenever we give them clothing to put away they throw it in without any regard to our nice folding. 😫</p>
<p>You may say, "<em>well that's just how kids are! They don't care that much about things being neat and tidy"</em>, and to some degree that's true, but I would argue that it's actually just a design problem. Here is the top drawer of the kids clothing&nbsp;</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/previews/full/IMG_20200418_065619399.jpg" alt="Zoom IMG_20200418_065619399.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg</a>)</p>
<p>This is the natural state, without me fixing it up for the picture&nbsp;2.49 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/previews/full/IMG_20200430_072445982.jpg" alt="Zoom IMG_20200430_072445982.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg</a>)</p>
<p>Same drawer, weeks later&nbsp;3.39 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/84399d86-8f3e-11ea-82a9-a0369f740dfa/previews/full/IMG_20200505_200424407.jpg" alt="Zoom IMG_20200505_200424407.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/84399d86-8f3e (truncated)

10:45:07.410 [debug] l:len=19

10:45:07.410 [debug] l:buf=681:<h1>Messy drawer of communication</h1>
<p>There's a lot of laundry in a 4 kid family so I often fold up the kids' clothes and put it next to their door while they're sleeping. (Our evenings are very exciting) I subscribe to the Marie Kondo method of folding which allows you to stack clothing vertically like this:</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/previews/full/IMG_20200418_070421408.jpg" alt="Zoom IMG_20200418_070421408.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg</a>)</p>
<p>Not even leaning against the stairs!&nbsp;4.76 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
then it's easy to pick up the stack and place it nicely in the drawer so that you can see every shirt you want and quickly pull it out without disturbing the others.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/previews/full/IMG_20200418_070443459.jpg" alt="Zoom IMG_20200418_070443459.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg</a>)</p>
<p>Nice and neat 👌&nbsp;3.05 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
However, as you might have guessed, children are not actually that good at keeping things nice and neat. quickly after putting the clothing into the drawer... things turn to chaos.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/previews/full/IMG_20200418_065602014.jpg" alt="Zoom IMG_20200418_065602014.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg</a>)</p>
<p>Oh no... 😱&nbsp;2.41 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/previews/full/IMG_20200505_073005992.jpg" alt="Zoom IMG_20200505_073005992.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg</a>)</p>
<p>Later&nbsp;4.24 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/previews/full/IMG_20200505_200416513.jpg" alt="Zoom IMG_20200505_200416513.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg</a>)</p>
<p>Most recent&nbsp;3.58 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
Generally, we try to keep the shirts on one side and the pants on the other&nbsp;<em>but</em>&nbsp;when the kids are in a&nbsp;<em><strong>hurry</strong></em>&nbsp;they quickly come unfolded and pile up on each other. Because things are on top of each other and there's no division between the different types of clothing you have to&nbsp;<em><strong>dig</strong></em>*&nbsp;in order to find the thing that you wish to wear*.</p>
<p>The other thing that happens is&nbsp;**as soon the drawer is messy&nbsp;**<em><strong>that becomes the status quo</strong></em>&nbsp;and whenever we give them clothing to put away they throw it in without any regard to our nice folding. 😫</p>
<p>You may say, "<em>well that's just how kids are! They don't care that much about things being neat and tidy"</em>, and to some degree that's true, but I would argue that it's actually just a design problem. Here is the top drawer of the kids clothing&nbsp;</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/previews/full/IMG_20200418_065619399.jpg" alt="Zoom IMG_20200418_065619399.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg</a>)</p>
<p>This is the natural state, without me fixing it up for the picture&nbsp;2.49 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/previews/full/IMG_20200430_072445982.jpg" alt="Zoom IMG_20200430_072445982.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg</a>)</p>
<p>Same drawer, weeks later&nbsp;3.39 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/84399d86-8f3e-11ea-82a9-a0369f740dfa/previews/full/IMG_20200505_200424407.jpg" alt="Zoom IMG_20200505_200424407.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/84399d86-8f3e- (truncated)

10:45:07.410 [debug] l:len=196

10:45:07.410 [debug] l:buf=81:<h1>Messy drawer of communication</h1>
<p>There's a lot of laundry in a 4 kid family so I often fold up the kids' clothes and put it next to their door while they're sleeping. (Our evenings are very exciting) I subscribe to the Marie Kondo method of folding which allows you to stack clothing vertically like this:</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/previews/full/IMG_20200418_070421408.jpg" alt="Zoom IMG_20200418_070421408.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg</a>)</p>
<p>Not even leaning against the stairs!&nbsp;4.76 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
then it's easy to pick up the stack and place it nicely in the drawer so that you can see every shirt you want and quickly pull it out without disturbing the others.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/previews/full/IMG_20200418_070443459.jpg" alt="Zoom IMG_20200418_070443459.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg</a>)</p>
<p>Nice and neat 👌&nbsp;3.05 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
However, as you might have guessed, children are not actually that good at keeping things nice and neat. quickly after putting the clothing into the drawer... things turn to chaos.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/previews/full/IMG_20200418_065602014.jpg" alt="Zoom IMG_20200418_065602014.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg</a>)</p>
<p>Oh no... 😱&nbsp;2.41 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/previews/full/IMG_20200505_073005992.jpg" alt="Zoom IMG_20200505_073005992.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg</a>)</p>
<p>Later&nbsp;4.24 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/previews/full/IMG_20200505_200416513.jpg" alt="Zoom IMG_20200505_200416513.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg</a>)</p>
<p>Most recent&nbsp;3.58 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
Generally, we try to keep the shirts on one side and the pants on the other&nbsp;<em>but</em>&nbsp;when the kids are in a&nbsp;<em><strong>hurry</strong></em>&nbsp;they quickly come unfolded and pile up on each other. Because things are on top of each other and there's no division between the different types of clothing you have to&nbsp;<em><strong>dig</strong></em>*&nbsp;in order to find the thing that you wish to wear*.</p>
<p>The other thing that happens is&nbsp;**as soon the drawer is messy&nbsp;**<em><strong>that becomes the status quo</strong></em>&nbsp;and whenever we give them clothing to put away they throw it in without any regard to our nice folding. 😫</p>
<p>You may say, "<em>well that's just how kids are! They don't care that much about things being neat and tidy"</em>, and to some degree that's true, but I would argue that it's actually just a design problem. Here is the top drawer of the kids clothing&nbsp;</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/previews/full/IMG_20200418_065619399.jpg" alt="Zoom IMG_20200418_065619399.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg</a>)</p>
<p>This is the natural state, without me fixing it up for the picture&nbsp;2.49 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/previews/full/IMG_20200430_072445982.jpg" alt="Zoom IMG_20200430_072445982.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg</a>)</p>
<p>Same drawer, weeks later&nbsp;3.39 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/84399d86-8f3e-11ea-82a9-a0369f740dfa/previews/full/IMG_20200505_200424407.jpg" alt="Zoom IMG_20200505_200424407.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/84399d86-8f3e-1 (truncated)

10:45:07.410 [debug] l:len=1968

10:45:07.410 [debug] l:buf=1:<h1>Messy drawer of communication</h1>
<p>There's a lot of laundry in a 4 kid family so I often fold up the kids' clothes and put it next to their door while they're sleeping. (Our evenings are very exciting) I subscribe to the Marie Kondo method of folding which allows you to stack clothing vertically like this:</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/previews/full/IMG_20200418_070421408.jpg" alt="Zoom IMG_20200418_070421408.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg</a>)</p>
<p>Not even leaning against the stairs!&nbsp;4.76 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4b07bcea-8175-11ea-b0f8-a0369f740da4/download/IMG_20200418_070421408.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
then it's easy to pick up the stack and place it nicely in the drawer so that you can see every shirt you want and quickly pull it out without disturbing the others.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/previews/full/IMG_20200418_070443459.jpg" alt="Zoom IMG_20200418_070443459.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg</a>)</p>
<p>Nice and neat 👌&nbsp;3.05 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/4064c8e6-8175-11ea-8563-a0369f740db3/download/IMG_20200418_070443459.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
However, as you might have guessed, children are not actually that good at keeping things nice and neat. quickly after putting the clothing into the drawer... things turn to chaos.</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/previews/full/IMG_20200418_065602014.jpg" alt="Zoom IMG_20200418_065602014.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg</a>)</p>
<p>Oh no... 😱&nbsp;2.41 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/b1bb1662-8175-11ea-bca6-a0369f740fe3/download/IMG_20200418_065602014.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/previews/full/IMG_20200505_073005992.jpg" alt="Zoom IMG_20200505_073005992.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg</a>)</p>
<p>Later&nbsp;4.24 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/1537402c-8f3f-11ea-a8a9-a0369f740db1/download/IMG_20200505_073005992.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/previews/full/IMG_20200505_200416513.jpg" alt="Zoom IMG_20200505_200416513.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg</a>)</p>
<p>Most recent&nbsp;3.58 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/2830b5c8-8f3f-11ea-a2b9-ecf4bbd72a88/download/IMG_20200505_200416513.jpg?attachment=true" rel="noopener noreferrer">Download</a><br>
Generally, we try to keep the shirts on one side and the pants on the other&nbsp;<em>but</em>&nbsp;when the kids are in a&nbsp;<em><strong>hurry</strong></em>&nbsp;they quickly come unfolded and pile up on each other. Because things are on top of each other and there's no division between the different types of clothing you have to&nbsp;<em><strong>dig</strong></em>*&nbsp;in order to find the thing that you wish to wear*.</p>
<p>The other thing that happens is&nbsp;**as soon the drawer is messy&nbsp;**<em><strong>that becomes the status quo</strong></em>&nbsp;and whenever we give them clothing to put away they throw it in without any regard to our nice folding. 😫</p>
<p>You may say, "<em>well that's just how kids are! They don't care that much about things being neat and tidy"</em>, and to some degree that's true, but I would argue that it's actually just a design problem. Here is the top drawer of the kids clothing&nbsp;</p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/previews/full/IMG_20200418_065619399.jpg" alt="Zoom IMG_20200418_065619399.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg</a>)</p>
<p>This is the natural state, without me fixing it up for the picture&nbsp;2.49 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/eacc17b6-8176-11ea-8de3-a0369f740fe3/download/IMG_20200418_065619399.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/previews/full/IMG_20200430_072445982.jpg" alt="Zoom IMG_20200430_072445982.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg</a>)</p>
<p>Same drawer, weeks later&nbsp;3.39 MB&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg" rel="noopener noreferrer">View full-size</a>&nbsp;<a href="https://storage.3.basecamp.com/4495901/blobs/5d36a028-8ae6-11ea-9309-ecf4bbd6f9a0/download/IMG_20200430_072445982.jpg?attachment=true" rel="noopener noreferrer">Download</a></p>
<p>[</p>
<p><img src="https://preview.3.basecamp.com/4495901/blobs/84399d86-8f3e-11ea-82a9-a0369f740dfa/previews/full/IMG_20200505_200424407.jpg" alt="Zoom IMG_20200505_200424407.jpg"></p>
<p>](<a href="https://storage.3.basecamp.com/4495901/blobs/84399d86-8f3e-11 (truncated)

10:45:07.410 [debug] l:len=

10:45:07.410 [debug] l:buf empty

10:45:07.410 [debug] l:len=

10:45:07.410 [debug] l:buf=302:<h1>chatroom-hamster-wheel</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>


10:45:07.410 [debug] l:len=3

10:45:07.410 [debug] l:buf=02:<h1>chatroom-hamster-wheel</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>


10:45:07.410 [debug] l:len=30

10:45:07.410 [debug] l:buf=2:<h1>chatroom-hamster-wheel</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/article--is-group-chat-making-you-sweat" rel="noopener noreferrer">Article--is group chat making you sweat</a></li>
</ul>


10:45:07.410 [debug] l:len=

10:45:07.410 [debug] l:buf empty

10:45:07.410 [debug] l:len=

10:45:07.410 [debug] l:buf=56:<p>Idols</p>
<p>What idols are there in our life's?</p>


10:45:07.410 [debug] l:len=5

10:45:07.410 [debug] l:buf=6:<p>Idols</p>
<p>What idols are there in our life's?</p>


10:45:07.410 [debug] l:len=

10:45:07.410 [debug] l:buf empty

10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf=3479:<h1>Information Availability V</h1>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-availability.md" rel="noopener noreferrer">Data Availability</a> ⤴</h2>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p>**</p>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-discoverability.md" rel="noopener noreferrer">Data Discoverability</a> ⤴</h2>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p>**</p>
<h1>Example</h1>
<hr>
<h2><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable.md" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a> ⤴</h2>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/wisdom-and-knowledge" rel="noopener noreferrer">Wisdom and knowledge</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>


10:45:07.411 [debug] l:len=3

10:45:07.411 [debug] l:buf=479:<h1>Information Availability V</h1>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-availability.md" rel="noopener noreferrer">Data Availability</a> ⤴</h2>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p>**</p>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-discoverability.md" rel="noopener noreferrer">Data Discoverability</a> ⤴</h2>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p>**</p>
<h1>Example</h1>
<hr>
<h2><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable.md" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a> ⤴</h2>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/wisdom-and-knowledge" rel="noopener noreferrer">Wisdom and knowledge</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>


10:45:07.411 [debug] l:len=34

10:45:07.411 [debug] l:buf=79:<h1>Information Availability V</h1>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-availability.md" rel="noopener noreferrer">Data Availability</a> ⤴</h2>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p>**</p>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-discoverability.md" rel="noopener noreferrer">Data Discoverability</a> ⤴</h2>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p>**</p>
<h1>Example</h1>
<hr>
<h2><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable.md" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a> ⤴</h2>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/wisdom-and-knowledge" rel="noopener noreferrer">Wisdom and knowledge</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>


10:45:07.411 [debug] l:len=347

10:45:07.411 [debug] l:buf=9:<h1>Information Availability V</h1>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-availability.md" rel="noopener noreferrer">Data Availability</a> ⤴</h2>
<p>simply means that you can technically reach the data without running into permission walls.</p>
<hr>
<p>**</p>
<ul>
<li>**</li>
</ul>
<hr>
<h2><a href="http://localhost:5000/data-discoverability.md" rel="noopener noreferrer">Data Discoverability</a> ⤴</h2>
<p>means that you can find information that you didn't know you wanted to know about.</p>
<hr>
<p>**</p>
<h1>Example</h1>
<hr>
<h2><a href="http://localhost:5000/slack-makes-information-available-but-not-discoverable.md" rel="noopener noreferrer">Slack makes information Available but not Discoverable</a> ⤴</h2>
<p>A lot of Slack's talk says that it's far more <a href="http://localhost:5000/transperency" rel="noopener noreferrer">transparent</a> but this is only half true. For true transparency you need <strong>both</strong> <a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a> and <a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a>.</p>
<h2><a href="http://localhost:5000/data-availability" rel="noopener noreferrer">Data Availability</a></h2>
<p>If you know a small piece of common information you what you want to find, and there's a good search term you can think of chances are you'll find it in Slack! Like if you want to know, "When's the date that I need to register for health insurance?" Chances are if you search for "insurance" you'll find it.</p>
<h2><a href="http://localhost:5000/data-discoverability" rel="noopener noreferrer">Data Discoverability</a></h2>
<p>If there's a piece of information that you don't know you want to know about, such as rumblings of the company starting on a new app, or a quiet announcement that a co-worker is sick, or another team brainstorming ideas that you might want to weigh in on.</p>
<p>The only way is to <a href="http://localhost:5000/force-the-user-to-read-everything" rel="noopener noreferrer">read everyting</a> driven by a strong sense of <a href="http://localhost:5000/fomo" rel="noopener noreferrer">FOMO</a>. There's no, "Top headlines" for <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> despite it being a "<a href="http://localhost:5000/newsfeed" rel="noopener noreferrer">newsfeed</a>". This leads to an</p>
<hr>
<hr>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Slack's channels live forever</a></li>
<li><a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a></li>
<li><a href="http://localhost:5000/wisdom-and-knowledge" rel="noopener noreferrer">Wisdom and knowledge</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/transperency" rel="noopener noreferrer">transperency</a></li>
</ul>


10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf empty

10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf=326:<h1>Procrastination</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.411 [debug] l:len=3

10:45:07.411 [debug] l:buf=26:<h1>Procrastination</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.411 [debug] l:len=32

10:45:07.411 [debug] l:buf=6:<h1>Procrastination</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/task-faking" rel="noopener noreferrer">Task Faking</a></li>
<li><a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a></li>
</ul>


10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf empty

10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf=358:<h1>convexity</h1>
<blockquote>
<p>Convexity is where you have a bigger upside than downside, and the downside is certain and the upside is uncertain. <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> via <a href="https://twitter.com/rjs/status/1296582715274223616" rel="noopener noreferrer">Twitter</a></p>
</blockquote>


10:45:07.411 [debug] l:len=3

10:45:07.411 [debug] l:buf=58:<h1>convexity</h1>
<blockquote>
<p>Convexity is where you have a bigger upside than downside, and the downside is certain and the upside is uncertain. <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> via <a href="https://twitter.com/rjs/status/1296582715274223616" rel="noopener noreferrer">Twitter</a></p>
</blockquote>


10:45:07.411 [debug] l:len=35

10:45:07.411 [debug] l:buf=8:<h1>convexity</h1>
<blockquote>
<p>Convexity is where you have a bigger upside than downside, and the downside is certain and the upside is uncertain. <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> via <a href="https://twitter.com/rjs/status/1296582715274223616" rel="noopener noreferrer">Twitter</a></p>
</blockquote>


10:45:07.411 [debug] l:len=

10:45:07.411 [debug] l:buf empty

10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf=305:<h1>Pasted image 20200922163504</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.412 [debug] l:len=3

10:45:07.412 [debug] l:buf=05:<h1>Pasted image 20200922163504</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.412 [debug] l:len=30

10:45:07.412 [debug] l:buf=5:<h1>Pasted image 20200922163504</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf empty

10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf=378:<h1>Weekly &amp; Daily Goals System</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
<li><a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a></li>
</ul>


10:45:07.412 [debug] l:len=3

10:45:07.412 [debug] l:buf=78:<h1>Weekly &amp; Daily Goals System</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
<li><a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a></li>
</ul>


10:45:07.412 [debug] l:len=37

10:45:07.412 [debug] l:buf=8:<h1>Weekly &amp; Daily Goals System</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/weekly-&amp;-daily-goals" rel="noopener noreferrer">Weekly &amp; Daily Goals</a></li>
<li><a href="http://localhost:5000/weekly-goals" rel="noopener noreferrer">Weekly goals</a></li>
</ul>


10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf empty

10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf=900:<h1>Portfolio of Options</h1>
<p>The idea of a <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> being changed instead into a "Portfolio of Options" is very freeing because you don't have to rank them, do all of them, have them compete with each other, realize that the exciting or meaningful work is months away, rather you can just keep everything as a possibility till the moment you need a new project <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a>.</p>
<p>Ref: <a href="https://twitter.com/Icancclearynow/status/1301632115721682945" rel="noopener noreferrer">https://twitter.com/Icancclearynow/status/1301632115721682945</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.412 [debug] l:len=9

10:45:07.412 [debug] l:buf=00:<h1>Portfolio of Options</h1>
<p>The idea of a <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> being changed instead into a "Portfolio of Options" is very freeing because you don't have to rank them, do all of them, have them compete with each other, realize that the exciting or meaningful work is months away, rather you can just keep everything as a possibility till the moment you need a new project <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a>.</p>
<p>Ref: <a href="https://twitter.com/Icancclearynow/status/1301632115721682945" rel="noopener noreferrer">https://twitter.com/Icancclearynow/status/1301632115721682945</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.412 [debug] l:len=90

10:45:07.412 [debug] l:buf=0:<h1>Portfolio of Options</h1>
<p>The idea of a <a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a> being changed instead into a "Portfolio of Options" is very freeing because you don't have to rank them, do all of them, have them compete with each other, realize that the exciting or meaningful work is months away, rather you can just keep everything as a possibility till the moment you need a new project <a href="http://localhost:5000/pitches" rel="noopener noreferrer">pitch</a>.</p>
<p>Ref: <a href="https://twitter.com/Icancclearynow/status/1301632115721682945" rel="noopener noreferrer">https://twitter.com/Icancclearynow/status/1301632115721682945</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.412 [debug] l:len=

10:45:07.412 [debug] l:buf empty

10:45:07.412 [debug] l:len=

10:45:07.413 [debug] l:buf=940:<h1>effective</h1>
<p>The opposite of productive.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.413 [debug] l:len=9

10:45:07.413 [debug] l:buf=40:<h1>effective</h1>
<p>The opposite of productive.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.413 [debug] l:len=94

10:45:07.413 [debug] l:buf=0:<h1>effective</h1>
<p>The opposite of productive.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/basecamp-guide-to-internal-communication" rel="noopener noreferrer">Basecamp Guide to Internal Communication</a></li>
<li><a href="http://localhost:5000/elm-v.s.-javascript,-a-honest-look" rel="noopener noreferrer">Elm V.S. JavaScript, a honest look</a></li>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/why-reasonml-evangelism-isn't-working" rel="noopener noreferrer">Why ReasonML Evangelism isn't working</a></li>
</ul>


10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf empty

10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf=1686:<h1>How we got out of Review Rocket</h1>
<h2>Background</h2>
<p>When we first built MindFlayer we had the question</p>
<blockquote>
<p>Do we put our data in our own database? Or do we put it in Review Rocket</p>
</blockquote>
<p>Ultimately we chose to put it into Review Rocket because it helped us to join to the Organization table to verify that the widget is never not connected to an Org and so we could join to Locations which lets us be more normalized.</p>
<p>Normalized means that any piece of data is only stored in one place so when that place updates, all the other places are consistent. For example <strong>if you change the name of a Location, that change will reflect everywhere immediately.</strong> This is a really nice property to have, however it comes at a cost...</p>
<h2>CAP choices 🧢</h2>
<p>Normalized is great, and consistency is great, but it comes at the cost of Availability. So the CAP theorem says that out of these 3 options:</p>
<ul>
<li>C: Consistency, all data is in sync at all times. Meaning if you read the same piece of data from two places it will match up (Location's name)</li>
<li>A: Availability, you can get that data at any point in time, even during a network partition.</li>
<li>P: Partition Tolerance, if the network fails and your databases can't talk to each other, things can still be written and read (maybe not all the data)</li>
</ul>
<p>You can only choose 2. We have chose C and P. However it wasn't the right choice for our needs.</p>
<h2>Being more "Abnormal"</h2>
<p>Turns out Webchat really needs <strong>availibility</strong></p>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.413 [debug] l:len=1

10:45:07.413 [debug] l:buf=686:<h1>How we got out of Review Rocket</h1>
<h2>Background</h2>
<p>When we first built MindFlayer we had the question</p>
<blockquote>
<p>Do we put our data in our own database? Or do we put it in Review Rocket</p>
</blockquote>
<p>Ultimately we chose to put it into Review Rocket because it helped us to join to the Organization table to verify that the widget is never not connected to an Org and so we could join to Locations which lets us be more normalized.</p>
<p>Normalized means that any piece of data is only stored in one place so when that place updates, all the other places are consistent. For example <strong>if you change the name of a Location, that change will reflect everywhere immediately.</strong> This is a really nice property to have, however it comes at a cost...</p>
<h2>CAP choices 🧢</h2>
<p>Normalized is great, and consistency is great, but it comes at the cost of Availability. So the CAP theorem says that out of these 3 options:</p>
<ul>
<li>C: Consistency, all data is in sync at all times. Meaning if you read the same piece of data from two places it will match up (Location's name)</li>
<li>A: Availability, you can get that data at any point in time, even during a network partition.</li>
<li>P: Partition Tolerance, if the network fails and your databases can't talk to each other, things can still be written and read (maybe not all the data)</li>
</ul>
<p>You can only choose 2. We have chose C and P. However it wasn't the right choice for our needs.</p>
<h2>Being more "Abnormal"</h2>
<p>Turns out Webchat really needs <strong>availibility</strong></p>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.413 [debug] l:len=16

10:45:07.413 [debug] l:buf=86:<h1>How we got out of Review Rocket</h1>
<h2>Background</h2>
<p>When we first built MindFlayer we had the question</p>
<blockquote>
<p>Do we put our data in our own database? Or do we put it in Review Rocket</p>
</blockquote>
<p>Ultimately we chose to put it into Review Rocket because it helped us to join to the Organization table to verify that the widget is never not connected to an Org and so we could join to Locations which lets us be more normalized.</p>
<p>Normalized means that any piece of data is only stored in one place so when that place updates, all the other places are consistent. For example <strong>if you change the name of a Location, that change will reflect everywhere immediately.</strong> This is a really nice property to have, however it comes at a cost...</p>
<h2>CAP choices 🧢</h2>
<p>Normalized is great, and consistency is great, but it comes at the cost of Availability. So the CAP theorem says that out of these 3 options:</p>
<ul>
<li>C: Consistency, all data is in sync at all times. Meaning if you read the same piece of data from two places it will match up (Location's name)</li>
<li>A: Availability, you can get that data at any point in time, even during a network partition.</li>
<li>P: Partition Tolerance, if the network fails and your databases can't talk to each other, things can still be written and read (maybe not all the data)</li>
</ul>
<p>You can only choose 2. We have chose C and P. However it wasn't the right choice for our needs.</p>
<h2>Being more "Abnormal"</h2>
<p>Turns out Webchat really needs <strong>availibility</strong></p>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.413 [debug] l:len=168

10:45:07.413 [debug] l:buf=6:<h1>How we got out of Review Rocket</h1>
<h2>Background</h2>
<p>When we first built MindFlayer we had the question</p>
<blockquote>
<p>Do we put our data in our own database? Or do we put it in Review Rocket</p>
</blockquote>
<p>Ultimately we chose to put it into Review Rocket because it helped us to join to the Organization table to verify that the widget is never not connected to an Org and so we could join to Locations which lets us be more normalized.</p>
<p>Normalized means that any piece of data is only stored in one place so when that place updates, all the other places are consistent. For example <strong>if you change the name of a Location, that change will reflect everywhere immediately.</strong> This is a really nice property to have, however it comes at a cost...</p>
<h2>CAP choices 🧢</h2>
<p>Normalized is great, and consistency is great, but it comes at the cost of Availability. So the CAP theorem says that out of these 3 options:</p>
<ul>
<li>C: Consistency, all data is in sync at all times. Meaning if you read the same piece of data from two places it will match up (Location's name)</li>
<li>A: Availability, you can get that data at any point in time, even during a network partition.</li>
<li>P: Partition Tolerance, if the network fails and your databases can't talk to each other, things can still be written and read (maybe not all the data)</li>
</ul>
<p>You can only choose 2. We have chose C and P. However it wasn't the right choice for our needs.</p>
<h2>Being more "Abnormal"</h2>
<p>Turns out Webchat really needs <strong>availibility</strong></p>
<p><a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf empty

10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf=488:<h1>Infinite Scrolling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.413 [debug] l:len=4

10:45:07.413 [debug] l:buf=88:<h1>Infinite Scrolling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.413 [debug] l:len=48

10:45:07.413 [debug] l:buf=8:<h1>Infinite Scrolling</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></li>
<li><a href="http://localhost:5000/reverse-chronological-order" rel="noopener noreferrer">Reverse Chronological Order</a></li>
<li><a href="http://localhost:5000/slack-threads" rel="noopener noreferrer">Slack Threads</a></li>
</ul>


10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf empty

10:45:07.413 [debug] l:len=

10:45:07.413 [debug] l:buf=311:<h1>Estimation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.413 [debug] l:len=3

10:45:07.413 [debug] l:buf=11:<h1>Estimation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.414 [debug] l:len=31

10:45:07.414 [debug] l:buf=1:<h1>Estimation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf empty

10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf=2523:<h1>Doing things the fun way</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite emphatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorized that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been <em>more fun</em>, but it turns out putting a single toy away one-by-one slowly rather than grabbing handfuls as fast as I could was a lot slower. Despite this I had a really hard time seeing <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">this productivity gap</a>.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back <em>just in time to see me put a toy in the bucket</em> (despite the rest of the room looked exactly the same).</p>
<p>While this may seem to be only a childish feeling, kids are easily distracted and use fun as their fuel but I believe Adults aren't all that different. We <em>all</em> like to do things the <em>fun way</em> rather than the <strong>productive way</strong>, especially when we <em><strong>don't realize</strong> it's any slower.</em> And we probably won't because <strong>time passes more quickly when we're having fun</strong>.</p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>, <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, <a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></p>
<p>#anecdotes</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.414 [debug] l:len=2

10:45:07.414 [debug] l:buf=523:<h1>Doing things the fun way</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite emphatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorized that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been <em>more fun</em>, but it turns out putting a single toy away one-by-one slowly rather than grabbing handfuls as fast as I could was a lot slower. Despite this I had a really hard time seeing <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">this productivity gap</a>.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back <em>just in time to see me put a toy in the bucket</em> (despite the rest of the room looked exactly the same).</p>
<p>While this may seem to be only a childish feeling, kids are easily distracted and use fun as their fuel but I believe Adults aren't all that different. We <em>all</em> like to do things the <em>fun way</em> rather than the <strong>productive way</strong>, especially when we <em><strong>don't realize</strong> it's any slower.</em> And we probably won't because <strong>time passes more quickly when we're having fun</strong>.</p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>, <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, <a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></p>
<p>#anecdotes</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.414 [debug] l:len=25

10:45:07.414 [debug] l:buf=23:<h1>Doing things the fun way</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite emphatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorized that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been <em>more fun</em>, but it turns out putting a single toy away one-by-one slowly rather than grabbing handfuls as fast as I could was a lot slower. Despite this I had a really hard time seeing <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">this productivity gap</a>.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back <em>just in time to see me put a toy in the bucket</em> (despite the rest of the room looked exactly the same).</p>
<p>While this may seem to be only a childish feeling, kids are easily distracted and use fun as their fuel but I believe Adults aren't all that different. We <em>all</em> like to do things the <em>fun way</em> rather than the <strong>productive way</strong>, especially when we <em><strong>don't realize</strong> it's any slower.</em> And we probably won't because <strong>time passes more quickly when we're having fun</strong>.</p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>, <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, <a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></p>
<p>#anecdotes</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.414 [debug] l:len=252

10:45:07.414 [debug] l:buf=3:<h1>Doing things the fun way</h1>
<p>I loved playing with toys as a kid, however when I was done I hated having to put them away. It was so boring, yet my parents seemed to be quite emphatic about it's importance, stepping on legos and all. So I came up with a compromise! <strong>What if I could play with my toys <em>while</em> I put them away?!?</strong> My main method would be to would put a toy on a racecar then race it around the room ultimately placing it in the toy bin. I theorized that I could repeat this process till all the toys were put away and would enjoy myself much more.</p>
<p>My parents were not too impressed though. My productivity when it came to putting away toys may have been <em>more fun</em>, but it turns out putting a single toy away one-by-one slowly rather than grabbing handfuls as fast as I could was a lot slower. Despite this I had a really hard time seeing <a href="http://localhost:5000/busy-and-fun-are-not-productive" rel="noopener noreferrer">this productivity gap</a>.</p>
<p>Not only that, but when you're having fun it's hard not to get distracted by the coolness of the toy I was putting away. Hence the mystery was solved of why my parents would come back <em>just in time to see me put a toy in the bucket</em> (despite the rest of the room looked exactly the same).</p>
<p>While this may seem to be only a childish feeling, kids are easily distracted and use fun as their fuel but I believe Adults aren't all that different. We <em>all</em> like to do things the <em>fun way</em> rather than the <strong>productive way</strong>, especially when we <em><strong>don't realize</strong> it's any slower.</em> And we probably won't because <strong>time passes more quickly when we're having fun</strong>.</p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/dark-pattern" rel="noopener noreferrer">Dark Pattern</a>, <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a>, <a href="http://localhost:5000/productivity" rel="noopener noreferrer">Productivity</a></p>
<p>#anecdotes</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/the-mystery-in-your-inbox-slack's-notification-v.s.-basecamp" rel="noopener noreferrer">The mystery in your inbox (Slack's notification V.S. Basecamp)</a></li>
</ul>


10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf empty

10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf=103:<p>11:42am we left from Idaho it said we would get there in 3½ hours</p>
<p>Just stopped for gas.</p>


10:45:07.414 [debug] l:len=1

10:45:07.414 [debug] l:buf=03:<p>11:42am we left from Idaho it said we would get there in 3½ hours</p>
<p>Just stopped for gas.</p>


10:45:07.414 [debug] l:len=10

10:45:07.414 [debug] l:buf=3:<p>11:42am we left from Idaho it said we would get there in 3½ hours</p>
<p>Just stopped for gas.</p>


10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf empty

10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf=86:<h1>Scott and Brad Smith</h1>
<p>Scott and Brad Smith
356-8500</p>
<p>Tags:
taxes</p>


10:45:07.414 [debug] l:len=8

10:45:07.414 [debug] l:buf=6:<h1>Scott and Brad Smith</h1>
<p>Scott and Brad Smith
356-8500</p>
<p>Tags:
taxes</p>


10:45:07.414 [debug] l:len=

10:45:07.414 [debug] l:buf empty

10:45:07.414 [debug] l:len=

10:45:07.415 [debug] l:buf=289:<h1>Tagging</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.415 [debug] l:len=2

10:45:07.415 [debug] l:buf=89:<h1>Tagging</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.415 [debug] l:len=28

10:45:07.415 [debug] l:buf=9:<h1>Tagging</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.415 [debug] l:len=

10:45:07.415 [debug] l:buf empty

10:45:07.415 [debug] l:len=

10:45:07.415 [debug] l:buf=79:<h1>one-on-one</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.415 [debug] l:len=7

10:45:07.415 [debug] l:buf=9:<h1>one-on-one</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.415 [debug] l:len=

10:45:07.415 [debug] l:buf empty

10:45:07.415 [debug] l:len=

10:45:07.415 [debug] l:buf=1140:<h1>Backlogs</h1>
<p>An idea in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> and even <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> on a whole where you keep a long list of <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> that you will "eventually" get to.</p>
<p>One major problem is when <a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a>.</p>
<p>These can cause <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></p>
<p>The alternative in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> is to <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.415 [debug] l:len=1

10:45:07.415 [debug] l:buf=140:<h1>Backlogs</h1>
<p>An idea in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> and even <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> on a whole where you keep a long list of <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> that you will "eventually" get to.</p>
<p>One major problem is when <a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a>.</p>
<p>These can cause <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></p>
<p>The alternative in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> is to <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.415 [debug] l:len=11

10:45:07.415 [debug] l:buf=40:<h1>Backlogs</h1>
<p>An idea in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> and even <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> on a whole where you keep a long list of <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> that you will "eventually" get to.</p>
<p>One major problem is when <a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a>.</p>
<p>These can cause <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></p>
<p>The alternative in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> is to <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.415 [debug] l:len=114

10:45:07.415 [debug] l:buf=0:<h1>Backlogs</h1>
<p>An idea in <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> and even <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a> on a whole where you keep a long list of <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> that you will "eventually" get to.</p>
<p>One major problem is when <a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a>.</p>
<p>These can cause <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></p>
<p>The alternative in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> is to <a href="http://localhost:5000/just-say-no" rel="noopener noreferrer">Just Say No</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
<li><a href="http://localhost:5000/anyone-can-throw-in-a-ticket" rel="noopener noreferrer">anyone can throw in a ticket</a></li>
</ul>


10:45:07.415 [debug] l:len=

10:45:07.415 [debug] l:buf empty

10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf=327:<h1>Ways to wow with Elm</h1>
<ul>
<li>debugger</li>
<li>compiler errors</li>
<li>no runtime exceptions</li>
<li>maintainable code</li>
<li>how easy to test</li>
<li>how easy to learn</li>
<li>how to do svgs​?</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
</ul>


10:45:07.416 [debug] l:len=3

10:45:07.416 [debug] l:buf=27:<h1>Ways to wow with Elm</h1>
<ul>
<li>debugger</li>
<li>compiler errors</li>
<li>no runtime exceptions</li>
<li>maintainable code</li>
<li>how easy to test</li>
<li>how easy to learn</li>
<li>how to do svgs​?</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
</ul>


10:45:07.416 [debug] l:len=32

10:45:07.416 [debug] l:buf=7:<h1>Ways to wow with Elm</h1>
<ul>
<li>debugger</li>
<li>compiler errors</li>
<li>no runtime exceptions</li>
<li>maintainable code</li>
<li>how easy to test</li>
<li>how easy to learn</li>
<li>how to do svgs​?</li>
</ul>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
</ul>


10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf empty

10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf=185:<h1>History or more powerful than bookmarks</h1>
<p>See this in the gospel library app</p>
<p><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a>,</p>


10:45:07.416 [debug] l:len=1

10:45:07.416 [debug] l:buf=85:<h1>History or more powerful than bookmarks</h1>
<p>See this in the gospel library app</p>
<p><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a>,</p>


10:45:07.416 [debug] l:len=18

10:45:07.416 [debug] l:buf=5:<h1>History or more powerful than bookmarks</h1>
<p>See this in the gospel library app</p>
<p><a href="http://localhost:5000/ux-research" rel="noopener noreferrer">UX research</a>,</p>


10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf empty

10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf=496:<h1>09/03/2017 Law of consecration today</h1>
<p>God wants us to follow the law of consecration today. He doesn't expect us to but tithing and service and everything. The Rich are expected to disperse their funds.</p>
<h2>Elder Quorum - Defend the faith</h2>
<p>Get GroupMe for elders quorum.</p>
<p>Gospel media app lets you make lessons with videos.</p>
<p>What way do I need</p>
<h2>Takeaways</h2>
<p>Bishop</p>
<ol>
<li>Serve</li>
<li>Pray with spice</li>
<li>Read your scriptures</li>
</ol>


10:45:07.416 [debug] l:len=4

10:45:07.416 [debug] l:buf=96:<h1>09/03/2017 Law of consecration today</h1>
<p>God wants us to follow the law of consecration today. He doesn't expect us to but tithing and service and everything. The Rich are expected to disperse their funds.</p>
<h2>Elder Quorum - Defend the faith</h2>
<p>Get GroupMe for elders quorum.</p>
<p>Gospel media app lets you make lessons with videos.</p>
<p>What way do I need</p>
<h2>Takeaways</h2>
<p>Bishop</p>
<ol>
<li>Serve</li>
<li>Pray with spice</li>
<li>Read your scriptures</li>
</ol>


10:45:07.416 [debug] l:len=49

10:45:07.416 [debug] l:buf=6:<h1>09/03/2017 Law of consecration today</h1>
<p>God wants us to follow the law of consecration today. He doesn't expect us to but tithing and service and everything. The Rich are expected to disperse their funds.</p>
<h2>Elder Quorum - Defend the faith</h2>
<p>Get GroupMe for elders quorum.</p>
<p>Gospel media app lets you make lessons with videos.</p>
<p>What way do I need</p>
<h2>Takeaways</h2>
<p>Bishop</p>
<ol>
<li>Serve</li>
<li>Pray with spice</li>
<li>Read your scriptures</li>
</ol>


10:45:07.416 [debug] l:len=

10:45:07.416 [debug] l:buf empty

10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf=1384:<h1>Productivity</h1>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that he thinks it's more of a "feeling".</p>
<p>If you get <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> all day then you'll feel like you never got down and did some <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>. However, if you had most of the day to focus on one task without being pinged with <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s then you'll probably feel productive!</p>
<p>Related: <a href="https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully" rel="noopener noreferrer">https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.417 [debug] l:len=1

10:45:07.417 [debug] l:buf=384:<h1>Productivity</h1>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that he thinks it's more of a "feeling".</p>
<p>If you get <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> all day then you'll feel like you never got down and did some <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>. However, if you had most of the day to focus on one task without being pinged with <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s then you'll probably feel productive!</p>
<p>Related: <a href="https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully" rel="noopener noreferrer">https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.417 [debug] l:len=13

10:45:07.417 [debug] l:buf=84:<h1>Productivity</h1>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that he thinks it's more of a "feeling".</p>
<p>If you get <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> all day then you'll feel like you never got down and did some <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>. However, if you had most of the day to focus on one task without being pinged with <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s then you'll probably feel productive!</p>
<p>Related: <a href="https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully" rel="noopener noreferrer">https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.417 [debug] l:len=138

10:45:07.417 [debug] l:buf=4:<h1>Productivity</h1>
<p><a href="http://localhost:5000/jason-fried" rel="noopener noreferrer">Jason Fried</a> said that he thinks it's more of a "feeling".</p>
<p>If you get <a href="http://localhost:5000/interruptions" rel="noopener noreferrer">interruptions</a> all day then you'll feel like you never got down and did some <a href="http://localhost:5000/deep-work" rel="noopener noreferrer">Deep Work</a>. However, if you had most of the day to focus on one task without being pinged with <a href="http://localhost:5000/notification" rel="noopener noreferrer">notification</a>s then you'll probably feel productive!</p>
<p>Related: <a href="https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully" rel="noopener noreferrer">https://99u.adobe.com/articles/17643/its-not-about-productivity-its-about-living-purposefully</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></li>
<li><a href="http://localhost:5000/the-collector's-fallacy" rel="noopener noreferrer">The Collector's Fallacy</a></li>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf empty

10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf=258:<h1>app that does one thing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=2

10:45:07.417 [debug] l:buf=58:<h1>app that does one thing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=25

10:45:07.417 [debug] l:buf=8:<h1>app that does one thing</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf empty

10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf=805:<h1>busy and fun are not productive</h1>
<p>As humans it's really hard for us to tell busyness from actual productivity. The problem is that busyness is motion, it moves us in a direction... just not the right one. We're climbing a ladder but it's not on the right wall.</p>
<p>"Fun" is also hard to tell from productivity as well because it... feels good! It's like getting the reward before you actually accomplish anything. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> has this problem.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=8

10:45:07.417 [debug] l:buf=05:<h1>busy and fun are not productive</h1>
<p>As humans it's really hard for us to tell busyness from actual productivity. The problem is that busyness is motion, it moves us in a direction... just not the right one. We're climbing a ladder but it's not on the right wall.</p>
<p>"Fun" is also hard to tell from productivity as well because it... feels good! It's like getting the reward before you actually accomplish anything. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> has this problem.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=80

10:45:07.417 [debug] l:buf=5:<h1>busy and fun are not productive</h1>
<p>As humans it's really hard for us to tell busyness from actual productivity. The problem is that busyness is motion, it moves us in a direction... just not the right one. We're climbing a ladder but it's not on the right wall.</p>
<p>"Fun" is also hard to tell from productivity as well because it... feels good! It's like getting the reward before you actually accomplish anything. <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> has this problem.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
</ul>


10:45:07.417 [debug] l:len=

10:45:07.417 [debug] l:buf empty

10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf=4243:<h1>Elm argument</h1>
<p>I know that usually introducing a new language is overkill. This is because the cost of learning a new language isn't worth the benefits you gain. Usually they are more trade offs than benefits anyway.</p>
<p>Elm is different because it has huge benefits with a small learning curve. And the trade-offs are in the right places.</p>
<h2>Elms benefits</h2>
<p>The main three benefits that elm provides over JavaScript is:</p>
<ol>
<li>no runtime exceptions</li>
<li>enforced SemVer</li>
<li>everything being purely functional.</li>
</ol>
<p>Essentially this means that <strong>all of JavaScripts runtime exceptions become compile time errors in Elm.</strong> for instance all of the following things can not happen:</p>
<ul>
<li>dealing with unhandled Null/undefined/NaN is not a function</li>
<li>A library changed their API and only bumped a minor version.</li>
<li>unhandled exceptions being thrown (there are none)</li>
<li>adding a string to a number or other unexpected polymorphism</li>
<li>accessing a key in a object that is not there</li>
<li>refactoring and not finding where all the places you need to change</li>
<li>etc...</li>
</ul>
<p>Think about what this means for us. Less time hunting down bugs means more time making features. <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> also means less tests, with higher reliability.</p>
<p>Tests are also easier to write because all functions are pure in Elm.</p>
<p>Also refactoring is far less error prone because the compiler can find all runtime exceptions. Confident refactoring means it's easier to pay off technical debt</p>
<h2>Elm is easier to learn than JavaScript</h2>
<p>Elm is a very small and focused language designed over 5 years to make front end programming easier. <strong>It's easier to learn because there's far less to learn.</strong> Plus it has tons of overlap with JavaScript and Elixir.</p>
<p>To replace Elm you would have to have the following libraries in JavaScript and use them everywhere:</p>
<ul>
<li>React + write all your prop types</li>
<li>Redux</li>
<li>immutable.js</li>
<li>Babel (plus a ton of extensions)</li>
<li>Lodash</li>
<li>Flow Es lint to pick up the slack</li>
<li>A testing framework like jest or something</li>
<li>redux debugger</li>
<li>perfect code reviewers that find all your runtime exceptions?</li>
</ul>
<p>Using all these libraries in JavaScript is best practice in our company yet it's so hard to get all this setup it usually takes a few days, even with the boiler plate. All this is the default in Elm and feels just add light as a vanilla JavaScript project.</p>
<p>Elm is also easier to learn because it's similar to Elixir due to being functional, having pattern matching, and even having our favorite |&gt; operator.</p>
<p>While we write mostly functional JavaScript at it's core it's still a prototypal OO language with many inparitive parts.</p>
<h2>The costs of Elm</h2>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> does have some costs. The main one would be there's some boiler plate code to interop with JavaScript. This is because Elm requires everything to be immutable and has no null so you have to transform JSON into Elm data structures. However there's tools to automatically transform JSON into Elm decoders. However this is also a benefit because it removes the danger of working with JSON structures that all too often cause runtime exceptions. Elm makes you handle these before you break production, not after.</p>
<p>It also requires you to talk to JavaScript over "ports" which are basically a pub sub style channel. This is because if JavaScript threw any exceptions Elm would lose its policy about no runtime exceptions. While this can seem inconvenient you're trading that for no runtime exceptions which is going to be worth it in the long run.</p>
<h1>Give it a try</h1>
<p>Talk is cheap, a real experiment is the only way to really tell if Elm is right for us.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.418 [debug] l:len=4

10:45:07.418 [debug] l:buf=243:<h1>Elm argument</h1>
<p>I know that usually introducing a new language is overkill. This is because the cost of learning a new language isn't worth the benefits you gain. Usually they are more trade offs than benefits anyway.</p>
<p>Elm is different because it has huge benefits with a small learning curve. And the trade-offs are in the right places.</p>
<h2>Elms benefits</h2>
<p>The main three benefits that elm provides over JavaScript is:</p>
<ol>
<li>no runtime exceptions</li>
<li>enforced SemVer</li>
<li>everything being purely functional.</li>
</ol>
<p>Essentially this means that <strong>all of JavaScripts runtime exceptions become compile time errors in Elm.</strong> for instance all of the following things can not happen:</p>
<ul>
<li>dealing with unhandled Null/undefined/NaN is not a function</li>
<li>A library changed their API and only bumped a minor version.</li>
<li>unhandled exceptions being thrown (there are none)</li>
<li>adding a string to a number or other unexpected polymorphism</li>
<li>accessing a key in a object that is not there</li>
<li>refactoring and not finding where all the places you need to change</li>
<li>etc...</li>
</ul>
<p>Think about what this means for us. Less time hunting down bugs means more time making features. <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> also means less tests, with higher reliability.</p>
<p>Tests are also easier to write because all functions are pure in Elm.</p>
<p>Also refactoring is far less error prone because the compiler can find all runtime exceptions. Confident refactoring means it's easier to pay off technical debt</p>
<h2>Elm is easier to learn than JavaScript</h2>
<p>Elm is a very small and focused language designed over 5 years to make front end programming easier. <strong>It's easier to learn because there's far less to learn.</strong> Plus it has tons of overlap with JavaScript and Elixir.</p>
<p>To replace Elm you would have to have the following libraries in JavaScript and use them everywhere:</p>
<ul>
<li>React + write all your prop types</li>
<li>Redux</li>
<li>immutable.js</li>
<li>Babel (plus a ton of extensions)</li>
<li>Lodash</li>
<li>Flow Es lint to pick up the slack</li>
<li>A testing framework like jest or something</li>
<li>redux debugger</li>
<li>perfect code reviewers that find all your runtime exceptions?</li>
</ul>
<p>Using all these libraries in JavaScript is best practice in our company yet it's so hard to get all this setup it usually takes a few days, even with the boiler plate. All this is the default in Elm and feels just add light as a vanilla JavaScript project.</p>
<p>Elm is also easier to learn because it's similar to Elixir due to being functional, having pattern matching, and even having our favorite |&gt; operator.</p>
<p>While we write mostly functional JavaScript at it's core it's still a prototypal OO language with many inparitive parts.</p>
<h2>The costs of Elm</h2>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> does have some costs. The main one would be there's some boiler plate code to interop with JavaScript. This is because Elm requires everything to be immutable and has no null so you have to transform JSON into Elm data structures. However there's tools to automatically transform JSON into Elm decoders. However this is also a benefit because it removes the danger of working with JSON structures that all too often cause runtime exceptions. Elm makes you handle these before you break production, not after.</p>
<p>It also requires you to talk to JavaScript over "ports" which are basically a pub sub style channel. This is because if JavaScript threw any exceptions Elm would lose its policy about no runtime exceptions. While this can seem inconvenient you're trading that for no runtime exceptions which is going to be worth it in the long run.</p>
<h1>Give it a try</h1>
<p>Talk is cheap, a real experiment is the only way to really tell if Elm is right for us.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.418 [debug] l:len=42

10:45:07.418 [debug] l:buf=43:<h1>Elm argument</h1>
<p>I know that usually introducing a new language is overkill. This is because the cost of learning a new language isn't worth the benefits you gain. Usually they are more trade offs than benefits anyway.</p>
<p>Elm is different because it has huge benefits with a small learning curve. And the trade-offs are in the right places.</p>
<h2>Elms benefits</h2>
<p>The main three benefits that elm provides over JavaScript is:</p>
<ol>
<li>no runtime exceptions</li>
<li>enforced SemVer</li>
<li>everything being purely functional.</li>
</ol>
<p>Essentially this means that <strong>all of JavaScripts runtime exceptions become compile time errors in Elm.</strong> for instance all of the following things can not happen:</p>
<ul>
<li>dealing with unhandled Null/undefined/NaN is not a function</li>
<li>A library changed their API and only bumped a minor version.</li>
<li>unhandled exceptions being thrown (there are none)</li>
<li>adding a string to a number or other unexpected polymorphism</li>
<li>accessing a key in a object that is not there</li>
<li>refactoring and not finding where all the places you need to change</li>
<li>etc...</li>
</ul>
<p>Think about what this means for us. Less time hunting down bugs means more time making features. <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> also means less tests, with higher reliability.</p>
<p>Tests are also easier to write because all functions are pure in Elm.</p>
<p>Also refactoring is far less error prone because the compiler can find all runtime exceptions. Confident refactoring means it's easier to pay off technical debt</p>
<h2>Elm is easier to learn than JavaScript</h2>
<p>Elm is a very small and focused language designed over 5 years to make front end programming easier. <strong>It's easier to learn because there's far less to learn.</strong> Plus it has tons of overlap with JavaScript and Elixir.</p>
<p>To replace Elm you would have to have the following libraries in JavaScript and use them everywhere:</p>
<ul>
<li>React + write all your prop types</li>
<li>Redux</li>
<li>immutable.js</li>
<li>Babel (plus a ton of extensions)</li>
<li>Lodash</li>
<li>Flow Es lint to pick up the slack</li>
<li>A testing framework like jest or something</li>
<li>redux debugger</li>
<li>perfect code reviewers that find all your runtime exceptions?</li>
</ul>
<p>Using all these libraries in JavaScript is best practice in our company yet it's so hard to get all this setup it usually takes a few days, even with the boiler plate. All this is the default in Elm and feels just add light as a vanilla JavaScript project.</p>
<p>Elm is also easier to learn because it's similar to Elixir due to being functional, having pattern matching, and even having our favorite |&gt; operator.</p>
<p>While we write mostly functional JavaScript at it's core it's still a prototypal OO language with many inparitive parts.</p>
<h2>The costs of Elm</h2>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> does have some costs. The main one would be there's some boiler plate code to interop with JavaScript. This is because Elm requires everything to be immutable and has no null so you have to transform JSON into Elm data structures. However there's tools to automatically transform JSON into Elm decoders. However this is also a benefit because it removes the danger of working with JSON structures that all too often cause runtime exceptions. Elm makes you handle these before you break production, not after.</p>
<p>It also requires you to talk to JavaScript over "ports" which are basically a pub sub style channel. This is because if JavaScript threw any exceptions Elm would lose its policy about no runtime exceptions. While this can seem inconvenient you're trading that for no runtime exceptions which is going to be worth it in the long run.</p>
<h1>Give it a try</h1>
<p>Talk is cheap, a real experiment is the only way to really tell if Elm is right for us.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.418 [debug] l:len=424

10:45:07.418 [debug] l:buf=3:<h1>Elm argument</h1>
<p>I know that usually introducing a new language is overkill. This is because the cost of learning a new language isn't worth the benefits you gain. Usually they are more trade offs than benefits anyway.</p>
<p>Elm is different because it has huge benefits with a small learning curve. And the trade-offs are in the right places.</p>
<h2>Elms benefits</h2>
<p>The main three benefits that elm provides over JavaScript is:</p>
<ol>
<li>no runtime exceptions</li>
<li>enforced SemVer</li>
<li>everything being purely functional.</li>
</ol>
<p>Essentially this means that <strong>all of JavaScripts runtime exceptions become compile time errors in Elm.</strong> for instance all of the following things can not happen:</p>
<ul>
<li>dealing with unhandled Null/undefined/NaN is not a function</li>
<li>A library changed their API and only bumped a minor version.</li>
<li>unhandled exceptions being thrown (there are none)</li>
<li>adding a string to a number or other unexpected polymorphism</li>
<li>accessing a key in a object that is not there</li>
<li>refactoring and not finding where all the places you need to change</li>
<li>etc...</li>
</ul>
<p>Think about what this means for us. Less time hunting down bugs means more time making features. <a href="http://localhost:5000/static-typing" rel="noopener noreferrer">Static Typing</a> also means less tests, with higher reliability.</p>
<p>Tests are also easier to write because all functions are pure in Elm.</p>
<p>Also refactoring is far less error prone because the compiler can find all runtime exceptions. Confident refactoring means it's easier to pay off technical debt</p>
<h2>Elm is easier to learn than JavaScript</h2>
<p>Elm is a very small and focused language designed over 5 years to make front end programming easier. <strong>It's easier to learn because there's far less to learn.</strong> Plus it has tons of overlap with JavaScript and Elixir.</p>
<p>To replace Elm you would have to have the following libraries in JavaScript and use them everywhere:</p>
<ul>
<li>React + write all your prop types</li>
<li>Redux</li>
<li>immutable.js</li>
<li>Babel (plus a ton of extensions)</li>
<li>Lodash</li>
<li>Flow Es lint to pick up the slack</li>
<li>A testing framework like jest or something</li>
<li>redux debugger</li>
<li>perfect code reviewers that find all your runtime exceptions?</li>
</ul>
<p>Using all these libraries in JavaScript is best practice in our company yet it's so hard to get all this setup it usually takes a few days, even with the boiler plate. All this is the default in Elm and feels just add light as a vanilla JavaScript project.</p>
<p>Elm is also easier to learn because it's similar to Elixir due to being functional, having pattern matching, and even having our favorite |&gt; operator.</p>
<p>While we write mostly functional JavaScript at it's core it's still a prototypal OO language with many inparitive parts.</p>
<h2>The costs of Elm</h2>
<p><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> does have some costs. The main one would be there's some boiler plate code to interop with JavaScript. This is because Elm requires everything to be immutable and has no null so you have to transform JSON into Elm data structures. However there's tools to automatically transform JSON into Elm decoders. However this is also a benefit because it removes the danger of working with JSON structures that all too often cause runtime exceptions. Elm makes you handle these before you break production, not after.</p>
<p>It also requires you to talk to JavaScript over "ports" which are basically a pub sub style channel. This is because if JavaScript threw any exceptions Elm would lose its policy about no runtime exceptions. While this can seem inconvenient you're trading that for no runtime exceptions which is going to be worth it in the long run.</p>
<h1>Give it a try</h1>
<p>Talk is cheap, a real experiment is the only way to really tell if Elm is right for us.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a></li>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
</ul>


10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf empty

10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf=78:<h1>CopyPasta</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.418 [debug] l:len=7

10:45:07.418 [debug] l:buf=8:<h1>CopyPasta</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf empty

10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf=84:<h1>Untitled 1</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.418 [debug] l:len=8

10:45:07.418 [debug] l:buf=4:<h1>Untitled 1</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf empty

10:45:07.418 [debug] l:len=

10:45:07.418 [debug] l:buf=442:<h1>talks</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.418 [debug] l:len=4

10:45:07.418 [debug] l:buf=42:<h1>talks</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.418 [debug] l:len=44

10:45:07.418 [debug] l:buf=2:<h1>talks</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/graph-databases-with-dgraph" rel="noopener noreferrer">Graph Databases with Dgraph</a></li>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf empty

10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf=1558:<h1>Remote work</h1>
<blockquote>
<p>"Non-remote work defaults to the highest distraction communication first, which is in-person. Remote work defaults to the lowest, which is no communication," said Zapier co-founder Mike Knoop when I asked him if he felt he worked faster in a remote team.</p>
</blockquote>
<blockquote>
<p>"Fewer distractions lead to faster work," Mike added. "You have to purposely decide to enter into more distracting conversations."</p>
</blockquote>
<p><a href="https://zapier.com/learn/remote-work/remote-work-productivity/" rel="noopener noreferrer">https://zapier.com/learn/remote-work/remote-work-productivity/</a></p>
<blockquote>
<p>The office, he says, is where "work moments" happen, not work days. "It's like the front door of the office is like a Cuisinart and you walk in and your day is shredded to bits because you have 15 minutes here, and 30 minutes there and then something else happens and you're pulled off your work … and then it's lunch."</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.419 [debug] l:len=1

10:45:07.419 [debug] l:buf=558:<h1>Remote work</h1>
<blockquote>
<p>"Non-remote work defaults to the highest distraction communication first, which is in-person. Remote work defaults to the lowest, which is no communication," said Zapier co-founder Mike Knoop when I asked him if he felt he worked faster in a remote team.</p>
</blockquote>
<blockquote>
<p>"Fewer distractions lead to faster work," Mike added. "You have to purposely decide to enter into more distracting conversations."</p>
</blockquote>
<p><a href="https://zapier.com/learn/remote-work/remote-work-productivity/" rel="noopener noreferrer">https://zapier.com/learn/remote-work/remote-work-productivity/</a></p>
<blockquote>
<p>The office, he says, is where "work moments" happen, not work days. "It's like the front door of the office is like a Cuisinart and you walk in and your day is shredded to bits because you have 15 minutes here, and 30 minutes there and then something else happens and you're pulled off your work … and then it's lunch."</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.419 [debug] l:len=15

10:45:07.419 [debug] l:buf=58:<h1>Remote work</h1>
<blockquote>
<p>"Non-remote work defaults to the highest distraction communication first, which is in-person. Remote work defaults to the lowest, which is no communication," said Zapier co-founder Mike Knoop when I asked him if he felt he worked faster in a remote team.</p>
</blockquote>
<blockquote>
<p>"Fewer distractions lead to faster work," Mike added. "You have to purposely decide to enter into more distracting conversations."</p>
</blockquote>
<p><a href="https://zapier.com/learn/remote-work/remote-work-productivity/" rel="noopener noreferrer">https://zapier.com/learn/remote-work/remote-work-productivity/</a></p>
<blockquote>
<p>The office, he says, is where "work moments" happen, not work days. "It's like the front door of the office is like a Cuisinart and you walk in and your day is shredded to bits because you have 15 minutes here, and 30 minutes there and then something else happens and you're pulled off your work … and then it's lunch."</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.419 [debug] l:len=155

10:45:07.419 [debug] l:buf=8:<h1>Remote work</h1>
<blockquote>
<p>"Non-remote work defaults to the highest distraction communication first, which is in-person. Remote work defaults to the lowest, which is no communication," said Zapier co-founder Mike Knoop when I asked him if he felt he worked faster in a remote team.</p>
</blockquote>
<blockquote>
<p>"Fewer distractions lead to faster work," Mike added. "You have to purposely decide to enter into more distracting conversations."</p>
</blockquote>
<p><a href="https://zapier.com/learn/remote-work/remote-work-productivity/" rel="noopener noreferrer">https://zapier.com/learn/remote-work/remote-work-productivity/</a></p>
<blockquote>
<p>The office, he says, is where "work moments" happen, not work days. "It's like the front door of the office is like a Cuisinart and you walk in and your day is shredded to bits because you have 15 minutes here, and 30 minutes there and then something else happens and you're pulled off your work … and then it's lunch."</p>
</blockquote>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/when-you-go-remote-everything-is-2d." rel="noopener noreferrer">When you go remote everything is 2D.</a></li>
<li><a href="http://localhost:5000/asynchronous-communication" rel="noopener noreferrer">asynchronous communication</a></li>
<li><a href="http://localhost:5000/synchronous-communication" rel="noopener noreferrer">synchronous communication</a></li>
</ul>


10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf empty

10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf=1118:<h1>Where do I put X data in MindFlayer</h1>
<h2>Normal, Everyday, Data we don't want to lose: <em>the Event Store</em> (Postgres right now)</h2>
<p>The core things like api tokens, configuration data, etc... this should all be stored in the event store so that we can use it in any way we sit fit in the future. We gain great reporting, ability to stream changes, and project into convenient read formats.</p>
<h2>Realtime data: Kafka</h2>
<p>When it comes to analytics and realtime reporting we want to put it on Kafka. This will eventually be picked up by our Flink job and transformed into various reporting forms (Domo at the present) and archiving (s3) stores.</p>
<h2>Caching / Read Friendly Store: Redis</h2>
<p>Redis is the primary database that <strong>we read stuff out of</strong> because it's very fast to store and read from. Mind you, it's an in memory store so don't store anything there you can't afford to loose.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.419 [debug] l:len=1

10:45:07.419 [debug] l:buf=118:<h1>Where do I put X data in MindFlayer</h1>
<h2>Normal, Everyday, Data we don't want to lose: <em>the Event Store</em> (Postgres right now)</h2>
<p>The core things like api tokens, configuration data, etc... this should all be stored in the event store so that we can use it in any way we sit fit in the future. We gain great reporting, ability to stream changes, and project into convenient read formats.</p>
<h2>Realtime data: Kafka</h2>
<p>When it comes to analytics and realtime reporting we want to put it on Kafka. This will eventually be picked up by our Flink job and transformed into various reporting forms (Domo at the present) and archiving (s3) stores.</p>
<h2>Caching / Read Friendly Store: Redis</h2>
<p>Redis is the primary database that <strong>we read stuff out of</strong> because it's very fast to store and read from. Mind you, it's an in memory store so don't store anything there you can't afford to loose.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.419 [debug] l:len=11

10:45:07.419 [debug] l:buf=18:<h1>Where do I put X data in MindFlayer</h1>
<h2>Normal, Everyday, Data we don't want to lose: <em>the Event Store</em> (Postgres right now)</h2>
<p>The core things like api tokens, configuration data, etc... this should all be stored in the event store so that we can use it in any way we sit fit in the future. We gain great reporting, ability to stream changes, and project into convenient read formats.</p>
<h2>Realtime data: Kafka</h2>
<p>When it comes to analytics and realtime reporting we want to put it on Kafka. This will eventually be picked up by our Flink job and transformed into various reporting forms (Domo at the present) and archiving (s3) stores.</p>
<h2>Caching / Read Friendly Store: Redis</h2>
<p>Redis is the primary database that <strong>we read stuff out of</strong> because it's very fast to store and read from. Mind you, it's an in memory store so don't store anything there you can't afford to loose.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.419 [debug] l:len=111

10:45:07.419 [debug] l:buf=8:<h1>Where do I put X data in MindFlayer</h1>
<h2>Normal, Everyday, Data we don't want to lose: <em>the Event Store</em> (Postgres right now)</h2>
<p>The core things like api tokens, configuration data, etc... this should all be stored in the event store so that we can use it in any way we sit fit in the future. We gain great reporting, ability to stream changes, and project into convenient read formats.</p>
<h2>Realtime data: Kafka</h2>
<p>When it comes to analytics and realtime reporting we want to put it on Kafka. This will eventually be picked up by our Flink job and transformed into various reporting forms (Domo at the present) and archiving (s3) stores.</p>
<h2>Caching / Read Friendly Store: Redis</h2>
<p>Redis is the primary database that <strong>we read stuff out of</strong> because it's very fast to store and read from. Mind you, it's an in memory store so don't store anything there you can't afford to loose.</p>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a> <a href="http://localhost:5000/mindflayer" rel="noopener noreferrer">mindflayer</a></p>


10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf empty

10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf=79:<h1>Farzad Ban</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.419 [debug] l:len=7

10:45:07.419 [debug] l:buf=9:<h1>Farzad Ban</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.419 [debug] l:len=

10:45:07.419 [debug] l:buf empty

10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf=93:<h1>Code is a liability</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.420 [debug] l:len=9

10:45:07.420 [debug] l:buf=3:<h1>Code is a liability</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf empty

10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf=501:<h1>tangible customer value</h1>
<p>Something a customer can understand and notice in their daily use of an application.</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.420 [debug] l:len=5

10:45:07.420 [debug] l:buf=01:<h1>tangible customer value</h1>
<p>Something a customer can understand and notice in their daily use of an application.</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.420 [debug] l:len=50

10:45:07.420 [debug] l:buf=1:<h1>tangible customer value</h1>
<p>Something a customer can understand and notice in their daily use of an application.</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/user-stories" rel="noopener noreferrer">User Stories</a></li>
<li><a href="http://localhost:5000/the-need-for-scopes" rel="noopener noreferrer">the need for scopes</a></li>
</ul>


10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf empty

10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf=344:<p>Pride is competitive in nature</p>
<p>We pit ourselves against God.</p>
<p>It's damning in the true sense of the word, it stops our progression.</p>
<p>"When we are prideful  it causes contention because we won't hear the other side of the argument"</p>
<p>Tags:
<a href="http://localhost:5000/pride" rel="noopener noreferrer">pride</a></p>


10:45:07.420 [debug] l:len=3

10:45:07.420 [debug] l:buf=44:<p>Pride is competitive in nature</p>
<p>We pit ourselves against God.</p>
<p>It's damning in the true sense of the word, it stops our progression.</p>
<p>"When we are prideful  it causes contention because we won't hear the other side of the argument"</p>
<p>Tags:
<a href="http://localhost:5000/pride" rel="noopener noreferrer">pride</a></p>


10:45:07.420 [debug] l:len=34

10:45:07.420 [debug] l:buf=4:<p>Pride is competitive in nature</p>
<p>We pit ourselves against God.</p>
<p>It's damning in the true sense of the word, it stops our progression.</p>
<p>"When we are prideful  it causes contention because we won't hear the other side of the argument"</p>
<p>Tags:
<a href="http://localhost:5000/pride" rel="noopener noreferrer">pride</a></p>


10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf empty

10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf=225:<h1>Respect your tech debt battle scars, just don't glorify them</h1>
<hr>
<h2>created: 2020-08-28T13:55:39-06:00
modified: 2020-08-28T13:56:14-06:00</h2>
<h1>Respect your tech debt battle scars, just don't glorify them</h1>


10:45:07.420 [debug] l:len=2

10:45:07.420 [debug] l:buf=25:<h1>Respect your tech debt battle scars, just don't glorify them</h1>
<hr>
<h2>created: 2020-08-28T13:55:39-06:00
modified: 2020-08-28T13:56:14-06:00</h2>
<h1>Respect your tech debt battle scars, just don't glorify them</h1>


10:45:07.420 [debug] l:len=22

10:45:07.420 [debug] l:buf=5:<h1>Respect your tech debt battle scars, just don't glorify them</h1>
<hr>
<h2>created: 2020-08-28T13:55:39-06:00
modified: 2020-08-28T13:56:14-06:00</h2>
<h1>Respect your tech debt battle scars, just don't glorify them</h1>


10:45:07.420 [debug] l:len=

10:45:07.420 [debug] l:buf empty

10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf=87:<h1>Hindsight is 20x20</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.421 [debug] l:len=8

10:45:07.421 [debug] l:buf=7:<h1>Hindsight is 20x20</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf empty

10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf=1273:<h1>Jira</h1>
<p>Started out as an issue based system, grew into the monstrosity it is today.</p>
<p>Few things:</p>
<ul>
<li>Jira can't do everything you want (just lots of agile stuff)</li>
<li>It works great for <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s.</li>
<li>It's built around the idea of <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
</ul>


10:45:07.421 [debug] l:len=1

10:45:07.421 [debug] l:buf=273:<h1>Jira</h1>
<p>Started out as an issue based system, grew into the monstrosity it is today.</p>
<p>Few things:</p>
<ul>
<li>Jira can't do everything you want (just lots of agile stuff)</li>
<li>It works great for <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s.</li>
<li>It's built around the idea of <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
</ul>


10:45:07.421 [debug] l:len=12

10:45:07.421 [debug] l:buf=73:<h1>Jira</h1>
<p>Started out as an issue based system, grew into the monstrosity it is today.</p>
<p>Few things:</p>
<ul>
<li>Jira can't do everything you want (just lots of agile stuff)</li>
<li>It works great for <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s.</li>
<li>It's built around the idea of <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
</ul>


10:45:07.421 [debug] l:len=127

10:45:07.421 [debug] l:buf=3:<h1>Jira</h1>
<p>Started out as an issue based system, grew into the monstrosity it is today.</p>
<p>Few things:</p>
<ul>
<li>Jira can't do everything you want (just lots of agile stuff)</li>
<li>It works great for <a href="http://localhost:5000/issues" rel="noopener noreferrer">issues</a> or <a href="http://localhost:5000/ticket" rel="noopener noreferrer">ticket</a>s.</li>
<li>It's built around the idea of <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
</ul>
<p>Keywords: <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> <a href="http://localhost:5000/scrum" rel="noopener noreferrer">Scrum</a> <a href="http://localhost:5000/kanban" rel="noopener noreferrer">Kanban</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-boards" rel="noopener noreferrer">Kanban boards</a></li>
<li><a href="http://localhost:5000/usability-doesn't-matter" rel="noopener noreferrer">Usability doesn't matter</a></li>
<li><a href="http://localhost:5000/project-management-tools" rel="noopener noreferrer">project management tools</a></li>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
</ul>


10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf empty

10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf=241:<h1>Cognitive Bias Info Graphic</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923095224.png" rel="noopener noreferrer">Pasted image 20200923095224</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.421 [debug] l:len=2

10:45:07.421 [debug] l:buf=41:<h1>Cognitive Bias Info Graphic</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923095224.png" rel="noopener noreferrer">Pasted image 20200923095224</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.421 [debug] l:len=24

10:45:07.421 [debug] l:buf=1:<h1>Cognitive Bias Info Graphic</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20200923095224.png" rel="noopener noreferrer">Pasted image 20200923095224</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>


10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf empty

10:45:07.421 [debug] l:len=

10:45:07.421 [debug] l:buf=252:<h1>assuming good intent</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>


10:45:07.421 [debug] l:len=2

10:45:07.422 [debug] l:buf=52:<h1>assuming good intent</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>


10:45:07.422 [debug] l:len=25

10:45:07.422 [debug] l:buf=2:<h1>assuming good intent</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab's-values" rel="noopener noreferrer">Gitlab's Values</a></li>
</ul>


10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf empty

10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf=1173:<h1>Values of a good Project Managment Tool</h1>
<ol>
<li><strong>Prevent communication Fragmentation</strong>: when a person is <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a>, because of this it <a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">must naturally organize information</a></li>
<li><strong><a href="http://localhost:5000/transperency" rel="noopener noreferrer">Transperency</a></strong>: You can know what a team is working on and how it's going because it's far less visible when you're <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>.</li>
<li><strong><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></strong>: Information needs to stay in the same place, if it's hard to find it will be duplicated.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.422 [debug] l:len=1

10:45:07.422 [debug] l:buf=173:<h1>Values of a good Project Managment Tool</h1>
<ol>
<li><strong>Prevent communication Fragmentation</strong>: when a person is <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a>, because of this it <a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">must naturally organize information</a></li>
<li><strong><a href="http://localhost:5000/transperency" rel="noopener noreferrer">Transperency</a></strong>: You can know what a team is working on and how it's going because it's far less visible when you're <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>.</li>
<li><strong><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></strong>: Information needs to stay in the same place, if it's hard to find it will be duplicated.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.422 [debug] l:len=11

10:45:07.422 [debug] l:buf=73:<h1>Values of a good Project Managment Tool</h1>
<ol>
<li><strong>Prevent communication Fragmentation</strong>: when a person is <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a>, because of this it <a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">must naturally organize information</a></li>
<li><strong><a href="http://localhost:5000/transperency" rel="noopener noreferrer">Transperency</a></strong>: You can know what a team is working on and how it's going because it's far less visible when you're <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>.</li>
<li><strong><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></strong>: Information needs to stay in the same place, if it's hard to find it will be duplicated.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.422 [debug] l:len=117

10:45:07.422 [debug] l:buf=3:<h1>Values of a good Project Managment Tool</h1>
<ol>
<li><strong>Prevent communication Fragmentation</strong>: when a person is <a href="http://localhost:5000/remote-means-they-can't-talk-around-a-product,-they-have-to-talk-in-it" rel="noopener noreferrer">remote means they can't talk around a product, they have to talk in it</a>, because of this it <a href="http://localhost:5000/messy-drawer-of-communication" rel="noopener noreferrer">must naturally organize information</a></li>
<li><strong><a href="http://localhost:5000/transperency" rel="noopener noreferrer">Transperency</a></strong>: You can know what a team is working on and how it's going because it's far less visible when you're <a href="http://localhost:5000/remote" rel="noopener noreferrer">remote</a>.</li>
<li><strong><a href="http://localhost:5000/information-stability" rel="noopener noreferrer">Information Stability</a></strong>: Information needs to stay in the same place, if it's hard to find it will be duplicated.</li>
</ol>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/basecamp's-design" rel="noopener noreferrer">Basecamp's Design</a></li>
</ul>


10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf empty

10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf=305:<h1>Pasted image 20200922163522</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.422 [debug] l:len=3

10:45:07.422 [debug] l:buf=05:<h1>Pasted image 20200922163522</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.422 [debug] l:len=30

10:45:07.422 [debug] l:buf=5:<h1>Pasted image 20200922163522</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf empty

10:45:07.422 [debug] l:len=

10:45:07.422 [debug] l:buf=314:<h1>Single Source of Truth</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.422 [debug] l:len=3

10:45:07.423 [debug] l:buf=14:<h1>Single Source of Truth</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.423 [debug] l:len=31

10:45:07.423 [debug] l:buf=4:<h1>Single Source of Truth</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/gitlab-meetup-on-async-communication-youtube" rel="noopener noreferrer">Gitlab meetup on Async communication (Youtube)</a></li>
</ul>


10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf empty

10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf=140:<h1>Being divergent and death of the author</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>


10:45:07.423 [debug] l:len=1

10:45:07.423 [debug] l:buf=40:<h1>Being divergent and death of the author</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>


10:45:07.423 [debug] l:len=14

10:45:07.423 [debug] l:buf=0:<h1>Being divergent and death of the author</h1>
<p><a href="http://localhost:5000/divergence" rel="noopener noreferrer">divergence</a></p>


10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf empty

10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf=126:<h1>sysphus</h1>
<ul>
<li>Greek story where a guy would constantly move a bolder over a hill and back for eternity</li>
</ul>


10:45:07.423 [debug] l:len=1

10:45:07.423 [debug] l:buf=26:<h1>sysphus</h1>
<ul>
<li>Greek story where a guy would constantly move a bolder over a hill and back for eternity</li>
</ul>


10:45:07.423 [debug] l:len=12

10:45:07.423 [debug] l:buf=6:<h1>sysphus</h1>
<ul>
<li>Greek story where a guy would constantly move a bolder over a hill and back for eternity</li>
</ul>


10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf empty

10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf=237:<h1>meditating</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.423 [debug] l:len=2

10:45:07.423 [debug] l:buf=37:<h1>meditating</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.423 [debug] l:len=23

10:45:07.423 [debug] l:buf=7:<h1>meditating</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a></li>
</ul>


10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf empty

10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf=48:<h1>MPA</h1>
<p>Stands for "Multi-page app"</p>


10:45:07.423 [debug] l:len=4

10:45:07.423 [debug] l:buf=8:<h1>MPA</h1>
<p>Stands for "Multi-page app"</p>


10:45:07.423 [debug] l:len=

10:45:07.423 [debug] l:buf empty

10:45:07.423 [debug] l:len=

10:45:07.424 [debug] l:buf=260:<h1>Sprints</h1>
<p>See <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.424 [debug] l:len=2

10:45:07.424 [debug] l:buf=60:<h1>Sprints</h1>
<p>See <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.424 [debug] l:len=26

10:45:07.424 [debug] l:buf=0:<h1>Sprints</h1>
<p>See <a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.424 [debug] l:len=

10:45:07.424 [debug] l:buf empty

10:45:07.424 [debug] l:len=

10:45:07.424 [debug] l:buf=710:<h1>Maker's Schedule V</h1>
<p><a href="http://paulgraham.com/makersschedule.html" rel="noopener noreferrer">http://paulgraham.com/makersschedule.html</a></p>
<ul>
<li><strong>Managers</strong>: 1 hour increments (change what you're doing every hour, with no problem)</li>
<li><strong>Makers</strong>: 1/2 DAY increments is the only useful block.</li>
</ul>
<p><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.424 [debug] l:len=7

10:45:07.424 [debug] l:buf=10:<h1>Maker's Schedule V</h1>
<p><a href="http://paulgraham.com/makersschedule.html" rel="noopener noreferrer">http://paulgraham.com/makersschedule.html</a></p>
<ul>
<li><strong>Managers</strong>: 1 hour increments (change what you're doing every hour, with no problem)</li>
<li><strong>Makers</strong>: 1/2 DAY increments is the only useful block.</li>
</ul>
<p><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.424 [debug] l:len=71

10:45:07.424 [debug] l:buf=0:<h1>Maker's Schedule V</h1>
<p><a href="http://paulgraham.com/makersschedule.html" rel="noopener noreferrer">http://paulgraham.com/makersschedule.html</a></p>
<ul>
<li><strong>Managers</strong>: 1 hour increments (change what you're doing every hour, with no problem)</li>
<li><strong>Makers</strong>: 1/2 DAY increments is the only useful block.</li>
</ul>
<p><a href="http://localhost:5000/productivity-is-a-feeling" rel="noopener noreferrer">Productivity is a feeling</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/explination-of-async-&amp;-sync-remote-work-pitch" rel="noopener noreferrer">Explination of Async &amp; Sync Remote work Pitch</a></li>
</ul>


10:45:07.424 [debug] l:len=

10:45:07.424 [debug] l:buf empty

10:45:07.424 [debug] l:len=

10:45:07.424 [debug] l:buf=242:<h1>Elixir Learning Path</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.424 [debug] l:len=2

10:45:07.424 [debug] l:buf=42:<h1>Elixir Learning Path</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.424 [debug] l:len=24

10:45:07.424 [debug] l:buf=2:<h1>Elixir Learning Path</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/elixir-moc" rel="noopener noreferrer">Elixir MOC</a></li>
</ul>


10:45:07.424 [debug] l:len=

10:45:07.424 [debug] l:buf empty

10:45:07.424 [debug] l:len=

10:45:07.425 [debug] l:buf=363:<h1>Bugs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.425 [debug] l:len=3

10:45:07.425 [debug] l:buf=63:<h1>Bugs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.425 [debug] l:len=36

10:45:07.425 [debug] l:buf=3:<h1>Bugs</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/abstractions-considered-harmful" rel="noopener noreferrer">Abstractions considered harmful</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
</ul>


10:45:07.425 [debug] l:len=

10:45:07.425 [debug] l:buf empty

10:45:07.425 [debug] l:len=

10:45:07.425 [debug] l:buf=1377:<h1>Neverending Sprints</h1>
<p>With normal <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> you never end any "projects" or at least most projects are just a loosely followed tagging system. This means that one week bleeds into the next which leads them to be less of a "sprint" and more of never ending death march. Scope grows without check, bugs and important tasks are just thrown into the sprint based on "luck".</p>
<p>Yes sprint planning, backlog pruning could help but these also lead to treating developers like <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a>, and it's thankless work that people don't generally aren't excited to do.</p>
<p>Keywords:</p>
<ul>
<li>[[Agile]</li>
<li>[[Kanban]</li>
<li><a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">Kanban Boards and Motivation</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a></li>
<li><a href="http://localhost:5000/factory-motivation" rel="noopener noreferrer">Factory Motivation</a>.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.425 [debug] l:len=1

10:45:07.425 [debug] l:buf=377:<h1>Neverending Sprints</h1>
<p>With normal <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> you never end any "projects" or at least most projects are just a loosely followed tagging system. This means that one week bleeds into the next which leads them to be less of a "sprint" and more of never ending death march. Scope grows without check, bugs and important tasks are just thrown into the sprint based on "luck".</p>
<p>Yes sprint planning, backlog pruning could help but these also lead to treating developers like <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a>, and it's thankless work that people don't generally aren't excited to do.</p>
<p>Keywords:</p>
<ul>
<li>[[Agile]</li>
<li>[[Kanban]</li>
<li><a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">Kanban Boards and Motivation</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a></li>
<li><a href="http://localhost:5000/factory-motivation" rel="noopener noreferrer">Factory Motivation</a>.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.425 [debug] l:len=13

10:45:07.425 [debug] l:buf=77:<h1>Neverending Sprints</h1>
<p>With normal <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> you never end any "projects" or at least most projects are just a loosely followed tagging system. This means that one week bleeds into the next which leads them to be less of a "sprint" and more of never ending death march. Scope grows without check, bugs and important tasks are just thrown into the sprint based on "luck".</p>
<p>Yes sprint planning, backlog pruning could help but these also lead to treating developers like <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a>, and it's thankless work that people don't generally aren't excited to do.</p>
<p>Keywords:</p>
<ul>
<li>[[Agile]</li>
<li>[[Kanban]</li>
<li><a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">Kanban Boards and Motivation</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a></li>
<li><a href="http://localhost:5000/factory-motivation" rel="noopener noreferrer">Factory Motivation</a>.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.425 [debug] l:len=137

10:45:07.425 [debug] l:buf=7:<h1>Neverending Sprints</h1>
<p>With normal <a href="http://localhost:5000/agile" rel="noopener noreferrer">Agile</a> you never end any "projects" or at least most projects are just a loosely followed tagging system. This means that one week bleeds into the next which leads them to be less of a "sprint" and more of never ending death march. Scope grows without check, bugs and important tasks are just thrown into the sprint based on "luck".</p>
<p>Yes sprint planning, backlog pruning could help but these also lead to treating developers like <a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a>, and it's thankless work that people don't generally aren't excited to do.</p>
<p>Keywords:</p>
<ul>
<li>[[Agile]</li>
<li>[[Kanban]</li>
<li><a href="http://localhost:5000/kanban-boards-and-motivation" rel="noopener noreferrer">Kanban Boards and Motivation</a></li>
<li><a href="http://localhost:5000/motivation" rel="noopener noreferrer">Motivation</a></li>
<li><a href="http://localhost:5000/factory-motivation" rel="noopener noreferrer">Factory Motivation</a>.</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/dumb-ticket-takers" rel="noopener noreferrer">dumb ticket takers</a></li>
<li><a href="http://localhost:5000/sprint" rel="noopener noreferrer">sprint</a></li>
</ul>


10:45:07.425 [debug] l:len=

10:45:07.425 [debug] l:buf empty

10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf=1445:<h1>Versioning Events</h1>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>
<p>Each model has it's version. NOTE: versions are always backwards compatible OR they are a new version!</p>
<pre><code>
%Eventv1{name: "Gage"}
%Eventv2{name: "Gage", age: 27} # backwards compatible
%Agev1{age: 27} # not backwards compatible
</code></pre>
<h2>Information from external systems</h2>
<p>Never lookup data from an external systems in a projection! It's better to <strong>inline that information into the Event.</strong> Think of how <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> saves all the events it gets from external systems into it's event store.</p>
<h2>Changing Semantic Meaning</h2>
<blockquote>
<p>One important aspect of versioning is that semantic meaning cannot change between versions of software. There is no good way for a downstream consumer to understand a semantic meaning change.</p>
</blockquote>
<p>EG: Tempature number must always be in the same units. Don't reuse things for different meaning!</p>
<h1>What if I make a mistake?</h1>
<p><img src="http://localhost:5000/Versioning%20Events/02352518-35DA-4A66-BC0E-3AEFB4C75F47.png" alt=""></p>
<p>What would an accountant do?</p>
<p>Also you can:
1. Copy and transform to a new stream, once it's over there move to the new stream and delete the old one
* Good for many events to one event and vice-versa</p>


10:45:07.426 [debug] l:len=1

10:45:07.426 [debug] l:buf=445:<h1>Versioning Events</h1>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>
<p>Each model has it's version. NOTE: versions are always backwards compatible OR they are a new version!</p>
<pre><code>
%Eventv1{name: "Gage"}
%Eventv2{name: "Gage", age: 27} # backwards compatible
%Agev1{age: 27} # not backwards compatible
</code></pre>
<h2>Information from external systems</h2>
<p>Never lookup data from an external systems in a projection! It's better to <strong>inline that information into the Event.</strong> Think of how <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> saves all the events it gets from external systems into it's event store.</p>
<h2>Changing Semantic Meaning</h2>
<blockquote>
<p>One important aspect of versioning is that semantic meaning cannot change between versions of software. There is no good way for a downstream consumer to understand a semantic meaning change.</p>
</blockquote>
<p>EG: Tempature number must always be in the same units. Don't reuse things for different meaning!</p>
<h1>What if I make a mistake?</h1>
<p><img src="http://localhost:5000/Versioning%20Events/02352518-35DA-4A66-BC0E-3AEFB4C75F47.png" alt=""></p>
<p>What would an accountant do?</p>
<p>Also you can:
1. Copy and transform to a new stream, once it's over there move to the new stream and delete the old one
* Good for many events to one event and vice-versa</p>


10:45:07.426 [debug] l:len=14

10:45:07.426 [debug] l:buf=45:<h1>Versioning Events</h1>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>
<p>Each model has it's version. NOTE: versions are always backwards compatible OR they are a new version!</p>
<pre><code>
%Eventv1{name: "Gage"}
%Eventv2{name: "Gage", age: 27} # backwards compatible
%Agev1{age: 27} # not backwards compatible
</code></pre>
<h2>Information from external systems</h2>
<p>Never lookup data from an external systems in a projection! It's better to <strong>inline that information into the Event.</strong> Think of how <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> saves all the events it gets from external systems into it's event store.</p>
<h2>Changing Semantic Meaning</h2>
<blockquote>
<p>One important aspect of versioning is that semantic meaning cannot change between versions of software. There is no good way for a downstream consumer to understand a semantic meaning change.</p>
</blockquote>
<p>EG: Tempature number must always be in the same units. Don't reuse things for different meaning!</p>
<h1>What if I make a mistake?</h1>
<p><img src="http://localhost:5000/Versioning%20Events/02352518-35DA-4A66-BC0E-3AEFB4C75F47.png" alt=""></p>
<p>What would an accountant do?</p>
<p>Also you can:
1. Copy and transform to a new stream, once it's over there move to the new stream and delete the old one
* Good for many events to one event and vice-versa</p>


10:45:07.426 [debug] l:len=144

10:45:07.426 [debug] l:buf=5:<h1>Versioning Events</h1>
<p><a href="http://localhost:5000/event-sourcing" rel="noopener noreferrer">event-sourcing</a></p>
<p>Each model has it's version. NOTE: versions are always backwards compatible OR they are a new version!</p>
<pre><code>
%Eventv1{name: "Gage"}
%Eventv2{name: "Gage", age: 27} # backwards compatible
%Agev1{age: 27} # not backwards compatible
</code></pre>
<h2>Information from external systems</h2>
<p>Never lookup data from an external systems in a projection! It's better to <strong>inline that information into the Event.</strong> Think of how <a href="http://localhost:5000/elm" rel="noopener noreferrer">Elm</a> saves all the events it gets from external systems into it's event store.</p>
<h2>Changing Semantic Meaning</h2>
<blockquote>
<p>One important aspect of versioning is that semantic meaning cannot change between versions of software. There is no good way for a downstream consumer to understand a semantic meaning change.</p>
</blockquote>
<p>EG: Tempature number must always be in the same units. Don't reuse things for different meaning!</p>
<h1>What if I make a mistake?</h1>
<p><img src="http://localhost:5000/Versioning%20Events/02352518-35DA-4A66-BC0E-3AEFB4C75F47.png" alt=""></p>
<p>What would an accountant do?</p>
<p>Also you can:
1. Copy and transform to a new stream, once it's over there move to the new stream and delete the old one
* Good for many events to one event and vice-versa</p>


10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf empty

10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf=339:<h1>Agile deathmarch</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.426 [debug] l:len=3

10:45:07.426 [debug] l:buf=39:<h1>Agile deathmarch</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.426 [debug] l:len=33

10:45:07.426 [debug] l:buf=9:<h1>Agile deathmarch</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/kanban-cards-are-a-bunch-of-directions,-but-you-need-a-map" rel="noopener noreferrer">Kanban Cards are a bunch of directions, but you need a MAP</a></li>
</ul>


10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf empty

10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf=701:<h1>Just Say No</h1>
<p>In <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they say that every feature request should have by default be, "No, maybe someday". Why? Because that feature isn't more special than all the rest, if it's a good idea, it'll come back. Also it's just better than enduring the constant <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.426 [debug] l:len=7

10:45:07.426 [debug] l:buf=01:<h1>Just Say No</h1>
<p>In <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they say that every feature request should have by default be, "No, maybe someday". Why? Because that feature isn't more special than all the rest, if it's a good idea, it'll come back. Also it's just better than enduring the constant <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.426 [debug] l:len=70

10:45:07.426 [debug] l:buf=1:<h1>Just Say No</h1>
<p>In <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they say that every feature request should have by default be, "No, maybe someday". Why? Because that feature isn't more special than all the rest, if it's a good idea, it'll come back. Also it's just better than enduring the constant <a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/guilt-of-backlogs" rel="noopener noreferrer">Guilt of Backlogs</a></li>
</ul>


10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf empty

10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf=84:<h1>Pasted image 16</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.426 [debug] l:len=8

10:45:07.426 [debug] l:buf=4:<h1>Pasted image 16</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.426 [debug] l:len=

10:45:07.426 [debug] l:buf empty

10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf=406:<h1>Ideas Are Overrated</h1>
<p><a href="https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer" rel="noopener noreferrer">https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer</a></p>


10:45:07.427 [debug] l:len=4

10:45:07.427 [debug] l:buf=06:<h1>Ideas Are Overrated</h1>
<p><a href="https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer" rel="noopener noreferrer">https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer</a></p>


10:45:07.427 [debug] l:len=40

10:45:07.427 [debug] l:buf=6:<h1>Ideas Are Overrated</h1>
<p><a href="https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer" rel="noopener noreferrer">https://experiencinginformation.com/2017/10/01/ideas-are-overrated/?utm_content=bufferc2a54&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer</a></p>


10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf empty

10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf=244:<h1>Youtube - you don't need all that JavaScript, really</h1>
<p><a href="https://youtu.be/e1L2WgXu2JY" rel="noopener noreferrer">https://youtu.be/e1L2WgXu2JY</a></p>
<p><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></p>


10:45:07.427 [debug] l:len=2

10:45:07.427 [debug] l:buf=44:<h1>Youtube - you don't need all that JavaScript, really</h1>
<p><a href="https://youtu.be/e1L2WgXu2JY" rel="noopener noreferrer">https://youtu.be/e1L2WgXu2JY</a></p>
<p><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></p>


10:45:07.427 [debug] l:len=24

10:45:07.427 [debug] l:buf=4:<h1>Youtube - you don't need all that JavaScript, really</h1>
<p><a href="https://youtu.be/e1L2WgXu2JY" rel="noopener noreferrer">https://youtu.be/e1L2WgXu2JY</a></p>
<p><a href="http://localhost:5000/spa" rel="noopener noreferrer">SPA</a></p>


10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf empty

10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf=184:<h1>constraints are good for focus and creativity</h1>
<p>See <a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></p>


10:45:07.427 [debug] l:len=1

10:45:07.427 [debug] l:buf=84:<h1>constraints are good for focus and creativity</h1>
<p>See <a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></p>


10:45:07.427 [debug] l:len=18

10:45:07.427 [debug] l:buf=4:<h1>constraints are good for focus and creativity</h1>
<p>See <a href="http://localhost:5000/wp-constrains-on-creativity" rel="noopener noreferrer">WP-Constrains on Creativity</a></p>


10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf empty

10:45:07.427 [debug] l:len=

10:45:07.427 [debug] l:buf=305:<h1>Pasted image 20200922163552</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.428 [debug] l:len=3

10:45:07.428 [debug] l:buf=05:<h1>Pasted image 20200922163552</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.428 [debug] l:len=30

10:45:07.428 [debug] l:buf=5:<h1>Pasted image 20200922163552</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.428 [debug] l:len=

10:45:07.428 [debug] l:buf empty

10:45:07.428 [debug] l:len=

10:45:07.428 [debug] l:buf=6726:<h1>Carol Tuttle's Energy Types relate to ReasonML</h1>
<h2>There's a pretty good chance you're a type 2</h2>
<h2>There's a pretty good chance many of your co-workers, especially those you need to convince, are type 3.</h2>
<p>Type 3 is about getting sh*t done. Period. You may say,  <em>"But I like to get stuff done too!"</em> Yes you do, but not like type 3's. The difference between you and them is your primary goal. Type 2's get stuff done by assessing the options, asking lots of questions, figuring out the best strategy, and once comfortable, start doing it.</p>
<p>Type 3's start the task, ask questions later, stop when it's done. Move on to the next TODO. If they run into problems they find the quickest solution and take it, move on to the next task.</p>
<p>They use JavaScript because it doesn't get in their way very much. They can quickly understand the language and get productive, which is what they are all about. They don't read docs, they don't ask questions, they copy and paste example code and modify it to do what they want, they leave that code and never take another thought. They are all about upward and forward movement.</p>
<p>Many of these tendencies would irk you as a type 2 personality. You may find things like using <code>float</code> in css when <code>flex box</code> is obviously better. Don't they know or care? <strong>NOPE</strong>, they do not, because <code>float</code> gets the job done, they won't be too interested until they try to align something vertically, then they'll do a google search, find that someone said that flex box can do it, they will copy and paste the code, then do it.</p>
<p>Another example is they'll probably use Class components for everything. Why? Because it's easier, and works for everything. They have to know 1 thing to accomplish everything they need to know.</p>
<p>Type 3's don't like to spend lots of time learning and assessing options. That's not "getting things done". Learning often slows down a task. If you have to learn something to do it, that's time wasted.</p>
<h2>Selling to a Type 3 person</h2>
<p>The only way you're going to sell to a Type 3 person is difficult. The main problem you're going to run into is that they don't usually care very much about doing things <em>best</em> way. They care about the clearest path to success. Usually the quickest path to success is not looking, discovering, learning, then applying a tool. It's applying a tool you already have in your repertoire.</p>
<p><strong>HARD FACT</strong>: Doing something in JavaScript is often faster than ReasonML, especially if you don't know ReasonML.</p>
<p>If you're a type 2 you probably have a much higher tolerance for reading a learning about things than a type 3 does. Which is fine on both sides.</p>
<p>So <strong>How do we sell</strong>?</p>
<h3>Step 1: We have to make <em>Reason the most productive language!</em>.</h3>
<p><em>well isn't it already?</em>.  In my opinion: "Kinda".</p>
<h3>What's really productive in ReasonML:</h3>
<ol>
<li>Changing a type, seeing everywhere it breaks</li>
<li>Refactoring</li>
</ol>
<hr>
<h2>[ Commenter(id, email) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense.</h2>
<p>3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this.
4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript.
5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-<em>can</em>-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.-
6.-less-bugs-in-production!
7.-expressing-things-via-types-like-`authorid-.md) ⤴
<em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>| Guest`</p>
<h3>What will probably always be harder in ReasonML:</h3>
<ol>
<li>Functions can't take different type of arguments this means that in React you have to do this, when you didn't  previously. This is an OCaml design choice, although maybe will change in the future.</li>
</ol>
<pre><code>&lt;div&gt;
"asdf"-&gt;ReasonReact.string
2-&gt;string_of_int-&gt;ReasonReact.string
&lt;/div&gt; 
</code></pre>
<ol>
<li>Understanding Types scope when you can write type annotations, when you don't need them can be tricky. Typed languages are a skill, they aren't going to be something people can pick up without trying like JS.</li>
</ol>
<p>What <em>could</em> make ReasonML more productive (given some work)?</p>
<ol>
<li><strong>Editor Tooling!!!</strong> This is HUGE for a type 3 person, if ReasonML means
2. If you type <code>&lt;div</code> you should immediately get all the properties that a div could have. Better yet, if you type <code>&lt;Route</code> you should immediately get all the properties that that component could take.
1. If there's required arguments <code>&lt;Route</code> should quickly expand into <code>&lt;Route to="string" render={} /&gt;</code> or something like that.
3. If you type <code>foo(</code> you should see the signature of the function floating there, *even if it's an opened module function
4. <code>cmd-click</code>ing a function should always take to the right place</li>
<li><strong>Type and Syntax errors should always point you to the problem with a quick and convince description</strong>. This is not true right now. But it could be!</li>
<li><strong>Writing Mobile/Desktop native apps.</strong> Right now the tooling for JS native apps is very lacking. This is something ReasonML could really succeed at.</li>
<li><strong>Debugging runtime exceptions.</strong>
<ol>
<li>You may say "the code is soooo readable" It's not. Especially if you're writing a React component. I can read it OK but I'm familiar with Reason.</li>
<li>Because the JS is generated and doesn't look much like JS, it's hard to debug these kinds of things. We need source maps and easy way to JS.log something with the proper types in ReasonML's terms. Yes this is possible but it needs to be easier.</li>
</ol>
</li>
</ol>
<h2>Step 2: Just use it.</h2>
<p>This is how pragmatist do things. They just start. They make something useful. If they run into problems, they solve them. If they run into problems a lot, they make libraries. Rinse and repeat.</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a> <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">Carol Tuttle's Energy Types</a></p>


10:45:07.428 [debug] l:len=6

10:45:07.428 [debug] l:buf=726:<h1>Carol Tuttle's Energy Types relate to ReasonML</h1>
<h2>There's a pretty good chance you're a type 2</h2>
<h2>There's a pretty good chance many of your co-workers, especially those you need to convince, are type 3.</h2>
<p>Type 3 is about getting sh*t done. Period. You may say,  <em>"But I like to get stuff done too!"</em> Yes you do, but not like type 3's. The difference between you and them is your primary goal. Type 2's get stuff done by assessing the options, asking lots of questions, figuring out the best strategy, and once comfortable, start doing it.</p>
<p>Type 3's start the task, ask questions later, stop when it's done. Move on to the next TODO. If they run into problems they find the quickest solution and take it, move on to the next task.</p>
<p>They use JavaScript because it doesn't get in their way very much. They can quickly understand the language and get productive, which is what they are all about. They don't read docs, they don't ask questions, they copy and paste example code and modify it to do what they want, they leave that code and never take another thought. They are all about upward and forward movement.</p>
<p>Many of these tendencies would irk you as a type 2 personality. You may find things like using <code>float</code> in css when <code>flex box</code> is obviously better. Don't they know or care? <strong>NOPE</strong>, they do not, because <code>float</code> gets the job done, they won't be too interested until they try to align something vertically, then they'll do a google search, find that someone said that flex box can do it, they will copy and paste the code, then do it.</p>
<p>Another example is they'll probably use Class components for everything. Why? Because it's easier, and works for everything. They have to know 1 thing to accomplish everything they need to know.</p>
<p>Type 3's don't like to spend lots of time learning and assessing options. That's not "getting things done". Learning often slows down a task. If you have to learn something to do it, that's time wasted.</p>
<h2>Selling to a Type 3 person</h2>
<p>The only way you're going to sell to a Type 3 person is difficult. The main problem you're going to run into is that they don't usually care very much about doing things <em>best</em> way. They care about the clearest path to success. Usually the quickest path to success is not looking, discovering, learning, then applying a tool. It's applying a tool you already have in your repertoire.</p>
<p><strong>HARD FACT</strong>: Doing something in JavaScript is often faster than ReasonML, especially if you don't know ReasonML.</p>
<p>If you're a type 2 you probably have a much higher tolerance for reading a learning about things than a type 3 does. Which is fine on both sides.</p>
<p>So <strong>How do we sell</strong>?</p>
<h3>Step 1: We have to make <em>Reason the most productive language!</em>.</h3>
<p><em>well isn't it already?</em>.  In my opinion: "Kinda".</p>
<h3>What's really productive in ReasonML:</h3>
<ol>
<li>Changing a type, seeing everywhere it breaks</li>
<li>Refactoring</li>
</ol>
<hr>
<h2>[ Commenter(id, email) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense.</h2>
<p>3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this.
4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript.
5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-<em>can</em>-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.-
6.-less-bugs-in-production!
7.-expressing-things-via-types-like-`authorid-.md) ⤴
<em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>| Guest`</p>
<h3>What will probably always be harder in ReasonML:</h3>
<ol>
<li>Functions can't take different type of arguments this means that in React you have to do this, when you didn't  previously. This is an OCaml design choice, although maybe will change in the future.</li>
</ol>
<pre><code>&lt;div&gt;
"asdf"-&gt;ReasonReact.string
2-&gt;string_of_int-&gt;ReasonReact.string
&lt;/div&gt; 
</code></pre>
<ol>
<li>Understanding Types scope when you can write type annotations, when you don't need them can be tricky. Typed languages are a skill, they aren't going to be something people can pick up without trying like JS.</li>
</ol>
<p>What <em>could</em> make ReasonML more productive (given some work)?</p>
<ol>
<li><strong>Editor Tooling!!!</strong> This is HUGE for a type 3 person, if ReasonML means
2. If you type <code>&lt;div</code> you should immediately get all the properties that a div could have. Better yet, if you type <code>&lt;Route</code> you should immediately get all the properties that that component could take.
1. If there's required arguments <code>&lt;Route</code> should quickly expand into <code>&lt;Route to="string" render={} /&gt;</code> or something like that.
3. If you type <code>foo(</code> you should see the signature of the function floating there, *even if it's an opened module function
4. <code>cmd-click</code>ing a function should always take to the right place</li>
<li><strong>Type and Syntax errors should always point you to the problem with a quick and convince description</strong>. This is not true right now. But it could be!</li>
<li><strong>Writing Mobile/Desktop native apps.</strong> Right now the tooling for JS native apps is very lacking. This is something ReasonML could really succeed at.</li>
<li><strong>Debugging runtime exceptions.</strong>
<ol>
<li>You may say "the code is soooo readable" It's not. Especially if you're writing a React component. I can read it OK but I'm familiar with Reason.</li>
<li>Because the JS is generated and doesn't look much like JS, it's hard to debug these kinds of things. We need source maps and easy way to JS.log something with the proper types in ReasonML's terms. Yes this is possible but it needs to be easier.</li>
</ol>
</li>
</ol>
<h2>Step 2: Just use it.</h2>
<p>This is how pragmatist do things. They just start. They make something useful. If they run into problems, they solve them. If they run into problems a lot, they make libraries. Rinse and repeat.</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a> <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">Carol Tuttle's Energy Types</a></p>


10:45:07.428 [debug] l:len=67

10:45:07.428 [debug] l:buf=26:<h1>Carol Tuttle's Energy Types relate to ReasonML</h1>
<h2>There's a pretty good chance you're a type 2</h2>
<h2>There's a pretty good chance many of your co-workers, especially those you need to convince, are type 3.</h2>
<p>Type 3 is about getting sh*t done. Period. You may say,  <em>"But I like to get stuff done too!"</em> Yes you do, but not like type 3's. The difference between you and them is your primary goal. Type 2's get stuff done by assessing the options, asking lots of questions, figuring out the best strategy, and once comfortable, start doing it.</p>
<p>Type 3's start the task, ask questions later, stop when it's done. Move on to the next TODO. If they run into problems they find the quickest solution and take it, move on to the next task.</p>
<p>They use JavaScript because it doesn't get in their way very much. They can quickly understand the language and get productive, which is what they are all about. They don't read docs, they don't ask questions, they copy and paste example code and modify it to do what they want, they leave that code and never take another thought. They are all about upward and forward movement.</p>
<p>Many of these tendencies would irk you as a type 2 personality. You may find things like using <code>float</code> in css when <code>flex box</code> is obviously better. Don't they know or care? <strong>NOPE</strong>, they do not, because <code>float</code> gets the job done, they won't be too interested until they try to align something vertically, then they'll do a google search, find that someone said that flex box can do it, they will copy and paste the code, then do it.</p>
<p>Another example is they'll probably use Class components for everything. Why? Because it's easier, and works for everything. They have to know 1 thing to accomplish everything they need to know.</p>
<p>Type 3's don't like to spend lots of time learning and assessing options. That's not "getting things done". Learning often slows down a task. If you have to learn something to do it, that's time wasted.</p>
<h2>Selling to a Type 3 person</h2>
<p>The only way you're going to sell to a Type 3 person is difficult. The main problem you're going to run into is that they don't usually care very much about doing things <em>best</em> way. They care about the clearest path to success. Usually the quickest path to success is not looking, discovering, learning, then applying a tool. It's applying a tool you already have in your repertoire.</p>
<p><strong>HARD FACT</strong>: Doing something in JavaScript is often faster than ReasonML, especially if you don't know ReasonML.</p>
<p>If you're a type 2 you probably have a much higher tolerance for reading a learning about things than a type 3 does. Which is fine on both sides.</p>
<p>So <strong>How do we sell</strong>?</p>
<h3>Step 1: We have to make <em>Reason the most productive language!</em>.</h3>
<p><em>well isn't it already?</em>.  In my opinion: "Kinda".</p>
<h3>What's really productive in ReasonML:</h3>
<ol>
<li>Changing a type, seeing everywhere it breaks</li>
<li>Refactoring</li>
</ol>
<hr>
<h2>[ Commenter(id, email) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense.</h2>
<p>3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this.
4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript.
5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-<em>can</em>-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.-
6.-less-bugs-in-production!
7.-expressing-things-via-types-like-`authorid-.md) ⤴
<em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>| Guest`</p>
<h3>What will probably always be harder in ReasonML:</h3>
<ol>
<li>Functions can't take different type of arguments this means that in React you have to do this, when you didn't  previously. This is an OCaml design choice, although maybe will change in the future.</li>
</ol>
<pre><code>&lt;div&gt;
"asdf"-&gt;ReasonReact.string
2-&gt;string_of_int-&gt;ReasonReact.string
&lt;/div&gt; 
</code></pre>
<ol>
<li>Understanding Types scope when you can write type annotations, when you don't need them can be tricky. Typed languages are a skill, they aren't going to be something people can pick up without trying like JS.</li>
</ol>
<p>What <em>could</em> make ReasonML more productive (given some work)?</p>
<ol>
<li><strong>Editor Tooling!!!</strong> This is HUGE for a type 3 person, if ReasonML means
2. If you type <code>&lt;div</code> you should immediately get all the properties that a div could have. Better yet, if you type <code>&lt;Route</code> you should immediately get all the properties that that component could take.
1. If there's required arguments <code>&lt;Route</code> should quickly expand into <code>&lt;Route to="string" render={} /&gt;</code> or something like that.
3. If you type <code>foo(</code> you should see the signature of the function floating there, *even if it's an opened module function
4. <code>cmd-click</code>ing a function should always take to the right place</li>
<li><strong>Type and Syntax errors should always point you to the problem with a quick and convince description</strong>. This is not true right now. But it could be!</li>
<li><strong>Writing Mobile/Desktop native apps.</strong> Right now the tooling for JS native apps is very lacking. This is something ReasonML could really succeed at.</li>
<li><strong>Debugging runtime exceptions.</strong>
<ol>
<li>You may say "the code is soooo readable" It's not. Especially if you're writing a React component. I can read it OK but I'm familiar with Reason.</li>
<li>Because the JS is generated and doesn't look much like JS, it's hard to debug these kinds of things. We need source maps and easy way to JS.log something with the proper types in ReasonML's terms. Yes this is possible but it needs to be easier.</li>
</ol>
</li>
</ol>
<h2>Step 2: Just use it.</h2>
<p>This is how pragmatist do things. They just start. They make something useful. If they run into problems, they solve them. If they run into problems a lot, they make libraries. Rinse and repeat.</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a> <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">Carol Tuttle's Energy Types</a></p>


10:45:07.428 [debug] l:len=672

10:45:07.428 [debug] l:buf=6:<h1>Carol Tuttle's Energy Types relate to ReasonML</h1>
<h2>There's a pretty good chance you're a type 2</h2>
<h2>There's a pretty good chance many of your co-workers, especially those you need to convince, are type 3.</h2>
<p>Type 3 is about getting sh*t done. Period. You may say,  <em>"But I like to get stuff done too!"</em> Yes you do, but not like type 3's. The difference between you and them is your primary goal. Type 2's get stuff done by assessing the options, asking lots of questions, figuring out the best strategy, and once comfortable, start doing it.</p>
<p>Type 3's start the task, ask questions later, stop when it's done. Move on to the next TODO. If they run into problems they find the quickest solution and take it, move on to the next task.</p>
<p>They use JavaScript because it doesn't get in their way very much. They can quickly understand the language and get productive, which is what they are all about. They don't read docs, they don't ask questions, they copy and paste example code and modify it to do what they want, they leave that code and never take another thought. They are all about upward and forward movement.</p>
<p>Many of these tendencies would irk you as a type 2 personality. You may find things like using <code>float</code> in css when <code>flex box</code> is obviously better. Don't they know or care? <strong>NOPE</strong>, they do not, because <code>float</code> gets the job done, they won't be too interested until they try to align something vertically, then they'll do a google search, find that someone said that flex box can do it, they will copy and paste the code, then do it.</p>
<p>Another example is they'll probably use Class components for everything. Why? Because it's easier, and works for everything. They have to know 1 thing to accomplish everything they need to know.</p>
<p>Type 3's don't like to spend lots of time learning and assessing options. That's not "getting things done". Learning often slows down a task. If you have to learn something to do it, that's time wasted.</p>
<h2>Selling to a Type 3 person</h2>
<p>The only way you're going to sell to a Type 3 person is difficult. The main problem you're going to run into is that they don't usually care very much about doing things <em>best</em> way. They care about the clearest path to success. Usually the quickest path to success is not looking, discovering, learning, then applying a tool. It's applying a tool you already have in your repertoire.</p>
<p><strong>HARD FACT</strong>: Doing something in JavaScript is often faster than ReasonML, especially if you don't know ReasonML.</p>
<p>If you're a type 2 you probably have a much higher tolerance for reading a learning about things than a type 3 does. Which is fine on both sides.</p>
<p>So <strong>How do we sell</strong>?</p>
<h3>Step 1: We have to make <em>Reason the most productive language!</em>.</h3>
<p><em>well isn't it already?</em>.  In my opinion: "Kinda".</p>
<h3>What's really productive in ReasonML:</h3>
<ol>
<li>Changing a type, seeing everywhere it breaks</li>
<li>Refactoring</li>
</ol>
<hr>
<h2>[ Commenter(id, email) ](-this-is-really-easy-in-reasonml.-so-long-as-the-compiler-errors-make-sense.</h2>
<p>3.-compilation-times!-love-to-see-the-browser-refresh-sooooo-fast.-this-is-a-huge-thing-to-talk-about-and-we-should-all-be-very-proud-of-this.
4.-bundle-size-reduction.-having-to-take-a-day-or-two-to-trim-down-bundle-size-is-work-nobody-wants-to-do,-what-if-by-using-this-language-you-would-just-naturally-get-small-bundles?-this-could-be-huge.-javascript-really-doesn't--do-well-with-this-and-never-really-will.-nor-will-typescript.
5.-no-imports!-this-takes-a-bit-to-get-used-to,-and-<em>can</em>-lead-to-some-confusion-initially,-but-with-some-good-tooling-this-could-be-a-huge-strength.-
6.-less-bugs-in-production!
7.-expressing-things-via-types-like-`authorid-.md) ⤴
<em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>| Guest`</p>
<h3>What will probably always be harder in ReasonML:</h3>
<ol>
<li>Functions can't take different type of arguments this means that in React you have to do this, when you didn't  previously. This is an OCaml design choice, although maybe will change in the future.</li>
</ol>
<pre><code>&lt;div&gt;
"asdf"-&gt;ReasonReact.string
2-&gt;string_of_int-&gt;ReasonReact.string
&lt;/div&gt; 
</code></pre>
<ol>
<li>Understanding Types scope when you can write type annotations, when you don't need them can be tricky. Typed languages are a skill, they aren't going to be something people can pick up without trying like JS.</li>
</ol>
<p>What <em>could</em> make ReasonML more productive (given some work)?</p>
<ol>
<li><strong>Editor Tooling!!!</strong> This is HUGE for a type 3 person, if ReasonML means
2. If you type <code>&lt;div</code> you should immediately get all the properties that a div could have. Better yet, if you type <code>&lt;Route</code> you should immediately get all the properties that that component could take.
1. If there's required arguments <code>&lt;Route</code> should quickly expand into <code>&lt;Route to="string" render={} /&gt;</code> or something like that.
3. If you type <code>foo(</code> you should see the signature of the function floating there, *even if it's an opened module function
4. <code>cmd-click</code>ing a function should always take to the right place</li>
<li><strong>Type and Syntax errors should always point you to the problem with a quick and convince description</strong>. This is not true right now. But it could be!</li>
<li><strong>Writing Mobile/Desktop native apps.</strong> Right now the tooling for JS native apps is very lacking. This is something ReasonML could really succeed at.</li>
<li><strong>Debugging runtime exceptions.</strong>
<ol>
<li>You may say "the code is soooo readable" It's not. Especially if you're writing a React component. I can read it OK but I'm familiar with Reason.</li>
<li>Because the JS is generated and doesn't look much like JS, it's hard to debug these kinds of things. We need source maps and easy way to JS.log something with the proper types in ReasonML's terms. Yes this is possible but it needs to be easier.</li>
</ol>
</li>
</ol>
<h2>Step 2: Just use it.</h2>
<p>This is how pragmatist do things. They just start. They make something useful. If they run into problems, they solve them. If they run into problems a lot, they make libraries. Rinse and repeat.</p>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a> <a href="http://localhost:5000/reason" rel="noopener noreferrer">reason</a> <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">Carol Tuttle's Energy Types</a></p>


10:45:07.428 [debug] l:len=

10:45:07.428 [debug] l:buf empty

10:45:07.428 [debug] l:len=

10:45:07.428 [debug] l:buf=79:<h1>mindflayer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.429 [debug] l:len=7

10:45:07.429 [debug] l:buf=9:<h1>mindflayer</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf empty

10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf=84:<h1>Pasted image 22</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.429 [debug] l:len=8

10:45:07.429 [debug] l:buf=4:<h1>Pasted image 22</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf empty

10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf=322:<h1>Second Brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.429 [debug] l:len=3

10:45:07.429 [debug] l:buf=22:<h1>Second Brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.429 [debug] l:len=32

10:45:07.429 [debug] l:buf=2:<h1>Second Brain</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/the-second-brain---a-life-changing-productivity-system" rel="noopener noreferrer">The Second Brain - A Life-Changing Productivity System</a></li>
</ul>


10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf empty

10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf=1497:<h1>Blank Check Projects</h1>
<p>When you have a "Blank Check Project" you can expect the amount of time we spend on it to be <strong>very high</strong> because the cost isn't <a href="http://localhost:5000/betting" rel="noopener noreferrer">capped</a>. This is because there's no <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> to prevent any <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that comes along.</p>
<p>The only thing that will every make the project get done is if stakeholders get impatient (and the programmers use it) for a feature which then puts the stress and pressure a timebox would have given.</p>
<p>It's tempting to think, "you can't rush quality", but I think it's a little flawed, <a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a>, if you don't have them anything can be put into your sprint. If you're allowed to go in all directions you'll make less progress then if you go in one (see: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>).</p>
<p>While it's counter-intuitive to <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things, I think it's very important.</p>
<p>Note, I'm not saying that we never extend a project, but I do think that by making it too easy we're asking for a lot of runaway train kind of projects.</p>


10:45:07.429 [debug] l:len=1

10:45:07.429 [debug] l:buf=497:<h1>Blank Check Projects</h1>
<p>When you have a "Blank Check Project" you can expect the amount of time we spend on it to be <strong>very high</strong> because the cost isn't <a href="http://localhost:5000/betting" rel="noopener noreferrer">capped</a>. This is because there's no <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> to prevent any <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that comes along.</p>
<p>The only thing that will every make the project get done is if stakeholders get impatient (and the programmers use it) for a feature which then puts the stress and pressure a timebox would have given.</p>
<p>It's tempting to think, "you can't rush quality", but I think it's a little flawed, <a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a>, if you don't have them anything can be put into your sprint. If you're allowed to go in all directions you'll make less progress then if you go in one (see: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>).</p>
<p>While it's counter-intuitive to <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things, I think it's very important.</p>
<p>Note, I'm not saying that we never extend a project, but I do think that by making it too easy we're asking for a lot of runaway train kind of projects.</p>


10:45:07.429 [debug] l:len=14

10:45:07.429 [debug] l:buf=97:<h1>Blank Check Projects</h1>
<p>When you have a "Blank Check Project" you can expect the amount of time we spend on it to be <strong>very high</strong> because the cost isn't <a href="http://localhost:5000/betting" rel="noopener noreferrer">capped</a>. This is because there's no <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> to prevent any <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that comes along.</p>
<p>The only thing that will every make the project get done is if stakeholders get impatient (and the programmers use it) for a feature which then puts the stress and pressure a timebox would have given.</p>
<p>It's tempting to think, "you can't rush quality", but I think it's a little flawed, <a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a>, if you don't have them anything can be put into your sprint. If you're allowed to go in all directions you'll make less progress then if you go in one (see: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>).</p>
<p>While it's counter-intuitive to <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things, I think it's very important.</p>
<p>Note, I'm not saying that we never extend a project, but I do think that by making it too easy we're asking for a lot of runaway train kind of projects.</p>


10:45:07.429 [debug] l:len=149

10:45:07.429 [debug] l:buf=7:<h1>Blank Check Projects</h1>
<p>When you have a "Blank Check Project" you can expect the amount of time we spend on it to be <strong>very high</strong> because the cost isn't <a href="http://localhost:5000/betting" rel="noopener noreferrer">capped</a>. This is because there's no <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> to prevent any <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> that comes along.</p>
<p>The only thing that will every make the project get done is if stakeholders get impatient (and the programmers use it) for a feature which then puts the stress and pressure a timebox would have given.</p>
<p>It's tempting to think, "you can't rush quality", but I think it's a little flawed, <a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a>, if you don't have them anything can be put into your sprint. If you're allowed to go in all directions you'll make less progress then if you go in one (see: <a href="http://localhost:5000/essentialism" rel="noopener noreferrer">Essentialism</a>).</p>
<p>While it's counter-intuitive to <a href="http://localhost:5000/timebox" rel="noopener noreferrer">timebox</a> things, I think it's very important.</p>
<p>Note, I'm not saying that we never extend a project, but I do think that by making it too easy we're asking for a lot of runaway train kind of projects.</p>


10:45:07.429 [debug] l:len=

10:45:07.429 [debug] l:buf empty

10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf=935:<h1>Dark Pattern</h1>
<p>A way of getting a result through shady or evil means.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.430 [debug] l:len=9

10:45:07.430 [debug] l:buf=35:<h1>Dark Pattern</h1>
<p>A way of getting a result through shady or evil means.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.430 [debug] l:len=93

10:45:07.430 [debug] l:buf=5:<h1>Dark Pattern</h1>
<p>A way of getting a result through shady or evil means.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/3-rewards-we-seek" rel="noopener noreferrer">3 rewards we seek</a></li>
<li><a href="http://localhost:5000/doing-things-the-fun-way" rel="noopener noreferrer">Doing things the fun way</a></li>
<li><a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></li>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
<li><a href="http://localhost:5000/configuration-as-a-ux-cop-out" rel="noopener noreferrer">configuration as a UX cop-out</a></li>
<li><a href="http://localhost:5000/sticky" rel="noopener noreferrer">sticky</a></li>
<li><a href="http://localhost:5000/the-syndrome-strategy" rel="noopener noreferrer">the Syndrome strategy</a></li>
</ul>


10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf empty

10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf=78:<h1>attention</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.430 [debug] l:len=7

10:45:07.430 [debug] l:buf=8:<h1>attention</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf empty

10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf=289:<h1>nesting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.430 [debug] l:len=2

10:45:07.430 [debug] l:buf=89:<h1>nesting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.430 [debug] l:len=28

10:45:07.430 [debug] l:buf=9:<h1>nesting</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf empty

10:45:07.430 [debug] l:len=

10:45:07.430 [debug] l:buf=102:<h1>Styled Components Learning</h1>
<ul>
<li>Follow the path of least resistance</li>
<li></li>
</ul>


10:45:07.430 [debug] l:len=1

10:45:07.430 [debug] l:buf=02:<h1>Styled Components Learning</h1>
<ul>
<li>Follow the path of least resistance</li>
<li></li>
</ul>


10:45:07.430 [debug] l:len=10

10:45:07.430 [debug] l:buf=2:<h1>Styled Components Learning</h1>
<ul>
<li>Follow the path of least resistance</li>
<li></li>
</ul>


10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf empty

10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf=305:<h1>Pasted image 20200922163434</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.431 [debug] l:len=3

10:45:07.431 [debug] l:buf=05:<h1>Pasted image 20200922163434</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.431 [debug] l:len=30

10:45:07.431 [debug] l:buf=5:<h1>Pasted image 20200922163434</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf empty

10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf=226:<h1>Electron</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.431 [debug] l:len=2

10:45:07.431 [debug] l:buf=26:<h1>Electron</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.431 [debug] l:len=22

10:45:07.431 [debug] l:buf=6:<h1>Electron</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/obsidian" rel="noopener noreferrer">Obsidian</a></li>
</ul>


10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf empty

10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf=300:<h1>Zettelkasten-items</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.431 [debug] l:len=3

10:45:07.431 [debug] l:buf=00:<h1>Zettelkasten-items</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.431 [debug] l:len=30

10:45:07.431 [debug] l:buf=0:<h1>Zettelkasten-items</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf empty

10:45:07.431 [debug] l:len=

10:45:07.431 [debug] l:buf=84:<h1>Pasted image 20</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.431 [debug] l:len=8

10:45:07.431 [debug] l:buf=4:<h1>Pasted image 20</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.431 [debug] l:len=

10:45:07.432 [debug] l:buf empty

10:45:07.432 [debug] l:len=

10:45:07.432 [debug] l:buf=675:<h1>quadrant 1</h1>
<ul>
<li>Important and urgant
<ul>
<li><a href="http://localhost:5000/fires" rel="noopener noreferrer">fires</a> and general emergencies</li>
<li>If you don't do it right now it's going to be bad</li>
</ul>
</li>
<li>People that live in <a href="http://localhost:5000/crisis-mode" rel="noopener noreferrer">crisis mode</a> often spend a lot of time here</li>
<li>often steal time from <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activites</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.432 [debug] l:len=6

10:45:07.432 [debug] l:buf=75:<h1>quadrant 1</h1>
<ul>
<li>Important and urgant
<ul>
<li><a href="http://localhost:5000/fires" rel="noopener noreferrer">fires</a> and general emergencies</li>
<li>If you don't do it right now it's going to be bad</li>
</ul>
</li>
<li>People that live in <a href="http://localhost:5000/crisis-mode" rel="noopener noreferrer">crisis mode</a> often spend a lot of time here</li>
<li>often steal time from <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activites</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.432 [debug] l:len=67

10:45:07.432 [debug] l:buf=5:<h1>quadrant 1</h1>
<ul>
<li>Important and urgant
<ul>
<li><a href="http://localhost:5000/fires" rel="noopener noreferrer">fires</a> and general emergencies</li>
<li>If you don't do it right now it's going to be bad</li>
</ul>
</li>
<li>People that live in <a href="http://localhost:5000/crisis-mode" rel="noopener noreferrer">crisis mode</a> often spend a lot of time here</li>
<li>often steal time from <a href="http://localhost:5000/quadrant-2" rel="noopener noreferrer">quadrant 2</a> activites</li>
<li></li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.432 [debug] l:len=

10:45:07.432 [debug] l:buf empty

10:45:07.432 [debug] l:len=

10:45:07.432 [debug] l:buf=517:<h1>Clear navigation</h1>
<p><a href="https://rep.ly/answer/5eea35eba0a17a00166b8246" rel="noopener noreferrer">https://rep.ly/answer/5eea35eba0a17a00166b8246</a></p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.432 [debug] l:len=5

10:45:07.432 [debug] l:buf=17:<h1>Clear navigation</h1>
<p><a href="https://rep.ly/answer/5eea35eba0a17a00166b8246" rel="noopener noreferrer">https://rep.ly/answer/5eea35eba0a17a00166b8246</a></p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.432 [debug] l:len=51

10:45:07.432 [debug] l:buf=7:<h1>Clear navigation</h1>
<p><a href="https://rep.ly/answer/5eea35eba0a17a00166b8246" rel="noopener noreferrer">https://rep.ly/answer/5eea35eba0a17a00166b8246</a></p>
<ul>
<li><a href="http://localhost:5000/hey!'s-design" rel="noopener noreferrer">HEY!'s design</a></li>
<li><a href="http://localhost:5000/github-projects-navigation-v.s.-basecamp" rel="noopener noreferrer">Github Projects Navigation V.S. Basecamp</a></li>
<li><a href="http://localhost:5000/roadmap" rel="noopener noreferrer">roadmap</a></li>
</ul>


10:45:07.432 [debug] l:len=

10:45:07.432 [debug] l:buf empty

10:45:07.432 [debug] l:len=

10:45:07.432 [debug] l:buf=1087:<h1>Hard Middle VS Hard Edge</h1>
<p>Each ticket has a hard middle and as you throw them into the bucket you get increased scope and increased deadlines. Each ticket expands a little (or a lot) and you can never actually catch up.</p>
<p>Shape up plays into the idea that people change their behavior based on <a href="http://localhost:5000/deadlines" rel="noopener noreferrer">deadlines</a>. It's the idea of, "<a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a> 🔐</p>
<p>Ref: <a href="https://twitter.com/rjs/status/1257811073182257152" rel="noopener noreferrer">https://twitter.com/rjs/status/1257811073182257152</a></p>
<hr>
<h2><a href="http://localhost:5000/nested-fixed-scope-and-variable.png" rel="noopener noreferrer">Nested Fixed Scope and Variable</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can even nest them ☝🏻</p>
<p>Keywords: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a>, <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.432 [debug] l:len=1

10:45:07.433 [debug] l:buf=087:<h1>Hard Middle VS Hard Edge</h1>
<p>Each ticket has a hard middle and as you throw them into the bucket you get increased scope and increased deadlines. Each ticket expands a little (or a lot) and you can never actually catch up.</p>
<p>Shape up plays into the idea that people change their behavior based on <a href="http://localhost:5000/deadlines" rel="noopener noreferrer">deadlines</a>. It's the idea of, "<a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a> 🔐</p>
<p>Ref: <a href="https://twitter.com/rjs/status/1257811073182257152" rel="noopener noreferrer">https://twitter.com/rjs/status/1257811073182257152</a></p>
<hr>
<h2><a href="http://localhost:5000/nested-fixed-scope-and-variable.png" rel="noopener noreferrer">Nested Fixed Scope and Variable</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can even nest them ☝🏻</p>
<p>Keywords: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a>, <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.433 [debug] l:len=10

10:45:07.433 [debug] l:buf=87:<h1>Hard Middle VS Hard Edge</h1>
<p>Each ticket has a hard middle and as you throw them into the bucket you get increased scope and increased deadlines. Each ticket expands a little (or a lot) and you can never actually catch up.</p>
<p>Shape up plays into the idea that people change their behavior based on <a href="http://localhost:5000/deadlines" rel="noopener noreferrer">deadlines</a>. It's the idea of, "<a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a> 🔐</p>
<p>Ref: <a href="https://twitter.com/rjs/status/1257811073182257152" rel="noopener noreferrer">https://twitter.com/rjs/status/1257811073182257152</a></p>
<hr>
<h2><a href="http://localhost:5000/nested-fixed-scope-and-variable.png" rel="noopener noreferrer">Nested Fixed Scope and Variable</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can even nest them ☝🏻</p>
<p>Keywords: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a>, <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.433 [debug] l:len=108

10:45:07.433 [debug] l:buf=7:<h1>Hard Middle VS Hard Edge</h1>
<p>Each ticket has a hard middle and as you throw them into the bucket you get increased scope and increased deadlines. Each ticket expands a little (or a lot) and you can never actually catch up.</p>
<p>Shape up plays into the idea that people change their behavior based on <a href="http://localhost:5000/deadlines" rel="noopener noreferrer">deadlines</a>. It's the idea of, "<a href="http://localhost:5000/lock-in" rel="noopener noreferrer">lock in</a> 🔐</p>
<p>Ref: <a href="https://twitter.com/rjs/status/1257811073182257152" rel="noopener noreferrer">https://twitter.com/rjs/status/1257811073182257152</a></p>
<hr>
<h2><a href="http://localhost:5000/nested-fixed-scope-and-variable.png" rel="noopener noreferrer">Nested Fixed Scope and Variable</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>You can even nest them ☝🏻</p>
<p>Keywords: <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a>, <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a></p>


10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf empty

10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf=75:<h1>BYUI-I</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.433 [debug] l:len=7

10:45:07.433 [debug] l:buf=5:<h1>BYUI-I</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf empty

10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf=80:<h1>wisdom</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.433 [debug] l:len=8

10:45:07.433 [debug] l:buf=0:<h1>wisdom</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf empty

10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf=1025:<h1>frogducks capture</h1>
<h2>overall idea</h2>
<ul>
<li>frogducks have stolen the letters, we need to gather them from the mad scientist lair</li>
</ul>
<h2>enemies</h2>
<p>Frog duck</p>
<ul>
<li>attacks if it sees you,</li>
<li>flys after you if you try to run away</li>
<li>spits slime to slow you down</li>
<li>tries to tie you up?</li>
</ul>
<h2>Items</h2>
<p>Rope</p>
<ul>
<li>wrap up frogducks with rope</li>
<li>lasso things</li>
<li>swing on rope?</li>
<li>limited supply for level</li>
</ul>
<p>Cat claws</p>
<ul>
<li>climb in climbable surfaces, slide on non climbable</li>
<li>scratch to stun frogducks</li>
</ul>
<p>Squirt gun</p>
<ul>
<li>turn frogducks back into frog / duck</li>
<li>have to fill with water</li>
</ul>
<p>Invisibility cloak</p>
<p>Drone</p>
<ul>
<li>fly around and pick up things?</li>
<li>tie up?</li>
</ul>
<p>Time machine</p>
<ul>
<li>restart the level</li>
<li>both people must not die</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/gamedev" rel="noopener noreferrer">gamedev</a></p>


10:45:07.433 [debug] l:len=1

10:45:07.433 [debug] l:buf=025:<h1>frogducks capture</h1>
<h2>overall idea</h2>
<ul>
<li>frogducks have stolen the letters, we need to gather them from the mad scientist lair</li>
</ul>
<h2>enemies</h2>
<p>Frog duck</p>
<ul>
<li>attacks if it sees you,</li>
<li>flys after you if you try to run away</li>
<li>spits slime to slow you down</li>
<li>tries to tie you up?</li>
</ul>
<h2>Items</h2>
<p>Rope</p>
<ul>
<li>wrap up frogducks with rope</li>
<li>lasso things</li>
<li>swing on rope?</li>
<li>limited supply for level</li>
</ul>
<p>Cat claws</p>
<ul>
<li>climb in climbable surfaces, slide on non climbable</li>
<li>scratch to stun frogducks</li>
</ul>
<p>Squirt gun</p>
<ul>
<li>turn frogducks back into frog / duck</li>
<li>have to fill with water</li>
</ul>
<p>Invisibility cloak</p>
<p>Drone</p>
<ul>
<li>fly around and pick up things?</li>
<li>tie up?</li>
</ul>
<p>Time machine</p>
<ul>
<li>restart the level</li>
<li>both people must not die</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/gamedev" rel="noopener noreferrer">gamedev</a></p>


10:45:07.433 [debug] l:len=10

10:45:07.433 [debug] l:buf=25:<h1>frogducks capture</h1>
<h2>overall idea</h2>
<ul>
<li>frogducks have stolen the letters, we need to gather them from the mad scientist lair</li>
</ul>
<h2>enemies</h2>
<p>Frog duck</p>
<ul>
<li>attacks if it sees you,</li>
<li>flys after you if you try to run away</li>
<li>spits slime to slow you down</li>
<li>tries to tie you up?</li>
</ul>
<h2>Items</h2>
<p>Rope</p>
<ul>
<li>wrap up frogducks with rope</li>
<li>lasso things</li>
<li>swing on rope?</li>
<li>limited supply for level</li>
</ul>
<p>Cat claws</p>
<ul>
<li>climb in climbable surfaces, slide on non climbable</li>
<li>scratch to stun frogducks</li>
</ul>
<p>Squirt gun</p>
<ul>
<li>turn frogducks back into frog / duck</li>
<li>have to fill with water</li>
</ul>
<p>Invisibility cloak</p>
<p>Drone</p>
<ul>
<li>fly around and pick up things?</li>
<li>tie up?</li>
</ul>
<p>Time machine</p>
<ul>
<li>restart the level</li>
<li>both people must not die</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/gamedev" rel="noopener noreferrer">gamedev</a></p>


10:45:07.433 [debug] l:len=102

10:45:07.433 [debug] l:buf=5:<h1>frogducks capture</h1>
<h2>overall idea</h2>
<ul>
<li>frogducks have stolen the letters, we need to gather them from the mad scientist lair</li>
</ul>
<h2>enemies</h2>
<p>Frog duck</p>
<ul>
<li>attacks if it sees you,</li>
<li>flys after you if you try to run away</li>
<li>spits slime to slow you down</li>
<li>tries to tie you up?</li>
</ul>
<h2>Items</h2>
<p>Rope</p>
<ul>
<li>wrap up frogducks with rope</li>
<li>lasso things</li>
<li>swing on rope?</li>
<li>limited supply for level</li>
</ul>
<p>Cat claws</p>
<ul>
<li>climb in climbable surfaces, slide on non climbable</li>
<li>scratch to stun frogducks</li>
</ul>
<p>Squirt gun</p>
<ul>
<li>turn frogducks back into frog / duck</li>
<li>have to fill with water</li>
</ul>
<p>Invisibility cloak</p>
<p>Drone</p>
<ul>
<li>fly around and pick up things?</li>
<li>tie up?</li>
</ul>
<p>Time machine</p>
<ul>
<li>restart the level</li>
<li>both people must not die</li>
</ul>
<p>Tags:
<a href="http://localhost:5000/gamedev" rel="noopener noreferrer">gamedev</a></p>


10:45:07.433 [debug] l:len=

10:45:07.433 [debug] l:buf empty

10:45:07.433 [debug] l:len=

10:45:07.434 [debug] l:buf=179:<h1>Article--Betting Against Slack</h1>
<p><a href="https://blog.doist.com/betting-against-slack/" rel="noopener noreferrer">https://blog.doist.com/betting-against-slack/</a></p>


10:45:07.434 [debug] l:len=1

10:45:07.434 [debug] l:buf=79:<h1>Article--Betting Against Slack</h1>
<p><a href="https://blog.doist.com/betting-against-slack/" rel="noopener noreferrer">https://blog.doist.com/betting-against-slack/</a></p>


10:45:07.434 [debug] l:len=17

10:45:07.434 [debug] l:buf=9:<h1>Article--Betting Against Slack</h1>
<p><a href="https://blog.doist.com/betting-against-slack/" rel="noopener noreferrer">https://blog.doist.com/betting-against-slack/</a></p>


10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf empty

10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf=672:<h1>WP-Constrains on Creativity</h1>
<p><a href="http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486" rel="noopener noreferrer">http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486</a></p>
<p><a href="http://localhost:5000/the-cambridge-handbook-of-creativity.pdf" rel="noopener noreferrer">The Cambridge Handbook of Creativity.pdf</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a></li>
</ul>


10:45:07.434 [debug] l:len=6

10:45:07.434 [debug] l:buf=72:<h1>WP-Constrains on Creativity</h1>
<p><a href="http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486" rel="noopener noreferrer">http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486</a></p>
<p><a href="http://localhost:5000/the-cambridge-handbook-of-creativity.pdf" rel="noopener noreferrer">The Cambridge Handbook of Creativity.pdf</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a></li>
</ul>


10:45:07.434 [debug] l:len=67

10:45:07.434 [debug] l:buf=2:<h1>WP-Constrains on Creativity</h1>
<p><a href="http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486" rel="noopener noreferrer">http://interchange.education/sites/default/files/The%20Cambridge%20Handbook%20of%20Creativity.pdf#page=486</a></p>
<p><a href="http://localhost:5000/the-cambridge-handbook-of-creativity.pdf" rel="noopener noreferrer">The Cambridge Handbook of Creativity.pdf</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/constraints-are-good-for-focus-and-creativity" rel="noopener noreferrer">constraints are good for focus and creativity</a></li>
</ul>


10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf empty

10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf=408:<h1>tagging system</h1>
<p>See <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs#tagging" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs#Tagging</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.434 [debug] l:len=4

10:45:07.434 [debug] l:buf=08:<h1>tagging system</h1>
<p>See <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs#tagging" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs#Tagging</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.434 [debug] l:len=40

10:45:07.434 [debug] l:buf=8:<h1>tagging system</h1>
<p>See <a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs#tagging" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs#Tagging</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/folders-v.s-tagging-v.s-graphs-v.s.-mocs" rel="noopener noreferrer">Folders V.S Tagging V.S Graphs V.S. MOCs</a></li>
</ul>


10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf empty

10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf=81:<h1>Netflix</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.434 [debug] l:len=8

10:45:07.434 [debug] l:buf=1:<h1>Netflix</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf empty

10:45:07.434 [debug] l:len=

10:45:07.434 [debug] l:buf=811:<h1>Do not establish your credibility</h1>
<p>Open with a question they would very much like an answer for. That's it. Pose a question. You don't have to announce you're going to answer it, just… start. If you're looking for an opening phrase, try something like, “Imagine you want to…” and then go. Don't hesitate. And whatever you do, do NOT try to “establish your credibility”. Never try to tell them or sell them on why they should listen to you. If the question is one they want answered, their brain won't let it go. The rest of the presentation is just a steady reveal of the answer(s).</p>
<p><a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful" rel="noopener noreferrer">http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful</a></p>


10:45:07.434 [debug] l:len=8

10:45:07.435 [debug] l:buf=11:<h1>Do not establish your credibility</h1>
<p>Open with a question they would very much like an answer for. That's it. Pose a question. You don't have to announce you're going to answer it, just… start. If you're looking for an opening phrase, try something like, “Imagine you want to…” and then go. Don't hesitate. And whatever you do, do NOT try to “establish your credibility”. Never try to tell them or sell them on why they should listen to you. If the question is one they want answered, their brain won't let it go. The rest of the presentation is just a steady reveal of the answer(s).</p>
<p><a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful" rel="noopener noreferrer">http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful</a></p>


10:45:07.435 [debug] l:len=81

10:45:07.435 [debug] l:buf=1:<h1>Do not establish your credibility</h1>
<p>Open with a question they would very much like an answer for. That's it. Pose a question. You don't have to announce you're going to answer it, just… start. If you're looking for an opening phrase, try something like, “Imagine you want to…” and then go. Don't hesitate. And whatever you do, do NOT try to “establish your credibility”. Never try to tell them or sell them on why they should listen to you. If the question is one they want answered, their brain won't let it go. The rest of the presentation is just a steady reveal of the answer(s).</p>
<p><a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful" rel="noopener noreferrer">http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful</a></p>


10:45:07.435 [debug] l:len=

10:45:07.435 [debug] l:buf empty

10:45:07.435 [debug] l:len=

10:45:07.435 [debug] l:buf=2123:<h1>Quill Chat</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019153417.png" rel="noopener noreferrer">Pasted image 20201019153417</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://quill.chat/" rel="noopener noreferrer">https://quill.chat/</a></p>
<p>A very native version of chat:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152445.png" rel="noopener noreferrer">Pasted image 20201019152445</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Takes a lot of the same ideas from <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a>, namely the idea that it tries to encourage people to <em>comment on</em> a thread instead of start a new chat below. I don't think it's New Thread box is quite as effective as <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a> button that turns into a textbox in putting enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a>.</p>
<p>I do find it's different expanded options interesting, although not very opinionated.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152812.png" rel="noopener noreferrer">Pasted image 20201019152812</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Soft Titles</h2>
<p>If you push <code>Shift+Enter</code> then it will create a title. If you push it again it will turn into a multi line mode that doesn't require you to push <code>Shift+Enter</code> just <code>Enter</code> to send.</p>
<p>This is a noble effort, but I think still is too easy to do stuff.</p>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-19-at-03.30.08-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-19 at 03.30.08 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.435 [debug] l:len=2

10:45:07.435 [debug] l:buf=123:<h1>Quill Chat</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019153417.png" rel="noopener noreferrer">Pasted image 20201019153417</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://quill.chat/" rel="noopener noreferrer">https://quill.chat/</a></p>
<p>A very native version of chat:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152445.png" rel="noopener noreferrer">Pasted image 20201019152445</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Takes a lot of the same ideas from <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a>, namely the idea that it tries to encourage people to <em>comment on</em> a thread instead of start a new chat below. I don't think it's New Thread box is quite as effective as <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a> button that turns into a textbox in putting enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a>.</p>
<p>I do find it's different expanded options interesting, although not very opinionated.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152812.png" rel="noopener noreferrer">Pasted image 20201019152812</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Soft Titles</h2>
<p>If you push <code>Shift+Enter</code> then it will create a title. If you push it again it will turn into a multi line mode that doesn't require you to push <code>Shift+Enter</code> just <code>Enter</code> to send.</p>
<p>This is a noble effort, but I think still is too easy to do stuff.</p>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-19-at-03.30.08-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-19 at 03.30.08 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.435 [debug] l:len=21

10:45:07.435 [debug] l:buf=23:<h1>Quill Chat</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019153417.png" rel="noopener noreferrer">Pasted image 20201019153417</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://quill.chat/" rel="noopener noreferrer">https://quill.chat/</a></p>
<p>A very native version of chat:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152445.png" rel="noopener noreferrer">Pasted image 20201019152445</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Takes a lot of the same ideas from <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a>, namely the idea that it tries to encourage people to <em>comment on</em> a thread instead of start a new chat below. I don't think it's New Thread box is quite as effective as <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a> button that turns into a textbox in putting enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a>.</p>
<p>I do find it's different expanded options interesting, although not very opinionated.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152812.png" rel="noopener noreferrer">Pasted image 20201019152812</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Soft Titles</h2>
<p>If you push <code>Shift+Enter</code> then it will create a title. If you push it again it will turn into a multi line mode that doesn't require you to push <code>Shift+Enter</code> just <code>Enter</code> to send.</p>
<p>This is a noble effort, but I think still is too easy to do stuff.</p>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-19-at-03.30.08-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-19 at 03.30.08 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.435 [debug] l:len=212

10:45:07.435 [debug] l:buf=3:<h1>Quill Chat</h1>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019153417.png" rel="noopener noreferrer">Pasted image 20201019153417</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><a href="https://quill.chat/" rel="noopener noreferrer">https://quill.chat/</a></p>
<p>A very native version of chat:</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152445.png" rel="noopener noreferrer">Pasted image 20201019152445</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Takes a lot of the same ideas from <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a>, namely the idea that it tries to encourage people to <em>comment on</em> a thread instead of start a new chat below. I don't think it's New Thread box is quite as effective as <a href="http://localhost:5000/microsoft-teams" rel="noopener noreferrer">Microsoft teams</a> button that turns into a textbox in putting enough <a href="http://localhost:5000/friction-in-design" rel="noopener noreferrer">friction</a>.</p>
<p>I do find it's different expanded options interesting, although not very opinionated.</p>
<hr>
<h2><a href="http://localhost:5000/pasted-image-20201019152812.png" rel="noopener noreferrer">Pasted image 20201019152812</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<h2>Soft Titles</h2>
<p>If you push <code>Shift+Enter</code> then it will create a title. If you push it again it will turn into a multi line mode that doesn't require you to push <code>Shift+Enter</code> just <code>Enter</code> to send.</p>
<p>This is a noble effort, but I think still is too easy to do stuff.</p>
<hr>
<h2><a href="http://localhost:5000/screen-recording-2020-10-19-at-03.30.08-pm.gif.md" rel="noopener noreferrer">Screen Recording 2020-10-19 at 03.30.08 PM.gif</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-competitors" rel="noopener noreferrer">Slack competitors</a></li>
</ul>


10:45:07.435 [debug] l:len=

10:45:07.435 [debug] l:buf empty

10:45:07.435 [debug] l:len=

10:45:07.435 [debug] l:buf=296:<h1>Pasted image 2</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.435 [debug] l:len=2

10:45:07.435 [debug] l:buf=96:<h1>Pasted image 2</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.435 [debug] l:len=29

10:45:07.435 [debug] l:buf=6:<h1>Pasted image 2</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/youtube----introduction-to--zettelkasten" rel="noopener noreferrer">Youtube -- Introduction to  Zettelkasten</a></li>
</ul>


10:45:07.435 [debug] l:len=

10:45:07.435 [debug] l:buf empty

10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf=74:<h1>M1107</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.436 [debug] l:len=7

10:45:07.436 [debug] l:buf=4:<h1>M1107</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf empty

10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf=231:<h1>Speare--revisions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.436 [debug] l:len=2

10:45:07.436 [debug] l:buf=31:<h1>Speare--revisions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.436 [debug] l:len=23

10:45:07.436 [debug] l:buf=1:<h1>Speare--revisions</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/speare" rel="noopener noreferrer">Speare</a></li>
</ul>


10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf empty

10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf=259:<h1>Life Changing Magic of Tidying Up</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a></li>
</ul>


10:45:07.436 [debug] l:len=2

10:45:07.436 [debug] l:buf=59:<h1>Life Changing Magic of Tidying Up</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a></li>
</ul>


10:45:07.436 [debug] l:len=25

10:45:07.436 [debug] l:buf=9:<h1>Life Changing Magic of Tidying Up</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/organization" rel="noopener noreferrer">organization</a></li>
</ul>


10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf empty

10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf=353:<p><a href="http://localhost:5000/modules" rel="noopener noreferrer">Modules</a> vs. <a href="http://localhost:5000/microservices" rel="noopener noreferrer">microservices</a> – O’Reilly</p>
<p><a href="https://www.oreilly.com/radar/modules-vs-microservices/" rel="noopener noreferrer">https://www.oreilly.com/radar/modules-vs-microservices/</a></p>


10:45:07.436 [debug] l:len=3

10:45:07.436 [debug] l:buf=53:<p><a href="http://localhost:5000/modules" rel="noopener noreferrer">Modules</a> vs. <a href="http://localhost:5000/microservices" rel="noopener noreferrer">microservices</a> – O’Reilly</p>
<p><a href="https://www.oreilly.com/radar/modules-vs-microservices/" rel="noopener noreferrer">https://www.oreilly.com/radar/modules-vs-microservices/</a></p>


10:45:07.436 [debug] l:len=35

10:45:07.436 [debug] l:buf=3:<p><a href="http://localhost:5000/modules" rel="noopener noreferrer">Modules</a> vs. <a href="http://localhost:5000/microservices" rel="noopener noreferrer">microservices</a> – O’Reilly</p>
<p><a href="https://www.oreilly.com/radar/modules-vs-microservices/" rel="noopener noreferrer">https://www.oreilly.com/radar/modules-vs-microservices/</a></p>


10:45:07.436 [debug] l:len=

10:45:07.436 [debug] l:buf empty

10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf=242:<h1>Two Orthogonal Lines</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
</ul>


10:45:07.437 [debug] l:len=2

10:45:07.437 [debug] l:buf=42:<h1>Two Orthogonal Lines</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
</ul>


10:45:07.437 [debug] l:len=24

10:45:07.437 [debug] l:buf=2:<h1>Two Orthogonal Lines</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/orthogonal" rel="noopener noreferrer">Orthogonal</a></li>
</ul>


10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf empty

10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf=1192:<h1>Factoring out Project Mangers</h1>
<p>Project managers can be split into 3 responsibilities:</p>
<ol>
<li>Deciding what to do (Shaping, done by "shapers")</li>
<li>Deciding what to work on and when (betting, "CEOs, etc...")</li>
<li>Coordination and Management of the work (managing, a traditional PM that schedules meetings and acts as "crap umbrella")</li>
</ol>
<p>in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they don't have managers because they don't need coordination between teams, they self coordinate.</p>
<p>Inspired by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>'s tweet:
<a href="https://twitter.com/rjs/status/1302067841315741697" rel="noopener noreferrer">https://twitter.com/rjs/status/1302067841315741697</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.437 [debug] l:len=1

10:45:07.437 [debug] l:buf=192:<h1>Factoring out Project Mangers</h1>
<p>Project managers can be split into 3 responsibilities:</p>
<ol>
<li>Deciding what to do (Shaping, done by "shapers")</li>
<li>Deciding what to work on and when (betting, "CEOs, etc...")</li>
<li>Coordination and Management of the work (managing, a traditional PM that schedules meetings and acts as "crap umbrella")</li>
</ol>
<p>in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they don't have managers because they don't need coordination between teams, they self coordinate.</p>
<p>Inspired by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>'s tweet:
<a href="https://twitter.com/rjs/status/1302067841315741697" rel="noopener noreferrer">https://twitter.com/rjs/status/1302067841315741697</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.437 [debug] l:len=11

10:45:07.437 [debug] l:buf=92:<h1>Factoring out Project Mangers</h1>
<p>Project managers can be split into 3 responsibilities:</p>
<ol>
<li>Deciding what to do (Shaping, done by "shapers")</li>
<li>Deciding what to work on and when (betting, "CEOs, etc...")</li>
<li>Coordination and Management of the work (managing, a traditional PM that schedules meetings and acts as "crap umbrella")</li>
</ol>
<p>in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they don't have managers because they don't need coordination between teams, they self coordinate.</p>
<p>Inspired by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>'s tweet:
<a href="https://twitter.com/rjs/status/1302067841315741697" rel="noopener noreferrer">https://twitter.com/rjs/status/1302067841315741697</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.437 [debug] l:len=119

10:45:07.437 [debug] l:buf=2:<h1>Factoring out Project Mangers</h1>
<p>Project managers can be split into 3 responsibilities:</p>
<ol>
<li>Deciding what to do (Shaping, done by "shapers")</li>
<li>Deciding what to work on and when (betting, "CEOs, etc...")</li>
<li>Coordination and Management of the work (managing, a traditional PM that schedules meetings and acts as "crap umbrella")</li>
</ol>
<p>in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> they don't have managers because they don't need coordination between teams, they self coordinate.</p>
<p>Inspired by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a>'s tweet:
<a href="https://twitter.com/rjs/status/1302067841315741697" rel="noopener noreferrer">https://twitter.com/rjs/status/1302067841315741697</a></p>
<p>Links:</p>
<ul>
<li><a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a></li>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf empty

10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf=715:<h1>Dopamine, Smartphones &amp; You A battle for your time</h1>
<p><a href="http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/" rel="noopener noreferrer">http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/</a></p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.437 [debug] l:len=7

10:45:07.437 [debug] l:buf=15:<h1>Dopamine, Smartphones &amp; You A battle for your time</h1>
<p><a href="http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/" rel="noopener noreferrer">http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/</a></p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.437 [debug] l:len=71

10:45:07.437 [debug] l:buf=5:<h1>Dopamine, Smartphones &amp; You A battle for your time</h1>
<p><a href="http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/" rel="noopener noreferrer">http://sitn.hms.harvard.edu/flash/2018/dopamine-smartphones-battle-time/</a></p>
<p>Keywords: <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a>, <a href="http://localhost:5000/smartphones" rel="noopener noreferrer">Smartphones</a>, <a href="http://localhost:5000/addiction" rel="noopener noreferrer">addiction</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/variable-rewards-and-dopamine" rel="noopener noreferrer">Variable rewards And Dopamine</a></li>
</ul>


10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf empty

10:45:07.437 [debug] l:len=

10:45:07.437 [debug] l:buf=655:<h1>Reliability through Self-Conscious Code</h1>
<p>This looks like an interesting article on this: <a href="https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89" rel="noopener noreferrer">https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89</a></p>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.437 [debug] l:len=6

10:45:07.437 [debug] l:buf=55:<h1>Reliability through Self-Conscious Code</h1>
<p>This looks like an interesting article on this: <a href="https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89" rel="noopener noreferrer">https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89</a></p>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.437 [debug] l:len=65

10:45:07.438 [debug] l:buf=5:<h1>Reliability through Self-Conscious Code</h1>
<p>This looks like an interesting article on this: <a href="https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89" rel="noopener noreferrer">https://freecontent.manning.com/reliability-through-self-conscious-code/?utm_medium=organic&amp;utm_source=twitter&amp;utm_campaign=book_seriouslygoodsoftware_dotd_9_4_20&amp;utm_content=article#section-89</a></p>
<p><a href="http://localhost:5000/best-practices" rel="noopener noreferrer">Best practices</a></p>


10:45:07.438 [debug] l:len=

10:45:07.438 [debug] l:buf empty

10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf=9163:<h1>Threads instead of Chat Rooms</h1>
<p>Slack is supposed to make us more productive...but is it?</p>
<p>I once read an article called <a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">Is Group Chat Making You Sweat?</a> (a must read!) that really made me second guess if Slack is a great way for <strong>all</strong> communication, or really any group chat tool.</p>
<p>Meanwhile I learned about Twist.com which is a slack alternative that looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/twist-example.png" rel="noopener noreferrer">Twist Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also Basecamp</p>
<hr>
<h2><a href="http://localhost:5000/basecamp-example.png" rel="noopener noreferrer">Basecamp Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Both The Twist team and the Basecamp team realized something about group chat that I never really understood, <strong>it's not for everything!</strong> In fact, exclusive use of it can cause serious communication issues to arise.</p>
<h2>So What is Group Chat anyway?</h2>
<p>A infinite thread of short messages in reverse-chronological order (newest to oldest) with no form of organization besides the "room" (channel) that's usually organized around a team name (like <a href="http://localhost:5000/webchat-cats" rel="noopener noreferrer">webchat-cats</a> <a href="http://localhost:5000/crank-city" rel="noopener noreferrer">crank-city</a>), a place like <a href="http://localhost:5000/utah-office" rel="noopener noreferrer">utah-office</a> or an interest like <a href="http://localhost:5000/gaming" rel="noopener noreferrer">gaming</a>.</p>
<p>Popular examples of Group chat include Slack, Discord, IRC, and SMS group texts</p>
<h2>When Group chat is good 😇🤙</h2>
<p>As in the article he says:</p>
<p>Group chat is great for…</p>
<ol>
<li><strong>Hashing things out quickly.</strong></li>
<li><strong>Red alerts.</strong></li>
<li><strong>Having fun.</strong></li>
<li><strong>A sense of belonging.</strong></li>
</ol>
<h2>When Group Chat is bad 🔥😭🔥</h2>
<p>To understand when group chat breaks down it's helpful to look at a slack channel:</p>
<p><img src="https://cl.ly/e9e36b6c0278/Image%2525202019-08-07%252520at%2525207.31.57%252520AM.png" alt="Picture of Slack"></p>
<p>How many different subjects are being discussed? At least 3 in this view. Luckily people are breaking out into threads, when the discussion gets long... but what if they didn't?</p>
<h3>Too much one-off communication</h3>
<p>The power of the written word is largely due to the nature that you can <em><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">write it once, read it many times</a></em>. This is awesome! This means that you only need to share a piece of information once, then people will have it forever!</p>
<p>That is...<strong>if you can find it</strong>.</p>
<blockquote>
<p>Communication seems like a good thing until you have too much of it</p>
</blockquote>
<p>Group chat, due to it's, real time, non-stop march of messages creates a feeling of stress for anyone trying to keep up. Problem is, even if you did keep up, it would be a horrible waste of time. Most of those messages were never worth reading in the first place because most aren't relevant to you. The noise to signal ratio is way lopsided, yet we're expected to dig through all the messages to always be aware of that <strong>one important one.</strong></p>
<p>The channels are too broad, yet if you make them specific you have too many. <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Because they never</a>. Die]].</p>
<p>It also creates this culture of constant tapping in people's shoulders. You expect everything NOW.</p>
<p>Also studies have been done on slack</p>
<blockquote>
<p>One study found that Slack users spend an of average of ten hours per day in the app</p>
</blockquote>
<p>That's a stupid amount of time</p>
<blockquote>
<p>“I’ve often felt like Slack is like an open office placed right in my skull.” by Scott Rouse <a href="https://link.medium.com/I1mSrqEjPY" rel="noopener noreferrer">https://link.medium.com/I1mSrqEjPY</a></p>
</blockquote>
<p><strong>Imagine that everyone at the company is on a treadmill and every time you take a step it requires a quite a few of the other people to take a step, you're going to run yourself ragged in no time</strong>. How is this any different than the treadmill looking slack feed? It's not.</p>
<p>From the Siganal V.S. Noise thing from above it says</p>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.</p>
</blockquote>
<h2>What makes a good meeting?</h2>
<ul>
<li>Agenda</li>
<li>Right people</li>
<li>Short timeframe</li>
<li>Summary notes</li>
<li>Next steps and action items</li>
</ul>
<p>Lets think about these in terms of a group chat like Slack:</p>
<ul>
<li><strong>Agenda:</strong> None. It just ebs and flows, conversations go anywhere they want.</li>
<li><strong>Right people:</strong> Sometimes, depends on what topic we're on at the time. This goes back to the Agenda problem.</li>
<li><strong>Short timeframe:</strong> Nope, lasts forever, never stops. Even after work is done.</li>
<li><strong>Summary notes:</strong> Well you have all the things that were said saved, but no summary ever.</li>
<li><strong>Next steps and action items:</strong> These are not well documented, they are somwhere in the channel.</li>
</ul>
<h2>Introducing "Threads"</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>Popular examples include: Stack overflow post's, Reddit comments, forums, RFCs, GitHub issues, this.</p>
<h2>When threads are good</h2>
<ul>
<li>
<p>When you need to think about something deeply, get everyone's opinion and deadline isn't NOW (protip: it almost never needs to be)</p>
</li>
<li>
<p>Documenting. Slack conversations are searchable, but man there's a cost to people not staying in topic, or having any organization or structure to messages</p>
</li>
<li>
<p>Being async, there's no way to see if people are online, you go at your own pace. This is refreshing compared to the "soft realtime" that is slack</p>
</li>
</ul>
<hr>
<p>Group Chat is great for some things, just not types of communication.</p>
<h2>What's the purpose of team communication tools</h2>
<ol>
<li>Get/give information to/from other people</li>
<li>To provide a self-building, searchable knowledge base of knowledge</li>
<li>To ask others to do stuff for you</li>
<li>To build friendships and help us all not feel alone, help us to have fun.</li>
</ol>
<p>How does group chat do with these things? Let's see:</p>
<h3>1. Get/give information to/from other people?</h3>
<p>You can give it quickly but information is only good if you can <em>find it</em>. Finding it is hard beause of how the data is structured:</p>
<ol>
<li>Small amount of channels (5-50?) 😌</li>
<li><strong>Infinite</strong> Messages in those channels 😱</li>
</ol>
<p>What about the quality of each message? Hard to say. Short messages are nice because you can read them quickly but they're bad because they tend not to be very complex. This happens a ton on Twitter, someone will post a <a href="https://www.urbandictionary.com/define.php?term=hot%20take" rel="noopener noreferrer">"Hot take"</a> and it will take forever to try to explain what they actually meant to say.</p>
<blockquote>
<p>Group Chat is like trying to read a book on a treadmill</p>
</blockquote>
<hr>
<h2>References</h2>
<ul>
<li><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></li>
<li>“Group chat isn’t making you more productive” by Ted Bauer <a href="https://link. (truncated)

10:45:07.439 [debug] l:len=9

10:45:07.439 [debug] l:buf=163:<h1>Threads instead of Chat Rooms</h1>
<p>Slack is supposed to make us more productive...but is it?</p>
<p>I once read an article called <a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">Is Group Chat Making You Sweat?</a> (a must read!) that really made me second guess if Slack is a great way for <strong>all</strong> communication, or really any group chat tool.</p>
<p>Meanwhile I learned about Twist.com which is a slack alternative that looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/twist-example.png" rel="noopener noreferrer">Twist Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also Basecamp</p>
<hr>
<h2><a href="http://localhost:5000/basecamp-example.png" rel="noopener noreferrer">Basecamp Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Both The Twist team and the Basecamp team realized something about group chat that I never really understood, <strong>it's not for everything!</strong> In fact, exclusive use of it can cause serious communication issues to arise.</p>
<h2>So What is Group Chat anyway?</h2>
<p>A infinite thread of short messages in reverse-chronological order (newest to oldest) with no form of organization besides the "room" (channel) that's usually organized around a team name (like <a href="http://localhost:5000/webchat-cats" rel="noopener noreferrer">webchat-cats</a> <a href="http://localhost:5000/crank-city" rel="noopener noreferrer">crank-city</a>), a place like <a href="http://localhost:5000/utah-office" rel="noopener noreferrer">utah-office</a> or an interest like <a href="http://localhost:5000/gaming" rel="noopener noreferrer">gaming</a>.</p>
<p>Popular examples of Group chat include Slack, Discord, IRC, and SMS group texts</p>
<h2>When Group chat is good 😇🤙</h2>
<p>As in the article he says:</p>
<p>Group chat is great for…</p>
<ol>
<li><strong>Hashing things out quickly.</strong></li>
<li><strong>Red alerts.</strong></li>
<li><strong>Having fun.</strong></li>
<li><strong>A sense of belonging.</strong></li>
</ol>
<h2>When Group Chat is bad 🔥😭🔥</h2>
<p>To understand when group chat breaks down it's helpful to look at a slack channel:</p>
<p><img src="https://cl.ly/e9e36b6c0278/Image%2525202019-08-07%252520at%2525207.31.57%252520AM.png" alt="Picture of Slack"></p>
<p>How many different subjects are being discussed? At least 3 in this view. Luckily people are breaking out into threads, when the discussion gets long... but what if they didn't?</p>
<h3>Too much one-off communication</h3>
<p>The power of the written word is largely due to the nature that you can <em><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">write it once, read it many times</a></em>. This is awesome! This means that you only need to share a piece of information once, then people will have it forever!</p>
<p>That is...<strong>if you can find it</strong>.</p>
<blockquote>
<p>Communication seems like a good thing until you have too much of it</p>
</blockquote>
<p>Group chat, due to it's, real time, non-stop march of messages creates a feeling of stress for anyone trying to keep up. Problem is, even if you did keep up, it would be a horrible waste of time. Most of those messages were never worth reading in the first place because most aren't relevant to you. The noise to signal ratio is way lopsided, yet we're expected to dig through all the messages to always be aware of that <strong>one important one.</strong></p>
<p>The channels are too broad, yet if you make them specific you have too many. <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Because they never</a>. Die]].</p>
<p>It also creates this culture of constant tapping in people's shoulders. You expect everything NOW.</p>
<p>Also studies have been done on slack</p>
<blockquote>
<p>One study found that Slack users spend an of average of ten hours per day in the app</p>
</blockquote>
<p>That's a stupid amount of time</p>
<blockquote>
<p>“I’ve often felt like Slack is like an open office placed right in my skull.” by Scott Rouse <a href="https://link.medium.com/I1mSrqEjPY" rel="noopener noreferrer">https://link.medium.com/I1mSrqEjPY</a></p>
</blockquote>
<p><strong>Imagine that everyone at the company is on a treadmill and every time you take a step it requires a quite a few of the other people to take a step, you're going to run yourself ragged in no time</strong>. How is this any different than the treadmill looking slack feed? It's not.</p>
<p>From the Siganal V.S. Noise thing from above it says</p>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.</p>
</blockquote>
<h2>What makes a good meeting?</h2>
<ul>
<li>Agenda</li>
<li>Right people</li>
<li>Short timeframe</li>
<li>Summary notes</li>
<li>Next steps and action items</li>
</ul>
<p>Lets think about these in terms of a group chat like Slack:</p>
<ul>
<li><strong>Agenda:</strong> None. It just ebs and flows, conversations go anywhere they want.</li>
<li><strong>Right people:</strong> Sometimes, depends on what topic we're on at the time. This goes back to the Agenda problem.</li>
<li><strong>Short timeframe:</strong> Nope, lasts forever, never stops. Even after work is done.</li>
<li><strong>Summary notes:</strong> Well you have all the things that were said saved, but no summary ever.</li>
<li><strong>Next steps and action items:</strong> These are not well documented, they are somwhere in the channel.</li>
</ul>
<h2>Introducing "Threads"</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>Popular examples include: Stack overflow post's, Reddit comments, forums, RFCs, GitHub issues, this.</p>
<h2>When threads are good</h2>
<ul>
<li>
<p>When you need to think about something deeply, get everyone's opinion and deadline isn't NOW (protip: it almost never needs to be)</p>
</li>
<li>
<p>Documenting. Slack conversations are searchable, but man there's a cost to people not staying in topic, or having any organization or structure to messages</p>
</li>
<li>
<p>Being async, there's no way to see if people are online, you go at your own pace. This is refreshing compared to the "soft realtime" that is slack</p>
</li>
</ul>
<hr>
<p>Group Chat is great for some things, just not types of communication.</p>
<h2>What's the purpose of team communication tools</h2>
<ol>
<li>Get/give information to/from other people</li>
<li>To provide a self-building, searchable knowledge base of knowledge</li>
<li>To ask others to do stuff for you</li>
<li>To build friendships and help us all not feel alone, help us to have fun.</li>
</ol>
<p>How does group chat do with these things? Let's see:</p>
<h3>1. Get/give information to/from other people?</h3>
<p>You can give it quickly but information is only good if you can <em>find it</em>. Finding it is hard beause of how the data is structured:</p>
<ol>
<li>Small amount of channels (5-50?) 😌</li>
<li><strong>Infinite</strong> Messages in those channels 😱</li>
</ol>
<p>What about the quality of each message? Hard to say. Short messages are nice because you can read them quickly but they're bad because they tend not to be very complex. This happens a ton on Twitter, someone will post a <a href="https://www.urbandictionary.com/define.php?term=hot%20take" rel="noopener noreferrer">"Hot take"</a> and it will take forever to try to explain what they actually meant to say.</p>
<blockquote>
<p>Group Chat is like trying to read a book on a treadmill</p>
</blockquote>
<hr>
<h2>References</h2>
<ul>
<li><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></li>
<li>“Group chat isn’t making you more productive” by Ted Bauer <a href="https://link.m (truncated)

10:45:07.439 [debug] l:len=91

10:45:07.439 [debug] l:buf=63:<h1>Threads instead of Chat Rooms</h1>
<p>Slack is supposed to make us more productive...but is it?</p>
<p>I once read an article called <a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">Is Group Chat Making You Sweat?</a> (a must read!) that really made me second guess if Slack is a great way for <strong>all</strong> communication, or really any group chat tool.</p>
<p>Meanwhile I learned about Twist.com which is a slack alternative that looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/twist-example.png" rel="noopener noreferrer">Twist Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also Basecamp</p>
<hr>
<h2><a href="http://localhost:5000/basecamp-example.png" rel="noopener noreferrer">Basecamp Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Both The Twist team and the Basecamp team realized something about group chat that I never really understood, <strong>it's not for everything!</strong> In fact, exclusive use of it can cause serious communication issues to arise.</p>
<h2>So What is Group Chat anyway?</h2>
<p>A infinite thread of short messages in reverse-chronological order (newest to oldest) with no form of organization besides the "room" (channel) that's usually organized around a team name (like <a href="http://localhost:5000/webchat-cats" rel="noopener noreferrer">webchat-cats</a> <a href="http://localhost:5000/crank-city" rel="noopener noreferrer">crank-city</a>), a place like <a href="http://localhost:5000/utah-office" rel="noopener noreferrer">utah-office</a> or an interest like <a href="http://localhost:5000/gaming" rel="noopener noreferrer">gaming</a>.</p>
<p>Popular examples of Group chat include Slack, Discord, IRC, and SMS group texts</p>
<h2>When Group chat is good 😇🤙</h2>
<p>As in the article he says:</p>
<p>Group chat is great for…</p>
<ol>
<li><strong>Hashing things out quickly.</strong></li>
<li><strong>Red alerts.</strong></li>
<li><strong>Having fun.</strong></li>
<li><strong>A sense of belonging.</strong></li>
</ol>
<h2>When Group Chat is bad 🔥😭🔥</h2>
<p>To understand when group chat breaks down it's helpful to look at a slack channel:</p>
<p><img src="https://cl.ly/e9e36b6c0278/Image%2525202019-08-07%252520at%2525207.31.57%252520AM.png" alt="Picture of Slack"></p>
<p>How many different subjects are being discussed? At least 3 in this view. Luckily people are breaking out into threads, when the discussion gets long... but what if they didn't?</p>
<h3>Too much one-off communication</h3>
<p>The power of the written word is largely due to the nature that you can <em><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">write it once, read it many times</a></em>. This is awesome! This means that you only need to share a piece of information once, then people will have it forever!</p>
<p>That is...<strong>if you can find it</strong>.</p>
<blockquote>
<p>Communication seems like a good thing until you have too much of it</p>
</blockquote>
<p>Group chat, due to it's, real time, non-stop march of messages creates a feeling of stress for anyone trying to keep up. Problem is, even if you did keep up, it would be a horrible waste of time. Most of those messages were never worth reading in the first place because most aren't relevant to you. The noise to signal ratio is way lopsided, yet we're expected to dig through all the messages to always be aware of that <strong>one important one.</strong></p>
<p>The channels are too broad, yet if you make them specific you have too many. <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Because they never</a>. Die]].</p>
<p>It also creates this culture of constant tapping in people's shoulders. You expect everything NOW.</p>
<p>Also studies have been done on slack</p>
<blockquote>
<p>One study found that Slack users spend an of average of ten hours per day in the app</p>
</blockquote>
<p>That's a stupid amount of time</p>
<blockquote>
<p>“I’ve often felt like Slack is like an open office placed right in my skull.” by Scott Rouse <a href="https://link.medium.com/I1mSrqEjPY" rel="noopener noreferrer">https://link.medium.com/I1mSrqEjPY</a></p>
</blockquote>
<p><strong>Imagine that everyone at the company is on a treadmill and every time you take a step it requires a quite a few of the other people to take a step, you're going to run yourself ragged in no time</strong>. How is this any different than the treadmill looking slack feed? It's not.</p>
<p>From the Siganal V.S. Noise thing from above it says</p>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.</p>
</blockquote>
<h2>What makes a good meeting?</h2>
<ul>
<li>Agenda</li>
<li>Right people</li>
<li>Short timeframe</li>
<li>Summary notes</li>
<li>Next steps and action items</li>
</ul>
<p>Lets think about these in terms of a group chat like Slack:</p>
<ul>
<li><strong>Agenda:</strong> None. It just ebs and flows, conversations go anywhere they want.</li>
<li><strong>Right people:</strong> Sometimes, depends on what topic we're on at the time. This goes back to the Agenda problem.</li>
<li><strong>Short timeframe:</strong> Nope, lasts forever, never stops. Even after work is done.</li>
<li><strong>Summary notes:</strong> Well you have all the things that were said saved, but no summary ever.</li>
<li><strong>Next steps and action items:</strong> These are not well documented, they are somwhere in the channel.</li>
</ul>
<h2>Introducing "Threads"</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>Popular examples include: Stack overflow post's, Reddit comments, forums, RFCs, GitHub issues, this.</p>
<h2>When threads are good</h2>
<ul>
<li>
<p>When you need to think about something deeply, get everyone's opinion and deadline isn't NOW (protip: it almost never needs to be)</p>
</li>
<li>
<p>Documenting. Slack conversations are searchable, but man there's a cost to people not staying in topic, or having any organization or structure to messages</p>
</li>
<li>
<p>Being async, there's no way to see if people are online, you go at your own pace. This is refreshing compared to the "soft realtime" that is slack</p>
</li>
</ul>
<hr>
<p>Group Chat is great for some things, just not types of communication.</p>
<h2>What's the purpose of team communication tools</h2>
<ol>
<li>Get/give information to/from other people</li>
<li>To provide a self-building, searchable knowledge base of knowledge</li>
<li>To ask others to do stuff for you</li>
<li>To build friendships and help us all not feel alone, help us to have fun.</li>
</ol>
<p>How does group chat do with these things? Let's see:</p>
<h3>1. Get/give information to/from other people?</h3>
<p>You can give it quickly but information is only good if you can <em>find it</em>. Finding it is hard beause of how the data is structured:</p>
<ol>
<li>Small amount of channels (5-50?) 😌</li>
<li><strong>Infinite</strong> Messages in those channels 😱</li>
</ol>
<p>What about the quality of each message? Hard to say. Short messages are nice because you can read them quickly but they're bad because they tend not to be very complex. This happens a ton on Twitter, someone will post a <a href="https://www.urbandictionary.com/define.php?term=hot%20take" rel="noopener noreferrer">"Hot take"</a> and it will take forever to try to explain what they actually meant to say.</p>
<blockquote>
<p>Group Chat is like trying to read a book on a treadmill</p>
</blockquote>
<hr>
<h2>References</h2>
<ul>
<li><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></li>
<li>“Group chat isn’t making you more productive” by Ted Bauer <a href="https://link.me (truncated)

10:45:07.439 [debug] l:len=916

10:45:07.439 [debug] l:buf=3:<h1>Threads instead of Chat Rooms</h1>
<p>Slack is supposed to make us more productive...but is it?</p>
<p>I once read an article called <a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">Is Group Chat Making You Sweat?</a> (a must read!) that really made me second guess if Slack is a great way for <strong>all</strong> communication, or really any group chat tool.</p>
<p>Meanwhile I learned about Twist.com which is a slack alternative that looks like this:</p>
<hr>
<h2><a href="http://localhost:5000/twist-example.png" rel="noopener noreferrer">Twist Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Also Basecamp</p>
<hr>
<h2><a href="http://localhost:5000/basecamp-example.png" rel="noopener noreferrer">Basecamp Example</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Both The Twist team and the Basecamp team realized something about group chat that I never really understood, <strong>it's not for everything!</strong> In fact, exclusive use of it can cause serious communication issues to arise.</p>
<h2>So What is Group Chat anyway?</h2>
<p>A infinite thread of short messages in reverse-chronological order (newest to oldest) with no form of organization besides the "room" (channel) that's usually organized around a team name (like <a href="http://localhost:5000/webchat-cats" rel="noopener noreferrer">webchat-cats</a> <a href="http://localhost:5000/crank-city" rel="noopener noreferrer">crank-city</a>), a place like <a href="http://localhost:5000/utah-office" rel="noopener noreferrer">utah-office</a> or an interest like <a href="http://localhost:5000/gaming" rel="noopener noreferrer">gaming</a>.</p>
<p>Popular examples of Group chat include Slack, Discord, IRC, and SMS group texts</p>
<h2>When Group chat is good 😇🤙</h2>
<p>As in the article he says:</p>
<p>Group chat is great for…</p>
<ol>
<li><strong>Hashing things out quickly.</strong></li>
<li><strong>Red alerts.</strong></li>
<li><strong>Having fun.</strong></li>
<li><strong>A sense of belonging.</strong></li>
</ol>
<h2>When Group Chat is bad 🔥😭🔥</h2>
<p>To understand when group chat breaks down it's helpful to look at a slack channel:</p>
<p><img src="https://cl.ly/e9e36b6c0278/Image%2525202019-08-07%252520at%2525207.31.57%252520AM.png" alt="Picture of Slack"></p>
<p>How many different subjects are being discussed? At least 3 in this view. Luckily people are breaking out into threads, when the discussion gets long... but what if they didn't?</p>
<h3>Too much one-off communication</h3>
<p>The power of the written word is largely due to the nature that you can <em><a href="http://localhost:5000/write-once,-read-many-times" rel="noopener noreferrer">write it once, read it many times</a></em>. This is awesome! This means that you only need to share a piece of information once, then people will have it forever!</p>
<p>That is...<strong>if you can find it</strong>.</p>
<blockquote>
<p>Communication seems like a good thing until you have too much of it</p>
</blockquote>
<p>Group chat, due to it's, real time, non-stop march of messages creates a feeling of stress for anyone trying to keep up. Problem is, even if you did keep up, it would be a horrible waste of time. Most of those messages were never worth reading in the first place because most aren't relevant to you. The noise to signal ratio is way lopsided, yet we're expected to dig through all the messages to always be aware of that <strong>one important one.</strong></p>
<p>The channels are too broad, yet if you make them specific you have too many. <a href="http://localhost:5000/slack's-channels-live-forever" rel="noopener noreferrer">Because they never</a>. Die]].</p>
<p>It also creates this culture of constant tapping in people's shoulders. You expect everything NOW.</p>
<p>Also studies have been done on slack</p>
<blockquote>
<p>One study found that Slack users spend an of average of ten hours per day in the app</p>
</blockquote>
<p>That's a stupid amount of time</p>
<blockquote>
<p>“I’ve often felt like Slack is like an open office placed right in my skull.” by Scott Rouse <a href="https://link.medium.com/I1mSrqEjPY" rel="noopener noreferrer">https://link.medium.com/I1mSrqEjPY</a></p>
</blockquote>
<p><strong>Imagine that everyone at the company is on a treadmill and every time you take a step it requires a quite a few of the other people to take a step, you're going to run yourself ragged in no time</strong>. How is this any different than the treadmill looking slack feed? It's not.</p>
<p>From the Siganal V.S. Noise thing from above it says</p>
<blockquote>
<p>Group chat is like being in an all-day meeting with random participants and no agenda.</p>
</blockquote>
<h2>What makes a good meeting?</h2>
<ul>
<li>Agenda</li>
<li>Right people</li>
<li>Short timeframe</li>
<li>Summary notes</li>
<li>Next steps and action items</li>
</ul>
<p>Lets think about these in terms of a group chat like Slack:</p>
<ul>
<li><strong>Agenda:</strong> None. It just ebs and flows, conversations go anywhere they want.</li>
<li><strong>Right people:</strong> Sometimes, depends on what topic we're on at the time. This goes back to the Agenda problem.</li>
<li><strong>Short timeframe:</strong> Nope, lasts forever, never stops. Even after work is done.</li>
<li><strong>Summary notes:</strong> Well you have all the things that were said saved, but no summary ever.</li>
<li><strong>Next steps and action items:</strong> These are not well documented, they are somwhere in the channel.</li>
</ul>
<h2>Introducing "Threads"</h2>
<p>A thread is basically a conversation focused around a single topic that reads in chronological order (oldest to newest) that exists for a short time then eventually is archived for learning in the future under a clear tile.</p>
<p>Popular examples include: Stack overflow post's, Reddit comments, forums, RFCs, GitHub issues, this.</p>
<h2>When threads are good</h2>
<ul>
<li>
<p>When you need to think about something deeply, get everyone's opinion and deadline isn't NOW (protip: it almost never needs to be)</p>
</li>
<li>
<p>Documenting. Slack conversations are searchable, but man there's a cost to people not staying in topic, or having any organization or structure to messages</p>
</li>
<li>
<p>Being async, there's no way to see if people are online, you go at your own pace. This is refreshing compared to the "soft realtime" that is slack</p>
</li>
</ul>
<hr>
<p>Group Chat is great for some things, just not types of communication.</p>
<h2>What's the purpose of team communication tools</h2>
<ol>
<li>Get/give information to/from other people</li>
<li>To provide a self-building, searchable knowledge base of knowledge</li>
<li>To ask others to do stuff for you</li>
<li>To build friendships and help us all not feel alone, help us to have fun.</li>
</ol>
<p>How does group chat do with these things? Let's see:</p>
<h3>1. Get/give information to/from other people?</h3>
<p>You can give it quickly but information is only good if you can <em>find it</em>. Finding it is hard beause of how the data is structured:</p>
<ol>
<li>Small amount of channels (5-50?) 😌</li>
<li><strong>Infinite</strong> Messages in those channels 😱</li>
</ol>
<p>What about the quality of each message? Hard to say. Short messages are nice because you can read them quickly but they're bad because they tend not to be very complex. This happens a ton on Twitter, someone will post a <a href="https://www.urbandictionary.com/define.php?term=hot%20take" rel="noopener noreferrer">"Hot take"</a> and it will take forever to try to explain what they actually meant to say.</p>
<blockquote>
<p>Group Chat is like trying to read a book on a treadmill</p>
</blockquote>
<hr>
<h2>References</h2>
<ul>
<li><a href="https://m.signalvnoise.com/is-group-chat-making-you-sweat/" rel="noopener noreferrer">https://m.signalvnoise.com/is-group-chat-making-you-sweat/</a></li>
<li>“Group chat isn’t making you more productive” by Ted Bauer <a href="https://link.med (truncated)

10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf empty

10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf=393:<h1>Novelty Binging</h1>
<hr>
<h2>created: 2020-08-24T21:16:10-06:00
modified: 2020-08-24T21:18:17-06:00</h2>
<h1>Novelty Binging</h1>
<p>When you think you're learning but in reality you're just consuming content and it doesn't really stick in your brain, it's just appeasing your desire to hear new things. <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.439 [debug] l:len=3

10:45:07.439 [debug] l:buf=93:<h1>Novelty Binging</h1>
<hr>
<h2>created: 2020-08-24T21:16:10-06:00
modified: 2020-08-24T21:18:17-06:00</h2>
<h1>Novelty Binging</h1>
<p>When you think you're learning but in reality you're just consuming content and it doesn't really stick in your brain, it's just appeasing your desire to hear new things. <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.439 [debug] l:len=39

10:45:07.439 [debug] l:buf=3:<h1>Novelty Binging</h1>
<hr>
<h2>created: 2020-08-24T21:16:10-06:00
modified: 2020-08-24T21:18:17-06:00</h2>
<h1>Novelty Binging</h1>
<p>When you think you're learning but in reality you're just consuming content and it doesn't really stick in your brain, it's just appeasing your desire to hear new things. <a href="http://localhost:5000/dopamine" rel="noopener noreferrer">Dopamine</a></p>


10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf empty

10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf=79:<h1>compassion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.439 [debug] l:len=7

10:45:07.439 [debug] l:buf=9:<h1>compassion</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.439 [debug] l:len=

10:45:07.439 [debug] l:buf empty

10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf=268:<h1>Kanban Boards and Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.440 [debug] l:len=2

10:45:07.440 [debug] l:buf=68:<h1>Kanban Boards and Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.440 [debug] l:len=26

10:45:07.440 [debug] l:buf=8:<h1>Kanban Boards and Motivation</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/neverending-sprints" rel="noopener noreferrer">Neverending Sprints</a></li>
</ul>


10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf empty

10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf=76:<p>Project Euler</p>
<p>522774-fSNRE0GLpxiQ1rUOcYtVM71eWVVNk8x6OTgu4OZo</p>


10:45:07.440 [debug] l:len=7

10:45:07.440 [debug] l:buf=6:<p>Project Euler</p>
<p>522774-fSNRE0GLpxiQ1rUOcYtVM71eWVVNk8x6OTgu4OZo</p>


10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf empty

10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf=292:<h1>Conversation-Overrun</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>


10:45:07.440 [debug] l:len=2

10:45:07.440 [debug] l:buf=92:<h1>Conversation-Overrun</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>


10:45:07.440 [debug] l:len=29

10:45:07.440 [debug] l:buf=2:<h1>Conversation-Overrun</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/interweaving-conversations-in-slack" rel="noopener noreferrer">Interweaving conversations in Slack</a></li>
</ul>


10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf empty

10:45:07.440 [debug] l:len=

10:45:07.440 [debug] l:buf=986:<h2>Project Management</h2>
<p>This could relate to a tool such as:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>
<p>But could also be about Project Management as a process such as "Agile" and such.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.440 [debug] l:len=9

10:45:07.440 [debug] l:buf=86:<h2>Project Management</h2>
<p>This could relate to a tool such as:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>
<p>But could also be about Project Management as a process such as "Agile" and such.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.441 [debug] l:len=98

10:45:07.441 [debug] l:buf=6:<h2>Project Management</h2>
<p>This could relate to a tool such as:</p>
<ul>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/jira" rel="noopener noreferrer">Jira</a></li>
</ul>
<p>But could also be about Project Management as a process such as "Agile" and such.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/backlogs" rel="noopener noreferrer">Backlogs</a></li>
<li><a href="http://localhost:5000/basecamp" rel="noopener noreferrer">Basecamp</a></li>
<li><a href="http://localhost:5000/dark-matter" rel="noopener noreferrer">Dark Matter</a></li>
<li><a href="http://localhost:5000/shaping" rel="noopener noreferrer">Shaping</a></li>
<li><a href="http://localhost:5000/simplicity-freaking-matters" rel="noopener noreferrer">Simplicity freaking matters</a></li>
<li><a href="http://localhost:5000/top-priority" rel="noopener noreferrer">top priority</a></li>
</ul>


10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf empty

10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf=299:<h1>Pasted image 14</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.441 [debug] l:len=2

10:45:07.441 [debug] l:buf=99:<h1>Pasted image 14</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.441 [debug] l:len=29

10:45:07.441 [debug] l:buf=9:<h1>Pasted image 14</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/project-management-is-about-communication" rel="noopener noreferrer">Project management is about communication</a></li>
</ul>


10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf empty

10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf=85:<h1>Inspiration</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.441 [debug] l:len=8

10:45:07.441 [debug] l:buf=5:<h1>Inspiration</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf empty

10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf=1374:<h1>Outline for talk</h1>
<h1>Synopsis</h1>
<ul>
<li>Not everyone is of the “Early-Adopter” Personality. Many of our coworkers don’t care if things are technically “better” or fancy language features that help them to remain “safe”. Understanding the different personality types helps us know how we can all get ReasonML to “jump the gap” to more mainstream languages and help our more pragmatic co-works understand why ReasonML is something they should devote time to learn.</li>
<li>Building trust is essential to everything in life, including influencing people</li>
<li><strong>Seek first to understand, then to be understood</strong></li>
</ul>
<h2>People Problems</h2>
<h2>Technology Problems</h2>
<h2>Actually doing it.</h2>
<ul>
<li>Planning phase
<ol>
<li>Gain Trust</li>
<li>Make sure your idea is even a good idea.</li>
<li>Come up with a plan</li>
<li>Come up with a good plan</li>
<li>Convince 1 other person who has more influence then you</li>
</ol>
</li>
<li>Convincing to Learn
3. Don't Sell
4. Learning is not fun
5. People's complaints are good, they are engaging
6. Do Sell
7. Learning is fun</li>
<li>Shipping
9. Prepare for things not to change
10. Prepare for things to change
11. Do something safe
12. Do something unsafe</li>
</ul>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.441 [debug] l:len=1

10:45:07.441 [debug] l:buf=374:<h1>Outline for talk</h1>
<h1>Synopsis</h1>
<ul>
<li>Not everyone is of the “Early-Adopter” Personality. Many of our coworkers don’t care if things are technically “better” or fancy language features that help them to remain “safe”. Understanding the different personality types helps us know how we can all get ReasonML to “jump the gap” to more mainstream languages and help our more pragmatic co-works understand why ReasonML is something they should devote time to learn.</li>
<li>Building trust is essential to everything in life, including influencing people</li>
<li><strong>Seek first to understand, then to be understood</strong></li>
</ul>
<h2>People Problems</h2>
<h2>Technology Problems</h2>
<h2>Actually doing it.</h2>
<ul>
<li>Planning phase
<ol>
<li>Gain Trust</li>
<li>Make sure your idea is even a good idea.</li>
<li>Come up with a plan</li>
<li>Come up with a good plan</li>
<li>Convince 1 other person who has more influence then you</li>
</ol>
</li>
<li>Convincing to Learn
3. Don't Sell
4. Learning is not fun
5. People's complaints are good, they are engaging
6. Do Sell
7. Learning is fun</li>
<li>Shipping
9. Prepare for things not to change
10. Prepare for things to change
11. Do something safe
12. Do something unsafe</li>
</ul>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.441 [debug] l:len=13

10:45:07.441 [debug] l:buf=74:<h1>Outline for talk</h1>
<h1>Synopsis</h1>
<ul>
<li>Not everyone is of the “Early-Adopter” Personality. Many of our coworkers don’t care if things are technically “better” or fancy language features that help them to remain “safe”. Understanding the different personality types helps us know how we can all get ReasonML to “jump the gap” to more mainstream languages and help our more pragmatic co-works understand why ReasonML is something they should devote time to learn.</li>
<li>Building trust is essential to everything in life, including influencing people</li>
<li><strong>Seek first to understand, then to be understood</strong></li>
</ul>
<h2>People Problems</h2>
<h2>Technology Problems</h2>
<h2>Actually doing it.</h2>
<ul>
<li>Planning phase
<ol>
<li>Gain Trust</li>
<li>Make sure your idea is even a good idea.</li>
<li>Come up with a plan</li>
<li>Come up with a good plan</li>
<li>Convince 1 other person who has more influence then you</li>
</ol>
</li>
<li>Convincing to Learn
3. Don't Sell
4. Learning is not fun
5. People's complaints are good, they are engaging
6. Do Sell
7. Learning is fun</li>
<li>Shipping
9. Prepare for things not to change
10. Prepare for things to change
11. Do something safe
12. Do something unsafe</li>
</ul>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.441 [debug] l:len=137

10:45:07.441 [debug] l:buf=4:<h1>Outline for talk</h1>
<h1>Synopsis</h1>
<ul>
<li>Not everyone is of the “Early-Adopter” Personality. Many of our coworkers don’t care if things are technically “better” or fancy language features that help them to remain “safe”. Understanding the different personality types helps us know how we can all get ReasonML to “jump the gap” to more mainstream languages and help our more pragmatic co-works understand why ReasonML is something they should devote time to learn.</li>
<li>Building trust is essential to everything in life, including influencing people</li>
<li><strong>Seek first to understand, then to be understood</strong></li>
</ul>
<h2>People Problems</h2>
<h2>Technology Problems</h2>
<h2>Actually doing it.</h2>
<ul>
<li>Planning phase
<ol>
<li>Gain Trust</li>
<li>Make sure your idea is even a good idea.</li>
<li>Come up with a plan</li>
<li>Come up with a good plan</li>
<li>Convince 1 other person who has more influence then you</li>
</ol>
</li>
<li>Convincing to Learn
3. Don't Sell
4. Learning is not fun
5. People's complaints are good, they are engaging
6. Do Sell
7. Learning is fun</li>
<li>Shipping
9. Prepare for things not to change
10. Prepare for things to change
11. Do something safe
12. Do something unsafe</li>
</ul>
<p><a href="http://localhost:5000/reasonconf2019" rel="noopener noreferrer">reasonconf2019</a></p>


10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf empty

10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf=369:<h1><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a> is dead long live OOD</h1>
<blockquote>
<p>The only thing that matters is how well a programming language allows you to articulates your thoughts in your head.</p>
</blockquote>
<h1>Rules</h1>
<ol>
<li>What's the objects?</li>
</ol>
<p>Ordered collection of operators, constants, variables.</p>


10:45:07.441 [debug] l:len=3

10:45:07.441 [debug] l:buf=69:<h1><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a> is dead long live OOD</h1>
<blockquote>
<p>The only thing that matters is how well a programming language allows you to articulates your thoughts in your head.</p>
</blockquote>
<h1>Rules</h1>
<ol>
<li>What's the objects?</li>
</ol>
<p>Ordered collection of operators, constants, variables.</p>


10:45:07.441 [debug] l:len=36

10:45:07.441 [debug] l:buf=9:<h1><a href="http://localhost:5000/oop" rel="noopener noreferrer">OOP</a> is dead long live OOD</h1>
<blockquote>
<p>The only thing that matters is how well a programming language allows you to articulates your thoughts in your head.</p>
</blockquote>
<h1>Rules</h1>
<ol>
<li>What's the objects?</li>
</ol>
<p>Ordered collection of operators, constants, variables.</p>


10:45:07.441 [debug] l:len=

10:45:07.441 [debug] l:buf empty

10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf=1419:<h1>information bleeding</h1>
<p>organizations are constantly writing information down. Either in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> or in <a href="http://localhost:5000/google-docs" rel="noopener noreferrer">Google Docs</a>, or other places. Yet if you can't get the information easily, then it's effectively "lost". Slack is especially bad at this because of it's design of channels being a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. Which is sad because the most useful information is stored there, <strong>it's just not organized enough to be useful.</strong></p>
<p><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></p>
<hr>
<p>Builds on <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.442 [debug] l:len=1

10:45:07.442 [debug] l:buf=419:<h1>information bleeding</h1>
<p>organizations are constantly writing information down. Either in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> or in <a href="http://localhost:5000/google-docs" rel="noopener noreferrer">Google Docs</a>, or other places. Yet if you can't get the information easily, then it's effectively "lost". Slack is especially bad at this because of it's design of channels being a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. Which is sad because the most useful information is stored there, <strong>it's just not organized enough to be useful.</strong></p>
<p><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></p>
<hr>
<p>Builds on <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.442 [debug] l:len=14

10:45:07.442 [debug] l:buf=19:<h1>information bleeding</h1>
<p>organizations are constantly writing information down. Either in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> or in <a href="http://localhost:5000/google-docs" rel="noopener noreferrer">Google Docs</a>, or other places. Yet if you can't get the information easily, then it's effectively "lost". Slack is especially bad at this because of it's design of channels being a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. Which is sad because the most useful information is stored there, <strong>it's just not organized enough to be useful.</strong></p>
<p><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></p>
<hr>
<p>Builds on <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.442 [debug] l:len=141

10:45:07.442 [debug] l:buf=9:<h1>information bleeding</h1>
<p>organizations are constantly writing information down. Either in <a href="http://localhost:5000/slack" rel="noopener noreferrer">Slack</a> or in <a href="http://localhost:5000/google-docs" rel="noopener noreferrer">Google Docs</a>, or other places. Yet if you can't get the information easily, then it's effectively "lost". Slack is especially bad at this because of it's design of channels being a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a>. Which is sad because the most useful information is stored there, <strong>it's just not organized enough to be useful.</strong></p>
<p><a href="http://localhost:5000/slack-fragments-your-hardrive" rel="noopener noreferrer">Slack fragments your hardrive</a></p>
<hr>
<p>Builds on <a href="http://localhost:5000/slack's-design" rel="noopener noreferrer">Slack's Design</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-encourages-dumping" rel="noopener noreferrer">Slack encourages dumping</a></li>
<li><a href="http://localhost:5000/slack-features-to-slow-down-information-loss" rel="noopener noreferrer">Slack features to slow down information loss</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf empty

10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf=84:<h1>Blue Ocean</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.442 [debug] l:len=8

10:45:07.442 [debug] l:buf=4:<h1>Blue Ocean</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf empty

10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf=340:<h1>Weekly goals</h1>
<p>See <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.442 [debug] l:len=3

10:45:07.442 [debug] l:buf=40:<h1>Weekly goals</h1>
<p>See <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.442 [debug] l:len=34

10:45:07.442 [debug] l:buf=0:<h1>Weekly goals</h1>
<p>See <a href="http://localhost:5000/weekly-&amp;-daily-goals-system" rel="noopener noreferrer">Weekly &amp; Daily Goals System</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/mar-12th--customer-calls" rel="noopener noreferrer">Mar 12th -Customer Calls</a></li>
</ul>


10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf empty

10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf=239:<h1>quadrant 3</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.442 [debug] l:len=2

10:45:07.442 [debug] l:buf=39:<h1>quadrant 3</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.442 [debug] l:len=23

10:45:07.442 [debug] l:buf=9:<h1>quadrant 3</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
</ul>


10:45:07.442 [debug] l:len=

10:45:07.442 [debug] l:buf empty

10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf=323:<h1>conservatives</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.443 [debug] l:len=3

10:45:07.443 [debug] l:buf=23:<h1>conservatives</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.443 [debug] l:len=32

10:45:07.443 [debug] l:buf=3:<h1>conservatives</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/why-your-reasonml-evangelism-isn't-working-references" rel="noopener noreferrer">Why your ReasonML evangelism isn't Working (references)</a></li>
</ul>


10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf empty

10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf=626:<h1>lock in</h1>
<p>The idea that instead of relying on motivation you "force" yourself to do the right thing by putting up consequences if you don't do something. Like saying, "If I don't get up to delete this tweet by 6am then I owe someone $15"</p>
<p>Based on Ted Talk.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a> <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.443 [debug] l:len=6

10:45:07.443 [debug] l:buf=26:<h1>lock in</h1>
<p>The idea that instead of relying on motivation you "force" yourself to do the right thing by putting up consequences if you don't do something. Like saying, "If I don't get up to delete this tweet by 6am then I owe someone $15"</p>
<p>Based on Ted Talk.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a> <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.443 [debug] l:len=62

10:45:07.443 [debug] l:buf=6:<h1>lock in</h1>
<p>The idea that instead of relying on motivation you "force" yourself to do the right thing by putting up consequences if you don't do something. Like saying, "If I don't get up to delete this tweet by 6am then I owe someone $15"</p>
<p>Based on Ted Talk.</p>
<p>Keywords: <a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a> <a href="http://localhost:5000/procrastination" rel="noopener noreferrer">Procrastination</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/modivation" rel="noopener noreferrer">modivation</a></li>
</ul>


10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf empty

10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf=93:<h1>Answering Questions</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.443 [debug] l:len=9

10:45:07.443 [debug] l:buf=3:<h1>Answering Questions</h1>
<p><em>This file is a stub, it hasn't been written yet</em></p>


10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf empty

10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf=791:<h1>Lack of Purpose problem;</h1>
<p>learning about <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">types</a> is great, but I didn’t know what to do with it all. I had no way to apply most of what I was learning. Programmers, even inexperienced ones, have ideas of what kinds of things you are likely to want to accomplish with computer programs, and often have some understanding of the kinds of steps you could reasonably break those goals into. Nonprogrammers are less likely to have that foundation
...
<a href="http://localhost:5000/it-is-more-difficult-to-retain-and-assimilate-information-you-have-no-immediate-use-for." rel="noopener noreferrer">It is more difficult to retain and assimilate information you have no immediate use for.</a></p>


10:45:07.443 [debug] l:len=7

10:45:07.443 [debug] l:buf=91:<h1>Lack of Purpose problem;</h1>
<p>learning about <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">types</a> is great, but I didn’t know what to do with it all. I had no way to apply most of what I was learning. Programmers, even inexperienced ones, have ideas of what kinds of things you are likely to want to accomplish with computer programs, and often have some understanding of the kinds of steps you could reasonably break those goals into. Nonprogrammers are less likely to have that foundation
...
<a href="http://localhost:5000/it-is-more-difficult-to-retain-and-assimilate-information-you-have-no-immediate-use-for." rel="noopener noreferrer">It is more difficult to retain and assimilate information you have no immediate use for.</a></p>


10:45:07.443 [debug] l:len=79

10:45:07.443 [debug] l:buf=1:<h1>Lack of Purpose problem;</h1>
<p>learning about <a href="http://localhost:5000/carol-tuttle's-energy-types" rel="noopener noreferrer">types</a> is great, but I didn’t know what to do with it all. I had no way to apply most of what I was learning. Programmers, even inexperienced ones, have ideas of what kinds of things you are likely to want to accomplish with computer programs, and often have some understanding of the kinds of steps you could reasonably break those goals into. Nonprogrammers are less likely to have that foundation
...
<a href="http://localhost:5000/it-is-more-difficult-to-retain-and-assimilate-information-you-have-no-immediate-use-for." rel="noopener noreferrer">It is more difficult to retain and assimilate information you have no immediate use for.</a></p>


10:45:07.443 [debug] l:len=

10:45:07.443 [debug] l:buf empty

10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf=300:<h1>Roadmap of space</h1>
<p><a href="https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW" rel="noopener noreferrer">https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW</a></p>
<p>A thing by Ryan Synger of <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.444 [debug] l:len=3

10:45:07.444 [debug] l:buf=00:<h1>Roadmap of space</h1>
<p><a href="https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW" rel="noopener noreferrer">https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW</a></p>
<p>A thing by Ryan Synger of <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.444 [debug] l:len=30

10:45:07.444 [debug] l:buf=0:<h1>Roadmap of space</h1>
<p><a href="https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW" rel="noopener noreferrer">https://public.3.basecamp.com/p/6USxPaFVn2M6D7M3VyErr7BW</a></p>
<p>A thing by Ryan Synger of <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></p>


10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf empty

10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf=154:<h1>Career as a jungle gym, not ladder</h1>
<p>You can view you career as a ladder, but the better way is to look like a jungle gym, it's much better</p>


10:45:07.444 [debug] l:len=1

10:45:07.444 [debug] l:buf=54:<h1>Career as a jungle gym, not ladder</h1>
<p>You can view you career as a ladder, but the better way is to look like a jungle gym, it's much better</p>


10:45:07.444 [debug] l:len=15

10:45:07.444 [debug] l:buf=4:<h1>Career as a jungle gym, not ladder</h1>
<p>You can view you career as a ladder, but the better way is to look like a jungle gym, it's much better</p>


10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf empty

10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf=1100:<h1>quadrant 2</h1>
<ul>
<li>Important &amp; non-urgant activities</li>
<li>Part of the <a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a> from <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Examples
<ul>
<li>Gasing up the car</li>
<li><a href="http://localhost:5000/exercising" rel="noopener noreferrer">exercising</a></li>
<li><a href="http://localhost:5000/meditating" rel="noopener noreferrer">meditating</a></li>
<li><a href="http://localhost:5000/planning" rel="noopener noreferrer">planning</a></li>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">sharpen the saw</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.444 [debug] l:len=1

10:45:07.444 [debug] l:buf=100:<h1>quadrant 2</h1>
<ul>
<li>Important &amp; non-urgant activities</li>
<li>Part of the <a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a> from <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Examples
<ul>
<li>Gasing up the car</li>
<li><a href="http://localhost:5000/exercising" rel="noopener noreferrer">exercising</a></li>
<li><a href="http://localhost:5000/meditating" rel="noopener noreferrer">meditating</a></li>
<li><a href="http://localhost:5000/planning" rel="noopener noreferrer">planning</a></li>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">sharpen the saw</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.444 [debug] l:len=11

10:45:07.444 [debug] l:buf=00:<h1>quadrant 2</h1>
<ul>
<li>Important &amp; non-urgant activities</li>
<li>Part of the <a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a> from <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Examples
<ul>
<li>Gasing up the car</li>
<li><a href="http://localhost:5000/exercising" rel="noopener noreferrer">exercising</a></li>
<li><a href="http://localhost:5000/meditating" rel="noopener noreferrer">meditating</a></li>
<li><a href="http://localhost:5000/planning" rel="noopener noreferrer">planning</a></li>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">sharpen the saw</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.444 [debug] l:len=110

10:45:07.444 [debug] l:buf=0:<h1>quadrant 2</h1>
<ul>
<li>Important &amp; non-urgant activities</li>
<li>Part of the <a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a> from <a href="http://localhost:5000/7-habits-of-highly-effective-people" rel="noopener noreferrer">7 Habits of Highly effective People</a></li>
<li>Examples
<ul>
<li>Gasing up the car</li>
<li><a href="http://localhost:5000/exercising" rel="noopener noreferrer">exercising</a></li>
<li><a href="http://localhost:5000/meditating" rel="noopener noreferrer">meditating</a></li>
<li><a href="http://localhost:5000/planning" rel="noopener noreferrer">planning</a></li>
<li><a href="http://localhost:5000/sharpen-the-saw" rel="noopener noreferrer">sharpen the saw</a></li>
</ul>
</li>
</ul>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/4-quadrants" rel="noopener noreferrer">4 quadrants</a></li>
<li><a href="http://localhost:5000/wip-limits" rel="noopener noreferrer">WIP limits</a></li>
<li><a href="http://localhost:5000/quadrant-1" rel="noopener noreferrer">quadrant 1</a></li>
</ul>


10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf empty

10:45:07.444 [debug] l:len=

10:45:07.444 [debug] l:buf=83:<h1>Learn ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.444 [debug] l:len=8

10:45:07.445 [debug] l:buf=3:<h1>Learn ReasonML</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf empty

10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf=305:<h1>Pasted image 20200922163510</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.445 [debug] l:len=3

10:45:07.445 [debug] l:buf=05:<h1>Pasted image 20200922163510</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.445 [debug] l:len=30

10:45:07.445 [debug] l:buf=5:<h1>Pasted image 20200922163510</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf empty

10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf=74:<h1>Vegan</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.445 [debug] l:len=7

10:45:07.445 [debug] l:buf=4:<h1>Vegan</h1>
<p><em>this file hasn't been written, it's a stub</em></p>


10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf empty

10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf=290:<h1>Semantic CSS</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.445 [debug] l:len=2

10:45:07.445 [debug] l:buf=90:<h1>Semantic CSS</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.445 [debug] l:len=29

10:45:07.445 [debug] l:buf=0:<h1>Semantic CSS</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/symantec-css-problems-and-why-utility-" rel="noopener noreferrer">Symantec CSS problems and why Utility </a></li>
</ul>


10:45:07.445 [debug] l:len=

10:45:07.445 [debug] l:buf empty

10:45:07.446 [debug] l:len=

10:45:07.446 [debug] l:buf=1605:<h2>Slack encourages dumping</h2>
<p>Because of Slack's <a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a> and because there's a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> it's true that there's no "right" or even good place to store information.</p>
<p>You can see it happen in this example:</p>
<hr>
<h2><a href="http://localhost:5000/slack-unthreaded-thread.png" rel="noopener noreferrer">Slack-Unthreaded-thread</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Because there's no "right" place to store information, and because you easily <a href="http://localhost:5000/loose-information-on-the-treadmill" rel="noopener noreferrer">loose information on the treadmill</a>, it creates a culture of people dumping information <em>everywhere</em>. Nobody knows how to organize it, so nobody does. When people aren't sure, they just... dump it anywhere.</p>
<p>This leads to <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.446 [debug] l:len=1

10:45:07.446 [debug] l:buf=605:<h2>Slack encourages dumping</h2>
<p>Because of Slack's <a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a> and because there's a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> it's true that there's no "right" or even good place to store information.</p>
<p>You can see it happen in this example:</p>
<hr>
<h2><a href="http://localhost:5000/slack-unthreaded-thread.png" rel="noopener noreferrer">Slack-Unthreaded-thread</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Because there's no "right" place to store information, and because you easily <a href="http://localhost:5000/loose-information-on-the-treadmill" rel="noopener noreferrer">loose information on the treadmill</a>, it creates a culture of people dumping information <em>everywhere</em>. Nobody knows how to organize it, so nobody does. When people aren't sure, they just... dump it anywhere.</p>
<p>This leads to <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.446 [debug] l:len=16

10:45:07.446 [debug] l:buf=05:<h2>Slack encourages dumping</h2>
<p>Because of Slack's <a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a> and because there's a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> it's true that there's no "right" or even good place to store information.</p>
<p>You can see it happen in this example:</p>
<hr>
<h2><a href="http://localhost:5000/slack-unthreaded-thread.png" rel="noopener noreferrer">Slack-Unthreaded-thread</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Because there's no "right" place to store information, and because you easily <a href="http://localhost:5000/loose-information-on-the-treadmill" rel="noopener noreferrer">loose information on the treadmill</a>, it creates a culture of people dumping information <em>everywhere</em>. Nobody knows how to organize it, so nobody does. When people aren't sure, they just... dump it anywhere.</p>
<p>This leads to <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.446 [debug] l:len=160

10:45:07.446 [debug] l:buf=5:<h2>Slack encourages dumping</h2>
<p>Because of Slack's <a href="http://localhost:5000/everything's-the-same-design" rel="noopener noreferrer">Everything's the Same Design</a> and because there's a <a href="http://localhost:5000/small-amount-of-categories-that-are-infinitely-deep" rel="noopener noreferrer">small amount of categories that are infinitely deep</a> it's true that there's no "right" or even good place to store information.</p>
<p>You can see it happen in this example:</p>
<hr>
<h2><a href="http://localhost:5000/slack-unthreaded-thread.png" rel="noopener noreferrer">Slack-Unthreaded-thread</a> ⤴</h2>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p>Because there's no "right" place to store information, and because you easily <a href="http://localhost:5000/loose-information-on-the-treadmill" rel="noopener noreferrer">loose information on the treadmill</a>, it creates a culture of people dumping information <em>everywhere</em>. Nobody knows how to organize it, so nobody does. When people aren't sure, they just... dump it anywhere.</p>
<p>This leads to <a href="http://localhost:5000/information-bleeding" rel="noopener noreferrer">information bleeding</a>.</p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/slack-moc" rel="noopener noreferrer">Slack MOC</a></li>
<li><a href="http://localhost:5000/slack-is-a-black-hole-of-information" rel="noopener noreferrer">Slack is a black hole of information</a></li>
<li><a href="http://localhost:5000/talk-in-context" rel="noopener noreferrer">talk in context</a></li>
</ul>


10:45:07.446 [debug] l:len=

10:45:07.446 [debug] l:buf empty

10:45:07.446 [debug] l:len=

10:45:07.446 [debug] l:buf=980:<h1>Shaping</h1>
<p>An process defined by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> to describe the process of taking an idea and filling out out so that when a team starts working on a project they won't have <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> and avoid many of the problems with <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a>.</p>
<p>Keywords: <a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a>, <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>, <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.446 [debug] l:len=9

10:45:07.446 [debug] l:buf=80:<h1>Shaping</h1>
<p>An process defined by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> to describe the process of taking an idea and filling out out so that when a team starts working on a project they won't have <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> and avoid many of the problems with <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a>.</p>
<p>Keywords: <a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a>, <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>, <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.446 [debug] l:len=98

10:45:07.446 [debug] l:buf=0:<h1>Shaping</h1>
<p>An process defined by <a href="http://localhost:5000/ryan-singer" rel="noopener noreferrer">Ryan Singer</a> in <a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a> to describe the process of taking an idea and filling out out so that when a team starts working on a project they won't have <a href="http://localhost:5000/scope-creep" rel="noopener noreferrer">scope creep</a> and avoid many of the problems with <a href="http://localhost:5000/estimation" rel="noopener noreferrer">Estimation</a>.</p>
<p>Keywords: <a href="http://localhost:5000/risk" rel="noopener noreferrer">risk</a>, <a href="http://localhost:5000/project-management" rel="noopener noreferrer">project management</a>, <a href="http://localhost:5000/unschaped-work" rel="noopener noreferrer">Unschaped Work</a></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/shape-up" rel="noopener noreferrer">Shape Up</a></li>
</ul>


10:45:07.446 [debug] l:len=

10:45:07.446 [debug] l:buf empty

10:45:07.447 [debug] l:len=

10:45:07.447 [debug] l:buf=618:<h1>Board game idea: sword fighting</h1>
<p>Amelia swordfight place blocks varying widths you have the right part is that hit Bell near Prince charming will have to place block or dodges can I see. Someone else will have to take some of the damage also you can move backwards out of the range of your opponent but also their stamina which limits how much you can do you want to in one turn. Maybe a natural way to model stamina is when you run out of cards you have to have a pause of a certain way for instance maybe you also have to have a pause of a certain width between each of your cards.</p>
<p>#game-ideas</p>


10:45:07.447 [debug] l:len=6

10:45:07.447 [debug] l:buf=18:<h1>Board game idea: sword fighting</h1>
<p>Amelia swordfight place blocks varying widths you have the right part is that hit Bell near Prince charming will have to place block or dodges can I see. Someone else will have to take some of the damage also you can move backwards out of the range of your opponent but also their stamina which limits how much you can do you want to in one turn. Maybe a natural way to model stamina is when you run out of cards you have to have a pause of a certain way for instance maybe you also have to have a pause of a certain width between each of your cards.</p>
<p>#game-ideas</p>


10:45:07.447 [debug] l:len=61

10:45:07.447 [debug] l:buf=8:<h1>Board game idea: sword fighting</h1>
<p>Amelia swordfight place blocks varying widths you have the right part is that hit Bell near Prince charming will have to place block or dodges can I see. Someone else will have to take some of the damage also you can move backwards out of the range of your opponent but also their stamina which limits how much you can do you want to in one turn. Maybe a natural way to model stamina is when you run out of cards you have to have a pause of a certain way for instance maybe you also have to have a pause of a certain width between each of your cards.</p>
<p>#game-ideas</p>


10:45:07.447 [debug] l:len=

10:45:07.447 [debug] l:buf empty

10:45:07.447 [debug] l:len=

10:45:07.447 [debug] l:buf=305:<h1>Pasted image 20200922163424</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.447 [debug] l:len=3

10:45:07.447 [debug] l:buf=05:<h1>Pasted image 20200922163424</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.447 [debug] l:len=30

10:45:07.447 [debug] l:buf=5:<h1>Pasted image 20200922163424</h1>
<p><em>this file hasn't been written, it's a stub</em></p>
<hr>
<p><em><strong>Backlinks</strong></em>:</p>
<ul>
<li><a href="http://localhost:5000/building-a-second-brain----sketchnotes" rel="noopener noreferrer">Building a Second Brain -- Sketchnotes</a></li>
</ul>


10:45:07.447 [debug] l:len=

10:45:07.447 [debug] l:buf empty

10:45:07.447 [debug] l:len=

10:45:07.447 [debug] l:buf=373:<h1>2 types of randomness, risk and uncertainty</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>


10:45:07.447 [debug] l:len=3

10:45:07.447 [debug] l:buf=73:<h1>2 types of randomness, risk and uncertainty</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>


10:45:07.447 [debug] l:len=37

10:45:07.447 [debug] l:buf=3:<h1>2 types of randomness, risk and uncertainty</h1>
<p>Adaptive Markets
Andrew W. Lo</p>
<p>Almost a century ago, the economist Frank Knight introduced a useful distinction between risk and uncertainty into the economic lexicon: he called "risk" the kind of randomness that can be measured or quantified, and he called "uncertainty" the kind of randomness that can't.</p>

